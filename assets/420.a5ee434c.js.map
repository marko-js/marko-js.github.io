{"version":3,"file":"420.a5ee434c.js","mappings":"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","sources":["webpack:///../../node_modules/@marko/runtime-tags/dist/translator/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name2 in all)\n    __defProp(target, name2, { get: all[name2], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/translator/index.ts\nvar translator_exports = {};\n__export(translator_exports, {\n  analyze: () => analyze,\n  getRuntimeEntryFiles: () => getRuntimeEntryFiles,\n  internalEntryBuilder: () => entry_builder_default,\n  preferAPI: () => preferAPI,\n  tagDiscoveryDirs: () => tagDiscoveryDirs,\n  taglibs: () => taglibs,\n  transform: () => transform,\n  translate: () => translate\n});\nmodule.exports = __toCommonJS(translator_exports);\n\n// src/translator/util/runtime-info.ts\nvar import_package = require(\"../../package.json\");\nvar runtime_info_default = {\n  name: import_package.name,\n  taglibId: \"marko-core\"\n};\n\n// src/translator/core/attrs.ts\nvar import_compiler = require(\"@marko/compiler\");\nvar import_babel_utils = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(\n        `The \\`${tag.get(\"name\").node.value}\\` tag does not support \\`...spread\\` attributes.`\n      );\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${tag.get(\"name\").node.value}\\` tag does not support body content.`\n    );\n  }\n}\n\n// src/translator/core/attrs.ts\nvar attrs_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils.assertNoArgs)(tag);\n      (0, import_babel_utils.assertNoParams)(tag);\n      (0, import_babel_utils.assertNoAttributes)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils.assertNoAttributeTags)(tag);\n      (0, import_babel_utils.diagnosticDeprecate)(tag, {\n        label: \"The `attrs` tag is deprecated, prefer destructuring `input` via the `const` tag.\",\n        fix() {\n          const tagVar = tag.node.var;\n          if (tagVar && !(tagVar.type === \"Identifier\" && tagVar.name === \"input\")) {\n            const constTag = import_compiler.types.markoTag(\n              import_compiler.types.stringLiteral(\"const\"),\n              [import_compiler.types.markoAttribute(\"value\", import_compiler.types.identifier(\"input\"))],\n              import_compiler.types.markoTagBody([])\n            );\n            constTag.var = tagVar;\n            tag.replaceWith(constTag);\n          } else {\n            tag.remove();\n          }\n        }\n      });\n    }\n  ],\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/translator/core/await.ts\nvar import_compiler22 = require(\"@marko/compiler\");\nvar import_babel_utils12 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/evaluate.ts\nvar import_babel_utils2 = require(\"@marko/compiler/babel-utils\");\nfunction evaluate(value) {\n  let { extra } = value;\n  if (!extra) {\n    extra = value.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const computed = (0, import_babel_utils2.computeNode)(value);\n    if (computed) {\n      extra.computed = computed.value;\n      extra.confident = true;\n    } else {\n      extra.computed = void 0;\n      extra.confident = false;\n    }\n  }\n  return extra;\n}\n\n// src/translator/util/references.ts\nvar import_compiler21 = require(\"@marko/compiler\");\n\n// src/translator/visitors/program/index.ts\nvar import_compiler20 = require(\"@marko/compiler\");\nvar import_babel_utils11 = require(\"@marko/compiler/babel-utils\");\nvar import_path2 = __toESM(require(\"path\"));\n\n// src/translator/util/binding-has-downstream-expressions.ts\nfunction bindingHasDownstreamExpressions(binding) {\n  if (binding.downstreamExpressions.size) return true;\n  for (const alias of binding.aliases) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  return false;\n}\n\n// src/translator/util/entry-builder.ts\nvar import_compiler2 = require(\"@marko/compiler\");\nvar import_babel_utils3 = require(\"@marko/compiler/babel-utils\");\nvar kState = Symbol();\nvar entry_builder_default = {\n  build(entryFile) {\n    const state = entryFile[kState];\n    if (!state) {\n      throw entryFile.path.buildCodeFrameError(\n        \"Unable to build hydrate code, no files were visited before finalizing the build\"\n      );\n    }\n    const body = state.imports.map(\n      (it) => import_compiler2.types.importDeclaration([], import_compiler2.types.stringLiteral(it))\n    );\n    if (state.init) {\n      body.unshift(\n        import_compiler2.types.importDeclaration(\n          [import_compiler2.types.importSpecifier(import_compiler2.types.identifier(\"init\"), import_compiler2.types.identifier(\"init\"))],\n          import_compiler2.types.stringLiteral(\n            `${runtime_info_default.name}/${entryFile.markoOpts.optimize ? \"\" : \"debug/\"}dom`\n          )\n        )\n      );\n      body.push(\n        import_compiler2.types.expressionStatement(import_compiler2.types.callExpression(import_compiler2.types.identifier(\"init\"), []))\n      );\n    }\n    return body;\n  },\n  visit(file, entryFile, visitChild) {\n    const state = entryFile[kState] ||= {\n      imports: [],\n      init: false\n    };\n    const { analyzedTags } = file.metadata.marko;\n    state.imports.push(\n      (0, import_babel_utils3.resolveRelativePath)(entryFile, file.opts.filename)\n    );\n    state.init ||= file.path.node.extra.hasInteractiveChild || file.path.node.extra.isInteractive || false;\n    for (const tag of analyzedTags || []) {\n      visitChild(tag);\n    }\n  }\n};\n\n// src/translator/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/translator/util/runtime.ts\nvar import_compiler4 = require(\"@marko/compiler\");\nvar import_babel_utils4 = require(\"@marko/compiler/babel-utils\");\n\n// src/common/attr-tag.ts\nvar rest = false ? Symbol(\"Attribute Tag\") : Symbol();\n\n// src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name2, value) {\n  return value ? name2 : \"\";\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name2, value) {\n  return value || value === 0 ? `${name2}:${typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name2) ? value + \"px\" : value}` : \"\";\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name2 in val) {\n            const v = val[name2];\n            const part = stringify(name2, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isEventHandler(name2) {\n  return /^on[A-Z-]/.test(name2);\n}\nfunction getEventHandlerName(name2) {\n  return name2[2] === \"-\" ? name2.slice(3) : name2.slice(2).toLowerCase();\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// src/html/content.ts\nfunction toString(val) {\n  return val ? val + \"\" : val === 0 ? \"0\" : \"\";\n}\nvar unsafeXMLReg = /[<&]/g;\nvar replaceUnsafeXML = (c) => c === \"&\" ? \"&amp;\" : \"&lt;\";\nvar escapeXMLStr = (str) => unsafeXMLReg.test(str) ? str.replace(unsafeXMLReg, replaceUnsafeXML) : str;\nfunction escapeXML(val) {\n  return val ? escapeXMLStr(val + \"\") : val === 0 ? \"0\" : \"&zwj;\";\n}\nvar unsafeScriptReg = /<\\/script/g;\nvar escapeScriptStr = (str) => unsafeScriptReg.test(str) ? str.replace(unsafeScriptReg, \"\\\\x3C/script\") : str;\nfunction escapeScript(val) {\n  return val ? escapeScriptStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\nvar unsafeStyleReg = /<\\/style/g;\nvar escapeStyleStr = (str) => unsafeStyleReg.test(str) ? str.replace(unsafeStyleReg, \"\\\\3C/style\") : str;\nfunction escapeStyle(val) {\n  return val ? escapeStyleStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\n\n// src/html/serializer.ts\nvar { hasOwnProperty } = {};\nvar Generator = function* () {\n}().constructor;\nvar AsyncGenerator = async function* () {\n}().constructor;\nvar KNOWN_SYMBOLS = (() => {\n  const KNOWN_SYMBOLS2 = /* @__PURE__ */ new Map();\n  for (const name2 of Object.getOwnPropertyNames(Symbol)) {\n    const symbol = Symbol[name2];\n    if (typeof symbol === \"symbol\") {\n      KNOWN_SYMBOLS2.set(symbol, \"Symbol.\" + name2);\n    }\n  }\n  return KNOWN_SYMBOLS2;\n})();\nvar KNOWN_FUNCTIONS = /* @__PURE__ */ new Map([\n  // This is by no means an exhaustive list,\n  // but it should cover most of the built-in functions.\n  [AggregateError, \"AggregateError\"],\n  [Array, \"Array\"],\n  [Array.from, \"Array.from\"],\n  [Array.isArray, \"Array.isArray\"],\n  [Array.of, \"Array.of\"],\n  [ArrayBuffer, \"ArrayBuffer\"],\n  [ArrayBuffer.isView, \"ArrayBuffer.isView\"],\n  [Atomics.add, \"Atomics.add\"],\n  [Atomics.and, \"Atomics.and\"],\n  [Atomics.compareExchange, \"Atomics.compareExchange\"],\n  [Atomics.exchange, \"Atomics.exchange\"],\n  [Atomics.isLockFree, \"Atomics.isLockFree\"],\n  [Atomics.load, \"Atomics.load\"],\n  [Atomics.notify, \"Atomics.notify\"],\n  [Atomics.or, \"Atomics.or\"],\n  [Atomics.store, \"Atomics.store\"],\n  [Atomics.sub, \"Atomics.sub\"],\n  [Atomics.wait, \"Atomics.wait\"],\n  [BigInt, \"BigInt\"],\n  [BigInt.asIntN, \"BigInt.asIntN\"],\n  [BigInt.asUintN, \"BigInt.asUintN\"],\n  [BigInt64Array, \"BigInt64Array\"],\n  [BigInt64Array.from, \"BigInt64Array.from\"],\n  [BigInt64Array.of, \"BigInt64Array.of\"],\n  [BigUint64Array, \"BigUint64Array\"],\n  [BigUint64Array.from, \"BigUint64Array.from\"],\n  [BigUint64Array.of, \"BigUint64Array.of\"],\n  [Boolean, \"Boolean\"],\n  [console.assert, \"console.assert\"],\n  [console.clear, \"console.clear\"],\n  [console.count, \"console.count\"],\n  [console.countReset, \"console.countReset\"],\n  [console.debug, \"console.debug\"],\n  [console.dir, \"console.dir\"],\n  [console.dirxml, \"console.dirxml\"],\n  [console.error, \"console.error\"],\n  [console.group, \"console.group\"],\n  [console.groupCollapsed, \"console.groupCollapsed\"],\n  [console.groupEnd, \"console.groupEnd\"],\n  [console.info, \"console.info\"],\n  [console.log, \"console.log\"],\n  [console.table, \"console.table\"],\n  [console.time, \"console.time\"],\n  [console.timeEnd, \"console.timeEnd\"],\n  [console.timeLog, \"console.timeLog\"],\n  [console.timeStamp, \"console.timeStamp\"],\n  [console.trace, \"console.trace\"],\n  [console.warn, \"console.warn\"],\n  [DataView, \"DataView\"],\n  [Date, \"Date\"],\n  [Date.now, \"Date.now\"],\n  [Date.parse, \"Date.parse\"],\n  [Date.UTC, \"Date.UTC\"],\n  [decodeURI, \"decodeURI\"],\n  [decodeURIComponent, \"decodeURIComponent\"],\n  [encodeURI, \"encodeURI\"],\n  [encodeURIComponent, \"encodeURIComponent\"],\n  [Error, \"Error\"],\n  [EvalError, \"EvalError\"],\n  [Float32Array, \"Float32Array\"],\n  [Float32Array.from, \"Float32Array.from\"],\n  [Float32Array.of, \"Float32Array.of\"],\n  [Float64Array, \"Float64Array\"],\n  [Float64Array.from, \"Float64Array.from\"],\n  [Float64Array.of, \"Float64Array.of\"],\n  [Function, \"Function\"],\n  [globalThis.atob, \"atob\"],\n  [globalThis.btoa, \"btoa\"],\n  [globalThis.clearImmediate, \"clearImmediate\"],\n  [globalThis.clearInterval, \"clearInterval\"],\n  [globalThis.clearTimeout, \"clearTimeout\"],\n  [globalThis.crypto?.getRandomValues, \"crypto.getRandomValues\"],\n  [globalThis.crypto?.randomUUID, \"crypto.randomUUID\"],\n  [globalThis.fetch, \"fetch\"],\n  [globalThis.performance?.now, \"performance.now\"],\n  [globalThis.queueMicrotask, \"queueMicrotask\"],\n  [globalThis.setImmediate, \"setImmediate\"],\n  [globalThis.setInterval, \"setInterval\"],\n  [globalThis.setTimeout, \"setTimeout\"],\n  [globalThis.structuredClone, \"structuredClone\"],\n  [globalThis.URL, \"URL\"],\n  [globalThis.URLSearchParams, \"URLSearchParams\"],\n  [globalThis.WritableStream, \"WritableStream\"],\n  [Int16Array, \"Int16Array\"],\n  [Int16Array.from, \"Int16Array.from\"],\n  [Int16Array.of, \"Int16Array.of\"],\n  [Int32Array, \"Int32Array\"],\n  [Int32Array.from, \"Int32Array.from\"],\n  [Int32Array.of, \"Int32Array.of\"],\n  [Int8Array, \"Int8Array\"],\n  [Int8Array.from, \"Int8Array.from\"],\n  [Int8Array.of, \"Int8Array.of\"],\n  [Intl.Collator, \"Intl.Collator\"],\n  [Intl.DateTimeFormat, \"Intl.DateTimeFormat\"],\n  [Intl.DisplayNames, \"Intl.DisplayNames\"],\n  [Intl.getCanonicalLocales, \"Intl.getCanonicalLocales\"],\n  [Intl.ListFormat, \"Intl.ListFormat\"],\n  [Intl.Locale, \"Intl.Locale\"],\n  [Intl.NumberFormat, \"Intl.NumberFormat\"],\n  [Intl.PluralRules, \"Intl.PluralRules\"],\n  [Intl.RelativeTimeFormat, \"Intl.RelativeTimeFormat\"],\n  [Intl.Segmenter, \"Intl.Segmenter\"],\n  [Intl.supportedValuesOf, \"Intl.supportedValuesOf\"],\n  [isFinite, \"isFinite\"],\n  [isNaN, \"isNaN\"],\n  [JSON.parse, \"JSON.parse\"],\n  [JSON.stringify, \"JSON.stringify\"],\n  [Map, \"Map\"],\n  [Map.groupBy, \"Map.groupBy\"],\n  [Math.abs, \"Math.abs\"],\n  [Math.acos, \"Math.acos\"],\n  [Math.acosh, \"Math.acosh\"],\n  [Math.asin, \"Math.asin\"],\n  [Math.asinh, \"Math.asinh\"],\n  [Math.atan, \"Math.atan\"],\n  [Math.atan2, \"Math.atan2\"],\n  [Math.atanh, \"Math.atanh\"],\n  [Math.cbrt, \"Math.cbrt\"],\n  [Math.ceil, \"Math.ceil\"],\n  [Math.clz32, \"Math.clz32\"],\n  [Math.cos, \"Math.cos\"],\n  [Math.cosh, \"Math.cosh\"],\n  [Math.exp, \"Math.exp\"],\n  [Math.expm1, \"Math.expm1\"],\n  [Math.floor, \"Math.floor\"],\n  [Math.fround, \"Math.fround\"],\n  [Math.hypot, \"Math.hypot\"],\n  [Math.imul, \"Math.imul\"],\n  [Math.log, \"Math.log\"],\n  [Math.log10, \"Math.log10\"],\n  [Math.log1p, \"Math.log1p\"],\n  [Math.log2, \"Math.log2\"],\n  [Math.max, \"Math.max\"],\n  [Math.min, \"Math.min\"],\n  [Math.pow, \"Math.pow\"],\n  [Math.random, \"Math.random\"],\n  [Math.round, \"Math.round\"],\n  [Math.sign, \"Math.sign\"],\n  [Math.sin, \"Math.sin\"],\n  [Math.sinh, \"Math.sinh\"],\n  [Math.sqrt, \"Math.sqrt\"],\n  [Math.tan, \"Math.tan\"],\n  [Math.tanh, \"Math.tanh\"],\n  [Math.trunc, \"Math.trunc\"],\n  [Number, \"Number\"],\n  [Number.isFinite, \"Number.isFinite\"],\n  [Number.isInteger, \"Number.isInteger\"],\n  [Number.isNaN, \"Number.isNaN\"],\n  [Number.isSafeInteger, \"Number.isSafeInteger\"],\n  [Number.parseFloat, \"Number.parseFloat\"],\n  [Number.parseInt, \"Number.parseInt\"],\n  [Object, \"Object\"],\n  [Object.assign, \"Object.assign\"],\n  [Object.create, \"Object.create\"],\n  [Object.defineProperties, \"Object.defineProperties\"],\n  [Object.defineProperty, \"Object.defineProperty\"],\n  [Object.entries, \"Object.entries\"],\n  [Object.freeze, \"Object.freeze\"],\n  [Object.fromEntries, \"Object.fromEntries\"],\n  [Object.getOwnPropertyDescriptor, \"Object.getOwnPropertyDescriptor\"],\n  [Object.getOwnPropertyDescriptors, \"Object.getOwnPropertyDescriptors\"],\n  [Object.getOwnPropertyNames, \"Object.getOwnPropertyNames\"],\n  [Object.getOwnPropertySymbols, \"Object.getOwnPropertySymbols\"],\n  [Object.getPrototypeOf, \"Object.getPrototypeOf\"],\n  [Object.is, \"Object.is\"],\n  [Object.isExtensible, \"Object.isExtensible\"],\n  [Object.isFrozen, \"Object.isFrozen\"],\n  [Object.isSealed, \"Object.isSealed\"],\n  [Object.keys, \"Object.keys\"],\n  [Object.preventExtensions, \"Object.preventExtensions\"],\n  [Object.seal, \"Object.seal\"],\n  [Object.setPrototypeOf, \"Object.setPrototypeOf\"],\n  [Object.values, \"Object.values\"],\n  [parseFloat, \"parseFloat\"],\n  [parseInt, \"parseInt\"],\n  [Promise, \"Promise\"],\n  [Proxy, \"Proxy\"],\n  [RangeError, \"RangeError\"],\n  [ReferenceError, \"ReferenceError\"],\n  [Reflect.apply, \"Reflect.apply\"],\n  [Reflect.construct, \"Reflect.construct\"],\n  [Reflect.defineProperty, \"Reflect.defineProperty\"],\n  [Reflect.deleteProperty, \"Reflect.deleteProperty\"],\n  [Reflect.get, \"Reflect.get\"],\n  [Reflect.getOwnPropertyDescriptor, \"Reflect.getOwnPropertyDescriptor\"],\n  [Reflect.getPrototypeOf, \"Reflect.getPrototypeOf\"],\n  [Reflect.has, \"Reflect.has\"],\n  [Reflect.isExtensible, \"Reflect.isExtensible\"],\n  [Reflect.ownKeys, \"Reflect.ownKeys\"],\n  [Reflect.preventExtensions, \"Reflect.preventExtensions\"],\n  [Reflect.set, \"Reflect.set\"],\n  [Reflect.setPrototypeOf, \"Reflect.setPrototypeOf\"],\n  [RegExp, \"RegExp\"],\n  [Set, \"Set\"],\n  [String, \"String\"],\n  [String.fromCharCode, \"String.fromCharCode\"],\n  [String.fromCodePoint, \"String.fromCodePoint\"],\n  [String.raw, \"String.raw\"],\n  [Symbol, \"Symbol\"],\n  [Symbol.for, \"Symbol.for\"],\n  [SyntaxError, \"SyntaxError\"],\n  [TypeError, \"TypeError\"],\n  [Uint16Array, \"Uint16Array\"],\n  [Uint16Array.from, \"Uint16Array.from\"],\n  [Uint16Array.of, \"Uint16Array.of\"],\n  [Uint32Array, \"Uint32Array\"],\n  [Uint32Array.from, \"Uint32Array.from\"],\n  [Uint32Array.of, \"Uint32Array.of\"],\n  [Uint8Array, \"Uint8Array\"],\n  [Uint8Array.from, \"Uint8Array.from\"],\n  [Uint8Array.of, \"Uint8Array.of\"],\n  [Uint8ClampedArray, \"Uint8ClampedArray\"],\n  [Uint8ClampedArray.from, \"Uint8ClampedArray.from\"],\n  [Uint8ClampedArray.of, \"Uint8ClampedArray.of\"],\n  [URIError, \"URIError\"],\n  [WeakMap, \"WeakMap\"],\n  [WeakSet, \"WeakSet\"]\n]);\nvar KNOWN_OBJECTS = /* @__PURE__ */ new Map([\n  [Atomics, \"Atomics\"],\n  [console, \"console\"],\n  [globalThis, \"globalThis\"],\n  [globalThis.crypto, \"crypto\"],\n  [Intl, \"Intl\"],\n  [JSON, \"JSON\"],\n  [Math, \"Math\"],\n  [Reflect, \"Reflect\"]\n]);\n\n// src/html/writer.ts\nvar K_SCOPE_ID = Symbol(\"Scope ID\");\nvar kPendingContexts = Symbol(\"Pending Contexts\");\nvar branchIdKey = Symbol();\nvar tick = globalThis.setImmediate || globalThis.setTimeout || globalThis.queueMicrotask || ((cb) => Promise.resolve().then(cb));\n\n// src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nvar kSelectedValue = Symbol(\"selectedValue\");\nfunction attr(name2, val) {\n  return isVoid(val) ? \"\" : nonVoidAttr(name2, val);\n}\nfunction stringAttr(name2, val) {\n  return val && ` ${name2}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidAttr(name2, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name2 + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name2}`;\n    case \"number\":\n      return ` ${name2}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name2 + attrAssignment(val.source)}`;\n      }\n      break;\n  }\n  return ` ${name2 + attrAssignment(val + \"\")}`;\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\nvar unsafeAttrChars = /[\"'>\\s]/g;\nfunction escapeAttrValue(str) {\n  if (unsafeAttrChars.test(str)) {\n    const c = str[unsafeAttrChars.lastIndex - 1];\n    unsafeAttrChars.lastIndex = 0;\n    return c === '\"' ? `'${str.replace(/'/g, \"&#39;\")}'` : `\"${str.replace(/\"/g, \"&#34;\")}\"`;\n  }\n  return str;\n}\n\n// src/common/compat-meta.ts\nvar prefix = false ? \"$compat_\" : \"$C_\";\nvar RENDERER_REGISTER_ID = prefix + (false ? \"renderer\" : \"r\");\nvar SET_SCOPE_REGISTER_ID = prefix + (false ? \"setScope\" : \"s\");\n\n// src/html/compat.ts\nvar K_TAGS_API_STATE = Symbol();\n\n// src/translator/util/to-property-name.ts\nvar import_compiler3 = require(\"@marko/compiler\");\nfunction toPropertyName(name2) {\n  if (/^[a-z_$][a-z0-9_$]*$/i.test(name2)) {\n    return import_compiler3.types.identifier(name2);\n  } else if (/^(?:0|[1-9][0-9]*)$/.test(name2)) {\n    return import_compiler3.types.numericLiteral(parseInt(name2, 10));\n  }\n  return import_compiler3.types.stringLiteral(name2);\n}\nfunction toObjectProperty(name2, value) {\n  return import_compiler3.types.objectProperty(toPropertyName(name2), value);\n}\nfunction toMemberExpression(object, key, optional) {\n  const prop = toPropertyName(key);\n  const computed = prop.type !== \"Identifier\";\n  return optional ? import_compiler3.types.optionalMemberExpression(object, prop, computed, true) : import_compiler3.types.memberExpression(object, prop, computed);\n}\n\n// src/translator/util/runtime.ts\nvar pureFunctions = [\n  \"createTemplate\",\n  \"createRenderer\",\n  \"createRendererWithOwner\",\n  \"value\",\n  \"state\",\n  \"intersection\",\n  \"loopClosure\",\n  \"conditionalClosure\",\n  \"dynamicClosure\",\n  \"loopOf\",\n  \"loopIn\",\n  \"loopTo\",\n  \"conditional\"\n];\nfunction importRuntime(name2) {\n  const { output } = getMarkoOpts();\n  return toMemberExpression(\n    (0, import_babel_utils4.importStar)(currentProgramPath.hub.file, getRuntimePath(output), \"$\"),\n    name2\n  );\n}\nfunction callRuntime(name2, ...args) {\n  const callExpression2 = import_compiler4.types.callExpression(\n    importRuntime(name2),\n    filterArguments(args)\n  );\n  if (pureFunctions.includes(name2)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `${runtime_info_default.name}/${optimize ? \"\" : \"debug/\"}${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || import_compiler4.types.unaryExpression(\"void\", import_compiler4.types.numericLiteral(0));\n    }\n  }\n  return filteredArgs;\n}\nfunction getCompatRuntimeFile() {\n  const markoOpts = getMarkoOpts();\n  return `marko/src/runtime/helpers/tags-compat/${isOutputHTML() ? \"html\" : \"dom\"}${markoOpts.optimize ? \"\" : \"-debug\"}.${markoOpts.modules === \"esm\" ? \"mjs\" : \"js\"}`;\n}\n\n// src/translator/util/sections.ts\nvar import_compiler6 = require(\"@marko/compiler\");\nvar import_babel_utils7 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-core-tag.ts\nvar import_babel_utils5 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-tag-name.ts\nfunction getTagName(tag) {\n  return tag.node.name.value;\n}\n\n// src/translator/util/is-core-tag.ts\nvar { taglibId } = runtime_info_default;\nvar htmlTaglibId = \"marko-html\";\nvar interopTaglibId = \"@marko/translator-interop-class-tags\";\nfunction isCoreTag(tag) {\n  if (tag.isMarkoTag()) {\n    const tagDef = (0, import_babel_utils5.getTagDef)(tag);\n    if (tagDef) {\n      switch (tagDef.taglibId) {\n        case taglibId:\n        case interopTaglibId:\n          return true;\n        case htmlTaglibId:\n          switch (tagDef.name) {\n            case \"script\":\n            case \"style\":\n              return true;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction isCoreTagName(tag, name2) {\n  return isCoreTag(tag) && getTagName(tag) === name2;\n}\nfunction isConditionTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n        return true;\n    }\n  }\n  return false;\n}\n\n// src/translator/util/optional.ts\nvar Sorted = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? addSorted(this.compare, data, item) : joinRepeatable(this.compare, data, item) : item;\n  }\n  union(a, b) {\n    if (a) {\n      if (Array.isArray(a)) {\n        if (b) {\n          if (Array.isArray(b)) {\n            return unionSortedRepeatable(this.compare, a, b);\n          } else {\n            return addSorted(this.compare, a, b);\n          }\n        }\n        return a;\n      }\n      if (b) {\n        if (Array.isArray(b)) {\n          return addSorted(this.compare, [...b], a);\n        }\n        return joinRepeatable(this.compare, b, a);\n      }\n      return a;\n    }\n    return b;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return findSorted(this.compare, data, item);\n      } else if (this.compare(data, item) === 0) {\n        return data;\n      }\n    }\n  }\n};\nfunction push(data, item) {\n  if (data) {\n    if (Array.isArray(data)) {\n      data.push(item);\n      return data;\n    }\n    return [data, item];\n  }\n  return item;\n}\nfunction concat(a, b) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        return a.concat(b);\n      } else if (Array.isArray(b)) {\n        return [a, ...b];\n      } else {\n        return [a, b];\n      }\n    }\n    return a;\n  }\n  return b;\n}\nfunction filter(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      const len = data.length;\n      let result;\n      let i = 0;\n      while (i < len) {\n        let item = data[i++];\n        if (cb(item)) {\n          result = item;\n          while (i < len) {\n            item = data[i++];\n            if (cb(item)) {\n              result = [result, item];\n              while (i < len) {\n                item = data[i++];\n                if (cb(item)) {\n                  result.push(item);\n                }\n              }\n              return result;\n            }\n          }\n          return result;\n        }\n      }\n      return result;\n    }\n    if (cb(data)) {\n      return data;\n    }\n  }\n  return void 0;\n}\nfunction forEach(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      let i = 0;\n      for (const item of data) {\n        cb(item, i++);\n      }\n    } else {\n      cb(data, 0);\n    }\n  }\n}\nfunction find(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      return data.find(cb);\n    }\n    if (cb(data, 0)) {\n      return data;\n    }\n  }\n}\nfunction findSorted(compare, data, item) {\n  let max = data.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const cur = data[mid];\n    const compareResult = compare(cur, item);\n    if (compareResult === 0) return cur;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n}\nfunction addSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0) return data;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n  const result = new Array(len + 1);\n  for (let i = 0; i < pos; i++) {\n    result[i] = data[i];\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    result[pos++] = next;\n  }\n  result[len] = cur;\n  return result;\n}\nfunction unionSortedRepeatable(compare, a, b) {\n  const aLen = a.length;\n  const bLen = b.length;\n  let aIndex = 0;\n  let bIndex = 0;\n  const result = [];\n  while (aIndex < aLen && bIndex < bLen) {\n    const aValue = a[aIndex];\n    const bValue = b[bIndex];\n    const delta = compare(aValue, bValue);\n    if (delta === 0) {\n      aIndex++;\n      bIndex++;\n      result.push(aValue);\n    } else if (delta < 0) {\n      aIndex++;\n      result.push(aValue);\n    } else {\n      bIndex++;\n      result.push(bValue);\n    }\n  }\n  if (aLen === bLen && aIndex === aLen) {\n    return a;\n  }\n  while (aIndex < aLen) {\n    result.push(a[aIndex++]);\n  }\n  while (bIndex < bLen) {\n    result.push(b[bIndex++]);\n  }\n  return result;\n}\nfunction joinRepeatable(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\n\n// src/translator/util/state.ts\nvar createProgramState = (init) => {\n  const map = /* @__PURE__ */ new WeakMap();\n  return [\n    () => {\n      let state = map.get(currentProgramPath);\n      if (!state) {\n        map.set(currentProgramPath, state = init());\n      }\n      return state;\n    },\n    (value) => {\n      map.set(currentProgramPath, value);\n    }\n  ];\n};\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\n\n// src/translator/util/tag-name-type.ts\nvar import_compiler5 = require(\"@marko/compiler\");\nvar import_babel_utils6 = require(\"@marko/compiler/babel-utils\");\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name2 = tag.get(\"name\");\n    if (name2.isStringLiteral()) {\n      extra.tagNameType = name2.node.value[0] === \"@\" ? 3 /* AttributeTag */ : (0, import_babel_utils6.isNativeTag)(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      analyzeExpressionTagName(name2, extra);\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === 1 /* CustomTag */) {\n      const childFile = (0, import_babel_utils6.loadFileForTag)(tag);\n      if (!childFile) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      } else if (childFile.ast.program.extra.featureType === \"class\") {\n        extra.tagNameType = 2 /* DynamicTag */;\n        extra.featureType = \"class\";\n        (currentProgramPath.node.extra ??= {}).needsCompat = true;\n      }\n    }\n  }\n  return extra.tagNameType;\n}\nfunction analyzeExpressionTagName(name2, extra) {\n  const pending = [name2];\n  let path5;\n  let type;\n  let nullable = false;\n  let tagNameImported;\n  while ((path5 = pending.pop()) && type !== 2 /* DynamicTag */) {\n    if (path5.isConditionalExpression()) {\n      pending.push(path5.get(\"consequent\"));\n      if (path5.node.alternate) {\n        pending.push(path5.get(\"alternate\"));\n      }\n    } else if (path5.isLogicalExpression()) {\n      if (path5.node.operator === \"||\") {\n        pending.push(path5.get(\"left\"));\n      } else {\n        nullable = true;\n      }\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isAssignmentExpression()) {\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isBinaryExpression()) {\n      type = path5.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isStringLiteral() || path5.isTemplateLiteral()) {\n      type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isNullLiteral()) {\n      nullable = true;\n    } else if (path5.isIdentifier()) {\n      if (path5.node.name === \"undefined\") {\n        nullable = true;\n        continue;\n      }\n      const binding = path5.scope.getBinding(path5.node.name);\n      if (!binding) {\n        type = 2 /* DynamicTag */;\n        continue;\n      }\n      if (binding.kind === \"module\") {\n        const decl = binding.path.parent;\n        if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => import_compiler5.types.isImportDefaultSpecifier(it))) {\n          const resolvedImport = (0, import_babel_utils6.resolveTagImport)(name2, decl.source.value) || decl.source.value;\n          if (type === 0 /* NativeTag */ || tagNameImported && tagNameImported !== resolvedImport) {\n            type = 2 /* DynamicTag */;\n            tagNameImported = void 0;\n          } else {\n            type = 1 /* CustomTag */;\n            tagNameImported = resolvedImport;\n          }\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n        continue;\n      }\n      const bindingTag = binding.path;\n      if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n        const bindingTagName = bindingTag.get(\"name\").node.value;\n        if (bindingTagName === \"const\") {\n          pending.push(\n            bindingTag.get(\"attributes\")[0].get(\"value\")\n          );\n          continue;\n        }\n        if (bindingTagName === \"let\") {\n          type = 2 /* DynamicTag */;\n          continue;\n        }\n        continue;\n      }\n      type = 2 /* DynamicTag */;\n    } else {\n      type = 2 /* DynamicTag */;\n    }\n  }\n  extra.tagNameType = type;\n  extra.tagNameNullable = nullable;\n  extra.tagNameDynamic = true;\n  if (type === 1 /* CustomTag */ && tagNameImported) {\n    extra.tagNameImported = tagNameImported;\n  }\n}\n\n// src/translator/util/sections.ts\nfunction startSection(path5) {\n  const extra = path5.node.extra ??= {};\n  let section = extra.section;\n  if (!section && (path5.type === \"Program\" || path5.get(\"body\").length)) {\n    const parentSection = path5.parentPath ? getOrCreateSection(path5.parentPath) : void 0;\n    const sectionNamePath = path5.parentPath?.get(\n      \"name\"\n    );\n    const sectionName = path5.isProgram() ? \"\" : currentProgramPath.scope.generateUid(\n      sectionNamePath.toString() + \"_content\"\n    );\n    const programExtra = path5.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection,\n      params: void 0,\n      closures: void 0,\n      bindings: void 0,\n      content: getContentInfo(path5),\n      upstreamExpression: void 0,\n      hasAbortSignal: false,\n      isBranch: false\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path5) {\n  let cur = path5;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && !cur.node.attributeTags && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */ && cur.parent.name.value !== \"html-comment\") {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionForBody(body) {\n  return body.node.extra?.section;\n}\nfunction getSection(path5) {\n  let section;\n  let currentPath = path5;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nvar [getScopeIdIdentifier] = createSectionState(\n  \"scopeIdIdentifier\",\n  (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`)\n);\nvar [getSectionParentIsOwner, setSectionParentIsOwner] = createSectionState(\"parentIsOwner\", () => false);\nvar [_getScopeIdentifier] = createSectionState(\n  \"scopeIdentifier\",\n  () => import_compiler6.types.identifier(\"undefined\")\n);\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\nfunction getContentInfo(path5) {\n  const body = path5.get(\"body\");\n  const contentInfo = {\n    startType: null,\n    endType: null,\n    singleChild: true\n  };\n  for (let endIndex = body.length; endIndex--; ) {\n    const endType = getNodeContentType(body[endIndex], \"endType\", contentInfo);\n    if (endType !== null) {\n      contentInfo.endType = endType;\n      for (let startIndex = 0; startIndex < endIndex; startIndex++) {\n        const startType = getNodeContentType(body[startIndex], \"startType\");\n        if (startType !== null) {\n          contentInfo.startType = startType;\n          contentInfo.singleChild = false;\n          return contentInfo;\n        }\n      }\n      contentInfo.startType = getNodeContentType(body[endIndex], \"startType\");\n      return contentInfo;\n    }\n  }\n  return null;\n}\nfunction getNodeContentType(path5, extraMember, contentInfo) {\n  switch (path5.type) {\n    case \"MarkoText\":\n      return 4 /* Text */;\n    case \"MarkoPlaceholder\":\n      return 2 /* Placeholder */;\n    case \"MarkoScriptlet\":\n    case \"MarkoComment\":\n    case \"ImportDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportNamedDeclaration\":\n      return null;\n    case \"MarkoTag\": {\n      const tag = path5;\n      if (isCoreTag(tag)) {\n        switch (tag.node.name.value) {\n          case \"html-comment\":\n            return 0 /* Comment */;\n          case \"html-script\":\n          case \"html-style\":\n            return 3 /* Tag */;\n          case \"for\":\n          case \"if\":\n            return 1 /* Dynamic */;\n          default:\n            return null;\n        }\n      } else if ((0, import_babel_utils7.isNativeTag)(tag)) {\n        return 3 /* Tag */;\n      } else if ((0, import_babel_utils7.isAttributeTag)(tag)) {\n        return null;\n      } else if (import_compiler6.types.isStringLiteral(tag.node.name)) {\n        const tagSection = (0, import_babel_utils7.loadFileForTag)(tag)?.ast.program.extra.section;\n        if (tagSection) {\n          if (tagSection.content) {\n            if (contentInfo && !tagSection.content.singleChild) {\n              if (extraMember === \"endType\") {\n                contentInfo.startType = tagSection.content.startType;\n                contentInfo.singleChild = false;\n              }\n            }\n            return tagSection.content[extraMember];\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  return 1 /* Dynamic */;\n}\nvar isStatefulSection = (section) => {\n  const upstreamExpression = section.upstreamExpression;\n  return !upstreamExpression || isStatefulReferences(upstreamExpression.referencedBindings);\n};\nvar checkStatefulClosures = (section, immediateOnly) => {\n  return !!find(\n    section.closures,\n    (closure) => (!immediateOnly || section.parent === closure.section) && isStatefulReferences(closure)\n  );\n};\n\n// src/translator/visitors/program/dom.ts\nvar import_compiler18 = require(\"@marko/compiler\");\nvar import_babel_utils10 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-style-file.ts\nvar import_path = __toESM(require(\"path\"));\nfunction getStyleFile(file) {\n  const { filename } = file.opts;\n  const fs = file.markoOpts.fileSystem;\n  const base = getBase(filename);\n  const styleMatch = new RegExp(\n    `^(${escapeRegExp(base)}\\\\.${\"index\" === base ? \"|\" : \"\"})style\\\\.\\\\w+$`\n  );\n  for (const file2 of fs.readdirSync(import_path.default.dirname(filename)).sort()) {\n    if (styleMatch.test(file2)) {\n      return `./${file2}`;\n    }\n  }\n}\nfunction getBase(filename) {\n  const start = filename.lastIndexOf(import_path.default.sep) + 1;\n  const leftDot = filename.indexOf(\".\", start);\n  if (leftDot === -1) {\n    return filename.slice(start);\n  }\n  const rightDot = filename.lastIndexOf(\".\");\n  const closeBracket = leftDot - 1;\n  if (filename[closeBracket] === \"]\") {\n    const openBracket = filename.lastIndexOf(\"[\", closeBracket);\n    if (openBracket > start) {\n      return filename.slice(start, openBracket) + filename.slice(leftDot, rightDot);\n    }\n  }\n  return filename.slice(start, rightDot);\n}\nvar regexpCharsReg = /[\\\\^$.*+?()[\\]{}|]/g;\nfunction escapeRegExp(str) {\n  return str.replace(regexpCharsReg, \"\\\\$&\");\n}\n\n// src/translator/util/signals.ts\nvar import_compiler17 = require(\"@marko/compiler\");\nvar import_babel_utils9 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/return.ts\nvar import_compiler11 = require(\"@marko/compiler\");\nvar import_babel_utils8 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-known-attr-values.ts\nfunction getKnownAttrValues(tag) {\n  const attrs2 = {};\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      attrs2[attr2.name] = attr2.value;\n    }\n  }\n  return attrs2;\n}\n\n// src/translator/util/plugin-hooks.ts\nvar import_compiler7 = require(\"@marko/compiler\");\nfunction enter(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path5, import_compiler7.types);\n  } else if (plugin.enter) {\n    plugin.enter(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction exit(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/translator/util/visitors.ts\nfunction extractVisitors(visitors2) {\n  const result = {\n    migrate: {},\n    transform: {},\n    analyze: {},\n    translate: {}\n  };\n  for (const _name in visitors2) {\n    const name2 = _name;\n    const value = visitors2[name2];\n    if (value.migrate) result.migrate[name2] = value.migrate;\n    if (value.transform) result.transform[name2] = value.transform;\n    if (value.analyze) result.analyze[name2] = value.analyze;\n    if (value.translate) result.translate[name2] = value.translate;\n  }\n  return result;\n}\nfunction translateByTarget({\n  html,\n  dom\n}) {\n  return {\n    enter(path5) {\n      enter(isOutputHTML() ? html : dom, path5);\n    },\n    exit(path5) {\n      exit(isOutputHTML() ? html : dom, path5);\n    }\n  };\n}\n\n// src/translator/util/writer.ts\nvar import_compiler10 = require(\"@marko/compiler\");\n\n// src/translator/util/normalize-string-expression.ts\nvar import_compiler8 = require(\"@marko/compiler\");\nfunction normalizeStringExpression(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (import_compiler8.types.isStringLiteral(content)) {\n        content = content.value;\n      } else if (import_compiler8.types.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    if (exprs.length === 1 && !curStr && !strs[0]) {\n      return exprs[0];\n    }\n    strs.push(curStr);\n    return import_compiler8.types.templateLiteral(\n      strs.map((raw) => import_compiler8.types.templateElement({ raw })),\n      exprs\n    );\n  } else if (curStr) {\n    return import_compiler8.types.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/translator/util/walks.ts\nvar import_compiler9 = require(\"@marko/compiler\");\nvar [getWalks] = createSectionState(\n  \"walks\",\n  () => [\"\"]\n);\nvar [getWalkComment] = createSectionState(\n  \"walkComment\",\n  () => []\n);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter2(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */);\n}\nfunction exit2(path5) {\n  getSteps(getSection(path5)).push(1 /* Exit */);\n}\nfunction enterShallow(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */, 1 /* Exit */);\n}\nfunction injectWalks(path5, expr) {\n  const walks = getWalks(getSection(path5));\n  const walkComment = getWalkComment(getSection(path5));\n  walkComment.push(\n    `${walkCodeToName[47 /* BeginChild */]}`,\n    expr.name,\n    walkCodeToName[38 /* EndChild */]\n  );\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path5, code) {\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path5);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walkCodes = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* Enter */) {\n        depth++;\n        walkCodes.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walkCodes.length = walkCodes.lastIndexOf(67 /* Next */);\n          walkCodes.push(97 /* Over */);\n        } else {\n          walkCodes.length = walkCodes.lastIndexOf(107 /* Out */) + 1;\n          walkCodes.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walkCodes[0];\n    let count = 0;\n    for (const walk of walkCodes) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path5)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(\n      multiplier,\n      117 /* Multiplier */,\n      10 /* Multiplier */\n    );\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const prefix2 = section.content?.startType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const postfix = section.content?.endType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const walks = getWalks(section);\n  const walkLiteral = normalizeStringExpression([prefix2, ...walks, postfix]) || import_compiler9.types.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/translator/util/writer.ts\nvar [getWrites] = createSectionState(\n  \"writes\",\n  () => [\"\"]\n);\nvar [getTrailerWrites] = createSectionState(\n  \"trailerWrites\",\n  () => [\"\"]\n);\nfunction writeTo(path5, trailer) {\n  const section = getSection(path5);\n  const get = trailer ? getTrailerWrites : getWrites;\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = get(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path5) {\n  const section = getSection(path5);\n  const writes = getWrites(section);\n  const trailers = getTrailerWrites(section);\n  const writeResult = normalizeStringExpression(writes);\n  const trailerResult = normalizeStringExpression(trailers);\n  writes.length = 0;\n  writes[0] = \"\";\n  trailers.length = 0;\n  trailers[0] = \"\";\n  if (writeResult && trailerResult) {\n    return import_compiler10.types.expressionStatement(\n      import_compiler10.types.sequenceExpression([\n        callRuntime(\"write\", writeResult),\n        callRuntime(\"writeTrailers\", trailerResult)\n      ])\n    );\n  } else if (writeResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"write\", writeResult));\n  } else if (trailerResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"writeTrailers\", trailerResult));\n  }\n}\nfunction flushBefore(path5) {\n  const expr = consumeHTML(path5);\n  if (expr) {\n    path5.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path5) {\n  const target = path5.isProgram() ? path5 : path5.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writePrefix = section.content?.startType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writePostfix = section.content?.endType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: normalizeStringExpression([writePrefix, ...writes, writePostfix]) || import_compiler10.types.stringLiteral(\"\")\n  };\n}\nfunction markNode(path5, binding) {\n  const section = getSection(path5);\n  if (binding.type !== 0 /* dom */) {\n    throw path5.buildCodeFrameError(\n      \"Tried to mark a node that was not determined to need a mark during analyze.\"\n    );\n  }\n  if (isOutputHTML()) {\n    writeTo(path5)`${callRuntime(\n      \"markResumeNode\",\n      getScopeIdIdentifier(section),\n      getScopeAccessorLiteral(binding)\n    )}`;\n  }\n}\n\n// src/translator/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\n  \"returnId\"\n);\nvar usedTag = /* @__PURE__ */ new WeakSet();\nvar return_default = {\n  analyze(tag) {\n    (0, import_babel_utils8.assertNoArgs)(tag);\n    (0, import_babel_utils8.assertNoVar)(tag);\n    (0, import_babel_utils8.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils8.assertAllowedAttributes)(tag, [\"value\", \"valueChange\"]);\n    if (usedTag.has(tag.hub)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `return` tag can only be used once per template.\"\n      );\n    }\n    usedTag.add(tag.hub);\n    if (!getKnownAttrValues(tag.node).value) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `return` tag requires a value.\");\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        flushBefore(tag);\n        if (attrs2.valueChange) {\n          getSerializedScopeProperties(section).set(\n            import_compiler11.types.stringLiteral(\"@\" /* TagVariableChange */),\n            attrs2.valueChange\n          );\n        }\n        if (attrs2.value) {\n          const returnId2 = currentProgramPath.scope.generateUidIdentifier(\"return\");\n          _setReturnId(section, returnId2);\n          tag.replaceWith(\n            import_compiler11.types.variableDeclaration(\"const\", [\n              import_compiler11.types.variableDeclarator(returnId2, attrs2.value)\n            ])\n          )[0].skip();\n        }\n      }\n    },\n    dom: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        if (attrs2.value) {\n          addValue(\n            section,\n            attrs2.value.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"tagVarSignal\"),\n              hasDownstreamIntersections: () => true\n            },\n            attrs2.value\n          );\n        }\n        if (attrs2.valueChange) {\n          addValue(\n            section,\n            attrs2.valueChange.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"setTagVarChange\"),\n              hasDownstreamIntersections: () => false\n            },\n            attrs2.valueChange\n          );\n        }\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: {\n    openTagOnly: true\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/translator/util/for-each-identifier.ts\nfunction forEachIdentifier(node, cb) {\n  switch (node.type) {\n    case \"ObjectPattern\":\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case \"ObjectProperty\":\n            if (prop.value.type === \"AssignmentPattern\") {\n              forEachIdentifier(prop.value.left, cb);\n            } else {\n              forEachIdentifier(prop.value, cb);\n            }\n            break;\n          case \"RestElement\":\n            forEachIdentifier(prop.argument, cb);\n            break;\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      for (const el of node.elements) {\n        if (el != null) {\n          switch (el.type) {\n            case \"RestElement\":\n              forEachIdentifier(el.argument, cb);\n              break;\n            case \"AssignmentPattern\":\n              forEachIdentifier(el.left, cb);\n              break;\n            default:\n              forEachIdentifier(el, cb);\n              break;\n          }\n        }\n      }\n      break;\n    case \"Identifier\":\n      cb(node);\n      break;\n  }\n}\n\n// src/translator/util/get-defined-binding-expression.ts\nvar import_compiler12 = require(\"@marko/compiler\");\nfunction getDeclaredBindingExpression(binding) {\n  if (binding.declared || !binding.upstreamAlias) {\n    return import_compiler12.types.identifier(binding.name);\n  } else if (binding.property !== void 0) {\n    return toMemberExpression(\n      getDeclaredBindingExpression(binding.upstreamAlias),\n      binding.property,\n      binding.upstreamAlias.nullable\n    );\n  } else {\n    return getDeclaredBindingExpression(binding.upstreamAlias);\n  }\n}\n\n// src/translator/util/scope-read.ts\nvar import_compiler13 = require(\"@marko/compiler\");\nfunction createScopeReadPattern(section, referencedBindings) {\n  const rootDepth = section.depth;\n  const rootPattern = import_compiler13.types.objectPattern([]);\n  let nestedPatterns;\n  forEach(referencedBindings, (ref) => {\n    if (ref.name.includes(\"#\")) return;\n    const propertyKey = getScopeAccessorLiteral(ref);\n    const propertyValue = import_compiler13.types.identifier(ref.name);\n    const isShorthand = propertyKey.value === propertyValue.name;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns) nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = import_compiler13.types.objectPattern([]);\n        prev.properties.push(\n          import_compiler13.types.objectProperty(import_compiler13.types.identifier(\"_\"), nestedPattern)\n        );\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(\n      import_compiler13.types.objectProperty(\n        isShorthand ? propertyValue : propertyKey,\n        propertyValue,\n        false,\n        isShorthand\n      )\n    );\n  });\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier ?? import_compiler13.types.identifier(\"undefined\");\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = import_compiler13.types.memberExpression(scope, import_compiler13.types.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  return import_compiler13.types.memberExpression(\n    getScopeExpression(section, reference.section),\n    getScopeAccessorLiteral(reference),\n    true\n  );\n}\n\n// src/translator/util/simplify-fn.ts\nvar import_compiler14 = require(\"@marko/compiler\");\nfunction simplifyFunction(fn) {\n  switch (fn.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return fn;\n    default:\n      return import_compiler14.types.functionExpression(\n        null,\n        fn.params,\n        fn.body,\n        fn.async,\n        fn.generator\n      );\n  }\n}\n\n// src/translator/util/to-first-expression-or-block.ts\nvar import_compiler15 = require(\"@marko/compiler\");\nfunction toFirstExpressionOrBlock(stmts) {\n  if (stmts.length === 1 && import_compiler15.types.isExpressionStatement(stmts[0])) {\n    const { expression } = stmts[0];\n    switch (expression.type) {\n      case \"ObjectExpression\":\n      case \"AssignmentExpression\":\n        return toParenthesizedExpressionIfNeeded(expression);\n      default:\n        return expression;\n    }\n  }\n  return import_compiler15.types.blockStatement(stmts);\n}\nfunction toParenthesizedExpressionIfNeeded(expr) {\n  switch (expr.type) {\n    case \"ObjectExpression\":\n    case \"AssignmentExpression\":\n      return import_compiler15.types.parenthesizedExpression(expr);\n    default:\n      return expr;\n  }\n}\n\n// src/translator/util/traverse.ts\nvar import_compiler16 = require(\"@marko/compiler\");\nvar skip = Symbol(\"skip\");\nfunction traverseReplace(container, key, enter3) {\n  const node = container[key];\n  if (node) {\n    if (Array.isArray(node)) {\n      for (let i = node.length; i--; ) {\n        traverseReplace(node, i, enter3);\n      }\n    } else {\n      const keys = import_compiler16.types.VISITOR_KEYS[node.type];\n      for (let i = keys.length; i--; ) {\n        traverseReplace(node, keys[i], enter3);\n      }\n      const replacement = enter3(node, container, key);\n      if (replacement) container[key] = replacement;\n    }\n  }\n}\nfunction traverseContains(node, check) {\n  if (node) {\n    if (Array.isArray(node)) {\n      for (const item of node) {\n        if (traverseContains(item, check)) {\n          return true;\n        }\n      }\n    } else {\n      switch (check(node)) {\n        case true:\n          return true;\n        case skip:\n          return false;\n      }\n      for (const key of import_compiler16.types.VISITOR_KEYS[node.type]) {\n        if (traverseContains(node[key], check)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// src/translator/util/signals.ts\nvar [getSignals] = createSectionState(\n  \"signals\",\n  () => /* @__PURE__ */ new Map()\n);\nvar [getClosureSignalBuilder, _setClosureSignalBuilder] = createSectionState(\"queue\");\nfunction setClosureSignalBuilder(tag, builder) {\n  _setClosureSignalBuilder(getSectionForBody(tag.get(\"body\")), builder);\n}\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar unimplementedBuild = () => {\n  return import_compiler17.types.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, referencedBindings, name2 = generateSignalName(referencedBindings)) {\n  const signals = getSignals(section);\n  let signal = signals.get(referencedBindings);\n  if (!signal) {\n    const exportName = referencedBindings ? !Array.isArray(referencedBindings) && referencedBindings.section === section && referencedBindings.export : !section.parent && currentProgramPath.node.extra.domExports?.setup;\n    signals.set(\n      referencedBindings,\n      signal = {\n        identifier: exportName ? import_compiler17.types.identifier(exportName) : currentProgramPath.scope.generateUidIdentifier(\n          name2 + section.name.replace(\"_\", \"$\")\n        ),\n        referencedBindings,\n        section,\n        values: [],\n        intersection: void 0,\n        render: [],\n        renderReferencedBindings: void 0,\n        effect: [],\n        effectReferencedBindings: void 0,\n        subscribers: [],\n        closures: /* @__PURE__ */ new Map(),\n        hasDownstreamIntersections: () => {\n          let hasDownstreamIntersections = !!signal.intersection;\n          if (!hasDownstreamIntersections) {\n            for (const value of signal.values) {\n              if (value.signal.hasDownstreamIntersections()) {\n                hasDownstreamIntersections = true;\n                break;\n              }\n            }\n          }\n          if (!hasDownstreamIntersections) {\n            if (!Array.isArray(referencedBindings) && referencedBindings) {\n              for (const alias of referencedBindings.aliases) {\n                if (getSignal(section, alias).hasDownstreamIntersections()) {\n                  hasDownstreamIntersections = true;\n                  break;\n                }\n              }\n              if (!hasDownstreamIntersections) {\n                for (const [, alias] of referencedBindings.propertyAliases) {\n                  if (getSignal(section, alias).hasDownstreamIntersections()) {\n                    hasDownstreamIntersections = true;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n          signal.hasDownstreamIntersections = () => hasDownstreamIntersections;\n          return hasDownstreamIntersections;\n        },\n        build: unimplementedBuild,\n        export: !!exportName\n      }\n    );\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!referencedBindings) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(referencedBindings)) {\n      subscribe(referencedBindings, signal);\n      signal.build = () => {\n        return callRuntime(\n          \"intersection\",\n          import_compiler17.types.numericLiteral(referencedBindings.length),\n          getSignalFn(signal, [scopeIdentifier], referencedBindings),\n          buildSignalIntersections(signal)\n        );\n      };\n    } else if (referencedBindings.section !== section && bindingUtil.find(section.closures, referencedBindings)) {\n      getSignal(referencedBindings.section, referencedBindings).closures.set(\n        section,\n        signal\n      );\n      signal.build = () => {\n        const builder = getClosureSignalBuilder(section);\n        const ownerScope = getScopeExpression(\n          section,\n          referencedBindings.section\n        );\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        const isDynamicClosure = !isImmediateOwner || !builder;\n        const render = getSignalFn(signal, [\n          scopeIdentifier,\n          import_compiler17.types.identifier(referencedBindings.name)\n        ]);\n        signal.isDynamicClosure = isDynamicClosure;\n        const intersection = buildSignalIntersections(signal);\n        return isDynamicClosure ? callRuntime(\n          \"dynamicClosure\",\n          render,\n          isImmediateOwner ? null : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope),\n          intersection\n        ) : builder(signal, render, intersection);\n      };\n      addStatement(\n        \"render\",\n        section,\n        void 0,\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(\n            import_compiler17.types.memberExpression(signal.identifier, import_compiler17.types.identifier(\"_\")),\n            [\n              scopeIdentifier,\n              createScopeReadExpression(section, referencedBindings)\n            ]\n          )\n        )\n      );\n    }\n  }\n  return signal;\n}\nfunction initValue(binding, runtimeHelper = \"value\") {\n  const valueAccessor = getScopeAccessorLiteral(binding);\n  const section = binding.section;\n  const signal = getSignal(section, binding);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      import_compiler17.types.identifier(binding.name)\n    ]);\n    const intersections = buildSignalIntersections(signal);\n    const isParamBinding = !binding.upstreamAlias && (binding.type === 3 /* param */ || binding.type === 2 /* input */);\n    const isNakedAlias = binding.upstreamAlias && !binding.property;\n    const needsGuard = !isNakedAlias && (binding.downstreamExpressions.size || fn.body.body.length > 0);\n    const needsCache = needsGuard || intersections;\n    const needsMarks = isParamBinding || intersections;\n    if (needsCache || needsMarks) {\n      return callRuntime(runtimeHelper, valueAccessor, fn, intersections);\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = valueAccessor;\n  for (const alias of binding.aliases) {\n    initValue(alias);\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    initValue(alias);\n  }\n  return signal;\n}\nfunction getSignalFn(signal, params, referencedBindings) {\n  const section = signal.section;\n  const binding = signal.referencedBindings;\n  const [scopeIdentifier2, valueIdentifier] = params;\n  const isValueSignal = binding && !Array.isArray(binding) && binding.section === section;\n  if (isValueSignal) {\n    for (const alias of binding.aliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            valueIdentifier,\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n    for (const [key, alias] of binding.propertyAliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            toMemberExpression(valueIdentifier, key, binding.nullable),\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n  }\n  for (const value of signal.values) {\n    signal.render.push(\n      import_compiler17.types.expressionStatement(\n        import_compiler17.types.callExpression(value.signal.identifier, [\n          value.scope,\n          value.value,\n          ...getTranslatedExtraArgs(value.signal)\n        ])\n      )\n    );\n  }\n  if (isValueSignal) {\n    const closureEntries = Array.from(signal.closures.entries()).sort(\n      ([a], [b]) => a.id - b.id\n    );\n    for (const [_closureSection, closureSignal] of closureEntries) {\n      if (isStatefulReferences(closureSignal.referencedBindings)) {\n        signal.render.push(\n          import_compiler17.types.expressionStatement(\n            import_compiler17.types.callExpression(closureSignal.identifier, [\n              scopeIdentifier2,\n              valueIdentifier\n            ])\n          )\n        );\n      }\n    }\n  }\n  if (referencedBindings) {\n    signal.render.unshift(\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(\n          createScopeReadPattern(section, referencedBindings),\n          scopeIdentifier2\n        )\n      ])\n    );\n  }\n  return import_compiler17.types.arrowFunctionExpression(params, import_compiler17.types.blockStatement(signal.render));\n}\nvar hasTranslatedExtraArgs = /* @__PURE__ */ new WeakSet();\nvar emptyExtraArgs = [];\nfunction getTranslatedExtraArgs(signal) {\n  if (signal.extraArgs) {\n    if (!hasTranslatedExtraArgs.has(signal)) {\n      hasTranslatedExtraArgs.add(signal);\n      traverseReplace(signal, \"extraArgs\", replaceRenderNode);\n    }\n    return signal.extraArgs;\n  }\n  return emptyExtraArgs;\n}\nfunction buildSignalIntersections(signal) {\n  let intersections = signal.intersection;\n  const binding = signal.referencedBindings;\n  if (binding && !Array.isArray(binding) && binding.section === signal.section) {\n    for (const alias of binding.aliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n    for (const [, alias] of binding.propertyAliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n  }\n  for (const value of signal.values) {\n    if (value.signal.hasDownstreamIntersections()) {\n      intersections = push(\n        intersections,\n        value.intersectionExpression ?? (import_compiler17.types.isMemberExpression(value.signal.identifier) ? value.signal.identifier : import_compiler17.types.identifier(value.signal.identifier.name))\n      );\n    }\n  }\n  return intersections && import_compiler17.types.arrowFunctionExpression(\n    [],\n    Array.isArray(intersections) ? callRuntime(\"intersections\", import_compiler17.types.arrayExpression(intersections)) : intersections\n  );\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = push(\n    providerSignal.intersection,\n    subscriber.identifier\n  );\n}\nfunction generateSignalName(referencedBindings) {\n  let name2;\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      name2 = \"expr\";\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 = referencedBindings.name;\n    }\n  } else {\n    name2 = \"setup\";\n  }\n  return name2;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (import_compiler17.types.isArrowFunctionExpression(arg) && import_compiler17.types.isBlockStatement(arg.body)) {\n      const body = arg.body.body;\n      if (body.length === 0) {\n        args[i] = import_compiler17.types.numericLiteral(0);\n      } else if (body.length === 1 && import_compiler17.types.isExpressionStatement(body[0])) {\n        arg.body = toParenthesizedExpressionIfNeeded(body[0].expression);\n      }\n    }\n  }\n  for (let i = args.length - 1; import_compiler17.types.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSection, referencedBindings, statement, usedReferences) {\n  const signal = getSignal(targetSection, referencedBindings);\n  const statements = signal[type] ??= [];\n  const add = type === \"effect\" ? addEffectReferences : addRenderReferences;\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (usedReferences !== false) {\n    if (usedReferences) {\n      for (const ref of usedReferences) {\n        add(signal, ref);\n      }\n    } else {\n      add(signal, referencedBindings);\n    }\n  }\n}\nfunction addEffectReferences(signal, referencedBindings) {\n  signal.effectReferencedBindings = bindingUtil.union(\n    signal.effectReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addRenderReferences(signal, referencedBindings) {\n  signal.renderReferencedBindings = bindingUtil.union(\n    signal.renderReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addValue(targetSection, referencedBindings, signal, value, scope = scopeIdentifier, intersectionExpression) {\n  getSignal(targetSection, referencedBindings).values.push({\n    signal,\n    value,\n    scope,\n    intersectionExpression\n  });\n}\nfunction getResumeRegisterId(section, referencedBindings, type) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name2 = \"\";\n  if (referencedBindings) {\n    if (typeof referencedBindings === \"string\") {\n      name2 += `_${referencedBindings}`;\n    } else if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 += `_${referencedBindings.name}`;\n    }\n  }\n  return (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}${name2}${type ? \"/\" + type : \"\"}`\n  );\n}\nvar usedRegisterIdsBySection = /* @__PURE__ */ new WeakMap();\nfunction getRegisterUID(section, name2) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let used = usedRegisterIdsBySection.get(section);\n  if (!used) usedRegisterIdsBySection.set(section, used = /* @__PURE__ */ new Set());\n  const baseId = (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}/${name2}`\n  );\n  let count = 0;\n  let id = baseId;\n  while (used.has(id)) {\n    id = baseId + \"_\" + ++count;\n  }\n  used.add(id);\n  return id;\n}\nfunction writeSignals(section) {\n  const signals = [...getSignals(section).values()].sort(sortSignals);\n  for (const signal of signals) {\n    traverseReplace(signal, \"render\", replaceRenderNode);\n    for (const value2 of signal.values) {\n      traverseReplace(value2, \"value\", replaceRenderNode);\n    }\n    let effectDeclarator;\n    if (signal.effect.length) {\n      traverseReplace(signal, \"effect\", replaceEffectNode);\n      const effectIdentifier = import_compiler17.types.identifier(`${signal.identifier.name}_effect`);\n      const referencedBindings = signal.effectReferencedBindings;\n      const referencesScope = traverseContains(\n        signal.effect,\n        isScopeIdentifier\n      );\n      effectDeclarator = import_compiler17.types.variableDeclarator(\n        effectIdentifier,\n        callRuntime(\n          \"effect\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(section, signal.referencedBindings)\n          ),\n          import_compiler17.types.arrowFunctionExpression(\n            referencedBindings ? referencesScope ? [\n              scopeIdentifier,\n              createScopeReadPattern(section, referencedBindings)\n            ] : [createScopeReadPattern(section, referencedBindings)] : referencesScope ? [scopeIdentifier] : [],\n            toFirstExpressionOrBlock(signal.effect)\n          )\n        )\n      );\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(effectIdentifier, [scopeIdentifier])\n        )\n      );\n    }\n    let value = signal.build();\n    if (import_compiler17.types.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    if (signal.register) {\n      value = callRuntime(\n        \"registerBoundSignal\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"var\")\n        ),\n        value\n      );\n    }\n    if (signal.isDynamicClosure && isStatefulReferences(signal.referencedBindings)) {\n      value = callRuntime(\n        \"registerSubscriber\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"subscriber\")\n        ),\n        value\n      );\n    }\n    const signalDeclarator = import_compiler17.types.variableDeclarator(signal.identifier, value);\n    let signalDeclaration = !section.parent && !signal.referencedBindings && (import_compiler17.types.isFunctionExpression(value) || import_compiler17.types.isArrowFunctionExpression(value)) ? import_compiler17.types.functionDeclaration(\n      signal.identifier,\n      value.params,\n      import_compiler17.types.isExpression(value.body) ? import_compiler17.types.blockStatement([import_compiler17.types.expressionStatement(value.body)]) : value.body\n    ) : import_compiler17.types.variableDeclaration(\"const\", [signalDeclarator]);\n    if (signal.export) {\n      signalDeclaration = import_compiler17.types.exportNamedDeclaration(signalDeclaration);\n    }\n    currentProgramPath.pushContainer(\n      \"body\",\n      effectDeclarator ? [\n        import_compiler17.types.variableDeclaration(\"const\", [effectDeclarator]),\n        signalDeclaration\n      ] : signalDeclaration\n    );\n  }\n}\nfunction writeRegisteredFns() {\n  const registeredFns = registeredFnsForProgram.get(currentProgramPath.node);\n  const statements = [];\n  if (registeredFns) {\n    for (const registeredFn of registeredFns) {\n      let fn;\n      const params = registeredFn.referencedBindings ? registeredFn.referencesScope ? [\n        scopeIdentifier,\n        import_compiler17.types.assignmentPattern(\n          createScopeReadPattern(\n            registeredFn.section,\n            registeredFn.referencedBindings\n          ),\n          scopeIdentifier\n        )\n      ] : [\n        createScopeReadPattern(\n          registeredFn.section,\n          registeredFn.referencedBindings\n        )\n      ] : registeredFn.referencesScope ? [scopeIdentifier] : void 0;\n      if (params) {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          params,\n          import_compiler17.types.blockStatement(toReturnedFunction(registeredFn.node))\n        );\n      } else if (registeredFn.node.type === \"FunctionDeclaration\" && registeredFn.node.id?.name === registeredFn.id) {\n        fn = registeredFn.node;\n      } else {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          registeredFn.node.params,\n          registeredFn.node.body.type === \"BlockStatement\" ? registeredFn.node.body : import_compiler17.types.blockStatement([import_compiler17.types.returnStatement(registeredFn.node.body)]),\n          registeredFn.node.generator,\n          registeredFn.node.async\n        );\n      }\n      statements.push(fn);\n    }\n    for (const registeredFn of registeredFns) {\n      statements.push(\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler17.types.stringLiteral(registeredFn.registerId),\n            import_compiler17.types.identifier(registeredFn.id)\n          )\n        )\n      );\n    }\n    for (const stmt of currentProgramPath.pushContainer(\"body\", statements)) {\n      stmt.skip();\n    }\n  }\n}\nfunction toReturnedFunction(rawFn) {\n  const fn = simplifyFunction(rawFn);\n  return fn.type === \"FunctionDeclaration\" ? [fn, import_compiler17.types.returnStatement(fn.id)] : [import_compiler17.types.returnStatement(fn)];\n}\nfunction sortSignals(a, b) {\n  const aReferencedBindings = getReferencedBindings(a);\n  const bReferencedBindings = getReferencedBindings(b);\n  for (let i = Math.max(aReferencedBindings.length, bReferencedBindings.length) - 1; i >= 0; i--) {\n    const diff = (bReferencedBindings[i] ?? -1) - (aReferencedBindings[i] ?? -1);\n    if (diff !== 0) return diff;\n  }\n  return 0;\n}\nfunction getReferencedBindings({ referencedBindings: reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reference) {\n  return (reference.type === 0 /* dom */ ? 1 : 0) * 1e4 + reference.id;\n}\nfunction addHTMLEffectCall(section, referencedBindings) {\n  addStatement(\"effect\", section, referencedBindings, void 0, false);\n}\nfunction writeHTMLResumeStatements(path5, tagVarIdentifier) {\n  const section = getSectionForBody(path5);\n  if (!section) return;\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  forEach(section.closures, (closure) => {\n    if (isStatefulReferences(closure)) {\n      let currentSection = section;\n      while (currentSection !== closure.section) {\n        getSerializedScopeProperties(currentSection).set(\n          import_compiler17.types.stringLiteral(\"_\"),\n          callRuntime(\n            \"ensureScopeWithId\",\n            getScopeIdIdentifier(currentSection = currentSection.parent)\n          )\n        );\n      }\n      setForceResumeScope(closure.section);\n      const isImmediateOwner = section.parent?.id === closure.section.id;\n      const isDynamicClosure = !getClosureSignalBuilder(section) || !isImmediateOwner;\n      if (isDynamicClosure) {\n        path5.pushContainer(\n          \"body\",\n          import_compiler17.types.expressionStatement(\n            callRuntime(\n              \"writeEffect\",\n              scopeIdIdentifier,\n              import_compiler17.types.stringLiteral(\n                getResumeRegisterId(section, closure, \"subscriber\")\n              )\n            )\n          )\n        );\n      }\n    }\n  });\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].referencedBindings;\n      path5.pushContainer(\n        \"body\",\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"writeEffect\",\n            scopeIdIdentifier,\n            import_compiler17.types.stringLiteral(getResumeRegisterId(section, signalRefs))\n          )\n        )\n      );\n    }\n  }\n  const accessors = /* @__PURE__ */ new Set();\n  const additionalProperties = getSerializedScopeProperties(section);\n  const serializedProperties = [];\n  forEach(section.bindings, (binding) => {\n    if (binding.serialize && binding.type !== 0 /* dom */) {\n      const accessor = getScopeAccessorLiteral(binding);\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(accessor, getDeclaredBindingExpression(binding))\n      );\n      accessors.add(accessor.value);\n    }\n  });\n  if (tagVarIdentifier && returnId(section) !== void 0) {\n    serializedProperties.push(\n      import_compiler17.types.objectProperty(\n        import_compiler17.types.stringLiteral(\"/\" /* TagVariable */),\n        tagVarIdentifier\n      )\n    );\n  }\n  for (const [key, value] of additionalProperties) {\n    if (!accessors.has(key.value)) {\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(key, value, !import_compiler17.types.isLiteral(key))\n      );\n      accessors.add(key.value);\n    }\n  }\n  if (serializedProperties.length || forceResumeScope(section)) {\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        callRuntime(\n          \"writeScope\",\n          scopeIdIdentifier,\n          import_compiler17.types.objectExpression(serializedProperties)\n        )\n      )\n    );\n  }\n  const resumeClosestBranch2 = !section.isBranch && (section.hasAbortSignal || !!section.closures || !!find(section.bindings, (binding) => binding.type === 1 /* let */));\n  if (resumeClosestBranch2) {\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        callRuntime(\"resumeClosestBranch\", scopeIdIdentifier)\n      )\n    );\n  }\n  if (path5.get(\"body\").length) {\n    path5.unshiftContainer(\n      \"body\",\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n      ])\n    );\n  }\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\nfunction replaceRenderNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node) || replaceRegisteredFunctionNode(node);\n}\nfunction replaceEffectNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node);\n}\nfunction replaceBindingReadNode(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      return getReadReplacement(node);\n    }\n  }\n}\nfunction replaceAssignedNode(node) {\n  switch (node.type) {\n    case \"UpdateExpression\": {\n      const { extra } = node.argument;\n      if (isAssignedBindingExtra(extra)) {\n        const { buildAssignment } = getSignal(\n          extra.assignment.section,\n          extra.assignment\n        );\n        if (buildAssignment) {\n          const replacement = buildAssignment(\n            extra.section,\n            import_compiler17.types.binaryExpression(\n              node.operator === \"++\" ? \"+\" : \"-\",\n              node.argument,\n              import_compiler17.types.numericLiteral(1)\n            )\n          );\n          if (!node.prefix) {\n            return import_compiler17.types.sequenceExpression([replacement, node.argument]);\n          }\n          return replacement;\n        }\n      }\n      break;\n    }\n    case \"AssignmentExpression\":\n      switch (node.left.type) {\n        case \"Identifier\": {\n          const { extra } = node.left;\n          if (isAssignedBindingExtra(extra)) {\n            const { buildAssignment } = getSignal(\n              extra.assignment.section,\n              extra.assignment\n            );\n            if (buildAssignment) {\n              return buildAssignment(\n                extra.section,\n                node.operator === \"=\" ? node.right : import_compiler17.types.binaryExpression(\n                  node.operator.slice(\n                    0,\n                    -1\n                  ),\n                  node.left,\n                  node.right\n                )\n              );\n            }\n          }\n          break;\n        }\n        case \"ArrayPattern\":\n        case \"ObjectPattern\": {\n          let params;\n          let assignments;\n          forEachIdentifier(node.left, (id) => {\n            const { extra } = id;\n            if (isAssignedBindingExtra(extra)) {\n              const signal = getSignal(\n                extra.assignment.section,\n                extra.assignment\n              );\n              if (signal?.buildAssignment) {\n                id.name = currentProgramPath.scope.generateUid(id.name);\n                (params ||= []).push(import_compiler17.types.identifier(id.name));\n                (assignments ||= []).push(\n                  signal.buildAssignment(extra.section, import_compiler17.types.identifier(id.name))\n                );\n              }\n            }\n          });\n          if (params && assignments) {\n            const resultId = currentProgramPath.scope.generateUid(\"result\");\n            return import_compiler17.types.callExpression(\n              import_compiler17.types.arrowFunctionExpression(\n                [import_compiler17.types.identifier(resultId), ...params],\n                import_compiler17.types.sequenceExpression([\n                  import_compiler17.types.assignmentExpression(\n                    \"=\",\n                    node.left,\n                    import_compiler17.types.identifier(resultId)\n                  ),\n                  ...assignments,\n                  import_compiler17.types.identifier(resultId)\n                ])\n              ),\n              [node.right]\n            );\n          }\n          break;\n        }\n      }\n      break;\n  }\n}\nvar registeredFnsForProgram = /* @__PURE__ */ new WeakMap();\nfunction replaceRegisteredFunctionNode(node) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.objectProperty(node.key, replacement);\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression(node);\n    }\n    case \"FunctionDeclaration\": {\n      const replacement = getRegisteredFnExpression(node);\n      if (replacement) {\n        return import_compiler17.types.variableDeclaration(\"const\", [\n          import_compiler17.types.variableDeclarator(node.id, replacement)\n        ]);\n      }\n      break;\n    }\n  }\n}\nfunction getRegisteredFnExpression(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    const id = currentProgramPath.scope.generateUid(extra.name);\n    const referencesScope = extra.referencesScope;\n    const referencedBindings = extra.referencedBindingsInFunction;\n    let registedFns = registeredFnsForProgram.get(currentProgramPath.node);\n    if (!registedFns) {\n      registeredFnsForProgram.set(currentProgramPath.node, registedFns = []);\n    }\n    registedFns.push({\n      id,\n      node,\n      registerId: extra.registerId,\n      section: extra.section,\n      referencesScope,\n      referencedBindings\n    });\n    if (referencesScope || referencedBindings) {\n      return import_compiler17.types.callExpression(import_compiler17.types.identifier(id), [scopeIdentifier]);\n    } else {\n      return import_compiler17.types.identifier(id);\n    }\n  }\n}\n\n// src/translator/visitors/program/dom.ts\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSectionForBody(program);\n      const { walks, writes, setup } = getSectionMeta(section);\n      const domExports = program.node.extra.domExports;\n      const templateIdentifier = import_compiler18.types.identifier(domExports.template);\n      const walksIdentifier = import_compiler18.types.identifier(domExports.walks);\n      const setupIdentifier = import_compiler18.types.identifier(domExports.setup);\n      const paramsBinding = program.node.extra.binding;\n      const programParamsSignal = paramsBinding && bindingHasDownstreamExpressions(paramsBinding) ? initValue(paramsBinding) : void 0;\n      const styleFile = getStyleFile(program.hub.file);\n      if (styleFile) {\n        (0, import_babel_utils10.importDefault)(program.hub.file, styleFile);\n      }\n      forEachSectionReverse((childSection) => {\n        if (childSection !== section) {\n          const tagParamsSignal = childSection.params && initValue(childSection.params);\n          const { walks: walks2, writes: writes2, setup: setup2 } = getSectionMeta(childSection);\n          const identifier = import_compiler18.types.identifier(childSection.name);\n          const renderer = callRuntime(\n            getSectionParentIsOwner(childSection) ? \"createRenderer\" : \"createRendererWithOwner\",\n            writes2,\n            walks2,\n            setup2,\n            tagParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], tagParamsSignal.identifier)\n          );\n          writeSignals(childSection);\n          program.node.body.push(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                identifier,\n                isStatefulSection(childSection) ? callRuntime(\n                  \"register\",\n                  import_compiler18.types.stringLiteral(\n                    getResumeRegisterId(childSection, \"renderer\")\n                  ),\n                  renderer\n                ) : renderer\n              )\n            ])\n          );\n        }\n      });\n      writeSignals(section);\n      writeRegisteredFns();\n      if (!setup) {\n        program.node.body.unshift(\n          import_compiler18.types.exportNamedDeclaration(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                setupIdentifier,\n                import_compiler18.types.arrowFunctionExpression([], import_compiler18.types.blockStatement([]))\n              )\n            ])\n          )\n        );\n      }\n      program.node.body.unshift(\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(\n              templateIdentifier,\n              writes || import_compiler18.types.stringLiteral(\"\")\n            )\n          ])\n        ),\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(walksIdentifier, walks || import_compiler18.types.stringLiteral(\"\"))\n          ])\n        )\n      );\n      program.node.body.push(\n        import_compiler18.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler18.types.stringLiteral(program.hub.file.metadata.marko.id),\n            templateIdentifier,\n            walksIdentifier,\n            setupIdentifier,\n            programParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], programParamsSignal.identifier)\n          )\n        )\n      );\n    }\n  }\n};\n\n// src/translator/visitors/program/html.ts\nvar import_compiler19 = require(\"@marko/compiler\");\n\n// src/translator/util/is-static.ts\nfunction isStatic(path5) {\n  return path5.isImportDeclaration() || path5.isExportDeclaration() || path5.isMarkoScriptlet({ static: true });\n}\n\n// src/translator/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      const section = getSectionForBody(program);\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLResumeStatements(program, tagVarIdentifier);\n      traverseReplace(program.node, \"body\", replaceNode);\n      const returnIdentifier = returnId(section);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", import_compiler19.types.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          if (child.node.target && child.node.target !== \"server\") {\n            child.remove();\n          } else {\n            child.replaceWithMultiple(child.node.body);\n          }\n        }\n      }\n      program.pushContainer(\"body\", [\n        import_compiler19.types.variableDeclaration(\"const\", [\n          import_compiler19.types.variableDeclarator(\n            htmlRendererIdentifier,\n            callRuntime(\n              \"createRenderer\",\n              import_compiler19.types.arrowFunctionExpression(\n                [import_compiler19.types.identifier(\"input\"), tagVarIdentifier],\n                import_compiler19.types.blockStatement(renderContent)\n              )\n            )\n          )\n        ]),\n        import_compiler19.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler19.types.stringLiteral(program.hub.file.metadata.marko.id),\n            htmlRendererIdentifier\n          )\n        )\n      ]);\n    }\n  }\n};\nfunction replaceNode(node, container) {\n  return replaceBindingReadNode2(node) || replaceRegisteredFunctionNode2(node, container);\n}\nfunction replaceBindingReadNode2(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      const { extra } = node;\n      if (extra && !(extra.read && !extra.read.binding.declared || extra.binding && !extra.binding.declared)) {\n        return getReadReplacement(node);\n      }\n    }\n  }\n}\nfunction replaceRegisteredFunctionNode2(node, container) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.objectProperty(node.key, replacement);\n    }\n    case \"FunctionDeclaration\": {\n      const { extra } = node;\n      if (isRegisteredFnExtra(extra)) {\n        let registeredFnDeclarations = registeredFnDeclarationsByBody.get(\n          container\n        );\n        if (!registeredFnDeclarations) {\n          registeredFnDeclarationsByBody.set(\n            container,\n            registeredFnDeclarations = []\n          );\n        }\n        registeredFnDeclarations.push({\n          id: node.id.name,\n          registerId: extra.registerId\n        });\n      }\n      break;\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression2(node);\n    }\n    case \"BlockStatement\":\n    case \"MarkoScriptlet\":\n      addRegisteredDeclarations(node.body);\n      break;\n  }\n}\nvar registeredFnDeclarationsByBody = /* @__PURE__ */ new WeakMap();\nfunction addRegisteredDeclarations(body) {\n  const registeredFnDeclarations = registeredFnDeclarationsByBody.get(body);\n  if (registeredFnDeclarations) {\n    for (const { id, registerId } of registeredFnDeclarations) {\n      body.push(\n        import_compiler19.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler19.types.identifier(id),\n            import_compiler19.types.stringLiteral(registerId)\n          )\n        )\n      );\n    }\n  }\n}\nfunction getRegisteredFnExpression2(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    return callRuntime(\n      \"register\",\n      simplifyFunction(node),\n      import_compiler19.types.stringLiteral(extra.registerId),\n      (extra.referencedBindingsInFunction || extra.referencesScope) && getScopeIdIdentifier(extra.section)\n    );\n  }\n}\n\n// src/translator/visitors/program/index.ts\nvar currentProgramPath;\nvar cleanIdentifier;\nvar htmlRendererIdentifier;\nvar scopeIdentifier;\nfunction isScopeIdentifier(node) {\n  return node === scopeIdentifier;\n}\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      program.node.params = [import_compiler20.types.identifier(\"input\")];\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n      trackParamsReferences(program, 2 /* input */);\n      program.node.params[0].extra.binding.nullable = false;\n      const { scope } = program;\n      (program.node.extra ??= {}).domExports = {\n        template: scope.generateUid(\"template_\"),\n        walks: scope.generateUid(\"walks_\"),\n        setup: scope.generateUid(\"setup_\"),\n        params: void 0,\n        // TODO look into recursive components with fine grained params.\n        closures: scope.generateUid(\"closures_\")\n      };\n    },\n    exit(program) {\n      finalizeReferences();\n      const {\n        scope,\n        node: { extra }\n      } = program;\n      if (extra.binding && bindingHasDownstreamExpressions(extra.binding)) {\n        extra.domExports.params = buildTemplateExports(extra.binding, scope);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      htmlRendererIdentifier = isOutputHTML() ? program.scope.generateUidIdentifier(\"renderer\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        const entryFile = program.hub.file;\n        const visitedFiles = /* @__PURE__ */ new Set([\n          (0, import_babel_utils11.resolveRelativePath)(entryFile, entryFile.opts.filename)\n        ]);\n        entry_builder_default.visit(entryFile, entryFile, function visitChild(resolved) {\n          if (!visitedFiles.has(resolved)) {\n            visitedFiles.add(resolved);\n            const file = (0, import_babel_utils11.loadFileForImport)(entryFile, resolved);\n            if (file) {\n              entry_builder_default.visit(\n                file,\n                entryFile,\n                (id) => visitChild(resolveRelativeToEntry(entryFile, file, id))\n              );\n            }\n          }\n        });\n        program.node.body = entry_builder_default.build(entryFile);\n        program.skip();\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      if (program.node.extra?.needsCompat) {\n        const compatFile = getCompatRuntimeFile();\n        const body = [void 0];\n        for (const child of program.node.body) {\n          if (child.type === \"ImportDeclaration\" && child.source.value === compatFile) {\n            body[0] = child;\n          } else {\n            body.push(child);\n          }\n        }\n        body[0] ??= import_compiler20.types.importDeclaration([], import_compiler20.types.stringLiteral(compatFile));\n        program.node.body = body;\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\nfunction resolveRelativeToEntry(entryFile, file, req) {\n  return file === entryFile ? (0, import_babel_utils11.resolveRelativePath)(file, req) : (0, import_babel_utils11.resolveRelativePath)(\n    entryFile,\n    req[0] === \".\" ? import_path2.default.join(file.opts.filename, \"..\", req) : req\n  );\n}\nfunction buildTemplateExports(binding, scope) {\n  const templateExport = {\n    id: binding.export ??= scope.generateUid(binding.name + \"_\"),\n    props: void 0\n  };\n  const { aliases, propertyAliases, downstreamExpressions } = binding;\n  if (!downstreamExpressions.size) {\n    templateExport.props = {};\n    for (const [property, alias] of propertyAliases) {\n      templateExport.props[property] = buildTemplateExports(alias, scope);\n    }\n    for (const alias of aliases) {\n      const exports2 = buildTemplateExports(alias, scope);\n      if (exports2.props) {\n        templateExport.props = { ...templateExport.props, ...exports2.props };\n      } else {\n        templateExport.props = void 0;\n        return templateExport;\n      }\n    }\n  }\n  return templateExport;\n}\n\n// src/translator/util/get-root.ts\nfunction getMarkoRoot(path5) {\n  let curPath = path5;\n  do\n    curPath = curPath.parentPath;\n  while (curPath && !isMarko(curPath));\n  return curPath;\n}\nfunction getExprRoot(path5) {\n  let curPath = path5;\n  while (!isMarko(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path5) {\n  let curPath = path5;\n  if (curPath.isProgram()) return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarko(curPath)) return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarko(path5) {\n  switch (path5.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path5) {\n  switch (path5.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/util/with-previous-location.ts\nfunction withPreviousLocation(newNode, originalNode) {\n  newNode.start = originalNode.start;\n  newNode.loc = originalNode.loc;\n  newNode.end = originalNode.end;\n  return newNode;\n}\n\n// src/translator/util/references.ts\nvar [getBindings] = createProgramState(() => /* @__PURE__ */ new Set());\nvar [getNextBindingId, setNextBindingId] = createProgramState(() => 0);\nfunction createBinding(name2, type, section, upstreamAlias, upstreamExpression, property, declared = false) {\n  const id = getNextBindingId();\n  const binding = {\n    id,\n    name: name2,\n    type,\n    section,\n    property,\n    declared,\n    excludeProperties: void 0,\n    serialize: false,\n    aliases: /* @__PURE__ */ new Set(),\n    propertyAliases: /* @__PURE__ */ new Map(),\n    upstreamAlias,\n    upstreamExpression,\n    downstreamExpressions: /* @__PURE__ */ new Set(),\n    export: void 0,\n    nullable: !upstreamExpression?.confident || upstreamExpression.computed == null\n  };\n  if (property) {\n    if (declared) upstreamAlias.nullable = false;\n    const propBinding = upstreamAlias.propertyAliases.get(property);\n    if (propBinding) {\n      binding.property = void 0;\n      binding.upstreamAlias = propBinding;\n      propBinding.aliases.add(binding);\n    } else {\n      upstreamAlias.propertyAliases.set(property, binding);\n    }\n  } else if (upstreamAlias) {\n    upstreamAlias.aliases.add(binding);\n  }\n  setNextBindingId(id + 1);\n  getBindings().add(binding);\n  return binding;\n}\nfunction trackVarReferences(tag, type, upstreamAlias, upstreamExpression) {\n  const tagVar = tag.node.var;\n  if (tagVar) {\n    const section = getOrCreateSection(tag);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    createBindingsAndTrackReferences(\n      tagVar,\n      type,\n      tag.scope,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    );\n  }\n}\nfunction trackParamsReferences(body, type, upstreamAlias, upstreamExpression) {\n  const params = body.node.params;\n  if (body.node.body.length && params.length) {\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    const section = getOrCreateSection(body);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    const paramsBinding = canonicalUpstreamAlias || ((body.node.extra ??= {}).binding = createBinding(\n      currentProgramPath.scope.generateUid(\"params_\"),\n      type,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    ));\n    section.params = paramsBinding;\n    for (let i = 0; i < params.length; i++) {\n      createBindingsAndTrackReferences(\n        params[i],\n        type,\n        body.scope,\n        section,\n        paramsBinding,\n        upstreamExpression,\n        i + \"\"\n      );\n    }\n  }\n}\nfunction trackReferencesForBinding(babelBinding) {\n  const { identifier, referencePaths, constantViolations } = babelBinding;\n  const binding = identifier.extra.binding;\n  for (const referencePath of referencePaths) {\n    trackReference(referencePath, binding);\n  }\n  for (const ref of constantViolations) {\n    if (ref.isUpdateExpression()) {\n      trackAssignment(ref.get(\"argument\"), binding);\n    } else if (ref.isAssignmentExpression()) {\n      trackAssignment(ref.get(\"left\"), binding);\n      if (ref.node.operator !== \"=\") {\n        const left = ref.get(\"left\");\n        if (left.isIdentifier()) {\n          trackReference(left, binding);\n        }\n      }\n    }\n  }\n}\nfunction trackAssignment(assignment, binding) {\n  const section = getOrCreateSection(assignment);\n  setReferencesScope(assignment);\n  forEachIdentifier(assignment.node, (id) => {\n    if (id.name === binding.name) {\n      const extra = id.extra ??= {};\n      extra.assignment = binding;\n      extra.section = section;\n    }\n  });\n}\nfunction setReferencesScope(path5) {\n  let fnRoot = getFnRoot(path5);\n  while (fnRoot) {\n    (fnRoot.node.extra ??= {}).referencesScope = true;\n    fnRoot = getFnRoot(fnRoot.parentPath);\n  }\n}\nfunction createBindingsAndTrackReferences(lVal, type, scope, section, upstreamAlias, upstreamExpression, property) {\n  switch (lVal.type) {\n    case \"Identifier\":\n      (lVal.extra ??= {}).binding = createBinding(\n        lVal.name,\n        type,\n        section,\n        upstreamAlias,\n        upstreamExpression,\n        property,\n        true\n      );\n      trackReferencesForBinding(scope.getBinding(lVal.name));\n      break;\n    case \"ObjectPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      ));\n      for (const prop of lVal.properties) {\n        if (prop.type === \"RestElement\") {\n          createBindingsAndTrackReferences(\n            prop.argument,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            property\n          );\n        } else {\n          let key;\n          if (prop.key.type === \"Identifier\") {\n            key = prop.key.name;\n          } else if (prop.key.type === \"StringLiteral\") {\n            key = prop.key.value;\n          } else {\n            throw new Error(\"computed keys not supported in object pattern\");\n          }\n          createBindingsAndTrackReferences(\n            prop.value,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            key\n          );\n        }\n      }\n      break;\n    }\n    case \"ArrayPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      ));\n      let i = -1;\n      for (const element of lVal.elements) {\n        i++;\n        if (element) {\n          if (element.type === \"RestElement\") {\n            createBindingsAndTrackReferences(\n              element.argument,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              property\n            );\n          } else {\n            createBindingsAndTrackReferences(\n              element,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              `${i}`\n            );\n          }\n        }\n      }\n      break;\n    }\n    case \"AssignmentPattern\":\n      createBindingsAndTrackReferences(\n        lVal.left,\n        type,\n        scope,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      );\n      break;\n  }\n}\nfunction trackReference(referencePath, binding) {\n  let root = referencePath;\n  let reference = binding;\n  let propPath = binding.name;\n  while (true) {\n    const { parent } = root;\n    if (!import_compiler21.types.isMemberExpression(parent)) break;\n    const prop = getMemberExpressionPropString(parent);\n    if (prop === void 0) break;\n    if (reference.propertyAliases.has(prop)) {\n      root = root.parentPath;\n      reference = reference.propertyAliases.get(prop);\n      propPath = reference.name;\n      continue;\n    }\n    if (root.parentPath.parentPath.isCallExpression() && !isEventOrChangeHandler(prop)) {\n      break;\n    }\n    root = root.parentPath;\n    reference = createBinding(\n      propPath += `_${prop.replace(/[^a-zA-Z0-9_$]/g, \"_\")}`,\n      reference.type,\n      reference.section,\n      reference,\n      void 0,\n      prop\n    );\n  }\n  const fnRoot = getFnRoot(root);\n  const exprRoot = getExprRoot(fnRoot || root);\n  const { section } = addReadToExpression(exprRoot, reference, root.node);\n  if (fnRoot) {\n    const readsByFn = getReadsByFunction();\n    const fnExtra = fnRoot.node.extra ??= {};\n    fnExtra.section = section;\n    readsByFn.set(\n      fnExtra,\n      push(readsByFn.get(fnExtra), {\n        binding: reference,\n        node: root.node\n      })\n    );\n  }\n}\nvar [getMergedReferences] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction mergeReferences(section, target, nodes) {\n  (target.extra ??= {}).section = section;\n  getMergedReferences().set(target, nodes);\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = bindingUtil.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeReferences() {\n  const bindings = getBindings();\n  const readsByExpression = getReadsByExpression();\n  const readsByFn = getReadsByFunction();\n  const mergedReferences = getMergedReferences();\n  if (mergedReferences.size) {\n    for (const [target, nodes] of mergedReferences) {\n      const targetExtra = target.extra;\n      let reads = readsByExpression.get(targetExtra);\n      let { isEffect } = targetExtra;\n      for (const node of nodes) {\n        const extra = node?.extra;\n        if (isReferencedExtra(extra)) {\n          isEffect ||= extra.isEffect;\n          const additionalReads = readsByExpression.get(extra);\n          if (additionalReads) {\n            reads = concat(reads, additionalReads);\n            readsByExpression.delete(extra);\n          }\n        }\n      }\n      readsByExpression.set(targetExtra, reads);\n      targetExtra.isEffect = isEffect;\n    }\n  }\n  const intersectionsBySection = /* @__PURE__ */ new Map();\n  for (const [expr, reads] of readsByExpression) {\n    if (isReferencedExtra(expr)) {\n      expr.referencedBindings = resolveReferencedBindings(\n        expr,\n        reads,\n        intersectionsBySection\n      );\n      forEach(expr.referencedBindings, (binding) => {\n        binding.downstreamExpressions.add(expr);\n      });\n    }\n  }\n  for (const [fn, reads] of readsByFn) {\n    fn.referencedBindingsInFunction = resolveReferencedBindings(\n      fn,\n      reads,\n      intersectionsBySection\n    );\n    forEach(fn.referencedBindingsInFunction, (binding) => {\n      binding.serialize = true;\n    });\n  }\n  for (const binding of bindings) {\n    if (binding.type !== 0 /* dom */ && !binding.upstreamAlias) {\n      pruneBinding(bindings, binding);\n    }\n  }\n  for (const binding of bindings) {\n    const { name: name2, section } = binding;\n    if (binding.type !== 0 /* dom */) {\n      if (find(section.bindings, ({ name: name3 }) => name3 === binding.name)) {\n        binding.name = currentProgramPath.scope.generateUid(name2);\n      }\n    }\n    section.bindings = bindingUtil.add(section.bindings, binding);\n    for (const {\n      referencedBindings,\n      isEffect,\n      section: section2\n    } of binding.downstreamExpressions) {\n      if (section2 !== binding.section) {\n        section2.closures = bindingUtil.add(section2.closures, binding);\n      }\n      if (isEffect) {\n        forEach(referencedBindings, (bindingReference) => {\n          bindingReference.serialize = true;\n        });\n      }\n    }\n  }\n  forEachSection((section) => {\n    const intersections = intersectionsBySection.get(section);\n    if (intersections) {\n      for (const intersection of intersections) {\n        const numReferences = intersection.length;\n        for (let i = 0; i < numReferences - 1; i++) {\n          for (let j = i + 1; j < numReferences; j++) {\n            const binding1 = intersection[i];\n            const binding2 = intersection[j];\n            const sources1 = getSourceBindings(binding1);\n            const sources2 = getSourceBindings(binding2);\n            if (!binding1.serialize && !isSuperset(sources1, sources2)) {\n              binding1.serialize = true;\n            }\n            if (!binding2.serialize && !isSuperset(sources2, sources1)) {\n              binding2.serialize = true;\n            }\n          }\n        }\n      }\n    }\n    forEach(section.closures, (binding) => {\n      if (!binding.serialize) {\n        let serialize = false;\n        const sourceSection = binding.section;\n        let currentSection = section;\n        while (currentSection !== sourceSection && !(serialize = !currentSection.upstreamExpression || isStatefulReferences(\n          currentSection.upstreamExpression.referencedBindings\n        ))) {\n          currentSection = currentSection.parent;\n        }\n        binding.serialize = serialize;\n      }\n    });\n  });\n  forEachSection(({ id, bindings: bindings2 }) => {\n    forEach(\n      filter(bindings2, ({ section }) => section.id === id),\n      (binding, i) => {\n        binding.id = i;\n      }\n    );\n  });\n  mergedReferences.clear();\n  readsByExpression.clear();\n  readsByFn.clear();\n}\nfunction isSuperset(set, subset) {\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getSourceBindings(binding) {\n  const derived = /* @__PURE__ */ new Set();\n  const sources = /* @__PURE__ */ new Set();\n  crawl(binding);\n  return sources;\n  function crawl(binding2) {\n    if (binding2.type === 4 /* derived */ || binding2.type === 3 /* param */) {\n      let alias;\n      let curBinding = binding2;\n      while (alias = curBinding.upstreamAlias) {\n        curBinding = alias;\n      }\n      if (curBinding.upstreamExpression) {\n        if (derived.has(curBinding)) return;\n        derived.add(curBinding);\n        forEach(curBinding.upstreamExpression.referencedBindings, crawl);\n      } else {\n        sources.add(curBinding);\n      }\n    } else {\n      sources.add(binding2);\n    }\n  }\n}\nvar bindingUtil = new Sorted(function compareBindings(a, b) {\n  return a.section.id - b.section.id || a.type !== b.type && (a.type === 0 /* dom */ || b.type === 0 /* dom */) ? a.type - b.type || a.id - b.id : a.id - b.id;\n});\nvar [getReadsByExpression] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nvar [getReadsByFunction] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction addReadToExpression(path5, binding, node) {\n  const exprExtra = path5.node.extra ??= {};\n  const readsByExpression = getReadsByExpression();\n  exprExtra.section = getOrCreateSection(path5);\n  readsByExpression.set(\n    exprExtra,\n    push(readsByExpression.get(exprExtra), { binding, node })\n  );\n  return exprExtra;\n}\nfunction dropReferences(node) {\n  if (Array.isArray(node)) {\n    for (const item of node) {\n      (item.extra ??= {}).pruned = true;\n    }\n  } else {\n    (node.extra ??= {}).pruned = true;\n  }\n}\nfunction getCanonicalBinding(binding) {\n  return binding && (binding.property ? binding : binding.upstreamAlias || binding);\n}\nfunction getAllTagReferenceNodes(tag, referenceNodes = []) {\n  if (tag.arguments) {\n    for (const arg of tag.arguments) {\n      referenceNodes.push(arg);\n    }\n  }\n  for (const attr2 of tag.attributes) {\n    referenceNodes.push(attr2.value);\n  }\n  for (const child of tag.body.attributeTags ? tag.body.body : tag.attributeTags) {\n    switch (child.type) {\n      case \"MarkoTag\":\n        getAllTagReferenceNodes(child, referenceNodes);\n        break;\n      case \"MarkoScriptlet\":\n        for (const statement of child.body) {\n          referenceNodes.push(statement);\n        }\n        break;\n    }\n  }\n  return referenceNodes;\n}\nfunction getScopeAccessorLiteral(binding) {\n  if (isOptimize()) {\n    return import_compiler21.types.numericLiteral(binding.id);\n  }\n  return import_compiler21.types.stringLiteral(\n    binding.name + (binding.type === 0 /* dom */ ? `/${binding.id}` : \"\")\n  );\n}\nfunction getReadReplacement(node) {\n  const { extra } = node;\n  if (!extra) return;\n  let { binding, read } = extra;\n  let replacement;\n  if (read) {\n    if (read.props === void 0) {\n      binding = read.binding;\n      read = void 0;\n    } else {\n      binding = void 0;\n    }\n  }\n  if (binding) {\n    if (node.type === \"Identifier\") {\n      if (binding.name !== node.name) {\n        node.name = binding.name;\n      }\n    } else {\n      replacement = import_compiler21.types.identifier(binding.name);\n    }\n  } else if (read) {\n    replacement = toMemberExpression(\n      import_compiler21.types.identifier(read.binding.name),\n      Array.isArray(read.props) ? read.props[0] : read.props\n    );\n    if (Array.isArray(read.props)) {\n      for (let i = 1; i < read.props.length; i++) {\n        replacement = toMemberExpression(replacement, read.props[i]);\n      }\n    }\n  }\n  return replacement && withPreviousLocation(replacement, node);\n}\nfunction pruneBinding(bindings, binding) {\n  let shouldPrune = !binding.downstreamExpressions.size;\n  for (const alias of binding.aliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.aliases.delete(alias);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  for (const [key, alias] of binding.propertyAliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.propertyAliases.delete(key);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  if (shouldPrune) {\n    bindings.delete(binding);\n  }\n  return shouldPrune;\n}\nfunction resolveReferencedBindings(expr, reads, intersectionsBySection) {\n  let referencedBindings;\n  if (Array.isArray(reads)) {\n    for (const read of reads) {\n      let { binding } = read;\n      if (read.node) {\n        const exprReference = (read.node.extra ??= {}).read ??= resolveExpressionReference(reads, binding, void 0);\n        ({ binding } = (read.node.extra ??= {}).read = exprReference);\n      }\n      referencedBindings = bindingUtil.add(referencedBindings, binding);\n    }\n  } else if (reads) {\n    if (reads.node) {\n      (reads.node.extra ??= {}).read = createRead(reads.binding, void 0);\n    }\n    referencedBindings = reads.binding;\n  }\n  if (Array.isArray(referencedBindings)) {\n    const intersections = intersectionsBySection.get(expr.section) || [];\n    const intersection = findSorted(\n      compareIntersections,\n      intersections,\n      referencedBindings\n    );\n    if (intersection) {\n      referencedBindings = intersection;\n    } else {\n      intersectionsBySection.set(\n        expr.section,\n        addSorted(compareIntersections, intersections, referencedBindings)\n      );\n    }\n  }\n  return referencedBindings;\n}\nfunction resolveExpressionReference(reads, readBinding, readProps) {\n  const { upstreamAlias } = readBinding;\n  if (upstreamAlias && Array.isArray(reads)) {\n    const prop = getCanonicalProperty(readBinding);\n    const aliasProps = prop === void 0 ? readProps : push(readProps, prop);\n    for (const { binding } of reads) {\n      if (binding !== readBinding) {\n        let alias = upstreamAlias;\n        while (alias) {\n          if (binding === alias) {\n            return resolveExpressionReference(reads, alias, aliasProps);\n          }\n          alias = alias.upstreamAlias;\n        }\n      }\n    }\n  }\n  return createRead(readBinding, readProps);\n}\nfunction getCanonicalProperty(binding) {\n  return binding.property ?? binding.upstreamAlias?.property;\n}\nfunction createRead(binding, props) {\n  return { binding, props };\n}\nfunction getMemberExpressionPropString(expr) {\n  switch (expr.property.type) {\n    case \"StringLiteral\":\n      return expr.property.value;\n    case \"NumericLiteral\":\n      return \"\" + expr.property.value;\n    case \"Identifier\":\n      if (expr.computed) return;\n      return expr.property.name;\n  }\n}\nfunction isEventOrChangeHandler(prop) {\n  return /^on[-A-Z][a-zA-Z0-9_$]|[a-zA-Z_$][a-zA-Z0-9_$]*Change$/.test(prop);\n}\nfunction isReferencedExtra(extra) {\n  return !!(extra && !extra.pruned && extra.section);\n}\nfunction isAssignedBindingExtra(extra) {\n  return isReferencedExtra(extra) && extra.assignment !== void 0;\n}\nfunction isRegisteredFnExtra(extra) {\n  return isReferencedExtra(extra) && extra.registerId !== void 0;\n}\n\n// src/translator/util/is-stateful.ts\nfunction isStatefulReferences(referencedBindings) {\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        if (isStatefulBinding(ref)) {\n          return true;\n        }\n      }\n    } else {\n      return isStatefulBinding(referencedBindings);\n    }\n  }\n  return false;\n}\nfunction isStatefulBinding(binding) {\n  switch (binding.type) {\n    case 1 /* let */:\n    case 2 /* input */:\n      return true;\n    default:\n      return !binding.upstreamExpression || isStatefulReferences(binding.upstreamExpression.referencedBindings);\n  }\n}\n\n// src/translator/core/await.ts\nvar await_default = {\n  analyze(tag) {\n    (0, import_babel_utils12.assertNoVar)(tag);\n    (0, import_babel_utils12.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    (0, import_babel_utils12.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler22.types.isMarkoAttribute(valueAttr) || valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports the `value` attribute.\"\n      );\n    }\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires body content.\");\n    }\n    if (node.body.params.length && (node.body.params.length > 1 || import_compiler22.types.isSpreadElement(node.body.params[0]))) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports a single parameter.\"\n      );\n    }\n    getOrCreateSection(tag);\n    trackParamsReferences(\n      tag.get(\"body\"),\n      4 /* derived */,\n      void 0,\n      evaluate(valueAttr.value)\n    );\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const { node } = tag;\n        const [valueAttr] = node.attributes;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isStatefulReferences(valueAttr.extra?.referencedBindings) || checkStatefulClosures(bodySection, true)) {\n          setForceResumeScope(bodySection);\n        }\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.replaceWith(\n          import_compiler22.types.expressionStatement(\n            callRuntime(\n              \"fork\",\n              valueAttr.value,\n              import_compiler22.types.arrowFunctionExpression(\n                node.body.params,\n                toFirstExpressionOrBlock(node.body.body)\n              )\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to consume asynchronous an data.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#await\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/await.d.marko\"\n};\n\n// src/translator/core/client.ts\nvar import_compiler23 = require(\"@marko/compiler\");\nvar import_babel_utils13 = require(\"@marko/compiler/babel-utils\");\nvar client_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^client\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils13.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler23.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler23.types.markoScriptlet(body, true, \"client\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"client <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the client.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#client-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/const.ts\nvar import_compiler25 = require(\"@marko/compiler\");\nvar import_babel_utils14 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/translate-var.ts\nvar import_compiler24 = require(\"@marko/compiler\");\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.insertBefore(\n    import_compiler24.types.variableDeclaration(kind, [import_compiler24.types.variableDeclarator(tagVar, initialValue)])\n  );\n}\n\n// src/translator/core/const.ts\nvar const_default = {\n  analyze(tag) {\n    (0, import_babel_utils14.assertNoArgs)(tag);\n    (0, import_babel_utils14.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a tag variable.\");\n    }\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler25.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `const` tag only supports the `value` attribute.\"\n      );\n    }\n    const upstreamAlias = import_compiler25.types.isIdentifier(valueAttr.value) ? tag.scope.getBinding(valueAttr.value.name)?.identifier.extra?.binding : void 0;\n    trackVarReferences(\n      tag,\n      4 /* derived */,\n      upstreamAlias,\n      evaluate(valueAttr.value)\n      // TODO could perform a more extensive \"nullable\" check.\n    );\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      const { value } = valueAttr;\n      if (isOutputDOM()) {\n        const section = getSection(tag);\n        const varBinding = node.var.extra?.binding;\n        if (varBinding && !varBinding.upstreamAlias) {\n          const derivation = initValue(varBinding);\n          addValue(section, value.extra?.referencedBindings, derivation, value);\n        }\n      } else {\n        translateVar(tag, value);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/const.d.marko\"\n};\n\n// src/translator/core/debug.ts\nvar import_compiler26 = require(\"@marko/compiler\");\nvar import_babel_utils15 = require(\"@marko/compiler/babel-utils\");\nvar debug_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils15.assertNoVar)(tag);\n    (0, import_babel_utils15.assertNoArgs)(tag);\n    (0, import_babel_utils15.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (tag.node.attributes.length > 1 || tag.node.attributes.length === 1 && (!import_compiler26.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\")) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `debug` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const referencedBindings = valueAttr?.value.extra?.referencedBindings;\n      const statement = withPreviousLocation(import_compiler26.types.debuggerStatement(), tag.node);\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Debug on value change.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#debug\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/debug.d.marko\"\n};\n\n// src/translator/core/define.ts\nvar import_compiler31 = require(\"@marko/compiler\");\nvar import_babel_utils20 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/nested-attribute-tags.ts\nvar import_compiler27 = require(\"@marko/compiler\");\nvar import_babel_utils16 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-parent-tag.ts\nfunction getParentTag(tag) {\n  const parent = tag.parent.type === \"MarkoTagBody\" ? tag.parentPath.parentPath : tag.parentPath;\n  if (parent.type === \"MarkoTag\") {\n    return parent;\n  }\n}\n\n// src/translator/util/nested-attribute-tags.ts\nvar attrTagToIdentifierLookup = /* @__PURE__ */ new WeakMap();\nfunction getAttrTagIdentifier(meta) {\n  let name2 = attrTagToIdentifierLookup.get(meta);\n  if (!name2) {\n    name2 = currentProgramPath.scope.generateUid(meta.name);\n    attrTagToIdentifierLookup.set(meta, name2);\n  }\n  return import_compiler27.types.identifier(name2);\n}\nfunction analyzeAttributeTags(tag) {\n  if (tag.node.extra?.attributeTags) return tag.node.extra.attributeTags;\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  if (!attrTags2.length) return;\n  const tagExtra = tag.node.extra ??= {};\n  const lookup = tagExtra.attributeTags = {};\n  const attrTagNodesByName = {};\n  const sampleAttrTagsForControlFlow = /* @__PURE__ */ new Map();\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const name2 = getTagName(child);\n        lookup[name2] ||= createAttrTagMeta(name2, [name2]);\n        analyzeAttributeTags(child);\n      } else {\n        const isRepeated = (0, import_babel_utils16.isLoopTag)(child);\n        let curGroup;\n        for (const name2 of crawlAttrTags(child, attrTagNodesByName)) {\n          const oldMeta = lookup[name2];\n          if (oldMeta) {\n            if (!curGroup) {\n              curGroup = oldMeta.group;\n            } else if (curGroup !== oldMeta.group) {\n              for (const name3 of oldMeta.group) {\n                lookup[name3].group = curGroup;\n                curGroup.push(name3);\n              }\n            }\n          }\n          let attrTagMeta = lookup[name2];\n          if (!attrTagMeta) {\n            attrTagMeta = lookup[name2] = createAttrTagMeta(name2, []);\n            curGroup = attrTagMeta.group;\n            curGroup.push(name2);\n          }\n          attrTagMeta.dynamic = true;\n          if (isRepeated) {\n            attrTagMeta.repeated = true;\n          }\n          sampleAttrTagsForControlFlow.set(child, name2);\n        }\n      }\n    }\n  }\n  for (const [controlFlowTag, sampleAttrName] of sampleAttrTagsForControlFlow) {\n    (controlFlowTag.node.extra ??= {}).attributeTagGroup = lookup[sampleAttrName].group;\n  }\n  for (const name2 in attrTagNodesByName) {\n    const attrTagMeta = lookup[name2];\n    if (!attrTagMeta.repeated) {\n      const attrTagNodes = attrTagNodesByName[name2];\n      if (attrTagNodes.length > 1) {\n        attrTagMeta.repeated = !attrTagMeta.dynamic || hasRepeatedDynamicAttrTags(attrTagNodes);\n      }\n    }\n  }\n  return lookup;\n}\nfunction createAttrTagMeta(name2, group) {\n  return {\n    name: name2.slice(1),\n    dynamic: false,\n    repeated: false,\n    group\n  };\n}\nfunction crawlAttrTags(tag, attrTagNodesByName, attrTagNames = /* @__PURE__ */ new Set()) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const tagName = getTagName(child);\n        attrTagNames.add(tagName);\n        (attrTagNodesByName[tagName] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        crawlAttrTags(child, attrTagNodesByName, attrTagNames);\n      }\n    }\n  }\n  return attrTagNames;\n}\nfunction hasRepeatedDynamicAttrTags(attrTags2) {\n  let conditionRoot;\n  const seenBranches = /* @__PURE__ */ new Set();\n  for (const attrTag2 of attrTags2) {\n    const parentTag = getParentTag(attrTag2);\n    if (seenBranches.has(parentTag) || !isConditionTag(parentTag)) {\n      return true;\n    }\n    const curConditionRoot = getConditionRoot(parentTag);\n    if (curConditionRoot && curConditionRoot !== (conditionRoot ||= curConditionRoot)) {\n      return true;\n    }\n    seenBranches.add(parentTag);\n  }\n  return false;\n}\nfunction getConditionRoot(tag) {\n  if (getTagName(tag) === \"if\") return tag;\n  let prev = tag.getPrevSibling();\n  while (prev.node) {\n    if (prev.isMarkoTag() && getTagName(prev) === \"if\") {\n      return prev;\n    }\n    prev = prev.getPrevSibling();\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar import_compiler30 = require(\"@marko/compiler\");\nvar import_babel_utils19 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/for.ts\nvar import_compiler29 = require(\"@marko/compiler\");\nvar import_babel_utils18 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/native-tag.ts\nvar import_compiler28 = require(\"@marko/compiler\");\nvar import_babel_utils17 = require(\"@marko/compiler/babel-utils\");\nvar kNativeTagBinding = Symbol(\"native tag binding\");\nvar kSerializeMarker = Symbol(\"serialize marker\");\nvar kGetterId = Symbol(\"node getter id\");\nvar htmlSelectArgs = /* @__PURE__ */ new WeakMap();\nfunction assertExclusiveControllableGroups(tag, attrs2) {\n  const exclusiveGroups = [\n    attrs2.open || attrs2.openChange,\n    attrs2.checked || attrs2.checkedChange,\n    attrs2.checkedValue || attrs2.checkedValueChange,\n    attrs2.valueChange\n  ].filter(Boolean);\n  if (exclusiveGroups.length > 1) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The attributes ${exclusiveGroups.map((attr2) => `\"${attr2.name}\"`).join(\", \")} are mutually exclusive.`\n    );\n  }\n}\nfunction getRelatedControllable(tagName, attrs2) {\n  switch (tagName) {\n    case \"input\":\n      if (attrs2.checked || attrs2.checkedChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_checked\",\n          attrs: [attrs2.checked, attrs2.checkedChange]\n        };\n      }\n      if (attrs2.checkedValue || attrs2.checkedValueChange) {\n        return {\n          special: true,\n          helper: \"controllable_input_checkedValue\",\n          attrs: [attrs2.checkedValue, attrs2.checkedValueChange, attrs2.value]\n        };\n      }\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"select\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_select_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"textarea\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_textarea_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"details\":\n    case \"dialog\":\n      if (attrs2.open || attrs2.openChange) {\n        return {\n          special: false,\n          helper: \"controllable_detailsOrDialog_open\",\n          attrs: [attrs2.open, attrs2.openChange]\n        };\n      }\n      break;\n  }\n}\nvar native_tag_default = {\n  transform: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      if (tagName === \"textarea\" && tag.node.body.body.length) {\n        const parts = [];\n        for (const child of tag.node.body.body) {\n          if (child.type === \"MarkoText\" || child.type === \"MarkoPlaceholder\" && child.escape) {\n            parts.push(child.value);\n          } else {\n            throw tag.hub.file.hub.buildError(\n              child,\n              \"Unexpected content in textarea, only text and placeholders are supported.\",\n              SyntaxError\n            );\n          }\n        }\n        tag.node.attributes.push(\n          import_compiler28.types.markoAttribute(\n            \"value\",\n            normalizeStringExpression(parts) || buildUndefined()\n          )\n        );\n        tag.node.body.body = [];\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils17.assertNoArgs)(tag);\n      (0, import_babel_utils17.assertNoParams)(tag);\n      (0, import_babel_utils17.assertNoAttributeTags)(tag);\n      const { node } = tag;\n      if (node.var && !import_compiler28.types.isIdentifier(node.var)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"Tag variables on native elements cannot be destructured.\"\n        );\n      }\n      const tagName = getTagName(tag);\n      const section = getOrCreateSection(tag);\n      let hasEventHandlers = false;\n      let hasDynamicAttributes = false;\n      const seen = {};\n      const { attributes } = tag.node;\n      let relatedControllable;\n      let spreadReferenceNodes;\n      for (let i = attributes.length; i--; ) {\n        const attr2 = attributes[i];\n        if (import_compiler28.types.isMarkoAttribute(attr2)) {\n          if (seen[attr2.name]) {\n            dropReferences(attr2.value);\n            continue;\n          }\n          seen[attr2.name] = attr2;\n          if (isEventHandler(attr2.name) || isChangeHandler(attr2.name)) {\n            (attr2.value.extra ??= {}).isEffect = true;\n            hasEventHandlers = true;\n          } else if (!evaluate(attr2.value).confident) {\n            hasDynamicAttributes = true;\n          }\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          hasEventHandlers = true;\n          hasDynamicAttributes = true;\n          (attr2.value.extra ??= {}).isEffect = true;\n        }\n        if (spreadReferenceNodes) {\n          spreadReferenceNodes.push(attr2.value);\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          spreadReferenceNodes = [attr2.value];\n          relatedControllable = getRelatedControllable(tagName, seen);\n        }\n      }\n      assertExclusiveControllableGroups(tag, seen);\n      if (spreadReferenceNodes) {\n        if (relatedControllable && !relatedControllable.attrs.every(Boolean)) {\n          for (const attr2 of relatedControllable.attrs) {\n            if (attr2) {\n              spreadReferenceNodes.push(attr2.value);\n            }\n          }\n          relatedControllable = void 0;\n        }\n        mergeReferences(section, tag.node, spreadReferenceNodes);\n      } else {\n        relatedControllable = getRelatedControllable(tagName, seen);\n      }\n      if (relatedControllable) {\n        mergeReferences(\n          section,\n          relatedControllable.attrs.find(Boolean).value,\n          relatedControllable.attrs.map((it) => it?.value)\n        );\n      }\n      if (node.var || hasEventHandlers || hasDynamicAttributes) {\n        currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n        const tagName2 = node.name.type === \"StringLiteral\" ? node.name.value : import_compiler28.types.toIdentifier(tag.get(\"name\"));\n        const tagExtra = node.extra ??= {};\n        const bindingName = \"#\" + tagName2;\n        tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n        tagExtra[kNativeTagBinding] = createBinding(\n          bindingName,\n          0 /* dom */,\n          section\n        );\n        if (node.var) {\n          for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n            setReferencesScope(ref);\n            if (!isInvokedFunction(ref)) {\n              tagExtra[kGetterId] = getRegisterUID(section, bindingName);\n              break;\n            }\n          }\n        }\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const name2 = tag.get(\"name\");\n      const tagDef = (0, import_babel_utils17.getTagDef)(tag);\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        const getterId = extra[kGetterId];\n        if (isHTML) {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          for (const reference of references) {\n            let currentSection = getSection(reference);\n            while (currentSection !== section && currentSection.parent) {\n              getSerializedScopeProperties(currentSection).set(\n                import_compiler28.types.stringLiteral(\"_\"),\n                callRuntime(\n                  \"ensureScopeWithId\",\n                  getScopeIdIdentifier(\n                    currentSection = currentSection.parent\n                  )\n                )\n              );\n            }\n          }\n          translateVar(\n            tag,\n            callRuntime(\n              \"nodeRef\",\n              getterId && getScopeIdIdentifier(section),\n              getterId && import_compiler28.types.stringLiteral(getterId)\n            )\n          );\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let getterFnIdentifier;\n          if (getterId) {\n            getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n              `get_${varName}`\n            );\n            currentProgramPath.pushContainer(\n              \"body\",\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(\n                  getterFnIdentifier,\n                  callRuntime(\n                    \"nodeRef\",\n                    import_compiler28.types.stringLiteral(getterId),\n                    getScopeAccessorLiteral(nodeRef2)\n                  )\n                )\n              ])\n            );\n          }\n          for (const reference of references) {\n            const referenceSection = getSection(reference);\n            if (isInvokedFunction(reference)) {\n              reference.parentPath.replaceWith(\n                import_compiler28.types.expressionStatement(\n                  createScopeReadExpression(referenceSection, nodeRef2)\n                )\n              );\n            } else if (getterFnIdentifier) {\n              reference.replaceWith(\n                import_compiler28.types.callExpression(getterFnIdentifier, [\n                  getScopeExpression(referenceSection, getSection(tag))\n                ])\n              );\n            }\n          }\n        }\n      }\n      let visitAccessor;\n      if (nodeRef2) {\n        visitAccessor = getScopeAccessorLiteral(nodeRef2);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name2.node}`;\n      const usedAttrs = getUsedAttrs(tagName, tag.node);\n      const { staticAttrs, staticControllable, skipExpression } = usedAttrs;\n      let { spreadExpression } = usedAttrs;\n      if (staticControllable) {\n        const { helper, attrs: attrs2 } = staticControllable;\n        const firstAttr = attrs2.find(Boolean);\n        const referencedBindings = firstAttr.value.extra?.referencedBindings;\n        const values = attrs2.map((attr2) => attr2?.value);\n        if (isHTML) {\n          if (tagName !== \"select\" && tagName !== \"textarea\") {\n            write2`${callRuntime(helper, getScopeIdIdentifier(section), visitAccessor, ...values)}`;\n          }\n          addHTMLEffectCall(section, void 0);\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(helper, scopeIdentifier, visitAccessor, ...values)\n            )\n          );\n          addStatement(\n            \"effect\",\n            section,\n            void 0,\n            import_compiler28.types.expressionStatement(\n              callRuntime(`${helper}_effect`, scopeIdentifier, visitAccessor)\n            )\n          );\n        }\n      }\n      let writeAtStartOfBody;\n      if (isHTML) {\n        if (tagName === \"select\") {\n          if (staticControllable) {\n            htmlSelectArgs.set(tag.node, {\n              value: staticControllable.attrs[0]?.value || buildUndefined(),\n              valueChange: staticControllable.attrs[1]?.value || buildUndefined()\n            });\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"select_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            htmlSelectArgs.set(tag.node, {\n              value: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"value\")\n              ),\n              valueChange: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"valueChange\")\n              )\n            });\n            spreadExpression = spreadIdentifier;\n          }\n        } else if (tagName === \"textarea\") {\n          let value;\n          let valueChange;\n          if (staticControllable) {\n            value = staticControllable.attrs[0]?.value;\n            valueChange = staticControllable.attrs[1]?.value;\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"textarea_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            value = import_compiler28.types.memberExpression(spreadIdentifier, import_compiler28.types.identifier(\"value\"));\n            valueChange = import_compiler28.types.memberExpression(\n              spreadIdentifier,\n              import_compiler28.types.identifier(\"valueChange\")\n            );\n            spreadExpression = spreadIdentifier;\n          }\n          if (value || valueChange) {\n            writeAtStartOfBody = callRuntime(\n              \"controllable_textarea_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              value,\n              valueChange\n            );\n          }\n        }\n      }\n      for (const attr2 of staticAttrs) {\n        const { name: name3, value } = attr2;\n        const { confident, computed } = value.extra || {};\n        const valueReferences = value.extra?.referencedBindings;\n        if (isHTML && tagName === \"option\" && name3 === \"value\") {\n          write2`${callRuntime(\"optionValueAttr\", value)}`;\n          continue;\n        }\n        switch (name3) {\n          case \"class\":\n          case \"style\": {\n            const helper = `${name3}Attr`;\n            if (confident) {\n              write2`${getHTMLRuntime()[helper](computed)}`;\n            } else if (isHTML) {\n              write2`${callRuntime(helper, value)}`;\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    helper,\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n          }\n          default:\n            if (confident) {\n              write2`${getHTMLRuntime().attr(name3, computed)}`;\n            } else if (isHTML) {\n              if (isEventHandler(name3)) {\n                addHTMLEffectCall(section, valueReferences);\n              } else {\n                write2`${callRuntime(\"attr\", import_compiler28.types.stringLiteral(name3), value)}`;\n              }\n            } else if (isEventHandler(name3)) {\n              addStatement(\n                \"effect\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"on\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(getEventHandlerName(name3)),\n                    value\n                  )\n                )\n              );\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"attr\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(name3),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n        }\n      }\n      if (spreadExpression) {\n        if (isHTML) {\n          addHTMLEffectCall(section, extra.referencedBindings);\n          if (skipExpression) {\n            write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          } else {\n            write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          }\n        } else {\n          if (skipExpression) {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"partialAttrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression,\n                  skipExpression\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"attrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression\n                )\n              )\n            );\n          }\n          addStatement(\n            \"effect\",\n            section,\n            extra.referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n            ),\n            false\n          );\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(import_compiler28.types.ifStatement(name2.node, consumeHTML(tag)))[0].skip();\n      }\n      if (writeAtStartOfBody) {\n        write2`${writeAtStartOfBody}`;\n      }\n      enter2(tag);\n    },\n    exit(tag) {\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const openTagOnly = (0, import_babel_utils17.getTagDef)(tag)?.parseOptions?.openTagOnly;\n      const selectArgs = isHTML && htmlSelectArgs.get(tag.node);\n      const tagName = getTagName(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      if (selectArgs) {\n        writeTo(tag)`</${tag.node.name}>`;\n        flushInto(tag);\n        tag.insertBefore(\n          import_compiler28.types.expressionStatement(\n            callRuntime(\n              \"controllable_select_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              selectArgs.value,\n              selectArgs.valueChange,\n              import_compiler28.types.arrowFunctionExpression(\n                [],\n                import_compiler28.types.blockStatement(tag.node.body.body)\n              )\n            )\n          )\n        );\n      } else {\n        tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      }\n      if (!openTagOnly && !selectArgs) {\n        writeTo(\n          tag,\n          isHTML && (tagName === \"html\" || tagName === \"body\")\n        )`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(\n          import_compiler28.types.ifStatement(tag.node.name, consumeHTML(tag))\n        )[0].skip();\n      }\n      if (nodeRef2 && (extra[kSerializeMarker] || isStatefulReferences(extra.referencedBindings) || tag.node.attributes.some(\n        (attr2) => isStatefulReferences(attr2.value.extra?.referencedBindings)\n      ))) {\n        markNode(tag, nodeRef2);\n      }\n      exit2(tag);\n      tag.remove();\n    }\n  }\n};\nfunction getUsedAttrs(tagName, tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  let staticControllable;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n        staticControllable = getRelatedControllable(tagName, seen);\n        if (staticControllable && !staticControllable.attrs.every(Boolean)) {\n          for (const attr3 of staticControllable.attrs) {\n            if (attr3) {\n              spreadProps.push(toObjectProperty(attr3.name, attr3.value));\n              maybeStaticAttrs.delete(attr3);\n            }\n          }\n          staticControllable = void 0;\n        }\n      }\n      spreadProps.push(import_compiler28.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  if (!spreadProps) {\n    staticControllable = getRelatedControllable(tagName, seen);\n    if (staticControllable?.special === false && !staticControllable.attrs[1]) {\n      staticControllable = void 0;\n    }\n  }\n  if (staticControllable) {\n    for (const attr2 of staticControllable.attrs) {\n      if (attr2) {\n        maybeStaticAttrs.delete(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    if (staticControllable) {\n      for (const attr2 of staticControllable.attrs) {\n        if (attr2) {\n          (skipProps ||= []).push(\n            toObjectProperty(attr2.name, import_compiler28.types.numericLiteral(1))\n          );\n        }\n      }\n    }\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler28.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler28.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    staticControllable,\n    spreadExpression,\n    skipExpression\n  };\n}\nfunction isChangeHandler(propName) {\n  return /^(?:value|checked(?:Value)?|open)Change/.test(propName);\n}\nfunction buildUndefined() {\n  return import_compiler28.types.unaryExpression(\"void\", import_compiler28.types.numericLiteral(0));\n}\nfunction isInvokedFunction(expr) {\n  const { parent, node } = expr;\n  return parent.type === \"CallExpression\" && parent.callee === node;\n}\n\n// src/translator/core/for.ts\nvar kForMarkerBinding = Symbol(\"for marker binding\");\nvar kOnlyChildInParent = Symbol(\"only child in parent\");\nvar for_default = {\n  analyze(tag) {\n    const tagExtra = tag.node.extra ??= {};\n    const isAttrTag = tag.node.body.attributeTags;\n    let allowAttrs;\n    (0, import_babel_utils18.assertNoVar)(tag);\n    (0, import_babel_utils18.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    switch (getForType(tag.node)) {\n      case \"of\":\n        allowAttrs = [\"of\"];\n        break;\n      case \"in\":\n        allowAttrs = [\"in\"];\n        break;\n      case \"to\":\n        allowAttrs = [\"to\", \"from\", \"step\"];\n        break;\n      default:\n        throw tag.buildCodeFrameError(\n          \"Invalid `for` tag, missing an `of=`, `in=`, `to=` attribute.\"\n        );\n    }\n    if (!isAttrTag) {\n      allowAttrs.push(\"by\");\n    }\n    (0, import_babel_utils18.assertAllowedAttributes)(tag, allowAttrs);\n    if (isAttrTag) return;\n    const tagBody = tag.get(\"body\");\n    const bodySection = startSection(tagBody);\n    if (!bodySection) {\n      dropReferences(getAllTagReferenceNodes(tag.node));\n      return;\n    }\n    bodySection.isBranch = true;\n    const section = getOrCreateSection(tag);\n    if (isOnlyChildInParent(tag)) {\n      const parentTag = getParentTag(tag).node;\n      const parentTagName = parentTag.name?.value;\n      (parentTag.extra ??= {})[kNativeTagBinding] ??= createBinding(\n        \"#\" + parentTagName,\n        0 /* dom */,\n        section\n      );\n    } else {\n      tagExtra[kForMarkerBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section\n      );\n    }\n    trackParamsReferences(tagBody, 3 /* param */, void 0, tagExtra);\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    bodySection.upstreamExpression = tagExtra;\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const isStateful = isStatefulReferences(tagExtra.referencedBindings);\n        const parentTag = getParentTag(tag);\n        const nodeRef2 = isOnlyChildInParent(tag) ? parentTag.node.extra[kNativeTagBinding] : tag.node.extra[kForMarkerBinding];\n        const forAttrs = getKnownAttrValues(node);\n        const forType = getForType(node);\n        const params = node.body.params;\n        const statements = [];\n        const bodyStatements = node.body.body;\n        const hasStatefulClosures = checkStatefulClosures(bodySection, true);\n        const singleNodeOptimization = bodySection.content === null || bodySection.content.singleChild;\n        let keyExpression;\n        if (isStateful && isOnlyChildInParent(tag)) {\n          parentTag.node.extra[kSerializeMarker] = true;\n        }\n        if (isStateful || hasStatefulClosures) {\n          const defaultParamNames = {\n            of: [\"list\", \"index\"],\n            in: [\"key\", \"value\"],\n            to: [\"value\"]\n          }[forType];\n          const defaultByParamIndex = forType === \"of\" ? 1 : 0;\n          const requiredParamsIndex = forAttrs.by ? defaultParamNames.length - 1 : defaultByParamIndex;\n          setForceResumeScope(bodySection);\n          for (let i = 0; i <= requiredParamsIndex; i++) {\n            const existingParam = params[i];\n            if (!existingParam || !import_compiler29.types.isIdentifier(existingParam)) {\n              const id = params[i] = currentProgramPath.scope.generateUidIdentifier(\n                defaultParamNames[i]\n              );\n              if (existingParam) {\n                bodyStatements.unshift(\n                  import_compiler29.types.variableDeclaration(\"let\", [\n                    import_compiler29.types.variableDeclarator(existingParam, id)\n                  ])\n                );\n              }\n            }\n          }\n          if (forAttrs.by) {\n            if (import_compiler29.types.isStringLiteral(forAttrs.by)) {\n              keyExpression = toMemberExpression(\n                params[0],\n                forAttrs.by.value\n              );\n            } else if (import_compiler29.types.isFunction(forAttrs.by)) {\n              const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n              statements.push(\n                import_compiler29.types.variableDeclaration(\"const\", [\n                  import_compiler29.types.variableDeclarator(byIdentifier, forAttrs.by)\n                ])\n              );\n              keyExpression = import_compiler29.types.callExpression(\n                byIdentifier,\n                params\n              );\n            } else {\n              keyExpression = callRuntime(\n                forTypeToHTMLByRuntime(forType),\n                forAttrs.by,\n                ...params\n              );\n            }\n          } else {\n            keyExpression = params[defaultByParamIndex];\n          }\n          const forScopesIdentifier = getScopeIdentifier(bodySection);\n          statements.push(\n            import_compiler29.types.variableDeclaration(\"const\", [\n              import_compiler29.types.variableDeclarator(\n                forScopesIdentifier,\n                import_compiler29.types.newExpression(import_compiler29.types.identifier(\"Map\"), [])\n              )\n            ])\n          );\n          if (keyExpression && (isStateful || hasStatefulClosures)) {\n            bodyStatements.push(\n              import_compiler29.types.expressionStatement(\n                import_compiler29.types.callExpression(\n                  import_compiler29.types.memberExpression(\n                    getScopeIdentifier(bodySection),\n                    import_compiler29.types.identifier(\"set\")\n                  ),\n                  [\n                    keyExpression,\n                    callRuntime(\n                      \"ensureScopeWithId\",\n                      getScopeIdIdentifier(bodySection)\n                    )\n                  ]\n                )\n              )\n            );\n          }\n          getSerializedScopeProperties(tagSection).set(\n            import_compiler29.types.stringLiteral(\n              getScopeAccessorLiteral(nodeRef2).value + \"(\" /* LoopScopeMap */\n            ),\n            import_compiler29.types.conditionalExpression(\n              import_compiler29.types.memberExpression(forScopesIdentifier, import_compiler29.types.identifier(\"size\")),\n              forScopesIdentifier,\n              import_compiler29.types.identifier(\"undefined\")\n            )\n          );\n        }\n        flushInto(tag);\n        setClosureSignalBuilder(tag, () => {\n        });\n        writeHTMLResumeStatements(tagBody);\n        const forTagArgs = getBaseArgsInForTag(forType, forAttrs);\n        const forTagHTMLRuntime = isStateful ? forTypeToHTMLResumeRuntime(forType, singleNodeOptimization) : forTypeToRuntime(forType);\n        forTagArgs.push(\n          import_compiler29.types.arrowFunctionExpression(params, import_compiler29.types.blockStatement(bodyStatements))\n        );\n        if (isStateful) {\n          forTagArgs.push(\n            getScopeIdIdentifier(tagSection),\n            getScopeAccessorLiteral(nodeRef2)\n          );\n        }\n        statements.push(\n          import_compiler29.types.expressionStatement(callRuntime(forTagHTMLRuntime, ...forTagArgs))\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const { referencedBindings } = tagExtra;\n        const nodeRef2 = isOnlyChildInParent(tag) ? getParentTag(tag).node.extra[kNativeTagBinding] : tag.node.extra[kForMarkerBinding];\n        setClosureSignalBuilder(tag, (_closureSignal, render, intersection) => {\n          return callRuntime(\n            \"loopClosure\",\n            getScopeAccessorLiteral(nodeRef2),\n            render,\n            intersection\n          );\n        });\n        const forType = getForType(node);\n        const signal = getSignal(tagSection, nodeRef2, \"for\");\n        signal.build = () => {\n          return callRuntime(\n            forTypeToDOMRuntime(forType),\n            getScopeAccessorLiteral(nodeRef2),\n            import_compiler29.types.identifier(bodySection.name)\n          );\n        };\n        const params = node.body.params;\n        signal.hasDownstreamIntersections = () => {\n          if (bodySection.closures) {\n            return true;\n          }\n          for (const param of params) {\n            const binding = param.extra?.binding;\n            if (binding) {\n              for (const {\n                referencedBindings: referencedBindings2\n              } of binding.downstreamExpressions) {\n                if (getSignal(\n                  bodySection,\n                  referencedBindings2\n                ).hasDownstreamIntersections()) {\n                  return true;\n                }\n              }\n            }\n          }\n          return false;\n        };\n        const forAttrs = getKnownAttrValues(node);\n        const loopArgs = getBaseArgsInForTag(forType, forAttrs);\n        if (forAttrs.by) {\n          loopArgs.push(forAttrs.by);\n        }\n        addValue(\n          tagSection,\n          referencedBindings,\n          signal,\n          import_compiler29.types.arrayExpression(loopArgs)\n        );\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| to=${2:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nfunction buildForRuntimeCall(type, attrs2, params, statements) {\n  return import_compiler29.types.expressionStatement(\n    callRuntime(\n      forTypeToRuntime(type),\n      ...getBaseArgsInForTag(type, attrs2),\n      import_compiler29.types.arrowFunctionExpression(params, import_compiler29.types.blockStatement(statements))\n    )\n  );\n}\nfunction getForType(tag) {\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      switch (attr2.name) {\n        case \"of\":\n        case \"in\":\n        case \"to\":\n          return attr2.name;\n      }\n    }\n  }\n}\nfunction forTypeToRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOf\";\n    case \"in\":\n      return \"forIn\";\n    case \"to\":\n      return \"forTo\";\n  }\n}\nfunction forTypeToHTMLResumeRuntime(type, singleNodeOptimization) {\n  if (singleNodeOptimization) {\n    switch (type) {\n      case \"of\":\n        return \"resumeSingleNodeForOf\";\n      case \"in\":\n        return \"resumeSingleNodeForIn\";\n      case \"to\":\n        return \"resumeSingleNodeForTo\";\n    }\n  } else {\n    switch (type) {\n      case \"of\":\n        return \"resumeForOf\";\n      case \"in\":\n        return \"resumeForIn\";\n      case \"to\":\n        return \"resumeForTo\";\n    }\n  }\n}\nfunction forTypeToDOMRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"loopOf\";\n    case \"in\":\n      return \"loopIn\";\n    case \"to\":\n      return \"loopTo\";\n  }\n}\nfunction forTypeToHTMLByRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOfBy\";\n    case \"in\":\n      return \"forInBy\";\n    case \"to\":\n      return \"forToBy\";\n  }\n}\nfunction getBaseArgsInForTag(type, attrs2) {\n  switch (type) {\n    case \"in\":\n      return [attrs2.in];\n    case \"of\":\n      return [attrs2.of];\n    case \"to\":\n      return [\n        attrs2.to,\n        attrs2.from || import_compiler29.types.numericLiteral(0),\n        attrs2.step || import_compiler29.types.numericLiteral(1)\n      ];\n  }\n}\nfunction isOnlyChildInParent(tag) {\n  const extra = tag.node.extra;\n  if (extra[kOnlyChildInParent] !== void 0) {\n    return extra[kOnlyChildInParent];\n  }\n  const parentTag = getParentTag(tag);\n  if (parentTag && (0, import_babel_utils18.getTagDef)(parentTag)?.html) {\n    return extra[kOnlyChildInParent] = tag.parent.body.length === 1;\n  }\n  return extra[kOnlyChildInParent] = false;\n}\n\n// src/translator/util/translate-attrs.ts\nvar contentProps = /* @__PURE__ */ new WeakSet();\nfunction translateAttrs(tag, templateExports, statements = [], contentKey = \"content\") {\n  const seen = /* @__PURE__ */ new Set();\n  const properties = [];\n  const attrTagLookup = tag.node.extra?.attributeTags;\n  if (attrTagLookup) {\n    for (const name2 in attrTagLookup) {\n      const attrTagMeta = attrTagLookup[name2];\n      if (usesExport(templateExports, attrTagMeta.name)) {\n        seen.add(attrTagMeta.name);\n        if (attrTagMeta.dynamic) {\n          statements.push(\n            import_compiler30.types.variableDeclaration(\"let\", [\n              import_compiler30.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta))\n            ])\n          );\n          properties.push(\n            toObjectProperty(\n              attrTagMeta.name,\n              getAttrTagIdentifier(attrTagMeta)\n            )\n          );\n        }\n      }\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils19.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          if (attrTagMeta.dynamic) {\n            i = addDynamicAttrTagStatements(\n              attrTags2,\n              i,\n              attrTagLookup,\n              statements,\n              templateExports,\n              contentKey\n            );\n          } else {\n            const translatedAttrTag = translateAttrs(\n              child,\n              templateExports?.[attrTagMeta.name]?.props,\n              statements,\n              contentKey\n            );\n            if (attrTagMeta.repeated) {\n              const prevProp = findObjectProperty(attrTagMeta.name, properties);\n              if (prevProp) {\n                prevProp.value = callRuntime(\n                  \"attrTags\",\n                  prevProp.value,\n                  propsToExpression(translatedAttrTag.properties)\n                );\n              } else {\n                properties.push(\n                  toObjectProperty(\n                    attrTagMeta.name,\n                    callRuntime(\n                      \"attrTag\",\n                      propsToExpression(translatedAttrTag.properties)\n                    )\n                  )\n                );\n              }\n            } else {\n              properties.push(\n                toObjectProperty(\n                  attrTagMeta.name,\n                  callRuntime(\n                    \"attrTag\",\n                    propsToExpression(translatedAttrTag.properties)\n                  )\n                )\n              );\n            }\n          }\n        } else {\n          i = addDynamicAttrTagStatements(\n            attrTags2,\n            i,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  if (!seen.has(contentKey) && usesExport(templateExports, contentKey)) {\n    seen.add(contentKey);\n    const contentExpression = buildContent(tag.get(\"body\"));\n    if (contentExpression) {\n      const contentProp = import_compiler30.types.objectProperty(\n        import_compiler30.types.identifier(contentKey),\n        contentExpression\n      );\n      contentProps.add(contentProp);\n      properties.push(contentProp);\n    }\n  }\n  const { attributes } = tag.node;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler30.types.isMarkoSpreadAttribute(attr2)) {\n      properties.push(import_compiler30.types.spreadElement(value));\n    } else if (!seen.has(attr2.name) && usesExport(templateExports, attr2.name)) {\n      seen.add(attr2.name);\n      properties.push(toObjectProperty(attr2.name, value));\n    }\n  }\n  properties.reverse();\n  return { properties, statements };\n}\nfunction getTranslatedBodyContentProperty(props) {\n  for (const prop of props) {\n    if (contentProps.has(prop)) {\n      return prop;\n    }\n  }\n}\nfunction addDynamicAttrTagStatements(attrTags2, index, attrTagLookup, statements, templateExports, contentKey = \"content\") {\n  const tag = attrTags2[index];\n  if (tag.isMarkoTag()) {\n    if ((0, import_babel_utils19.isAttributeTag)(tag)) {\n      const attrTagMeta = attrTagLookup[getTagName(tag)];\n      if (usesExport(templateExports, attrTagMeta.name) && attrTagMeta.dynamic) {\n        const translatedAttrTag = translateAttrs(\n          tag,\n          templateExports?.[attrTagMeta.name]?.props,\n          statements,\n          contentKey\n        );\n        if (attrTagMeta.repeated) {\n          statements.push(\n            import_compiler30.types.expressionStatement(\n              import_compiler30.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTags\",\n                  getAttrTagIdentifier(attrTagMeta),\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        } else {\n          statements.push(\n            import_compiler30.types.expressionStatement(\n              import_compiler30.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTag\",\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        }\n      }\n    } else {\n      switch (getTagName(tag)) {\n        case \"if\":\n          return translateIfAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        case \"for\": {\n          return translateForAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  return index;\n}\nfunction propsToExpression(props) {\n  return props.length === 1 && import_compiler30.types.isSpreadElement(props[0]) ? props[0].argument : import_compiler30.types.objectExpression(props);\n}\nfunction translateForAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const forTag = attrTags2[index];\n  const bodyStatements = [];\n  addAllAttrTagsAsDynamic(\n    forTag,\n    attrTagLookup,\n    bodyStatements,\n    templateExports,\n    contentKey\n  );\n  statements.push(\n    buildForRuntimeCall(\n      getForType(forTag.node),\n      getKnownAttrValues(forTag.node),\n      forTag.node.body.params,\n      bodyStatements\n    )\n  );\n  return index;\n}\nfunction translateIfAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const ifTag = attrTags2[index];\n  const consequentStatements = [];\n  let ifStatement = import_compiler30.types.ifStatement(\n    getConditionTestValue(ifTag),\n    import_compiler30.types.blockStatement(consequentStatements)\n  );\n  statements.push(ifStatement);\n  addAllAttrTagsAsDynamic(\n    ifTag,\n    attrTagLookup,\n    consequentStatements,\n    templateExports,\n    contentKey\n  );\n  let nextIndex = index + 1;\n  while (nextIndex < attrTags2.length) {\n    const nextTag = attrTags2[nextIndex];\n    if (nextTag.isMarkoTag()) {\n      switch (getTagName(nextTag)) {\n        case \"else-if\":\n        case \"else\": {\n          const testValue = getConditionTestValue(nextTag);\n          const alternateStatements = [];\n          addAllAttrTagsAsDynamic(\n            nextTag,\n            attrTagLookup,\n            alternateStatements,\n            templateExports,\n            contentKey\n          );\n          if (testValue) {\n            ifStatement.alternate = ifStatement = import_compiler30.types.ifStatement(\n              testValue,\n              import_compiler30.types.blockStatement(alternateStatements)\n            );\n            nextIndex++;\n            continue;\n          } else {\n            ifStatement.alternate = import_compiler30.types.blockStatement(alternateStatements);\n            break;\n          }\n        }\n      }\n    }\n    break;\n  }\n  return nextIndex - 1;\n}\nfunction addAllAttrTagsAsDynamic(tag, attrTagLookup, statements, templateExports, contentKey) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (let i = 0; i < attrTags2.length; i++) {\n    i = addDynamicAttrTagStatements(\n      attrTags2,\n      i,\n      attrTagLookup,\n      statements,\n      templateExports,\n      contentKey\n    );\n  }\n}\nfunction usesExport(templateExports, name2) {\n  return !templateExports || !!templateExports[name2];\n}\nfunction findObjectProperty(name2, props) {\n  for (const prop of props) {\n    if (prop.type === \"ObjectProperty\") {\n      switch (prop.key.type) {\n        case \"StringLiteral\":\n          if (prop.key.value === name2) {\n            return prop;\n          }\n          break;\n        case \"Identifier\":\n          if (prop.key.name === name2) {\n            return prop;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction getConditionTestValue({\n  node: { attributes }\n}) {\n  return attributes.length === 1 ? attributes[0].value : void 0;\n}\nfunction buildContent(body) {\n  const bodySection = body.node.extra?.section;\n  if (bodySection) {\n    if (isOutputHTML()) {\n      return callRuntime(\n        \"register\",\n        callRuntime(\n          \"createRenderer\",\n          import_compiler30.types.arrowFunctionExpression(\n            body.node.params,\n            import_compiler30.types.blockStatement(body.node.body)\n          )\n        ),\n        import_compiler30.types.stringLiteral(getResumeRegisterId(bodySection, \"renderer\")),\n        getScopeIdIdentifier(\n          getSection(\n            getNonAttributeTagParent(body.parentPath)\n          )\n        )\n      );\n    } else {\n      return import_compiler30.types.callExpression(import_compiler30.types.identifier(bodySection.name), [\n        scopeIdentifier\n      ]);\n    }\n  }\n}\nfunction getNonAttributeTagParent(tag) {\n  let cur = tag;\n  while ((0, import_babel_utils19.isAttributeTag)(cur) || (0, import_babel_utils19.isTransparentTag)(cur)) {\n    cur = getParentTag(cur);\n  }\n  return cur;\n}\n\n// src/translator/core/define.ts\nvar define_default = {\n  analyze(tag) {\n    (0, import_babel_utils20.assertNoArgs)(tag);\n    if (!tag.node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `define` tag requires a tag variable.\");\n    }\n    const tagBody = tag.get(\"body\");\n    startSection(tagBody);\n    trackVarReferences(tag, 4 /* derived */);\n    trackParamsReferences(tagBody, 3 /* param */);\n    analyzeAttributeTags(tag);\n    mergeReferences(\n      getOrCreateSection(tag),\n      tag.node,\n      getAllTagReferenceNodes(tag.node)\n    );\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const translatedAttrs = translateAttrs(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertBefore(translatedAttrs.statements);\n        translateVar(tag, propsToExpression(translatedAttrs.properties));\n      } else {\n        const section = getSection(tag);\n        const referencedBindings = node.extra?.referencedBindings;\n        const derivation = initValue(tag.get(\"var\").node.extra.binding);\n        if (translatedAttrs.statements.length) {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            translatedAttrs.statements\n          );\n        }\n        addValue(\n          section,\n          referencedBindings,\n          derivation,\n          propsToExpression(translatedAttrs.properties)\n        );\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a constant object binding that can be rendered.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#define\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/define.d.marko\"\n};\n\n// src/translator/core/effect.ts\nvar import_compiler32 = require(\"@marko/compiler\");\nvar import_babel_utils21 = require(\"@marko/compiler/babel-utils\");\nvar effect_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils21.assertNoArgs)(tag);\n      (0, import_babel_utils21.assertNoParams)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils21.assertNoAttributeTags)(tag);\n      assertNoSpreadAttrs(tag);\n      (0, import_babel_utils21.assertAllowedAttributes)(tag, [\"value\"]);\n      (0, import_babel_utils21.diagnosticDeprecate)(tag, {\n        label: \"The 'effect' tag has been replaced by the 'script' tag.\",\n        fix() {\n          const { node } = tag;\n          tag.replaceWith(\n            import_compiler32.types.markoTag(\n              withPreviousLocation(import_compiler32.types.stringLiteral(\"script\"), node.name),\n              node.attributes,\n              node.body,\n              node.arguments,\n              node.var,\n              node.attributeTags\n            )\n          );\n        }\n      });\n    }\n  ],\n  attributes: {},\n  types: runtime_info_default.name + \"/tag-types/effect.d.marko\"\n};\n\n// src/translator/core/export.ts\nvar import_babel_utils22 = require(\"@marko/compiler/babel-utils\");\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils22.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/translator/core/html-comment.ts\nvar import_compiler33 = require(\"@marko/compiler\");\nvar import_babel_utils23 = require(\"@marko/compiler/babel-utils\");\nvar kCommentTagBinding = Symbol(\"comment tag binding\");\nvar kGetterId2 = Symbol(\"node getter id\");\nvar html_comment_default = {\n  analyze(tag) {\n    (0, import_babel_utils23.assertNoArgs)(tag);\n    (0, import_babel_utils23.assertNoParams)(tag);\n    (0, import_babel_utils23.assertNoAttributes)(tag);\n    const tagVar = tag.node.var;\n    let needsBinding = false;\n    let needsGetter = false;\n    if (tagVar) {\n      if (!import_compiler33.types.isIdentifier(tagVar)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"The `html-comment` tag variable cannot be destructured.\"\n        );\n      }\n      needsBinding = true;\n      for (const ref of tag.scope.getBinding(tagVar.name).referencePaths) {\n        if (!ref.parentPath?.isCallExpression()) {\n          needsGetter = true;\n          break;\n        }\n      }\n    }\n    const referenceNodes = [];\n    for (const child of tag.get(\"body\").get(\"body\")) {\n      if (child.isMarkoPlaceholder()) {\n        referenceNodes.push(child.node.value);\n        needsBinding = true;\n      } else if (!child.isMarkoText()) {\n        throw child.buildCodeFrameError(\n          \"Invalid child. Only text is allowed inside an html comment.\"\n        );\n      }\n    }\n    if (needsBinding) {\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      if (needsGetter) {\n        tagExtra[kGetterId2] = getRegisterUID(section, \"comment\");\n      }\n      tagExtra[kCommentTagBinding] = createBinding(\n        \"#comment\",\n        0 /* dom */,\n        section\n      );\n      mergeReferences(section, tag.node, referenceNodes);\n    }\n    tag.skip();\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const commentBinding = tagExtra[kCommentTagBinding];\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId2];\n      if (isOutputHTML()) {\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(getSection(tag)),\n            getterId && import_compiler33.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler33.types.variableDeclaration(\"const\", [\n              import_compiler33.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler33.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(commentBinding)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler33.types.expressionStatement(\n                createScopeReadExpression(referenceSection, commentBinding)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler33.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    if (tagExtra[kCommentTagBinding]) {\n      visit(tag, 32 /* Get */);\n    }\n    const write2 = writeTo(tag);\n    enter2(tag);\n    write2`<!--`;\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler33.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler33.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeXML\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      for (const child of tag.node.body.body) {\n        if (import_compiler33.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler33.types.isMarkoPlaceholder(child)) {\n          templateQuasis.push(import_compiler33.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (templateExpressions.length === 0) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler33.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          tagExtra.referencedBindings,\n          import_compiler33.types.expressionStatement(\n            callRuntime(\n              \"data\",\n              import_compiler33.types.memberExpression(\n                scopeIdentifier,\n                getScopeAccessorLiteral(commentBinding),\n                true\n              ),\n              import_compiler33.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    exit2(tag);\n    write2`-->`;\n    if (commentBinding) {\n      markNode(tag, commentBinding);\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/translator/core/html-script.ts\nvar import_compiler34 = require(\"@marko/compiler\");\nvar import_babel_utils24 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId3 = Symbol(\"node getter id\");\nvar html_script_default = {\n  analyze(tag) {\n    (0, import_babel_utils24.assertNoArgs)(tag);\n    (0, import_babel_utils24.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler34.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler34.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler34.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler34.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-script.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#script\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId3] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId3];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler34.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler34.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler34.types.variableDeclaration(\"const\", [\n              import_compiler34.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler34.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler34.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler34.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<script`;\n    const usedAttrs = getUsedAttrs2(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler34.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler34.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler34.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler34.types.stringLiteral(\"script\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler34.types.stringLiteral(\"script\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler34.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler34.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler34.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeScript\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler34.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler34.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</script>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@async\": \"#html-async\",\n  \"@crossorigin\": \"#html-crossorigin\",\n  \"@defer\": \"#html-defer\",\n  \"@integrity\": \"#html-integrity\",\n  \"@nomodule\": \"#html-nomodule\",\n  \"@nonce\": \"#html-nonce\",\n  \"@referrerpolicy\": \"#html-referrerpolicy\",\n  \"@src\": \"#html-src\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs2(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler34.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler34.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler34.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/html-style.ts\nvar import_compiler35 = require(\"@marko/compiler\");\nvar import_babel_utils25 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId4 = Symbol(\"node getter id\");\nvar html_style_default = {\n  analyze(tag) {\n    (0, import_babel_utils25.assertNoArgs)(tag);\n    (0, import_babel_utils25.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler35.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler35.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler35.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler35.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-style.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#style\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId4] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId4];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler35.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler35.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler35.types.variableDeclaration(\"const\", [\n              import_compiler35.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler35.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler35.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler35.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<style`;\n    const usedAttrs = getUsedAttrs3(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler35.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"style\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"style\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeStyle\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler35.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</style>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@disabled\": \"#html-disabled\",\n  \"@media\": \"#html-media\",\n  \"@nonce\": \"#html-nonce\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs3(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler35.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler35.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler35.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/id.ts\nvar import_compiler36 = require(\"@marko/compiler\");\nvar import_babel_utils26 = require(\"@marko/compiler/babel-utils\");\nvar id_default = {\n  analyze(tag) {\n    (0, import_babel_utils26.assertNoArgs)(tag);\n    (0, import_babel_utils26.assertNoParams)(tag);\n    (0, import_babel_utils26.assertNoAttributes)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils26.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `id` tag requires a tag variable.\");\n    }\n    if (!import_compiler36.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `id` tag cannot be destructured\");\n    }\n    trackVarReferences(tag, 4 /* derived */);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const id = isOutputHTML() ? callRuntime(\"nextTagId\") : callRuntime(\"nextTagId\", scopeIdentifier);\n      if (isOutputHTML()) {\n        tag.replaceWith(\n          import_compiler36.types.variableDeclaration(\"const\", [import_compiler36.types.variableDeclarator(node.var, id)])\n        );\n      } else {\n        const source = initValue(node.var.extra.binding);\n        addValue(getSection(tag), void 0, source, id);\n        tag.remove();\n      }\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/id.d.marko\"\n};\n\n// src/translator/core/if.ts\nvar import_compiler38 = require(\"@marko/compiler\");\nvar import_babel_utils27 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/to-first-statement-or-block.ts\nvar import_compiler37 = require(\"@marko/compiler\");\nfunction toFirstStatementOrBlock(body) {\n  if (Array.isArray(body)) {\n    if (body.length === 1) {\n      return body[0];\n    }\n    return import_compiler37.types.blockStatement(body);\n  }\n  return body;\n}\n\n// src/translator/core/if.ts\nvar kBinding = Symbol(\"if node binding\");\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nvar IfTag = {\n  analyze(tag) {\n    assertValidCondition(tag);\n    if (tag.node.body.attributeTags) return;\n    const [isLast, branches] = getBranches(tag, startSection(tag.get(\"body\")));\n    if (isLast) {\n      const [rootTag] = branches[0];\n      const rootExtra = rootTag.node.extra ??= {};\n      const mergeReferenceNodes = [];\n      let singleNodeOptimization = true;\n      for (const [branchTag, branchBodySection] of branches) {\n        if (branchBodySection) {\n          branchBodySection.isBranch = true;\n          branchBodySection.upstreamExpression = rootExtra;\n          if (!(branchBodySection.content === null || branchBodySection.content?.singleChild)) {\n            singleNodeOptimization = false;\n          }\n        }\n        if (branchTag.node.attributes.length) {\n          mergeReferenceNodes.push(branchTag.node.attributes[0].value);\n        }\n      }\n      const section = getOrCreateSection(tag);\n      rootExtra[kBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        rootExtra\n      );\n      rootExtra.singleNodeOptimization = singleNodeOptimization;\n      mergeReferences(section, rootTag.node, mergeReferenceNodes);\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isRoot(tag)) {\n          visit(tag, 37 /* Replace */);\n        }\n        enterShallow(tag);\n        flushBefore(tag);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const section = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const [isLast, branches] = getBranches(tag, bodySection);\n        const rootExtra = branches[0][0].node.extra;\n        const nodeRef2 = rootExtra[kBinding];\n        const isStateful = isStatefulReferences(rootExtra.referencedBindings);\n        const singleNodeOptimization = rootExtra.singleNodeOptimization;\n        const hasStatefulClosures = bodySection && checkStatefulClosures(bodySection, true);\n        if (bodySection) {\n          if (isStateful || hasStatefulClosures) {\n            setForceResumeScope(bodySection);\n          }\n          flushInto(tag);\n          setClosureSignalBuilder(tag, () => {\n          });\n          writeHTMLResumeStatements(tagBody);\n        }\n        if (isLast) {\n          const nextTag = tag.getNextSibling();\n          const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n          const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n          let statement;\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const bodyStatements = branchTag.node.body.body;\n            if (branchBodySection) {\n              const branchHasStatefulClosures = checkStatefulClosures(\n                branchBodySection,\n                true\n              );\n              if (isStateful) {\n                bodyStatements.push(\n                  import_compiler38.types.expressionStatement(\n                    callRuntime(\n                      \"register\",\n                      import_compiler38.types.assignmentExpression(\n                        \"=\",\n                        ifRendererIdentifier,\n                        callRuntime(\n                          \"createRenderer\",\n                          import_compiler38.types.arrowFunctionExpression([], import_compiler38.types.blockStatement([]))\n                        )\n                      ),\n                      import_compiler38.types.stringLiteral(\n                        getResumeRegisterId(branchBodySection, \"renderer\")\n                      )\n                    )\n                  )\n                );\n              }\n              if (isStateful || branchHasStatefulClosures) {\n                bodyStatements.push(\n                  import_compiler38.types.expressionStatement(\n                    import_compiler38.types.assignmentExpression(\n                      \"=\",\n                      ifScopeIdIdentifier,\n                      getScopeIdIdentifier(branchBodySection)\n                    )\n                  )\n                );\n              }\n            }\n            const [testAttr] = branchTag.node.attributes;\n            const curStatement = toFirstStatementOrBlock(bodyStatements);\n            if (testAttr) {\n              statement = import_compiler38.types.ifStatement(\n                testAttr.value,\n                curStatement,\n                statement\n              );\n            } else {\n              statement = curStatement;\n            }\n            branchTag.remove();\n          }\n          if (!(isStateful || hasStatefulClosures)) {\n            nextTag.insertBefore(statement);\n          } else {\n            if (isStateful) {\n              getSerializedScopeProperties(section).set(\n                import_compiler38.types.stringLiteral(\n                  getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n                ),\n                ifRendererIdentifier\n              );\n              const cbNode = import_compiler38.types.arrowFunctionExpression(\n                [],\n                import_compiler38.types.blockStatement([statement])\n              );\n              statement = import_compiler38.types.expressionStatement(\n                singleNodeOptimization ? callRuntime(\n                  \"resumeSingleNodeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                ) : callRuntime(\n                  \"resumeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              );\n            }\n            nextTag.insertBefore([\n              import_compiler38.types.variableDeclaration(\n                \"let\",\n                [\n                  import_compiler38.types.variableDeclarator(ifScopeIdIdentifier),\n                  isStateful && import_compiler38.types.variableDeclarator(ifRendererIdentifier)\n                ].filter(Boolean)\n              ),\n              statement\n            ]);\n            getSerializedScopeProperties(section).set(\n              import_compiler38.types.stringLiteral(\n                getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n              ),\n              callRuntime(\"getScopeById\", ifScopeIdIdentifier)\n            );\n          }\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n        if (isRoot(tag)) {\n          visit(tag, 37 /* Replace */);\n        }\n        enterShallow(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const [isLast, branches] = getBranches(\n          tag,\n          getSectionForBody(tag.get(\"body\"))\n        );\n        if (isLast) {\n          const section = getSection(tag);\n          const rootExtra = branches[0][0].node.extra;\n          const nodeRef2 = rootExtra[kBinding];\n          let expr = import_compiler38.types.nullLiteral();\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const [testAttr] = branchTag.node.attributes;\n            const consequent = branchBodySection ? import_compiler38.types.identifier(branchBodySection.name) : import_compiler38.types.numericLiteral(0);\n            setClosureSignalBuilder(\n              branchTag,\n              (_closureSignal, render, intersection) => {\n                return callRuntime(\n                  \"conditionalClosure\",\n                  getScopeAccessorLiteral(nodeRef2),\n                  import_compiler38.types.arrowFunctionExpression(\n                    [],\n                    import_compiler38.types.identifier(branchBodySection.name)\n                  ),\n                  render,\n                  intersection\n                );\n              }\n            );\n            branchTag.remove();\n            expr = testAttr ? import_compiler38.types.conditionalExpression(testAttr.value, consequent, expr) : consequent;\n          }\n          const signal = getSignal(section, nodeRef2, \"if\");\n          signal.build = () => {\n            return callRuntime(\n              \"conditional\",\n              getScopeAccessorLiteral(nodeRef2),\n              getSignalFn(signal, [scopeIdentifier])\n            );\n          };\n          signal.hasDownstreamIntersections = () => branches.some(([, bodySection]) => bodySection?.closures);\n          addValue(section, rootExtra.referencedBindings, signal, expr);\n        }\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseIfTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nfunction assertValidCondition(tag) {\n  (0, import_babel_utils27.assertNoVar)(tag);\n  (0, import_babel_utils27.assertNoArgs)(tag);\n  (0, import_babel_utils27.assertNoParams)(tag);\n  assertHasBody(tag);\n  assertNoSpreadAttrs(tag);\n  switch (getTagName(tag)) {\n    case \"if\":\n      assertHasValueAttribute(tag);\n      break;\n    case \"else-if\":\n      assertHasValueAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n    case \"else\":\n      assertOptionalIfAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n  }\n}\nfunction assertHasPrecedingCondition(tag) {\n  let prev = tag.getPrevSibling();\n  while (prev.node && prev.isMarkoComment()) prev = prev.getPrevSibling();\n  if (!isConditionTag(prev) || getTagName(prev) !== \"else\" && !prev.node.attributes.length) {\n    throw tag.buildCodeFrameError(\n      `The \\`<${getTagName(tag)}>\\` must have a preceding \\`<if=cond>\\`, \\`<else-if=cond>\\`, or \\`<else if=cond>\\`.`\n    );\n  }\n}\nfunction assertHasBody(tag) {\n  if (!(tag.node.body.body.length || tag.node.attributeTags.length)) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${getTagName(tag)}\\` tag requires body content.`\n    );\n  }\n}\nfunction assertHasValueAttribute(tag) {\n  const { node } = tag;\n  const [valueAttr] = node.attributes;\n  if (!import_compiler38.types.isMarkoAttribute(valueAttr) || !valueAttr.default) {\n    throw tag.get(\"name\").buildCodeFrameError(`The \\`${getTagName(tag)}\\` tag requires a value.`);\n  }\n  if (node.attributes.length > 1) {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports the \\`value\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction assertOptionalIfAttribute(tag) {\n  const { node } = tag;\n  const [ifAttr] = node.attributes;\n  if (node.attributes.length > 1 || ifAttr && ifAttr.name !== \"if\") {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports an \\`if=\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  let nextTag = tag.getNextSibling();\n  while (nextTag.isMarkoComment()) nextTag = nextTag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push([tag, bodySection]);\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction isRoot(tag) {\n  return isCoreTagName(tag, \"if\");\n}\n\n// src/translator/core/import.ts\nvar import_babel_utils28 = require(\"@marko/compiler/babel-utils\");\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils28.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/translator/core/let.ts\nvar import_compiler39 = require(\"@marko/compiler\");\nvar import_babel_utils29 = require(\"@marko/compiler/babel-utils\");\nvar let_default = {\n  analyze(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    let valueAttr;\n    let valueChangeAttr;\n    for (const attr2 of node.attributes) {\n      if (import_compiler39.types.isMarkoAttribute(attr2)) {\n        if (attr2.name === \"value\") {\n          valueAttr = attr2;\n        } else if (attr2.name === \"valueChange\") {\n          valueChangeAttr = attr2;\n        } else {\n          const start = attr2.loc?.start;\n          const end = attr2.loc?.end;\n          const msg = \"The `let` tag only supports the `value` attribute and its change handler.\";\n          if (start == null || end == null) {\n            throw tag.get(\"name\").buildCodeFrameError(msg);\n          } else {\n            throw tag.hub.buildError(\n              { loc: { start, end } },\n              msg,\n              Error\n            );\n          }\n        }\n      }\n    }\n    (0, import_babel_utils29.assertNoArgs)(tag);\n    (0, import_babel_utils29.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `let` tag requires a tag variable.\");\n    }\n    if (!import_compiler39.types.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `let` tag variable cannot be destructured.\");\n    }\n    if (valueChangeAttr && (0, import_babel_utils29.computeNode)(valueChangeAttr.value)) {\n      throw tag.get(\"attributes\").find((attr2) => attr2.node === valueChangeAttr).get(\"value\").buildCodeFrameError(\n        \"The `let` tag `valueChange` attribute must be a function.\"\n      );\n    }\n    mergeReferences(getOrCreateSection(tag), tag.node, [\n      valueAttr?.value,\n      valueChangeAttr?.value\n    ]);\n    trackVarReferences(tag, 1 /* let */, void 0, tag.node.extra);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const tagVar = node.var;\n      const valueAttr = node.attributes.find(\n        (attr2) => import_compiler39.types.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")\n      ) ?? import_compiler39.types.markoAttribute(\"value\", import_compiler39.types.identifier(\"undefined\"));\n      const valueChangeAttr = node.attributes.find(\n        (attr2) => import_compiler39.types.isMarkoAttribute(attr2) && attr2.name === \"valueChange\"\n      );\n      const section = getSection(tag);\n      const binding = tagVar.extra.binding;\n      if (isOutputDOM()) {\n        const signal = initValue(binding, \"state\");\n        const referencedBindings = tag.node.extra.referencedBindings;\n        addValue(section, referencedBindings, signal, valueAttr.value);\n        if (valueChangeAttr) {\n          signal.extraArgs = [valueChangeAttr.value];\n        }\n        signal.buildAssignment = (valueSection, value) => {\n          const scope = getScopeExpression(valueSection, signal.section);\n          return import_compiler39.types.callExpression(signal.identifier, [scope, value]);\n        };\n      } else {\n        translateVar(tag, valueAttr.value);\n        if (valueChangeAttr) {\n          getSerializedScopeProperties(section).set(\n            import_compiler39.types.stringLiteral(\n              getScopeAccessorLiteral(binding).value + \"@\" /* TagVariableChange */\n            ),\n            valueChangeAttr.value\n          );\n        }\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/let.d.marko\"\n};\n\n// src/translator/core/lifecycle.ts\nvar import_compiler40 = require(\"@marko/compiler\");\nvar import_babel_utils30 = require(\"@marko/compiler/babel-utils\");\nvar kRef = Symbol(\"lifecycle attrs reference\");\nvar lifecycle_default = {\n  analyze(tag) {\n    (0, import_babel_utils30.assertNoArgs)(tag);\n    (0, import_babel_utils30.assertNoVar)(tag);\n    (0, import_babel_utils30.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const tagExtra = node.extra ??= {};\n    const section = getOrCreateSection(tag);\n    tagExtra[kRef] = createBinding(\n      currentProgramPath.scope.generateUid(\"lifecycle\"),\n      4 /* derived */,\n      section,\n      void 0,\n      tagExtra\n    );\n    if (node.attributes.length === 0) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `lifecycle` tag requires at least one attribute.\"\n      );\n    }\n    for (const attr2 of node.attributes) {\n      if (import_compiler40.types.isMarkoSpreadAttribute(attr2)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `lifecycle` tag does not support `...spread` attributes.\"\n        );\n      }\n      (attr2.value.extra ??= {}).isEffect = true;\n    }\n    (currentProgramPath.node.extra ??= {}).isInteractive = true;\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const section = getSection(tag);\n      const tagExtra = node.extra;\n      const { referencedBindings } = tagExtra;\n      const lifecycleAttrsRef = tagExtra[kRef];\n      if (isOutputDOM()) {\n        const translatedAttrs = translateAttrs(tag);\n        translatedAttrs.statements.push(\n          import_compiler40.types.expressionStatement(\n            callRuntime(\n              \"lifecycle\",\n              scopeIdentifier,\n              getScopeAccessorLiteral(lifecycleAttrsRef),\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        );\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          translatedAttrs.statements\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/lifecycle.d.marko\"\n};\n\n// src/translator/core/log.ts\nvar import_compiler41 = require(\"@marko/compiler\");\nvar import_babel_utils31 = require(\"@marko/compiler/babel-utils\");\nvar log_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils31.assertNoArgs)(tag);\n    (0, import_babel_utils31.assertNoVar)(tag);\n    (0, import_babel_utils31.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `log` tag requires a value.\");\n    }\n    if (tag.node.attributes.length > 1 || !import_compiler41.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `log` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      const statement = import_compiler41.types.expressionStatement(\n        import_compiler41.types.callExpression(\n          import_compiler41.types.memberExpression(import_compiler41.types.identifier(\"console\"), import_compiler41.types.identifier(\"log\")),\n          [value]\n        )\n      );\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to log a value to the console.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#log\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/log.d.marko\"\n};\n\n// src/translator/core/script.ts\nvar import_compiler42 = require(\"@marko/compiler\");\nvar import_babel_utils32 = require(\"@marko/compiler/babel-utils\");\nvar htmlScriptTagAlternateMsg = \" For a native html `script` tag use the `html-script` core tag instead.\";\nvar script_default = {\n  parse(tag) {\n    const { node } = tag;\n    const { body } = node.body;\n    if (body.length) {\n      let code = \"\";\n      for (const child of body) {\n        if (child.type !== \"MarkoText\") {\n          throw tag.hub.file.hub.buildError(\n            child,\n            \"Unexpected content in `script` tag. Only javascript and typescript is supported.\" + htmlScriptTagAlternateMsg,\n            SyntaxError\n          );\n        }\n        code += child.value;\n      }\n      const start = body[0]?.start;\n      const end = body[body.length - 1]?.end;\n      const bodyStatements = (0, import_babel_utils32.parseStatements)(tag.hub.file, code, start, end);\n      const valueFn = import_compiler42.types.arrowFunctionExpression(\n        [],\n        import_compiler42.types.blockStatement(bodyStatements),\n        traverseContains(bodyStatements, isAwaitExpression)\n      );\n      node.attributes.push(import_compiler42.types.markoAttribute(\"value\", valueFn));\n      node.body.body = [];\n    }\n  },\n  analyze(tag) {\n    const { node } = tag;\n    (0, import_babel_utils32.assertNoArgs)(tag);\n    (0, import_babel_utils32.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils32.assertNoAttributeTags)(tag);\n    if (node.var) {\n      throw tag.hub.buildError(\n        node.var,\n        \"The `script` tag does not support a tag variable reference.\" + htmlScriptTagAlternateMsg\n      );\n    }\n    let seenValueAttr = false;\n    for (const attr2 of node.attributes) {\n      if (attr2.type === \"MarkoAttribute\" && attr2.name === \"value\") {\n        if (seenValueAttr) {\n          throw tag.hub.buildError(attr2, \"Invalid duplicate value attribute.\");\n        }\n        seenValueAttr = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n        (currentProgramPath.node.extra ??= {}).isInteractive = true;\n      } else {\n        throw tag.hub.buildError(\n          attr2,\n          \"The `script` tag does not support html attributes.\" + htmlScriptTagAlternateMsg\n        );\n      }\n    }\n    if (!seenValueAttr) {\n      dropReferences(getAllTagReferenceNodes(node));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      if (!valueAttr) {\n        tag.remove();\n        return;\n      }\n      const section = getSection(tag);\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      if (isOutputDOM()) {\n        const { value: value2 } = valueAttr;\n        const isFunction2 = import_compiler42.types.isFunctionExpression(value2) || import_compiler42.types.isArrowFunctionExpression(value2);\n        let inlineBody = null;\n        if (isFunction2 && !(value2.async || value2.generator)) {\n          if (import_compiler42.types.isBlockStatement(value2.body)) {\n            let hasDeclaration = false;\n            for (const child of value2.body.body) {\n              if (import_compiler42.types.isDeclaration(child)) {\n                hasDeclaration = true;\n                break;\n              }\n            }\n            inlineBody = hasDeclaration ? value2.body : value2.body.body;\n          } else {\n            inlineBody = import_compiler42.types.expressionStatement(value2.body);\n          }\n        }\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          inlineBody || import_compiler42.types.expressionStatement(\n            import_compiler42.types.callExpression(value2, isFunction2 ? [] : [scopeIdentifier])\n          )\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  html: false,\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#script\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/script.d.marko\"\n};\nfunction isAwaitExpression(node) {\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ObjectMethod\":\n    case \"ClassPrivateMethod\":\n      return skip;\n    case \"AwaitExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/core/server.ts\nvar import_compiler43 = require(\"@marko/compiler\");\nvar import_babel_utils33 = require(\"@marko/compiler/babel-utils\");\nvar server_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^server\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils33.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler43.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler43.types.markoScriptlet(body, true, \"server\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"server <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the server.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#server-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/static.ts\nvar import_compiler44 = require(\"@marko/compiler\");\nvar import_babel_utils34 = require(\"@marko/compiler/babel-utils\");\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils34.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler44.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler44.types.markoScriptlet(body, true));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/style.ts\nvar import_compiler45 = require(\"@marko/compiler\");\nvar import_babel_utils35 = require(\"@marko/compiler/babel-utils\");\nvar import_magic_string = __toESM(require(\"magic-string\"));\nvar import_path3 = __toESM(require(\"path\"));\nvar STYLE_EXT_REG = /^style((?:\\.[a-zA-Z0-9$_-]+)+)?/;\nvar htmlStyleTagAlternateMsg = \" For a native html `style` tag use the `html-style` core tag instead.\";\nvar style_default = {\n  analyze(tag) {\n    (0, import_babel_utils35.assertNoArgs)(tag);\n    (0, import_babel_utils35.assertNoParams)(tag);\n    (0, import_babel_utils35.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1]?.slice(1);\n    for (const attr2 of node.attributes) {\n      if (attr2.start == null && attr2.type === \"MarkoAttribute\" && attr2.name === \"class\" && attr2.value.type === \"StringLiteral\" && attr2.value.value === ext) {\n        continue;\n      }\n      throw tag.hub.buildError(\n        attr2.value,\n        \"The `style` does not support html attributes.\" + htmlStyleTagAlternateMsg\n      );\n    }\n    for (const child of node.body.body) {\n      if (child.type !== \"MarkoText\") {\n        throw tag.hub.buildError(\n          child,\n          \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n        );\n      }\n    }\n    if (node.body.body.length > 1) {\n      throw tag.hub.buildError(\n        node.name,\n        \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n      );\n    }\n  },\n  translate(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const { filename, sourceMaps } = file.opts;\n    let ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1] || \".css\";\n    if (node.var && !/\\.module\\./.test(ext)) {\n      ext = \".module\" + ext;\n    }\n    const markoText = node.body.body[0];\n    const { resolveVirtualDependency } = getMarkoOpts();\n    const start = (0, import_babel_utils35.getStart)(file, markoText);\n    const end = (0, import_babel_utils35.getEnd)(file, markoText);\n    let code = markoText.value;\n    let map;\n    if (resolveVirtualDependency && sourceMaps && start !== null && end !== null) {\n      const magicString = new import_magic_string.default(file.code, { filename });\n      magicString.remove(0, start);\n      magicString.remove(end, file.code.length);\n      map = magicString.generateMap({\n        source: filename,\n        includeContent: true\n      });\n      if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n        code += `\n/*# sourceMappingURL=${map.toUrl()}*/`;\n        if (sourceMaps === \"inline\") {\n          map = void 0;\n        }\n      }\n    }\n    const importPath = resolveVirtualDependency?.(filename, {\n      virtualPath: `./${import_path3.default.basename(filename) + ext}`,\n      code,\n      map\n    });\n    if (importPath) {\n      if (!node.var) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.importDeclaration([], import_compiler45.types.stringLiteral(importPath))\n        );\n      } else if (import_compiler45.types.isIdentifier(node.var)) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.importDeclaration(\n            [import_compiler45.types.importDefaultSpecifier(node.var)],\n            import_compiler45.types.stringLiteral(importPath)\n          )\n        );\n      } else {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.variableDeclaration(\"const\", [\n            import_compiler45.types.variableDeclarator(\n              node.var,\n              (0, import_babel_utils35.importDefault)(file, importPath, \"style\")\n            )\n          ])\n        );\n      }\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    html: false,\n    text: true,\n    rawOpenTag: true,\n    preserveWhitespace: true\n  },\n  attributes: {}\n};\n\n// src/translator/core/try.ts\nvar import_compiler46 = require(\"@marko/compiler\");\nvar import_babel_utils36 = require(\"@marko/compiler/babel-utils\");\nvar try_default = {\n  analyze(tag) {\n    (0, import_babel_utils36.assertNoVar)(tag);\n    (0, import_babel_utils36.assertNoArgs)(tag);\n    (0, import_babel_utils36.assertNoParams)(tag);\n    (0, import_babel_utils36.assertNoAttributes)(tag);\n    assertNoSpreadAttrs(tag);\n    analyzeAttributeTags(tag);\n    const { node } = tag;\n    const section = getOrCreateSection(tag);\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `try` tag requires body content.\");\n    }\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (!getSectionForBody(tag.get(\"body\"))) {\n          tag.remove();\n          return;\n        }\n        setAllSectionsParentIsOwner(tag);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const tagBody = tag.get(\"body\");\n        const translatedAttrs = translateAttrs(tag);\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.insertBefore(translatedAttrs.statements);\n        tag.replaceWith(\n          import_compiler46.types.expressionStatement(\n            callRuntime(\n              \"tryContent\",\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        setAllSectionsParentIsOwner(tag);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Used to capture errors and display placeholders for nested content.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#try\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/try.d.marko\"\n};\nfunction setAllSectionsParentIsOwner(tag) {\n  for (const attrTag2 of tag.get(\"attributeTags\")) {\n    if (attrTag2.isMarkoTag()) {\n      setAllSectionsParentIsOwner(attrTag2);\n    }\n  }\n  const bodySection = getSectionForBody(tag.get(\"body\"));\n  if (bodySection) {\n    setSectionParentIsOwner(bodySection, true);\n  }\n}\n\n// src/translator/core/index.ts\nvar core_default = {\n  taglibId: runtime_info_default.taglibId,\n  \"<attrs>\": attrs_default,\n  \"<await>\": await_default,\n  \"<client>\": client_default,\n  \"<const>\": const_default,\n  \"<debug>\": debug_default,\n  \"<define>\": define_default,\n  \"<effect>\": effect_default,\n  \"<else-if>\": ElseIfTag,\n  \"<else>\": ElseTag,\n  \"<export>\": export_default,\n  \"<for>\": for_default,\n  \"<html-comment>\": html_comment_default,\n  \"<html-script>\": html_script_default,\n  \"<html-style>\": html_style_default,\n  \"<id>\": id_default,\n  \"<if>\": IfTag,\n  \"<import>\": import_default,\n  \"<let>\": let_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<log>\": log_default,\n  \"<return>\": return_default,\n  \"<script>\": script_default,\n  \"<server>\": server_default,\n  \"<static>\": static_default,\n  \"<style>\": style_default,\n  \"<try>\": try_default\n};\n\n// src/translator/visitors/cdata.ts\nvar cdata_default = {\n  translate: {\n    enter(cdata) {\n      throw cdata.buildCodeFrameError(\n        \"CDATA sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/comment.ts\nvar comment_default = {\n  translate: {\n    exit(comment) {\n      comment.remove();\n    }\n  }\n};\n\n// src/translator/visitors/declaration.ts\nvar declaration_default = {\n  translate: {\n    enter(decl) {\n      throw decl.buildCodeFrameError(\n        \"XML declarations sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/document-type.ts\nvar document_type_default = {\n  translate: {\n    exit(documentType) {\n      if (isOutputHTML()) {\n        writeTo(documentType)`<!${documentType.node.value}>`;\n      }\n      documentType.remove();\n    }\n  }\n};\n\n// src/translator/visitors/function.ts\nvar import_compiler47 = require(\"@marko/compiler\");\nvar import_babel_utils37 = require(\"@marko/compiler/babel-utils\");\nvar functionIdsBySection = /* @__PURE__ */ new WeakMap();\nvar function_default = {\n  analyze(fn) {\n    const fnRoot = getFnRoot(fn.parentPath);\n    const markoRoot = getMarkoRoot(fnRoot || fn);\n    const isStatic2 = !markoRoot || markoRoot.isMarkoScriptlet({ static: true });\n    if (fnRoot || !isFunction(fn, isStatic2)) return;\n    if (markoRoot && (markoRoot.isMarkoPlaceholder() || markoRoot.isMarkoScriptlet() && markoRoot.node.target === \"server\")) {\n      return;\n    }\n    const { node } = fn;\n    const extra = node.extra ??= {};\n    const name2 = extra.name = fn.node.id?.name || (isMarkoAttribute(markoRoot) ? markoRoot.node.default ? import_compiler47.types.toIdentifier(\n      markoRoot.parentPath.has(\"var\") ? markoRoot.parentPath.get(\"var\") : markoRoot.parentPath.get(\"name\")\n    ) : markoRoot.node.name : import_compiler47.types.isVariableDeclarator(fn.parent) && import_compiler47.types.isIdentifier(fn.parent.id) ? fn.parent.id.name : \"anonymous\");\n    if (isMarkoAttribute(markoRoot) && ((0, import_babel_utils37.isNativeTag)(markoRoot.parentPath) && /^on[A-Z-]/.test(markoRoot.node.name) || isCoreTagName(markoRoot.parentPath, \"script\") || isCoreTagName(markoRoot.parentPath, \"lifecycle\") || isCoreTagName(markoRoot.parentPath, \"for\"))) {\n      return;\n    }\n    const {\n      markoOpts,\n      opts: { filename }\n    } = currentProgramPath.hub.file;\n    const section = getSection(fn);\n    let functionNameCounts = functionIdsBySection.get(section);\n    if (!functionNameCounts) {\n      functionNameCounts = /* @__PURE__ */ new Map();\n      functionIdsBySection.set(section, functionNameCounts);\n    }\n    const index = functionNameCounts.get(name2);\n    let id = \"\";\n    if (index === void 0) {\n      functionNameCounts.set(name2, 0);\n    } else {\n      id = `_${index}`;\n    }\n    extra.section = section;\n    extra.registerId = (0, import_babel_utils37.getTemplateId)(\n      markoOpts,\n      filename,\n      `${section.id}/${name2 + id}`\n    );\n  }\n};\nfunction isFunction(fn, isStatic2) {\n  switch (fn.node.type) {\n    case \"FunctionDeclaration\":\n      return isStatic2 && !fn.node.declare;\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isMarkoAttribute(path5) {\n  return path5 ? path5.isMarkoAttribute() : false;\n}\n\n// src/translator/visitors/import-declaration.ts\nvar import_babel_utils38 = require(\"@marko/compiler/babel-utils\");\nvar import_declaration_default = {\n  analyze(importDecl) {\n    const { node } = importDecl;\n    const { source } = node;\n    const { value } = source;\n    const tagImport = (0, import_babel_utils38.resolveTagImport)(importDecl, value);\n    if (tagImport) {\n      node.extra ??= {};\n      node.extra.tagImport = tagImport;\n      const tags = importDecl.hub.file.metadata.marko.tags;\n      if (!tags.includes(tagImport)) {\n        tags.push(tagImport);\n      }\n    }\n  },\n  translate: {\n    exit(importDecl) {\n      const { node } = importDecl;\n      const { extra } = node;\n      const tagImport = extra?.tagImport;\n      if (tagImport) {\n        node.source.value = tagImport;\n      }\n    }\n  }\n};\n\n// src/translator/visitors/placeholder.ts\nvar import_compiler48 = require(\"@marko/compiler\");\nvar kBinding2 = Symbol(\"placeholder node binding\");\nvar kSiblingText = Symbol(\"placeholder has sibling text\");\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(node.value);\n    if (!(confident && (node.escape || isVoid2(computed)))) {\n      (node.extra ??= {})[kBinding2] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        getOrCreateSection(placeholder),\n        void 0,\n        node.value.extra\n      );\n      analyzeSiblingText(placeholder);\n    }\n  },\n  translate: {\n    exit(placeholder) {\n      const { node } = placeholder;\n      const { value } = node;\n      const { confident, computed, referencedBindings } = evaluate(value);\n      if (confident && isVoid2(computed)) {\n        placeholder.remove();\n        return;\n      }\n      const isHTML = isOutputHTML();\n      const write2 = writeTo(placeholder);\n      const extra = node.extra || {};\n      const nodeBinding = extra[kBinding2];\n      const canWriteHTML = isHTML || confident && node.escape;\n      const method = canWriteHTML ? node.escape ? \"escapeXML\" : \"toString\" : node.escape ? \"data\" : \"html\";\n      const isStateful = isStatefulReferences(referencedBindings);\n      const siblingText = extra[kSiblingText];\n      if (confident && canWriteHTML) {\n        write2`${getHTMLRuntime()[method](computed)}`;\n      } else {\n        if (siblingText === 1 /* Before */) {\n          if (isHTML && isStateful) {\n            write2`<!>`;\n          }\n          visit(placeholder, 37 /* Replace */);\n        } else if (siblingText === 2 /* After */) {\n          visit(placeholder, 37 /* Replace */);\n        } else {\n          if (!isHTML) write2` `;\n          visit(placeholder, 32 /* Get */);\n        }\n        if (isHTML) {\n          write2`${callRuntime(method, value)}`;\n          if (isStateful) {\n            markNode(placeholder, nodeBinding);\n          }\n        } else {\n          addStatement(\n            \"render\",\n            getSection(placeholder),\n            value.extra?.referencedBindings,\n            import_compiler48.types.expressionStatement(\n              method === \"data\" ? callRuntime(\n                \"data\",\n                import_compiler48.types.memberExpression(\n                  scopeIdentifier,\n                  getScopeAccessorLiteral(nodeBinding),\n                  true\n                ),\n                value\n              ) : callRuntime(\n                \"html\",\n                scopeIdentifier,\n                value,\n                getScopeAccessorLiteral(nodeBinding)\n              )\n            )\n          );\n        }\n      }\n      enterShallow(placeholder);\n      placeholder.remove();\n    }\n  }\n};\nfunction analyzeSiblingText(placeholder) {\n  const placeholderExtra = placeholder.node.extra;\n  let prev = placeholder.getPrevSibling();\n  while (prev.node) {\n    const contentType = getNodeContentType(\n      prev,\n      \"endType\"\n    );\n    if (contentType === null) {\n      prev = prev.getPrevSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 1 /* Before */;\n    } else {\n      break;\n    }\n  }\n  if (!prev.node && import_compiler48.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 1 /* Before */;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node) {\n    const contentType = getNodeContentType(\n      next,\n      \"startType\"\n    );\n    if (contentType === null) {\n      next = next.getNextSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 2 /* After */;\n    } else {\n      break;\n    }\n  }\n  if (!next.node && import_compiler48.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 2 /* After */;\n  }\n  return placeholderExtra[kSiblingText] = 0 /* None */;\n}\nfunction isVoid2(value) {\n  return value == null || value === false;\n}\n\n// src/translator/visitors/referenced-identifier.ts\nvar import_compiler49 = require(\"@marko/compiler\");\nvar abortIdsByExpressionForSection = /* @__PURE__ */ new WeakMap();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"out\":\n        if (import_compiler49.types.isMemberExpression(identifier.parent) && import_compiler49.types.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          identifier.parentPath.replaceWith(import_compiler49.types.identifier(\"$global\"));\n        } else {\n          throw identifier.buildCodeFrameError(\n            \"Only `out.global` is supported for compatibility.\"\n          );\n        }\n        break;\n    }\n  },\n  analyze(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    if (name2 === \"$global\") {\n      setReferencesScope(identifier);\n    } else if (name2 === \"$signal\") {\n      const section = getOrCreateSection(identifier);\n      section.hasAbortSignal = true;\n      setReferencesScope(identifier);\n    }\n  },\n  translate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"$global\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(importRuntime(\"$global\"), [])\n          );\n        } else {\n          identifier.replaceWith(\n            import_compiler49.types.memberExpression(scopeIdentifier, import_compiler49.types.identifier(\"$global\"))\n          );\n        }\n        break;\n      case \"$signal\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(\n              import_compiler49.types.arrowFunctionExpression(\n                [],\n                import_compiler49.types.blockStatement([\n                  import_compiler49.types.throwStatement(\n                    import_compiler49.types.newExpression(import_compiler49.types.identifier(\"Error\"), [\n                      import_compiler49.types.stringLiteral(\"Cannot use $signal in a server render.\")\n                    ])\n                  )\n                ])\n              ),\n              []\n            )\n          );\n        } else {\n          const section = getSection(identifier);\n          const exprRoot = getExprRoot(identifier);\n          let abortIdsByExpression = abortIdsByExpressionForSection.get(section);\n          let exprId;\n          if (abortIdsByExpression) {\n            exprId = abortIdsByExpression.get(exprRoot);\n          } else {\n            abortIdsByExpression = /* @__PURE__ */ new Map();\n            abortIdsByExpressionForSection.set(section, abortIdsByExpression);\n          }\n          if (!exprId) {\n            exprId = abortIdsByExpression.size;\n            abortIdsByExpression.set(exprRoot, exprId);\n            addStatement(\n              \"render\",\n              section,\n              exprRoot.node.extra?.referencedBindings,\n              import_compiler49.types.expressionStatement(\n                import_compiler49.types.callExpression(importRuntime(\"resetAbortSignal\"), [\n                  scopeIdentifier,\n                  import_compiler49.types.numericLiteral(exprId)\n                ])\n              )\n            );\n          }\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(importRuntime(\"getAbortSignal\"), [\n              scopeIdentifier,\n              import_compiler49.types.numericLiteral(exprId)\n            ])\n          );\n        }\n    }\n  }\n};\n\n// src/translator/visitors/scriptlet.ts\nvar scriptlet_default = {\n  analyze(scriptlet) {\n    if (!scriptlet.node.static) {\n      throw scriptlet.buildCodeFrameError(\n        \"Scriptlets are not supported when using the tags api.\"\n      );\n    }\n    mergeReferences(\n      getOrCreateSection(scriptlet),\n      scriptlet.node,\n      scriptlet.node.body\n    );\n  },\n  translate: {\n    exit(scriptlet) {\n      const { node } = scriptlet;\n      const isHTML = isOutputHTML();\n      if (node.target && node.target !== (isHTML ? \"server\" : \"client\")) {\n        scriptlet.remove();\n        return;\n      }\n      if (isHTML) {\n      } else {\n        traverseReplace(node, \"body\", replaceRegisteredFunctionNode);\n        scriptlet.replaceWithMultiple(node.body);\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar import_compiler53 = require(\"@marko/compiler\");\nvar import_babel_utils42 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/attribute-tag.ts\nvar import_compiler50 = require(\"@marko/compiler\");\nvar import_babel_utils39 = require(\"@marko/compiler/babel-utils\");\nvar attribute_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils39.assertNoVar)(tag);\n      (0, import_babel_utils39.assertNoArgs)(tag);\n      const body = tag.get(\"body\");\n      startSection(body);\n      trackParamsReferences(body, 3 /* param */);\n      if (!(0, import_babel_utils39.findParentTag)(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/custom-tag.ts\nvar import_compiler51 = require(\"@marko/compiler\");\nvar import_babel_utils40 = require(\"@marko/compiler/babel-utils\");\nvar import_path4 = __toESM(require(\"path\"));\nvar kChildScopeBinding = Symbol(\"custom tag child scope\");\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils40.assertAttributesOrSingleArg)(tag);\n      analyzeAttributeTags(tag);\n      const templateFile = (0, import_babel_utils40.getTagTemplate)(tag);\n      if (!templateFile) {\n        const tagName = getTagName(tag);\n        if (tagName && tag.scope.hasBinding(tagName)) {\n          throw tag.get(\"name\").buildCodeFrameError(\n            `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n          );\n        }\n        throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n      }\n      const section = getOrCreateSection(tag);\n      const tagBody = tag.get(\"body\");\n      const tagExtra = tag.node.extra ??= {};\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      tagExtra[kChildScopeBinding] = createBinding(\n        \"#childScope\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      const childFile = (0, import_babel_utils40.loadFileForTag)(tag);\n      if (childFile.opts.filename === tag.hub.file.opts.filename) {\n        mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      } else {\n        const childProgramExtra = childFile.ast.program.extra;\n        analyzeAttrs(\n          section,\n          tag,\n          childProgramExtra?.domExports.params?.props?.[0]\n        );\n        currentProgramPath.node.extra.hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild || false;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (import_compiler51.types.isStringLiteral(node.name)) {\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = isCircularRequest(tag.hub.file, relativePath) ? htmlRendererIdentifier : (0, import_babel_utils40.importDefault)(tag.hub.file, relativePath, getTagName(tag));\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const section = getSection(tag);\n  const childScopeBinding = node.extra[kChildScopeBinding];\n  const peekScopeId = tag.scope.generateUidIdentifier(childScopeBinding?.name);\n  tag.insertBefore(\n    import_compiler51.types.variableDeclaration(\"const\", [\n      import_compiler51.types.variableDeclarator(peekScopeId, callRuntime(\"peekNextScope\"))\n    ])\n  );\n  getSerializedScopeProperties(section).set(\n    getScopeAccessorLiteral(childScopeBinding),\n    callRuntime(\"writeExistingScope\", peekScopeId)\n  );\n  const inputExport = (0, import_babel_utils40.loadFileForTag)(tag)?.ast.program.extra?.domExports?.params?.props?.[0];\n  const { properties, statements } = inputExport ? translateAttrs(tag, inputExport.props) : {\n    properties: [],\n    statements: []\n  };\n  if (node.extra.tagNameNullable) {\n    const contentProp = getTranslatedBodyContentProperty(properties);\n    let contentId = void 0;\n    if (contentProp) {\n      const contentExpression = contentProp.value;\n      contentProp.value = contentId = tag.scope.generateUidIdentifier(\"content\");\n      const [contentPath] = tag.insertBefore(\n        import_compiler51.types.variableDeclaration(\"const\", [\n          import_compiler51.types.variableDeclarator(\n            contentId,\n            // TODO: only register if needed (child template analysis)\n            contentExpression\n          )\n        ])\n      );\n      contentPath.skip();\n    }\n    let renderTagExpr = callExpression(\n      tagIdentifier,\n      propsToExpression(properties)\n    );\n    if (tagVar) {\n      translateVar(tag, import_compiler51.types.unaryExpression(\"void\", import_compiler51.types.numericLiteral(0)), \"let\");\n      renderTagExpr = import_compiler51.types.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    statements.push(\n      import_compiler51.types.ifStatement(\n        tagIdentifier,\n        import_compiler51.types.expressionStatement(renderTagExpr),\n        contentId && callStatement(contentId)\n      )\n    );\n  } else if (tagVar) {\n    translateVar(\n      tag,\n      callExpression(\n        tagIdentifier,\n        propsToExpression(properties),\n        callRuntime(\n          \"register\",\n          import_compiler51.types.arrowFunctionExpression([], import_compiler51.types.blockStatement([])),\n          import_compiler51.types.stringLiteral(\n            getResumeRegisterId(\n              section,\n              node.var.extra?.binding,\n              // TODO: node.var is not always an identifier.\n              \"var\"\n            )\n          ),\n          getScopeIdIdentifier(section)\n        )\n      )\n    );\n    setForceResumeScope(section);\n  } else {\n    statements.push(\n      callStatement(tagIdentifier, propsToExpression(properties))\n    );\n  }\n  for (const replacement of tag.replaceWithMultiple(statements)) {\n    replacement.skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const { node } = tag;\n  const extra = node.extra;\n  const childScopeBinding = extra[kChildScopeBinding];\n  const write2 = writeTo(tag);\n  const { file } = tag.hub;\n  const tagName = import_compiler51.types.isIdentifier(node.name) ? node.name.name : import_compiler51.types.isStringLiteral(node.name) ? node.name.value : \"tag\";\n  const relativePath = getTagRelativePath(tag);\n  const childFile = (0, import_babel_utils40.loadFileForTag)(tag);\n  const childExports = childFile.ast.program.extra.domExports;\n  const tagIdentifier = importOrSelfReferenceName(\n    file,\n    relativePath,\n    childExports.setup,\n    tagName\n  );\n  const inputExport = childExports.params?.props?.[0];\n  if (inputExport) {\n    writeAttrsToExports(tag, inputExport, `${getTagName(tag) || \"tag\"}_input`, {\n      circular: childFile.opts.filename === file.opts.filename,\n      tagSection,\n      relativePath,\n      childScopeBinding\n    });\n  }\n  write2`${(0, import_babel_utils40.importNamed)(file, relativePath, childExports.template, `${tagName}_template`)}`;\n  injectWalks(\n    tag,\n    (0, import_babel_utils40.importNamed)(file, relativePath, childExports.walks, `${tagName}_walks`)\n  );\n  if (node.var) {\n    const source = initValue(\n      // TODO: support destructuring\n      node.var.extra.binding\n    );\n    source.register = true;\n    source.buildAssignment = (valueSection, value) => {\n      return import_compiler51.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n        createScopeReadExpression(valueSection, childScopeBinding),\n        value\n      ]);\n    };\n    addStatement(\n      \"render\",\n      tagSection,\n      void 0,\n      import_compiler51.types.expressionStatement(\n        callRuntime(\n          \"setTagVar\",\n          scopeIdentifier,\n          getScopeAccessorLiteral(childScopeBinding),\n          source.identifier\n        )\n      )\n    );\n  }\n  addStatement(\n    \"render\",\n    tagSection,\n    void 0,\n    import_compiler51.types.expressionStatement(\n      import_compiler51.types.callExpression(tagIdentifier, [\n        createScopeReadExpression(tagSection, childScopeBinding)\n      ])\n    )\n  );\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  let relativePath;\n  if (import_compiler51.types.isStringLiteral(node.name)) {\n    const template = (0, import_babel_utils40.getTagTemplate)(tag);\n    relativePath = template && (0, import_babel_utils40.resolveRelativePath)(file, template);\n  } else if (node.extra?.tagNameImported) {\n    relativePath = node.extra.tagNameImported;\n  }\n  if (!relativePath) {\n    const tagName = getTagName(tag);\n    if (tagName && tag.scope.hasBinding(tagName)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n      );\n    }\n    throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n  }\n  return relativePath;\n}\nfunction analyzeAttrs(section, tag, templateExport) {\n  if (!templateExport) {\n    dropReferences(getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  if (!templateExport.props || tag.node.arguments?.length) {\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  const attrTagLookup = analyzeAttributeTags(tag);\n  const seen = /* @__PURE__ */ new Set();\n  if (attrTagLookup) {\n    const nodeReferencesByGroup = /* @__PURE__ */ new Map();\n    const analyzeDynamicChildGroup = (group, child) => {\n      const referenceNodes = getAllTagReferenceNodes(child.node);\n      const groupReferences = nodeReferencesByGroup.get(group);\n      if (groupReferences) {\n        groupReferences.referenceNodes = groupReferences.referenceNodes.concat(referenceNodes);\n      } else {\n        nodeReferencesByGroup.set(group, {\n          firstTag: child,\n          referenceNodes\n        });\n      }\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (const child of attrTags2) {\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils40.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExports = templateExport.props[attrTagMeta.name];\n          if (childAttrExports) {\n            if (childAttrExports.props && !attrTagMeta.dynamic) {\n              analyzeAttrs(section, child, childAttrExports);\n            } else {\n              analyzeDynamicChildGroup(attrTagMeta.group, child);\n            }\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        } else {\n          const group = child.node.extra.attributeTagGroup;\n          let childUsesGroupProp = false;\n          for (const name2 of group) {\n            if (templateExport.props[attrTagLookup[name2].name]) {\n              childUsesGroupProp = true;\n              break;\n            }\n          }\n          if (childUsesGroupProp) {\n            analyzeDynamicChildGroup(group, child);\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        }\n      }\n    }\n    for (const { firstTag, referenceNodes } of nodeReferencesByGroup.values()) {\n      mergeReferences(section, firstTag.node, referenceNodes);\n    }\n  }\n  const { attributes } = tag.node;\n  let spreadReferenceNodes;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler51.types.isMarkoAttribute(attr2)) {\n      if (seen.has(attr2.name) || !templateExport.props[attr2.name]) {\n        dropReferences(attr2.value);\n        continue;\n      }\n      seen.add(attr2.name);\n    }\n    if (spreadReferenceNodes) {\n      spreadReferenceNodes.push(attr2.value);\n    } else if (import_compiler51.types.isMarkoSpreadAttribute(attr2)) {\n      spreadReferenceNodes = [attr2.value];\n    }\n  }\n  if (spreadReferenceNodes) {\n    mergeReferences(section, tag.node, spreadReferenceNodes);\n  }\n}\nfunction writeAttrsToExports(tag, templateExport, importAlias, info) {\n  if (tag.node.arguments?.length) {\n    const [arg] = tag.node.arguments;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    addValue(\n      info.tagSection,\n      // technically this should be `arg.extra?.referencedBindings`\n      // but we should probably ensure all other references are dropped in this case before we do that.\n      tag.node.extra?.referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      import_compiler51.types.isSpreadElement(arg) ? import_compiler51.types.memberExpression(arg.argument, import_compiler51.types.numericLiteral(0), true) : arg,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  if (!templateExport.props || info.circular) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    const translatedAttrs = translateAttrs(tag);\n    if (translatedAttrs.statements.length) {\n      addStatement(\n        \"render\",\n        info.tagSection,\n        referencedBindings,\n        translatedAttrs.statements\n      );\n    }\n    let translatedProps = propsToExpression(translatedAttrs.properties);\n    if ((0, import_babel_utils40.isAttributeTag)(tag)) {\n      translatedProps = callRuntime(\"attrTag\", translatedProps);\n    }\n    addValue(\n      info.tagSection,\n      referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      translatedProps,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  const seen = /* @__PURE__ */ new Set();\n  const attrTagLookup = analyzeAttributeTags(tag);\n  if (attrTagLookup) {\n    const attrTags2 = tag.get(\"attributeTags\");\n    const statementsByGroup = /* @__PURE__ */ new Map();\n    const translateDynamicAttrTagChildInGroup = (group, index) => {\n      const child = attrTags2[index];\n      let statements = statementsByGroup.get(group)?.statements;\n      if (!statements) {\n        statements = [];\n        statementsByGroup.set(group, {\n          referencedBindings: child.node.extra?.referencedBindings,\n          statements\n        });\n      }\n      return addDynamicAttrTagStatements(\n        attrTags2,\n        index,\n        attrTagLookup,\n        statements,\n        templateExport.props\n      );\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils40.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExport = templateExport.props[attrTagMeta.name];\n          if (childAttrExport) {\n            if (attrTagMeta.dynamic) {\n              i = translateDynamicAttrTagChildInGroup(attrTagMeta.group, i);\n            } else {\n              writeAttrsToExports(\n                child,\n                childAttrExport,\n                `${importAlias}_${attrTagMeta.name}`,\n                info\n              );\n            }\n          }\n        } else if (child.node.extra?.attributeTagGroup) {\n          i = translateDynamicAttrTagChildInGroup(\n            child.node.extra.attributeTagGroup,\n            i\n          );\n        }\n      }\n    }\n    for (const [\n      group,\n      { referencedBindings, statements }\n    ] of statementsByGroup) {\n      const decls = [];\n      for (const name2 of group) {\n        const attrTagMeta = attrTagLookup[name2];\n        const childAttrExports = templateExport.props[attrTagMeta.name];\n        if (!childAttrExports) continue;\n        const attrExportIdentifier = importOrSelfReferenceName(\n          tag.hub.file,\n          info.relativePath,\n          childAttrExports.id,\n          `${importAlias}_${attrTagMeta.name}`\n        );\n        decls.push(import_compiler51.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta)));\n        addValue(\n          info.tagSection,\n          referencedBindings,\n          identifierToSignal(attrExportIdentifier),\n          getAttrTagIdentifier(attrTagMeta),\n          createScopeReadExpression(info.tagSection, info.childScopeBinding),\n          callRuntime(\n            \"inChild\",\n            getScopeAccessorLiteral(info.childScopeBinding),\n            import_compiler51.types.identifier(attrExportIdentifier.name)\n          )\n        );\n      }\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler51.types.variableDeclaration(\"let\", decls),\n        ...statements\n      ]);\n    }\n  }\n  const bodySection = tag.node.body.extra?.section;\n  if (bodySection && !seen.has(\"content\")) {\n    seen.add(\"content\");\n    if (templateExport.props.content) {\n      const contentExportIdentifier = (0, import_babel_utils40.importNamed)(\n        tag.hub.file,\n        info.relativePath,\n        templateExport.props.content.id,\n        `${importAlias}_content`\n      );\n      addValue(\n        info.tagSection,\n        void 0,\n        // TODO: pretty sure content needs to have the reference group of it's param defaults.\n        identifierToSignal(contentExportIdentifier),\n        import_compiler51.types.callExpression(import_compiler51.types.identifier(bodySection.name), [scopeIdentifier]),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler51.types.identifier(contentExportIdentifier.name)\n        )\n      );\n    }\n  }\n  const { attributes } = tag.node;\n  const staticAttrs = [];\n  let spreadProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler51.types.isMarkoAttribute(attr2)) {\n      const childAttrExports = templateExport.props[attr2.name];\n      if (!childAttrExports || seen.has(attr2.name)) continue;\n      seen.add(attr2.name);\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n        continue;\n      }\n      staticAttrs.push(attr2);\n    } else if (spreadProps) {\n      spreadProps.push(import_compiler51.types.spreadElement(attr2.value));\n    } else {\n      spreadProps = [import_compiler51.types.spreadElement(attr2.value)];\n    }\n  }\n  for (const attr2 of staticAttrs.reverse()) {\n    const childAttrExports = templateExport.props[attr2.name];\n    const attrExportIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      childAttrExports.id,\n      `${importAlias}_${attr2.name}`\n    );\n    addValue(\n      info.tagSection,\n      attr2.value.extra?.referencedBindings,\n      identifierToSignal(attrExportIdentifier),\n      attr2.value,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(attrExportIdentifier.name)\n      )\n    );\n  }\n  const missing = new Set(Object.keys(templateExport.props));\n  for (const name2 of seen) missing.delete(name2);\n  if (missing.size) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    let getMissingPropValue = buildUndefined2;\n    if (spreadProps) {\n      const spreadId = tag.scope.generateUidIdentifier(`${importAlias}_spread`);\n      spreadProps.reverse();\n      getMissingPropValue = (name2) => toMemberExpression(spreadId, name2);\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler51.types.variableDeclaration(\"const\", [\n          import_compiler51.types.variableDeclarator(spreadId, propsToExpression(spreadProps))\n        ])\n      ]);\n    }\n    for (const name2 of missing) {\n      const childAttrExports = templateExport.props[name2];\n      const attrExportIdentifier = importOrSelfReferenceName(\n        tag.hub.file,\n        info.relativePath,\n        childAttrExports.id,\n        `${importAlias}_${name2}`\n      );\n      addValue(\n        info.tagSection,\n        referencedBindings,\n        identifierToSignal(attrExportIdentifier),\n        getMissingPropValue(name2),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler51.types.identifier(attrExportIdentifier.name)\n        )\n      );\n    }\n  }\n}\nfunction importOrSelfReferenceName(file, request, name2, nameHint) {\n  if (isCircularRequest(file, request)) {\n    return import_compiler51.types.identifier(name2);\n  }\n  return (0, import_babel_utils40.importNamed)(file, request, name2, nameHint);\n}\nfunction isCircularRequest(file, request) {\n  const { filename } = file.opts;\n  return request === filename || request[0] === \".\" && import_path4.default.resolve(filename, \"..\", request) === filename;\n}\nfunction callStatement(id, ...args) {\n  return import_compiler51.types.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return import_compiler51.types.callExpression(id, args.filter(Boolean));\n}\nfunction identifierToSignal(identifier) {\n  return {\n    identifier,\n    hasDownstreamIntersections: always\n  };\n}\nfunction buildUndefined2() {\n  return import_compiler51.types.unaryExpression(\"void\", import_compiler51.types.numericLiteral(0));\n}\nfunction always() {\n  return true;\n}\n\n// src/translator/visitors/tag/dynamic-tag.ts\nvar import_compiler52 = require(\"@marko/compiler\");\nvar import_babel_utils41 = require(\"@marko/compiler/babel-utils\");\nvar kDOMBinding = Symbol(\"dynamic tag dom binding\");\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils41.assertAttributesOrArgs)(tag);\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      const tagBody = tag.get(\"body\");\n      const domBinding = tagExtra[kDOMBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      addReadToExpression(tag, domBinding);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const extra = node.extra;\n      const nodeRef2 = extra[kDOMBinding];\n      const section = getSection(tag);\n      const isClassAPI = extra.featureType === \"class\";\n      let tagExpression = node.name;\n      if (import_compiler52.types.isStringLiteral(tagExpression)) {\n        tagExpression = (0, import_babel_utils41.importDefault)(\n          tag.hub.file,\n          getTagRelativePath(tag),\n          tagExpression.value\n        );\n      }\n      if (isClassAPI) {\n        if (isOutputHTML()) {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler52.types.expressionStatement(\n              import_compiler52.types.callExpression(\n                (0, import_babel_utils41.importNamed)(tag.hub.file, getCompatRuntimeFile(), \"s\"),\n                [\n                  import_compiler52.types.identifier(tagExpression.name),\n                  import_compiler52.types.stringLiteral((0, import_babel_utils41.loadFileForTag)(tag).metadata.marko.id)\n                ]\n              )\n            )\n          );\n        } else {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler52.types.expressionStatement(\n              callRuntime(\n                \"register\",\n                import_compiler52.types.stringLiteral((0, import_babel_utils41.loadFileForTag)(tag).metadata.marko.id),\n                import_compiler52.types.identifier(tagExpression.name)\n              )\n            )\n          );\n        }\n      }\n      const { properties, statements } = translateAttrs(\n        tag,\n        void 0,\n        void 0,\n        isClassAPI ? \"renderBody\" : \"content\"\n      );\n      const args = [];\n      let hasMultipleArgs = false;\n      if (node.arguments?.length) {\n        args.push(...node.arguments);\n        if (properties.length) {\n          hasMultipleArgs = true;\n          args.push(propsToExpression(properties));\n        } else {\n          hasMultipleArgs = node.arguments.length > 1 || import_compiler52.types.isSpreadElement(node.arguments[0]);\n        }\n      } else {\n        const contentProp = getTranslatedBodyContentProperty(properties);\n        if (contentProp) {\n          properties.splice(properties.indexOf(contentProp), 1);\n          args.push(propsToExpression(properties), contentProp.value);\n        } else {\n          args.push(propsToExpression(properties));\n        }\n      }\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        if (node.var) {\n          if (!hasMultipleArgs && args.length === 1) {\n            args.push(import_compiler52.types.unaryExpression(\"void\", import_compiler52.types.numericLiteral(0)));\n          }\n          args.push(\n            callRuntime(\n              \"register\",\n              import_compiler52.types.arrowFunctionExpression([], import_compiler52.types.blockStatement([])),\n              import_compiler52.types.stringLiteral(\n                getResumeRegisterId(\n                  section,\n                  node.var.extra?.binding,\n                  // TODO: node.var is not always an identifier.\n                  \"var\"\n                )\n              ),\n              getScopeIdIdentifier(section)\n            )\n          );\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = hasMultipleArgs ? callRuntime(\n          \"dynamicTagArgs\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          import_compiler52.types.arrayExpression(args)\n        ) : callRuntime(\n          \"dynamicTagInput\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          ...args\n        );\n        statements.push(\n          import_compiler52.types.variableDeclaration(\"const\", [\n            import_compiler52.types.variableDeclarator(\n              dynamicScopeIdentifier,\n              callRuntime(\"peekNextScope\")\n            )\n          ])\n        );\n        statements.push(\n          node.var ? import_compiler52.types.variableDeclaration(\"const\", [\n            import_compiler52.types.variableDeclarator(node.var, dynamicTagExpr)\n          ]) : import_compiler52.types.expressionStatement(dynamicTagExpr)\n        );\n        getSerializedScopeProperties(section).set(\n          import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n          ),\n          callRuntime(\"writeExistingScope\", dynamicScopeIdentifier)\n        );\n        getSerializedScopeProperties(section).set(\n          import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n          ),\n          callRuntime(\n            \"normalizeDynamicRenderer\",\n            import_compiler52.types.isIdentifier(tagExpression) ? import_compiler52.types.identifier(tagExpression.name) : tagExpression\n          )\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      } else {\n        const section2 = getSection(tag);\n        const bodySection = getSectionForBody(tag.get(\"body\"));\n        const signal = getSignal(section2, nodeRef2, \"dynamicTagName\");\n        signal.build = () => {\n          return callRuntime(\n            \"conditional\",\n            getScopeAccessorLiteral(nodeRef2),\n            getSignalFn(signal, [scopeIdentifier]),\n            buildSignalIntersections(signal)\n          );\n        };\n        signal.hasDownstreamIntersections = () => true;\n        addValue(\n          section2,\n          node.name.extra?.referencedBindings,\n          signal,\n          bodySection ? import_compiler52.types.logicalExpression(\n            \"||\",\n            tagExpression,\n            import_compiler52.types.callExpression(import_compiler52.types.identifier(bodySection.name), [\n              scopeIdentifier\n            ])\n          ) : tagExpression\n        );\n        if (tag.node.var) {\n          const childScopeLiteral = import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(extra[kDOMBinding]).value + \"!\" /* ConditionalScope */\n          );\n          const source = initValue(\n            // TODO: support destructuring\n            tag.node.var.extra.binding\n          );\n          source.register = true;\n          source.buildAssignment = (valueSection, value) => {\n            return import_compiler52.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n              import_compiler52.types.memberExpression(\n                getScopeExpression(source.section, valueSection),\n                childScopeLiteral,\n                true\n              ),\n              value\n            ]);\n          };\n          addStatement(\n            \"render\",\n            section2,\n            nodeRef2,\n            import_compiler52.types.expressionStatement(\n              callRuntime(\n                \"setTagVar\",\n                scopeIdentifier,\n                childScopeLiteral,\n                source.identifier\n              )\n            )\n          );\n        }\n        if (args.length) {\n          const argsOrInput = hasMultipleArgs ? import_compiler52.types.arrayExpression(args) : args[0];\n          const attrsGetter = import_compiler52.types.arrowFunctionExpression(\n            [],\n            statements.length ? import_compiler52.types.blockStatement(\n              statements.concat(import_compiler52.types.returnStatement(argsOrInput))\n            ) : argsOrInput\n          );\n          const id = currentProgramPath.scope.generateUidIdentifier(\n            tag.get(\"name\").toString() + \"_input\"\n          );\n          let added = false;\n          addValue(\n            section2,\n            node.extra?.referencedBindings,\n            {\n              get identifier() {\n                if (!added) {\n                  currentProgramPath.pushContainer(\n                    \"body\",\n                    import_compiler52.types.variableDeclaration(\"const\", [\n                      import_compiler52.types.variableDeclarator(\n                        id,\n                        callRuntime(\n                          \"dynamicTagAttrs\",\n                          getScopeAccessorLiteral(nodeRef2),\n                          bodySection && import_compiler52.types.identifier(bodySection.name),\n                          hasMultipleArgs && import_compiler52.types.numericLiteral(1)\n                        )\n                      )\n                    ])\n                  );\n                  added = true;\n                }\n                return id;\n              },\n              hasDownstreamIntersections: () => true\n            },\n            attrsGetter\n          );\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar TAG_NAME_IDENTIFIER_REG = /^[A-Z][a-zA-Z0-9_$]*$/;\nvar tag_default = {\n  transform: {\n    enter(tag) {\n      const { node } = tag;\n      const { name: name2, attributes } = tag.node;\n      let crawl = false;\n      if (import_compiler53.types.isStringLiteral(name2)) {\n        const tagName = name2.value;\n        if (tag.scope.getBinding(tagName) && TAG_NAME_IDENTIFIER_REG.test(tagName)) {\n          node.name = withPreviousLocation(import_compiler53.types.identifier(tagName), name2);\n          crawl = true;\n        }\n      }\n      for (let i = 0; i < attributes.length; i++) {\n        const attr2 = attributes[i];\n        if (import_compiler53.types.isMarkoAttribute(attr2) && attr2.bound) {\n          attr2.bound = false;\n          const changeValue = getChangeHandler(tag, attr2);\n          if (changeValue === null) {\n            throw tag.hub.buildError(\n              attr2,\n              \"Attributes may only be bound to identifiers or member expressions\"\n            );\n          }\n          attributes.splice(\n            ++i,\n            0,\n            import_compiler53.types.markoAttribute(attr2.name + \"Change\", changeValue)\n          );\n          crawl = true;\n        }\n      }\n      if (crawl) {\n        tag.scope.crawl();\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils42.getTagDef)(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        native_tag_default.analyze.enter(tag);\n        return;\n      }\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.analyze.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const hook = (0, import_babel_utils42.getTagDef)(tag)?.analyzer?.hook;\n      if (hook) {\n        exit(hook, tag);\n        return;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils42.getTagDef)(tag);\n      const extra = tag.node.extra;\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(\n              `Unsupported arguments on the \\`${attr2.node.name}\\` attribute.`\n            );\n          }\n          if (attr2.node.modifier) {\n            if ((0, import_babel_utils42.isNativeTag)(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(\n                `Unsupported modifier \\`${attr2.node.modifier}\\`.`\n              );\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(\n          import_compiler53.types.variableDeclaration(\"const\", [\n            import_compiler53.types.variableDeclarator(tagNameId, tag.node.name)\n          ])\n        );\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = (0, import_babel_utils42.getTagDef)(tag)?.translator;\n      if (translator) {\n        exit(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\nfunction getChangeHandler(tag, attr2) {\n  if (import_compiler53.types.isIdentifier(attr2.value)) {\n    const valueId = tag.scope.generateUidIdentifier(\"new_\" + attr2.value.name);\n    return import_compiler53.types.arrowFunctionExpression(\n      [valueId],\n      import_compiler53.types.blockStatement([\n        import_compiler53.types.expressionStatement(\n          import_compiler53.types.assignmentExpression(\"=\", import_compiler53.types.cloneNode(attr2.value), valueId)\n        )\n      ])\n    );\n  } else if (import_compiler53.types.isMemberExpression(attr2.value)) {\n    const prop = attr2.value.property;\n    if (import_compiler53.types.isPrivateName(prop)) return null;\n    if (import_compiler53.types.isIdentifier(prop)) {\n      return import_compiler53.types.memberExpression(\n        import_compiler53.types.cloneNode(attr2.value.object),\n        import_compiler53.types.identifier(prop.name + \"Change\")\n      );\n    } else {\n      return import_compiler53.types.memberExpression(\n        import_compiler53.types.cloneNode(attr2.value.object),\n        import_compiler53.types.binaryExpression(\"+\", import_compiler53.types.cloneNode(prop), import_compiler53.types.stringLiteral(\"Change\")),\n        true\n      );\n    }\n  }\n  return null;\n}\n\n// src/translator/visitors/text.ts\nvar import_compiler54 = require(\"@marko/compiler\");\nvar text_default = {\n  translate: {\n    exit(text) {\n      writeTo(text)`${text.node.value}`;\n      enterShallow(text);\n      text.remove();\n    }\n  }\n};\n\n// src/translator/index.ts\nvar visitors = extractVisitors({\n  Program: program_default,\n  Function: function_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n});\nvar tagDiscoveryDirs = [\"tags\"];\nvar preferAPI = \"tags\";\nvar { transform, analyze, translate } = visitors;\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: visitors.migrate\n    }\n  ]\n];\nfunction getRuntimeEntryFiles(output, optimize) {\n  return [\n    `${runtime_info_default.name}${optimize ? \"\" : \"/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`\n  ];\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyze,\n  getRuntimeEntryFiles,\n  internalEntryBuilder,\n  preferAPI,\n  tagDiscoveryDirs,\n  taglibs,\n  transform,\n  translate\n});\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__toESM","isNodeMode","target","__esModule","value","translator_exports","__export","all","name2","analyze","getRuntimeEntryFiles","internalEntryBuilder","entry_builder_default","preferAPI","tagDiscoveryDirs","taglibs","transform","translate","module","exports","runtime_info_default","name","require","taglibId","import_compiler","import_babel_utils","assertNoSpreadAttrs","tag","attr2","isMarkoSpreadAttribute","buildCodeFrameError","node","assertNoBodyContent","body","length","attrs_default","migrate","assertNoArgs","assertNoParams","assertNoAttributes","assertNoAttributeTags","diagnosticDeprecate","label","fix","tagVar","var","type","remove","constTag","types","markoTag","stringLiteral","markoAttribute","identifier","markoTagBody","replaceWith","attributes","autocomplete","displayText","description","snippet","import_compiler22","import_babel_utils12","import_babel_utils2","evaluate","extra","confident","computed","computeNode","import_compiler21","import_compiler20","import_babel_utils11","import_path2","bindingHasDownstreamExpressions","binding","downstreamExpressions","size","alias","aliases","propertyAliases","values","import_compiler2","import_babel_utils3","kState","Symbol","build","entryFile","state","path","imports","map","it","importDeclaration","init","unshift","importSpecifier","markoOpts","optimize","push","expressionStatement","callExpression","visit","file","visitChild","analyzedTags","metadata","marko","resolveRelativePath","opts","filename","hasInteractiveChild","isInteractive","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","import_compiler4","import_babel_utils4","stringifyClassObject","NON_DIMENSIONAL","stringifyStyleObject","test","toDelimitedString","val","delimiter","stringify","result","curDelimiter","Array","isArray","v","part","isEventHandler","getEventHandlerName","slice","toLowerCase","toString","unsafeXMLReg","replaceUnsafeXML","c","escapeXML","str","replace","unsafeScriptReg","escapeScript","unsafeStyleReg","escapeStyle","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","source","nonVoidAttr","escapeAttrValue","constructor","async","KNOWN_SYMBOLS2","Map","symbol","set","AggregateError","of","ArrayBuffer","isView","Atomics","add","and","compareExchange","exchange","isLockFree","load","notify","or","store","sub","wait","BigInt","asIntN","asUintN","BigInt64Array","BigUint64Array","Boolean","console","assert","clear","count","countReset","debug","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","table","time","timeEnd","timeLog","timeStamp","trace","warn","DataView","Date","now","parse","UTC","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Function","globalThis","atob","btoa","clearImmediate","clearInterval","clearTimeout","crypto","getRandomValues","randomUUID","fetch","performance","queueMicrotask","setImmediate","setInterval","setTimeout","structuredClone","URL","URLSearchParams","WritableStream","Int16Array","Int32Array","Int8Array","Intl","Collator","DateTimeFormat","DisplayNames","getCanonicalLocales","ListFormat","Locale","NumberFormat","PluralRules","RelativeTimeFormat","Segmenter","supportedValuesOf","isFinite","isNaN","JSON","groupBy","Math","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","Number","isInteger","isSafeInteger","parseFloat","parseInt","assign","defineProperties","entries","freeze","fromEntries","getOwnPropertyDescriptors","getOwnPropertySymbols","is","isExtensible","isFrozen","isSealed","keys","preventExtensions","seal","setPrototypeOf","Promise","Proxy","RangeError","ReferenceError","Reflect","apply","construct","deleteProperty","has","ownKeys","Set","String","fromCharCode","fromCodePoint","raw","for","SyntaxError","TypeError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","URIError","WeakMap","WeakSet","unsafeAttrChars","lastIndex","import_compiler3","toPropertyName","numericLiteral","toObjectProperty","objectProperty","toMemberExpression","object","optional","prop","optionalMemberExpression","memberExpression","pureFunctions","importRuntime","importStar","getRuntimePath","callRuntime","args","callExpression2","filteredArgs","i","arg","unaryExpression","filterArguments","includes","leadingComments","getHTMLRuntime","getCompatRuntimeFile","modules","import_compiler6","import_babel_utils7","import_babel_utils5","getTagName","isCoreTag","isMarkoTag","tagDef","getTagDef","isCoreTagName","isConditionTag","data","item","forEach","cb","find","findSorted","compare","pos","mid","cur","compareResult","addSorted","len","next","joinRepeatable","a","b","createProgramState","createSectionState","section","arrayOfSectionData","id","import_compiler5","import_babel_utils6","MARKO_FILE_REG","analyzeTagNameType","tagNameType","isStringLiteral","isNativeTag","tagNameNullable","pending","path5","tagNameImported","nullable","pop","isConditionalExpression","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","scope","getBinding","kind","decl","parent","specifiers","some","isImportDefaultSpecifier","resolvedImport","resolveTagImport","bindingTag","bindingTagName","tagNameDynamic","analyzeExpressionTagName","childFile","loadFileForTag","ast","program","featureType","needsCompat","startSection","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","programExtra","sections","depth","params","closures","bindings","content","getContentInfo","upstreamExpression","hasAbortSignal","isBranch","attributeTags","getSectionForBody","getSection","currentPath","getScopeIdIdentifier","generateUidIdentifier","getSectionParentIsOwner","setSectionParentIsOwner","_getScopeIdentifier","getScopeIdentifier","ignoreDefault","scopeId","forEachSection","fn","contentInfo","startType","endType","singleChild","endIndex","getNodeContentType","startIndex","extraMember","isAttributeTag","tagSection","isStatefulSection","isStatefulReferences","referencedBindings","checkStatefulClosures","immediateOnly","closure","import_compiler18","import_babel_utils10","import_path","regexpCharsReg","import_compiler17","import_babel_utils9","import_compiler11","import_babel_utils8","getKnownAttrValues","attrs2","import_compiler7","enter","modulePlugin","plugin","isModulePlugin","default","isFunctionPlugin","exit","translateByTarget","html","dom","import_compiler10","import_compiler8","normalizeStringExpression","parts","strs","exprs","curStr","nextIndex","exprLen","expressions","shiftItems","quasis","j","templateLiteral","templateElement","appendLiteral","arr","list","start","offset","import_compiler9","getWalks","getWalkComment","getSteps","walkCodeToName","enter2","exit2","enterShallow","code","steps","walks","walkComment","walkString","walkCodes","step","lastIndexOf","current","walk","nCodeString","writeTo","number","toCharString","startCode","rangeSize","multiplier","getWalkString","prefix2","postfix","walkLiteral","join","getWrites","getTrailerWrites","trailer","exprsLen","writes","consumeHTML","trailers","writeResult","trailerResult","sequenceExpression","flushBefore","expr","insertBefore","skip","flushInto","pushContainer","getSectionMeta","writePrefix","writePostfix","setup","getSetup","markNode","getScopeAccessorLiteral","returnId","_setReturnId","usedTag","return_default","assertNoVar","assertAllowedAttributes","valueChange","getSerializedScopeProperties","returnId2","variableDeclaration","variableDeclarator","addValue","hasDownstreamIntersections","parseOptions","openTagOnly","descriptionMoreURL","forEachIdentifier","properties","left","argument","el","elements","import_compiler12","getDeclaredBindingExpression","declared","upstreamAlias","property","import_compiler13","createScopeReadPattern","rootDepth","rootPattern","objectPattern","nestedPatterns","ref","propertyKey","propertyValue","isShorthand","pattern","relativeDepth","prev","nestedPattern","getScopeExpression","targetSection","scopeIdentifier","diff","createScopeReadExpression","reference","import_compiler14","simplifyFunction","functionExpression","generator","import_compiler15","toFirstExpressionOrBlock","stmts","isExpressionStatement","expression","toParenthesizedExpressionIfNeeded","blockStatement","parenthesizedExpression","import_compiler16","traverseReplace","container","enter3","VISITOR_KEYS","replacement","traverseContains","check","getSignals","getClosureSignalBuilder","_setClosureSignalBuilder","setClosureSignalBuilder","builder","forceResumeScope","_setForceResumeScope","setForceResumeScope","unimplementedBuild","getSignal","generateSignalName","signals","signal","exportName","export","domExports","intersection","render","renderReferencedBindings","effect","effectReferencedBindings","subscribers","subscribe","getSignalFn","buildSignalIntersections","bindingUtil","ownerScope","isImmediateOwner","isDynamicClosure","arrowFunctionExpression","addStatement","initValue","runtimeHelper","valueAccessor","intersections","isParamBinding","scopeIdentifier2","valueIdentifier","isValueSignal","aliasSignal","getTranslatedExtraArgs","closureEntries","sort","_closureSection","closureSignal","hasTranslatedExtraArgs","emptyExtraArgs","extraArgs","replaceRenderNode","signal2","intersectionExpression","isMemberExpression","arrayExpression","provider","subscriber","p","providerSignal","finalizeSignalArgs","isArrowFunctionExpression","isBlockStatement","statement","usedReferences","statements","addEffectReferences","addRenderReferences","union","getResumeRegisterId","getTemplateId","usedRegisterIdsBySection","getRegisterUID","used","baseId","writeSignals","sortSignals","value2","effectDeclarator","replaceEffectNode","effectIdentifier","referencesScope","isScopeIdentifier","isCallExpression","arguments","register","signalDeclarator","signalDeclaration","isFunctionExpression","functionDeclaration","isExpression","exportNamedDeclaration","toReturnedFunction","rawFn","returnStatement","aReferencedBindings","getReferencedBindings","bReferencedBindings","reserve","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","tagVarIdentifier","allSignals","scopeIdIdentifier","currentSection","signalRefs","accessors","additionalProperties","serializedProperties","serialize","accessor","isLiteral","objectExpression","unshiftContainer","replaceAssignedNode","replaceBindingReadNode","replaceRegisteredFunctionNode","getReadReplacement","isAssignedBindingExtra","buildAssignment","assignment","binaryExpression","prefix","right","assignments","resultId","assignmentExpression","registeredFnsForProgram","getRegisteredFnExpression","classProperty","classPrivateProperty","isRegisteredFnExtra","referencedBindingsInFunction","registedFns","registerId","dom_default","templateIdentifier","template","walksIdentifier","setupIdentifier","paramsBinding","programParamsSignal","styleFile","fs","fileSystem","base","sep","leftDot","indexOf","rightDot","closeBracket","openBracket","getBase","styleMatch","file2","readdirSync","dirname","getStyleFile","importDefault","forEachSectionReverse","childSection","tagParamsSignal","walks2","writes2","setup2","renderer","registeredFns","registeredFn","assignmentPattern","stmt","writeRegisteredFns","exportDefaultDeclaration","import_compiler19","html_default","replaceNode","returnIdentifier","renderContent","child","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","replaceWithMultiple","htmlRendererIdentifier","read","replaceBindingReadNode2","getRegisteredFnExpression2","registeredFnDeclarations","registeredFnDeclarationsByBody","addRegisteredDeclarations","replaceRegisteredFunctionNode2","previousProgramPath","program_default","crawl","trackParamsReferences","getBindings","readsByExpression","getReadsByExpression","readsByFn","getReadsByFunction","mergedReferences","getMergedReferences","nodes","targetExtra","reads","isEffect","isReferencedExtra","additionalReads","concat","delete","intersectionsBySection","resolveReferencedBindings","pruneBinding","name3","section2","bindingReference","numReferences","binding1","binding2","sources1","getSourceBindings","sources2","isSuperset","sourceSection","bindings2","filter","finalizeReferences","buildTemplateExports","visitedFiles","resolved","loadFileForImport","req","resolveRelativeToEntry","compatFile","templateExport","props","exports2","getExprRoot","curPath","isMarko","getFnRoot","withPreviousLocation","newNode","originalNode","loc","end","getNextBindingId","setNextBindingId","createBinding","excludeProperties","propBinding","trackVarReferences","canonicalUpstreamAlias","getCanonicalBinding","pruned","createBindingsAndTrackReferences","trackAssignment","setReferencesScope","fnRoot","lVal","babelBinding","referencePaths","constantViolations","referencePath","trackReference","isUpdateExpression","trackReferencesForBinding","patternBinding","element","root","propPath","getMemberExpressionPropString","isEventOrChangeHandler","exprRoot","addReadToExpression","fnExtra","mergeReferences","compareIntersections","lenDelta","subset","elem","derived","sources","curBinding","this","aLen","bLen","aIndex","bIndex","aValue","bValue","delta","unionSortedRepeatable","exprExtra","dropReferences","getAllTagReferenceNodes","referenceNodes","shouldPrune","exprReference","resolveExpressionReference","createRead","readBinding","readProps","aliasProps","isStatefulBinding","await_default","valueAttr","isMarkoAttribute","isSpreadElement","bodySection","tagBody","import_compiler23","import_babel_utils13","client_default","rawValue","trim","parseStatements","markoScriptlet","rawOpenTag","import_compiler25","import_babel_utils14","import_compiler24","translateVar","initialValue","const_default","varBinding","derivation","import_compiler26","import_babel_utils15","debug_default","debuggerStatement","import_babel_utils20","import_compiler27","import_babel_utils16","getParentTag","attrTagToIdentifierLookup","getAttrTagIdentifier","meta","analyzeAttributeTags","attrTags2","lookup","attrTagNodesByName","sampleAttrTagsForControlFlow","createAttrTagMeta","isRepeated","isLoopTag","curGroup","crawlAttrTags","oldMeta","attrTagMeta","dynamic","repeated","controlFlowTag","sampleAttrName","attributeTagGroup","attrTagNodes","hasRepeatedDynamicAttrTags","attrTagNames","tagName","conditionRoot","seenBranches","attrTag2","parentTag","curConditionRoot","getConditionRoot","getPrevSibling","import_compiler30","import_babel_utils19","import_compiler29","import_babel_utils18","import_compiler28","import_babel_utils17","kNativeTagBinding","kSerializeMarker","kGetterId","htmlSelectArgs","getRelatedControllable","checked","checkedChange","special","helper","attrs","checkedValue","checkedValueChange","open","openChange","native_tag_default","escape","buildError","buildUndefined","hasEventHandlers","hasDynamicAttributes","seen","relatedControllable","spreadReferenceNodes","propName","exclusiveGroups","assertExclusiveControllableGroups","every","tagName2","toIdentifier","tagExtra","bindingName","isInvokedFunction","nodeRef2","isHTML","write2","getterId","varName","references","getterFnIdentifier","referenceSection","visitAccessor","usedAttrs","maybeStaticAttrs","spreadExpression","skipExpression","spreadProps","skipProps","staticControllable","attr3","spreadElement","staticAttrs","reverse","propsToExpression","getUsedAttrs","writeAtStartOfBody","firstAttr","spreadIdentifier","valueReferences","htmlType","ifStatement","selectArgs","callee","kForMarkerBinding","kOnlyChildInParent","for_default","isAttrTag","allowAttrs","getForType","isOnlyChildInParent","parentTagName","isStateful","forAttrs","forType","bodyStatements","hasStatefulClosures","singleNodeOptimization","keyExpression","defaultParamNames","in","defaultByParamIndex","requiredParamsIndex","by","existingParam","isFunction","byIdentifier","forTypeToHTMLByRuntime","forScopesIdentifier","newExpression","conditionalExpression","forTagArgs","getBaseArgsInForTag","forTagHTMLRuntime","forTypeToHTMLResumeRuntime","forTypeToRuntime","_closureSignal","forTypeToDOMRuntime","param","referencedBindings2","loopArgs","controlFlow","contentProps","translateAttrs","templateExports","contentKey","attrTagLookup","usesExport","addDynamicAttrTagStatements","translatedAttrTag","prevProp","findObjectProperty","contentExpression","isTransparentTag","getNonAttributeTagParent","buildContent","contentProp","getTranslatedBodyContentProperty","index","ifTag","consequentStatements","getConditionTestValue","addAllAttrTagsAsDynamic","nextTag","testValue","alternateStatements","translateIfAttrTag","forTag","buildForRuntimeCall","translateForAttrTag","define_default","translatedAttrs","import_compiler32","import_babel_utils21","effect_default","import_babel_utils22","export_default","import_compiler33","import_babel_utils23","kCommentTagBinding","kGetterId2","html_comment_default","needsBinding","needsGetter","isMarkoPlaceholder","isMarkoText","commentBinding","templateQuasis","templateExpressions","currentQuasi","text","import_compiler34","import_babel_utils24","kGetterId3","html_script_default","bodyPlaceholderNodes","hasBodyPlaceholders","getUsedAttrs2","referencePlaceholder","preserveWhitespace","import_compiler35","import_babel_utils25","kGetterId4","html_style_default","getUsedAttrs3","import_compiler36","import_babel_utils26","id_default","import_compiler38","import_babel_utils27","import_compiler37","kBinding","BRANCHES_LOOKUP","IfTag","assertHasBody","assertHasValueAttribute","assertHasPrecedingCondition","ifAttr","msg","assertOptionalIfAttribute","assertValidCondition","isLast","branches","getBranches","rootTag","rootExtra","mergeReferenceNodes","branchTag","branchBodySection","isRoot","getNextSibling","ifScopeIdIdentifier","ifRendererIdentifier","branchHasStatefulClosures","testAttr","curStatement","cbNode","nullLiteral","consequent","ElseIfTag","ElseTag","isMarkoComment","import_babel_utils28","import_default","import_compiler39","import_babel_utils29","let_default","valueChangeAttr","valueSection","import_compiler40","import_babel_utils30","kRef","lifecycle_default","lifecycleAttrsRef","import_compiler41","import_babel_utils31","log_default","import_compiler42","import_babel_utils32","htmlScriptTagAlternateMsg","script_default","valueFn","isAwaitExpression","seenValueAttr","isFunction2","inlineBody","hasDeclaration","isDeclaration","import_compiler43","import_babel_utils33","server_default","import_compiler44","import_babel_utils34","static_default","import_compiler45","import_babel_utils35","import_magic_string","import_path3","STYLE_EXT_REG","htmlStyleTagAlternateMsg","style_default","ext","exec","sourceMaps","markoText","resolveVirtualDependency","getStart","getEnd","magicString","generateMap","includeContent","toUrl","importPath","virtualPath","basename","importDefaultSpecifier","import_compiler46","import_babel_utils36","try_default","setAllSectionsParentIsOwner","core_default","cdata_default","cdata","comment_default","comment","declaration_default","document_type_default","documentType","import_compiler47","import_babel_utils37","functionIdsBySection","function_default","markoRoot","getMarkoRoot","isStatic2","declare","isVariableDeclarator","functionNameCounts","import_babel_utils38","import_declaration_default","importDecl","tagImport","tags","import_compiler48","kBinding2","kSiblingText","placeholder_default","placeholder","isVoid2","placeholderExtra","contentType","analyzeSiblingText","nodeBinding","canWriteHTML","method","siblingText","import_compiler49","abortIdsByExpressionForSection","referenced_identifier_default","hasBinding","throwStatement","exprId","abortIdsByExpression","scriptlet_default","scriptlet","import_compiler53","import_babel_utils42","import_babel_utils39","attribute_tag_default","findParentTag","import_compiler51","import_babel_utils40","import_path4","kChildScopeBinding","custom_tag_default","assertAttributesOrSingleArg","getTagTemplate","charAt","toUpperCase","childProgramExtra","analyzeAttrs","tagIdentifier","relativePath","getTagRelativePath","isCircularRequest","childScopeBinding","peekScopeId","inputExport","contentId","contentPath","renderTagExpr","callStatement","translateHTML","childExports","importOrSelfReferenceName","writeAttrsToExports","circular","importNamed","injectWalks","translateDOM","nodeReferencesByGroup","analyzeDynamicChildGroup","groupReferences","firstTag","attrTagName","childAttrExports","childUsesGroupProp","importAlias","tagInputIdentifier","identifierToSignal","translatedProps","statementsByGroup","translateDynamicAttrTagChildInGroup","childAttrExport","decls","attrExportIdentifier","contentExportIdentifier","missing","getMissingPropValue","buildUndefined2","spreadId","request","nameHint","resolve","always","import_compiler52","import_babel_utils41","kDOMBinding","dynamic_tag_default","assertAttributesOrArgs","domBinding","isClassAPI","tagExpression","hasMultipleArgs","splice","dynamicScopeIdentifier","dynamicTagExpr","logicalExpression","childScopeLiteral","argsOrInput","attrsGetter","added","TAG_NAME_IDENTIFIER_REG","tag_default","bound","changeValue","getChangeHandler","hook","analyzer","translator","watchFiles","modifier","tagNameId","tagNameVarPath","valueId","cloneNode","isPrivateName","visitors","visitors2","_name","extractVisitors","Program","ReferencedIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment"],"sourceRoot":""}