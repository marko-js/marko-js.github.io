{"version":3,"file":"664.fa595168.js","mappings":"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","sources":["webpack:///../components/repl/components/file-tabs.marko","webpack:///../components/repl/components/pane.marko","webpack:///../components/repl/components/controllable-select.marko","webpack:///../components/repl/components/playground-link.marko","webpack:///../components/repl/components/match-media.marko","webpack:///../components/repl/components/resizable-panes.marko","webpack:///../components/repl/index.marko","webpack:///./playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ value: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <if=activeEditor>\n          <activeEditor\n            value=selectedFile.content \n            filename=selectedFile.path \n            valueChange(content) {\n              const modifiedFile = { ...selectedFile, content };\n              files = [\n                ...files.slice(0, selectedIndex), \n                modifiedFile,\n                ...files.slice(selectedIndex+1)\n              ];\n              debounce = true;\n            }/>\n        </if>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nstatic function getInitialValue() {\n  try {\n    if (typeof window !== \"undefined\") {\n      return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\n<attrs/{ value:defaultValue }/>\n<let/value = getInitialValue() || defaultValue/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removeEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","// src/visitors/program/index.ts\nimport { types as t12 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t9 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              const defaultAttr = bindingTag.get(\"attributes\")[0];\n              if (defaultAttr.node) {\n                pending.push(defaultAttr.get(\"value\"));\n              } else {\n                nullable = true;\n              }\n              const assignments = binding.constantViolations;\n              for (let i = assignments.length; i--; ) {\n                const assignment = assignments[i];\n                const { operator } = assignment.node;\n                if (operator === \"=\") {\n                  pending.push(assignment.get(\"right\"));\n                } else if (operator === \"+=\") {\n                  type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n                } else {\n                  type = 2 /* DynamicTag */;\n                  break;\n                }\n              }\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = isOutputHTML() ? type : 2 /* DynamicTag */;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sectionNameNode = path3.parent?.name;\n    const sectionName = sectionNameNode?.value ?? sectionNameNode?.name ?? \"dynamic\";\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n    programExtra.sectionNames = programExtra.sectionNames ?? [];\n    programExtra.sectionNames[sectionId] = currentProgramPath.scope.generateUid(sectionName + \"Body\");\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init(sectionId);\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nvar [getScopeIdentifier] = createSectionState(\"scopeIdentifier\", (sectionId) => currentProgramPath.scope.generateUidIdentifier(`scope${sectionId}_`));\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/sorted-arr.ts\nfunction insertInArray(compare, arr, val) {\n  const len = arr.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return arr;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = val;\n  while (pos < len) {\n    const next = cur;\n    cur = arr[pos];\n    arr[pos++] = next;\n  }\n  arr[len] = cur;\n  return arr;\n}\nfunction findIndex(compare, arr, val) {\n  let max = arr.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return mid;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  return -1;\n}\nfunction createSortedCollection(compare) {\n  return {\n    insert(data, val, immutable = false) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return insertInArray(compare, immutable ? [...data] : data, val);\n        } else {\n          const compareResult = compare(data, val);\n          if (compareResult !== 0) {\n            return compareResult < 0 ? [data, val] : [val, data];\n          }\n        }\n      }\n      return val;\n    },\n    find(data, val) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return data[findIndex(compare, data, val)];\n        } else {\n          return data === val ? data : void 0;\n        }\n      }\n    },\n    count(data) {\n      if (data === void 0)\n        return 0;\n      if (!Array.isArray(data))\n        return 1;\n      return data.length;\n    }\n  };\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getNodeLiteral(reserve) {\n  if (!isOptimize()) {\n    return t2.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n  }\n  return t2.numericLiteral(reserve.id);\n}\nfunction compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n}\nvar { insert: insertReserve, count: countReserves } = createSortedCollection(compareReserves);\n\n// src/util/runtime.ts\nimport { types as t3 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val == null ? \"\" : val + \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (val == null) {\n      return \"\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"source\",\n  \"derivation\",\n  \"subscriber\",\n  \"closure\",\n  \"loop\",\n  \"conditional\",\n  \"destructureSources\",\n  \"bind\",\n  \"bindRenderer\",\n  \"inLoopScope\",\n  \"inConditionalScope\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t3.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t3.memberExpression(getScopeExpression(reference, targetSectionId), getNodeLiteral(reference), true);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t3.memberExpression(scope, t3.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t3.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t7 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t6 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t4 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t4.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t4.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t4.templateLiteral(strs.map((raw) => t4.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t4.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t5 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t5.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (sectionId) => {\n  const name = currentProgramPath.node.extra.sectionNames[sectionId];\n  return t6.identifier(name);\n});\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t6.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    apply: getSetup(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t6.stringLiteral(\"\"),\n    register: getRegisterRenderer(sectionId)\n  };\n}\nfunction markNode(path3) {\n  const sectionId = getSectionId(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markHydrateNode\", getScopeIdentifier(sectionId), getNodeLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const sectionId = getSectionId(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t7.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(sectionId, returnId2);\n      tag.replaceWith(t7.variableDeclaration(\"const\", [\n        t7.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      const signal = getSignal(sectionId, defaultAttr.extra?.valueReferences?.references);\n      const tagVarSignalIdentifier = importRuntime(\"tagVarSignal\");\n      signal.subscribers.push(tagVarSignalIdentifier);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t7.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, t7.identifier(tagVarSignalIdentifier.name), defaultAttr.value)));\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar [forceHydrateScope, _setForceHydrateScope] = createSectionState(\"forceHydrateScope\");\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getHydrateScopeBuilder, setHydrateScopeBuilder] = createSectionState(\"hydrateScopeBuilder\");\nfunction setForceHydrateScope(sectionId) {\n  _setForceHydrateScope(sectionId, true);\n}\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction getSignal(sectionId, reserve) {\n  const key = !Array.isArray(reserve) ? reserve : reserve.map((r) => `${r.sectionId}/${r.id}`).sort().join(\"-\");\n  const signals = getSignals(sectionId);\n  let signal = signals.get(key);\n  if (!signal) {\n    signals.set(key, signal = {\n      identifier: t8.identifier(generateSignalName(sectionId, reserve)),\n      reserve,\n      sectionId,\n      render: [],\n      hydrate: [],\n      hydrateInlineReferences: void 0,\n      subscribers: []\n    });\n    if (!reserve) {\n      signal.build = () => {\n        for (const subscriber of signal.subscribers) {\n          signal.render.push(t8.expressionStatement(callRuntime(\"notifySignal\", scopeIdentifier, subscriber)));\n        }\n        return t8.arrowFunctionExpression([scopeIdentifier], t8.blockStatement(signal.render));\n      };\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"subscriber\", t8.arrayExpression(signal.subscribers), t8.numericLiteral(reserve.length), getComputeFn(sectionId, t8.blockStatement(signal.render), reserve));\n      };\n    } else if (reserve.sectionId !== sectionId) {\n      getClosures(sectionId).push(signal.identifier);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(sectionId);\n        const provider = getSignal(reserve.sectionId, reserve);\n        if (builder) {\n          provider.subscribers.push(builder(signal.identifier));\n        } else if (!provider.hasDynamicSubscribers) {\n          provider.hasDynamicSubscribers = true;\n          provider.subscribers.push(callRuntime(\"dynamicSubscribers\", getNodeLiteral(reserve)));\n        }\n        return callRuntime(builder ? \"closure\" : \"dynamicClosure\", t8.numericLiteral(1), getNodeLiteral(reserve), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n      };\n    } else {\n      signal.build = () => {\n        return t8.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n      };\n    }\n  }\n  return signal;\n}\nfunction initSource(reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"source\", getNodeLiteral(reserve), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  return signal;\n}\nfunction initDerivation(reserve, providers, compute) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"derivation\", getNodeLiteral(reserve), t8.numericLiteral(Array.isArray(providers) ? providers.length : 1), t8.arrayExpression(signal.subscribers), getComputeFn(sectionId, compute, providers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  subscribe(providers, signal);\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const sectionId = reserve.sectionId;\n  const scopeAccessor = getNodeLiteral(reserve);\n  const valueAccessor = t8.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"derivation\", valueAccessor, t8.numericLiteral(Array.isArray(providers) ? providers.length : 1), t8.arrayExpression(signal.subscribers), getComputeFn(sectionId, compute, providers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  subscribe(providers, signal);\n  signal.subscribers.push(callRuntime(\"dynamicSubscribers\", valueAccessor));\n  addStatement(\"apply\", reserve.sectionId, void 0, t8.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t8.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  getClosures(sectionId).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getNodeLiteral(reserve), t8.stringLiteral(templateId), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  return signal;\n}\nfunction getComputeFn(sectionId, body, references) {\n  const params = [scopeIdentifier];\n  if (Array.isArray(references)) {\n    references.forEach((binding) => params.push(t8.assignmentPattern(t8.identifier(binding.name), callRead(binding, sectionId))));\n  } else if (references) {\n    params.push(t8.assignmentPattern(t8.identifier(references.name), callRead(references, sectionId)));\n  }\n  return t8.arrowFunctionExpression(params, body);\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.sectionId, provider);\n  providerSignal.subscribers.push(subscriber.identifier);\n}\nfunction generateSignalName(sectionId, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\";\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSectionId) {\n  return callRuntime(\"queueSource\", getScopeExpression2(source.sectionId, targetSectionId), source.identifier, value);\n}\nfunction getScopeExpression2(ownerSectionId, sectionId) {\n  const diff = ownerSectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t8.memberExpression(scope, t8.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t8.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t8.nullLiteral();\n        } else if (body.length === 1 && t8.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t8.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSectionId, references, statement, originalNodes, isInlined) {\n  const reserve = references?.references;\n  const signal = getSignal(targetSectionId, reserve);\n  const statements = signal[type === \"apply\" ? \"render\" : \"hydrate\"] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"hydrate\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t8.isFunction(node)) {\n          addHydrateReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t8.isFunction(originalNodes)) {\n        addHydrateReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addHydrateReferences(signal, expression) {\n  const references = expression.extra?.references?.references;\n  let refs = signal.hydrateInlineReferences;\n  if (references) {\n    if (Array.isArray(references)) {\n      for (const ref of references) {\n        refs = insertReserve(refs, ref);\n      }\n    } else {\n      refs = insertReserve(refs, references);\n    }\n  }\n  signal.hydrateInlineReferences = refs;\n}\nfunction getHydrateRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeSignals(sectionId) {\n  const signals = getSignals(sectionId);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t8.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), value);\n    }\n    const signalDeclarator = t8.variableDeclarator(signal.identifier, value);\n    let hydrateDeclarator;\n    if (signal.hydrate.length) {\n      const hydrateIdentifier = t8.identifier(\"_hydrate\" + signal.identifier.name);\n      if (signal.hydrateInlineReferences) {\n        signal.hydrate.unshift(t8.variableDeclaration(\"const\", (Array.isArray(signal.hydrateInlineReferences) ? signal.hydrateInlineReferences : [signal.hydrateInlineReferences]).map((binding) => t8.variableDeclarator(t8.identifier(binding.name), callRead(binding, sectionId)))));\n      }\n      hydrateDeclarator = t8.variableDeclarator(hydrateIdentifier, callRuntime(\"register\", t8.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), t8.arrowFunctionExpression([scopeIdentifier], signal.hydrate.length === 1 && t8.isExpressionStatement(signal.hydrate[0]) ? signal.hydrate[0].expression : t8.blockStatement(signal.hydrate))));\n      signal.render.push(t8.expressionStatement(callRuntime(\"queueHydrate\", scopeIdentifier, hydrateIdentifier)));\n    }\n    if (t8.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    return hydrateDeclarator ? [\n      t8.variableDeclaration(\"const\", [hydrateDeclarator]),\n      t8.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t8.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, sectionId }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLHydrateCall(sectionId, references) {\n  addStatement(\"hydrate\", sectionId, references, void 0, []);\n}\nfunction writeHTMLHydrateStatements(path3, tagVarIdentifier) {\n  const sectionId = getOrCreateSectionId(path3);\n  const allSignals = Array.from(getSignals(sectionId).values());\n  const scopeIdentifier2 = getScopeIdentifier(sectionId);\n  path3.unshiftContainer(\"body\", t8.variableDeclaration(\"const\", [\n    t8.variableDeclarator(scopeIdentifier2, callRuntime(\"nextScopeId\"))\n  ]));\n  const refs = [];\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].hydrate.length) {\n      const references = allSignals[i].reserve;\n      if (references) {\n        if (Array.isArray(references)) {\n          for (const ref of references) {\n            insertReserve(refs, ref);\n          }\n        } else {\n          insertReserve(refs, references);\n        }\n      }\n      path3.pushContainer(\"body\", t8.expressionStatement(callRuntime(\"writeHydrateCall\", scopeIdentifier2, t8.stringLiteral(getHydrateRegisterId(sectionId, references)))));\n    }\n  }\n  const serializedProperties = refs.reduce((acc, ref) => {\n    acc.push(t8.objectProperty(getNodeLiteral(ref), t8.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(sectionId) !== void 0) {\n    serializedProperties.push(t8.objectProperty(t8.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(sectionId);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t8.objectProperty(key, value, !t8.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceHydrateScope(sectionId)) {\n    const hydrateScopeBuilder = getHydrateScopeBuilder(sectionId);\n    path3.pushContainer(\"body\", t8.expressionStatement(callRuntime(\"writeHydrateScope\", scopeIdentifier2, hydrateScopeBuilder ? hydrateScopeBuilder(t8.objectExpression(serializedProperties)) : t8.objectExpression(serializedProperties))));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t8.blockStatement([t8.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t8.variableDeclaration(\"const\", (Array.isArray(references) ? references : [references]).map((binding) => t8.variableDeclarator(t8.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t8.variableDeclaration(\"const\", [\n    t8.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bind\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(sectionId) {\n  return getSignals(sectionId).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLHydrateStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(0);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t9.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      program.pushContainer(\"body\", [\n        t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(rendererId, t9.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t9.identifier(\"input\"),\n            tagVarIdentifier\n          ], t9.blockStatement(renderContent)))\n        ]),\n        t9.exportDefaultDeclaration(rendererId),\n        t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(t9.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t10 } from \"@marko/compiler\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t10.identifier(\"template\");\n      const walksIdentifier = t10.identifier(\"walks\");\n      const setupIdentifier = t10.identifier(\"setup\");\n      const attrsSignalIdentifier = t10.identifier(\"attrs\");\n      const closuresIdentifier = t10.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, apply } = getSectionMeta(sectionId);\n      forEachSectionIdReverse((childSectionId) => {\n        writeSignals(childSectionId);\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, apply: apply2, register: register2 } = getSectionMeta(childSectionId);\n          const closures2 = getClosures(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, apply2, closures2.length && t10.arrayExpression(closures2));\n          program.node.body.push(t10.variableDeclaration(\"const\", [\n            t10.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t10.stringLiteral(getHydrateRegisterId(childSectionId, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const subscribers = [];\n        const statements = [];\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(sectionId, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t10.exportSpecifier(signalIdentifier, bindingIdentifier.extra.reserve.exportIdentifier));\n          subscribers.push(signalIdentifier);\n          statements.push(t10.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, signalIdentifier, bindingIdentifier)));\n        }\n        program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(attrsSignalIdentifier, callRuntime(\"destructureSources\", t10.arrayExpression(subscribers), t10.arrowFunctionExpression([scopeIdentifier, attrs2.var], t10.blockStatement(statements))))\n        ])), t10.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(sectionId);\n      program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(templateIdentifier, writes || t10.stringLiteral(\"\"))\n      ])), t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(walksIdentifier, walks || t10.stringLiteral(\"\"))\n      ])), t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(setupIdentifier, t10.isNullLiteral(apply) || !apply ? t10.functionExpression(null, [], t10.blockStatement([])) : apply)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(closuresIdentifier, t10.arrayExpression(closures))\n        ])));\n      }\n      program.node.body.push(t10.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier)));\n    }\n  }\n};\n\n// src/util/references.ts\nimport { types as t11 } from \"@marko/compiler\";\nvar [getReferenceGroups] = createSectionState(\"apply\", () => [\n  {\n    sectionId: 0,\n    index: 0,\n    count: 0,\n    references: void 0,\n    apply: t11.identifier(\"\"),\n    hydrate: t11.identifier(\"\")\n  }\n]);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3, reserveType = 1 /* Store */) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(reserveType, sectionId, identifier, name);\n    insertReferenceGroup(getReferenceGroups(sectionId), {\n      sectionId,\n      index: 0,\n      count: 0,\n      references: binding,\n      apply: t11.identifier(\"\"),\n      hydrate: t11.identifier(\"\")\n    });\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        updateReferenceGroup(immediateRoot, \"references\", binding);\n      }\n      updateReferenceGroup(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction updateReferenceGroup(path3, extraKey, newBinding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const currentGroup = (path3.node.extra ??= {})[extraKey];\n  const newReferences = insertReserve(currentGroup?.references, newBinding, true);\n  if (currentGroup) {\n    currentGroup.count--;\n  }\n  getOrCreateReferenceGroup(sectionId, newBinding);\n  path3.node.extra[extraKey] = getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction mergeReferenceGroups(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const group = extra[key];\n    const references = group.references;\n    delete extra[key];\n    group.count--;\n    sectionId = group.sectionId;\n    if (references) {\n      if (Array.isArray(references)) {\n        for (const binding of references) {\n          newReferences = insertReserve(newReferences, binding);\n        }\n      } else {\n        newReferences = insertReserve(newReferences, references);\n      }\n    }\n  }\n  return getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction getOrCreateReferenceGroup(sectionId, references) {\n  const newGroup = {\n    sectionId,\n    index: 0,\n    count: 1,\n    references,\n    apply: t11.identifier(\"\"),\n    hydrate: t11.identifier(\"\")\n  };\n  const referenceGroups = getReferenceGroups(sectionId);\n  const existingGroup = findReferenceGroup(referenceGroups, newGroup);\n  if (existingGroup) {\n    existingGroup.count++;\n  } else {\n    insertReferenceGroup(referenceGroups, newGroup);\n  }\n  return existingGroup ?? newGroup;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nvar { insert: insertReferenceGroup, find: findReferenceGroup } = createSortedCollection(function compareReferenceGroups({ references: a }, { references: b }) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        if (Array.isArray(b)) {\n          const len = a.length;\n          const lenDelta = len - b.length;\n          if (lenDelta !== 0) {\n            return lenDelta;\n          }\n          for (let i = 0; i < len; i++) {\n            const compareResult = compareReserves(a[i], b[i]);\n            if (compareResult !== 0) {\n              return compareResult;\n            }\n          }\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (Array.isArray(b)) {\n        return -1;\n      } else {\n        return compareReserves(a, b);\n      }\n    } else {\n      return 1;\n    }\n  } else {\n    return b ? -1 : 0;\n  }\n});\nfunction finalizeReferences() {\n  const allReferenceGroups = [];\n  forEachSectionId((sectionId) => {\n    const referenceGroups = getReferenceGroups(sectionId).filter((g) => g.count > 0 || !Array.isArray(g.references));\n    referenceGroups.forEach((g, i) => {\n      g.index = i;\n      g.apply.name = generateReferenceGroupName(\"apply\", sectionId, g.references);\n      g.hydrate.name = generateReferenceGroupName(\"hydrate\", sectionId, g.references);\n    });\n    allReferenceGroups[sectionId] = referenceGroups;\n  });\n  (currentProgramPath.node.extra ??= {}).referenceGroups = allReferenceGroups;\n}\nfunction getReferenceGroup(sectionId, lookup, analyze2 = false) {\n  const referenceGroups = analyze2 ? getReferenceGroups(sectionId) : currentProgramPath.node.extra.referenceGroups[sectionId];\n  let found;\n  if (typeof lookup === \"number\") {\n    found = referenceGroups[lookup];\n  } else {\n    found = findReferenceGroup(referenceGroups, {\n      references: lookup\n    });\n  }\n  if (!found) {\n    throw new Error(`Reference group not found for section ${sectionId}: ${lookup}`);\n  }\n  return found;\n}\nfunction generateReferenceGroupName(type, sectionId, references) {\n  let name = type + (sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\");\n  if (references) {\n    if (Array.isArray(references)) {\n      name += \"With\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return currentProgramPath.scope.generateUid(name);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeReferences();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t12.importDeclaration([], t12.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t12.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t13.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t14.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t14.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t14.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t15.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t15.isMarkoTag(sibling) || t15.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t16 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t16);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t20 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t18 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t17 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t17.identifier(name) : t17.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t18.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t18.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t18.spreadElement(value));\n    } else {\n      result.properties.push(t18.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t18.objectMethod(\"method\", t18.identifier(\"renderBody\"), params, t18.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t18.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t18.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t18.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t19 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t19.variableDeclaration(kind, [\n    t19.variableDeclarator(t19.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, name, `#${node.name.value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t20.arrowFunctionExpression([], t20.blockStatement([\n            t20.throwStatement(t20.newExpression(t20.identifier(\"Error\"), [\n              t20.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSectionId = getSectionId(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t20.expressionStatement(callRead(extra.reserve, referenceSectionId)));\n            } else {\n              createElFunction ??= t20.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bind\", getScopeExpression(extra.reserve, referenceSectionId), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t20.variableDeclaration(\"const\", [\n              t20.variableDeclarator(createElFunction, t20.arrowFunctionExpression([scopeIdentifier], t20.memberExpression(scopeIdentifier, getNodeLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getNodeLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t20.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t20.expressionStatement(callRuntime(helper, t20.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLHydrateCall(sectionId, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t20.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"hydrate\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"on\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"attr\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLHydrateStatements(tagBody);\n  if (t21.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t21.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t21.objectProperty(t21.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t21.unaryExpression(\"void\", t21.numericLiteral(0)), \"let\");\n      renderTagExpr = t21.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t21.ifStatement(tagIdentifier, t21.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const sectionId = getSectionId(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t21.arrowFunctionExpression([], t21.blockStatement([])), t21.stringLiteral(getHydrateRegisterId(sectionId, node.var.extra?.reserve)), getScopeIdentifier(sectionId))));\n    setForceHydrateScope(sectionId);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSectionId = getSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySectionId = getSectionId(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSectionId).push(callRuntime(\"inChildMany\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getNodeLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySectionId !== tagSectionId) {\n    attrsObject ??= t21.objectExpression([]);\n    attrsObject.properties.push(t21.objectProperty(t21.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySectionId))));\n  }\n  if (node.var) {\n    const source = initSource(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"apply\", tagSectionId, void 0, t21.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getNodeLiteral(binding), source.identifier)));\n  }\n  addStatement(\"apply\", tagSectionId, void 0, t21.expressionStatement(t21.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n  if (attrsObject && tagAttrsIdentifier) {\n    let attrsSubscriber = callRuntime(\"inChild\", tagAttrsIdentifier, getNodeLiteral(binding));\n    if (!tag.node.extra.attrsReferences.references) {\n      const tagAttrsIdentifierInChild = currentProgramPath.scope.generateUidIdentifier(`${tagName}_attrs_inChild`);\n      currentProgramPath.pushContainer(\"body\", t21.variableDeclaration(\"const\", [\n        t21.variableDeclarator(tagAttrsIdentifierInChild, attrsSubscriber)\n      ]));\n      attrsSubscriber = tagAttrsIdentifierInChild;\n    }\n    getSignal(tagSectionId, tag.node.extra.attrsReferences.references).subscribers.push(attrsSubscriber);\n    addStatement(\"apply\", tagSectionId, tag.node.extra.attrsReferences, t21.expressionStatement(callRuntime(\"setSource\", callRead(binding, tagSectionId), t21.identifier(tagAttrsIdentifier.name), attrsObject)));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t21.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t21.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t21.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t23 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t22 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t22.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t22.isBlockStatement(body)) {\n    return body;\n  }\n  return t22.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferenceGroups(getOrCreateSectionId(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      updateReferenceGroup(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t23.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t23.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t23.expressionStatement(dynamicTagExpr))[0].skip();\n        }\n      } else {\n        const sectionId = getSectionId(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const hasBody = sectionId !== bodySectionId;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySectionId);\n        const tagNameReserve = node.extra?.reserve;\n        const references = node.extra?.nameReferences?.references;\n        const signal = getSignal(sectionId, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getNodeLiteral(tagNameReserve), t23.numericLiteral(countReserves(references) || 1), getComputeFn(sectionId, renderBodyIdentifier ? t23.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name, references), signal.subscribers[0], t23.arrowFunctionExpression([scopeIdentifier], t23.blockStatement(signal.render)));\n        };\n        subscribe(references, signal);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const attrsSignal = getSignal(sectionId, node.extra?.attrsReferences.references);\n          attrsSignal.subscribers.push(callRuntime(\"dynamicAttrsProxy\", getNodeLiteral(tagNameReserve)));\n          addStatement(\"apply\", sectionId, node.extra?.attrsReferences, t23.expressionStatement(callRuntime(\"dynamicTagAttrs\", scopeIdentifier, getNodeLiteral(tagNameReserve), t23.arrowFunctionExpression([], attrsObject ?? t23.objectExpression([])), renderBodyIdentifier)));\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t24.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(info.identifier, t24.arrayExpression([]))\n          ]) : t24.variableDeclaration(\"let\", [\n            t24.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t24.expressionStatement(info.repeated ? t24.callExpression(t24.memberExpression(info.identifier, t24.identifier(\"push\")), [attrsObject]) : t24.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, t24.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t25.variableDeclaration(\"const\", [\n          t25.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"apply\", getSectionId(placeholder), valueReferences, t26.expressionStatement(method === \"data\" ? callRuntime(\"data\", t26.memberExpression(scopeIdentifier, getNodeLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getNodeLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t26.isMarkoComment(path3) || t26.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"apply\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      const sectionId = getOrCreateSectionId(tag);\n      trackReferencesForBindings(sectionId, varPath, 1 /* Store */);\n      for (const key in bindings) {\n        const binding = bindings[key].extra.reserve;\n        binding.exportIdentifier = getReferenceGroup(sectionId, binding, true).apply;\n      }\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initSource(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t28 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t27 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t27.isBlockStatement(body)) {\n    return body;\n  }\n  return t27.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t28.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferenceGroups(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences.references;\n    rootExtra.hoistedScopeIdentifier = rootExtra.isStateful && tag.scope.generateUidIdentifier(\"ifScope\");\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const sectionId = getSectionId(tag);\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markHydrateScopeStart\", getScopeIdentifier(bodySectionId))}`;\n      }\n      setHydrateScopeBuilder(bodySectionId, (object) => {\n        return t28.callExpression(t28.memberExpression(t28.identifier(\"Object\"), t28.identifier(\"assign\")), [\n          branches[0].tag.node.extra.hoistedScopeIdentifier,\n          object\n        ]);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdentifier(sectionId));\n    }\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t28.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return callRuntime(\"inConditionalScope\", subscriber, getNodeLiteral(extra.reserve));\n        });\n        if (isStateful) {\n          setRegisterRenderer(sectionId2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t28.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const references = extra.conditionalReferences.references;\n      const signal = getSignal(sectionId, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getNodeLiteral(extra.reserve), t28.numericLiteral(countReserves(references) || 1), getComputeFn(sectionId, expr, references));\n      };\n      subscribe(references, signal);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = branches[0].tag.node.extra.hoistedScopeIdentifier;\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        if (isStateful) {\n          tag2.node.body.body.push(t28.expressionStatement(callRuntime(\"register\", ifRendererIdentifier, t28.stringLiteral(getHydrateRegisterId(sectionId2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t28.expressionStatement(t28.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdentifier(sectionId2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t28.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          singleNodeOptimization && t28.variableDeclaration(\"let\", [\n            t28.variableDeclarator(ifScopeIdIdentifier)\n          ]),\n          t28.variableDeclaration(\"const\", [\n            t28.variableDeclarator(ifScopeIdentifier, t28.objectExpression([])),\n            t28.variableDeclarator(ifRendererIdentifier, t28.arrowFunctionExpression([], t28.blockStatement([])))\n          ]),\n          statement\n        ].filter(Boolean));\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markHydrateControlSingleNodeEnd\", getScopeIdentifier(sectionId), getNodeLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markHydrateControlEnd\", getScopeIdentifier(sectionId), getNodeLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t29.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      if (identifiers.length === 1) {\n        initDerivation(identifiers[0].extra.reserve, defaultAttr.extra?.valueReferences?.references, defaultAttr.value);\n      } else {\n      }\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t31.isFunctionExpression(value) || t31.isArrowFunctionExpression(value) && t31.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t31.traverse(value.body, (node2) => {\n            if (t31.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"hydrate\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t31.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLHydrateCall(sectionId, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const sectionId = getSectionId(tag);\n      reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"hydrate\", sectionId, node.extra.attrsReferences, t32.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLHydrateCall(sectionId, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t33.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t33.variableDeclaration(\"const\", [t33.variableDeclarator(node.var, id)]));\n    } else {\n      initDerivation(tagVar.extra.reserve, void 0, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    const ofAttr = findName(attributes, \"of\");\n    const byAttr = findName(attributes, \"by\");\n    setSubscriberBuilder(tag, (signal) => {\n      return callRuntime(\"inLoopScope\", signal, getNodeLiteral(reserve));\n    });\n    if (ofAttr) {\n      const ofAttrValue = ofAttr.value;\n      const [valParam] = params;\n      if (!t34.isIdentifier(valParam)) {\n        throw tag.buildCodeFrameError(`Invalid 'for of' tag, |value| parameter must be an identifier.`);\n      }\n      const rendererId = getRenderer(bodySectionId);\n      tag.remove();\n      const references = ofAttr.extra?.valueReferences?.references;\n      const signal = getSignal(sectionId, reserve);\n      signal.build = () => {\n        const bindings = paramsPath.reduce((paramsLookup, param) => {\n          return Object.assign(paramsLookup, param.getBindingIdentifiers());\n        }, {});\n        return callRuntime(\"loop\", getNodeLiteral(reserve), t34.numericLiteral(countReserves(references) || 1), rendererId, t34.arrayExpression(Object.values(bindings).map((binding) => getSignal(bodySectionId, binding.extra.reserve).identifier)), t34.arrowFunctionExpression([scopeIdentifier, t34.arrayPattern(params)], t34.blockStatement(Object.values(bindings).map((binding) => {\n          return t34.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, getSignal(bodySectionId, binding.extra.reserve).identifier, binding));\n        }))), getComputeFn(sectionId, t34.arrayExpression([\n          ofAttrValue,\n          byAttr ? byAttr.value : t34.nullLiteral()\n        ]), references));\n      };\n      subscribe(references, signal);\n      for (const param of params) {\n        initSource(param.extra?.reserve);\n      }\n    }\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const tagBody = tag.get(\"body\");\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params }\n    } = node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const fromAttr = findName(attributes, \"from\");\n    const toAttr = findName(attributes, \"to\");\n    const block = t34.blockStatement(body);\n    let forNode;\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      if (valParam) {\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(valParam, t34.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      forNode = t34.forInStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(keyParam)]), inAttr.value, block);\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      const [valParam, keyParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      forNode = [];\n      if (keyParam) {\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(keyParam, \"i\");\n        forNode.push(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(indexName, t34.numericLiteral(0))\n        ]));\n        block.body.unshift(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(keyParam, t34.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t34.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        forNode.push(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      forNode.push(t34.forOfStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (fromAttr && toAttr) {\n      const stepAttr = findName(attributes, \"step\") || {\n        value: t34.numericLiteral(1)\n      };\n      const stepValue = stepAttr ? stepAttr.value : t34.numericLiteral(1);\n      const [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      if (indexParam) {\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(indexParam, t34.binaryExpression(\"+\", fromAttr.value, t34.binaryExpression(\"*\", stepName, stepValue)))\n        ]));\n      }\n      forNode = t34.forStatement(t34.variableDeclaration(\"let\", [\n        t34.variableDeclarator(stepsName, t34.binaryExpression(\"/\", t34.binaryExpression(\"-\", toAttr.value, fromAttr.value), stepValue)),\n        t34.variableDeclarator(stepName, t34.numericLiteral(0))\n      ]), t34.binaryExpression(\"<=\", stepName, stepsName), t34.updateExpression(\"++\", stepName), block);\n    }\n    block.body.push(t34.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple([].concat(forNode));\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t34.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"from\") && findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t34.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId2,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const sectionId = getOrCreateSectionId(tag);\n      if (sectionId === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t35.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t35.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId2(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(node.var, callRuntime(\"getInContext\", t35.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t36 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const [defaultAttr] = node.attributes;\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t36.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t36.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initSource(binding);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t36.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, source.identifier, defaultAttr.value)));\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t37.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t37.expressionStatement(callRuntime(\"pushContext\", t37.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySectionId);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences?.references, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLHydrateStatements(tag.get(\"body\"));\n        tag.insertAfter(t37.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t38 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([], t38.stringLiteral(importPath)));\n      } else if (t38.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([t38.importDefaultSpecifier(tag.node.var)], t38.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t38.variableDeclaration(\"const\", [\n          t38.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t39 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t39.variableDeclaration(\"const\", [\n        t39.variableDeclarator(tag.node.var, t39.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t40 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t40.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t40.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t41 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t41.markoTag(t41.stringLiteral(\"attrs\"), void 0, t41.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t41.isMemberExpression(identifier.parent) && t41.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t41.markoTag(t41.stringLiteral(\"get\"), void 0, t41.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["_selectedIndexChange","_filesChange","files","externalFiles","selectedIndex","externalSelected","input","_filesSet","_files","_component","setState","_state","_selectedIndexSet","_selectedIndex","selectedFile","out","be","_component4","nextId","_nextIdSet","_nextId","_index","file","index","_keyScope","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_componentDef","editing","_editingSet","_editing","selected","mutable","_marko_class_merge","d","_assign","_nestedComponentDef2","_component3","_state3","name","finishRename","_cache","_cached","modifiedFile","path","replace","slice","nameInput","_createRef","_valueChange","_name","e","length","pa","code","target","value","_lifecycle","focus","setSelectionRange","indexOf","t","window","confirm","stopPropagation","ee","newFile","content","newIndex","concat","_end","_marko_componentType","_marko_component","_marko_template","Component","_marko_defineComponent","_","actions","body","_marko_dynamic_tag","i","valueChange","class","className","el","_effect","_marko_node","_marko_createElement","_marko_registerComponent","_marko_renderer","state","_begin","attrs","_meta","_marko_attrs","_extractHandlers","compressToEncodedURIComponent","JSON","stringify","n","query","fallback","isMatch","matchMedia","matches","_isMatchSet","_isMatch","mq","listener","addEventListener","removeEventListener","_return","left","right","editorSize","_editorSizeSet","_editorSize","resizing","_resizingSet","_resizing","_matchMediaReturn","_matchMedia","isVertical","container","preventDefault","_meta2","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","_marko_node2","_marko_node3","onCreate","_component7","getCompilerOptions","previewType","_previewTypeSet","_previewType","debounce","_debounceSet","_debounce","_resizablePanes","_pane","_fileTabs","_assign2","activeEditor","_activeEditorSet","_activeEditor","_nestedComponentDef3","_state4","loading","_nestedComponentDef4","_component5","_state5","_controllableSelect","_playgroundLink","_nestedComponentDef5","_component6","_state6","preview","_previewSet","_preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","getInitialValue","_valueSet","_value","this","isUpdating","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","defaultAttr","assignments","constantViolations","assignment","tagNameDynamic","startSection","sectionId","programExtra","sectionNameNode","sectionName","nextSectionId","sectionNames","generateUid","getOrCreateSectionId","cur","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","getScopeIdentifier","generateUidIdentifier","forEachSectionId","fn","createSortedCollection","compare","insert","data","val","immutable","arguments","undefined","Array","isArray","arr","len","pos","mid","compareResult","next","insertInArray","find","findIndex","count","getReservesByType","reserveScope","debugKey","reserve","reserve2","reservesByType","id","getNodeLiteral","optimize","t2","compareReserves","a","b","insertReserve","countReserves","toString","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","pureFunctions","Symbol","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","importRuntime","importNamed","getRuntimePath","callRuntime","_len","args","_key","callExpression2","t3","filteredArgs","arg","filterArguments","includes","leadingComments","getHTMLRuntime","callRead","reference","targetSectionId","getScopeExpression","diff","scopeIdentifier","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t4","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","map","appendLiteral","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","depth","step","lastIndexOf","current","walk","nCodeString","writeTo","fromCharCode","number","toCharString","Error","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t5","join","getRenderer","t6","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","consumeHTML","flushBefore","expr","skip","flushInto","isProgram","pushContainer","getSectionMeta","apply","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","attributes","t7","default","loc","end","msg","buildError","returnId2","replaceWith","signal","getSignal","valueReferences","references","tagVarSignalIdentifier","subscribers","addStatement","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","getClosures","forceHydrateScope","_setForceHydrateScope","getSerializedScopeProperties","getHydrateScopeBuilder","setHydrateScopeBuilder","setSubscriberBuilder","builder","r","sort","signals","set","identifier","t8","generateSignalName","render","hydrate","hydrateInlineReferences","subscribe","build","getComputeFn","provider","hasDynamicSubscribers","subscriber","initSource","initDerivation","providers","compute","params","forEach","p","ref","statement","originalNodes","isInlined","statements","addHydrateReferences","expression","refs","getHydrateRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","_ref","getMappedId","addHTMLHydrateCall","writeHTMLHydrateStatements","tagVarIdentifier","allSignals","from","values","scopeIdentifier2","unshiftContainer","serializedProperties","reduce","acc","additionalProperties","hydrateScopeBuilder","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","_ref2","root","functionIdentifier","unshift","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t9","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","dom_default","templateIdentifier","t10","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionIdReverse","childSectionId","declarations","flatMap","signalDeclarator","hydrateDeclarator","hydrateIdentifier","finalizeSignalArgs","newPath","traverse","writeSignals","writes2","apply2","register2","closures2","renderer","exportSpecifiers","bindings","bindingIdentifier","signalIdentifier","exportIdentifier","closures","getReferenceGroups","t11","trackReferencesForBindings","reserveType","getBindingIdentifiers","referencePaths","filter","path4","insertReferenceGroup","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","updateReferenceGroup","listKey","extraKey","newBinding","currentGroup","newReferences","getOrCreateReferenceGroup","mergeReferenceGroups","groupEntries","group","newGroup","referenceGroups","existingGroup","findReferenceGroup","curPath","isMarkoPath","isFunctionExpression","_ref3","_ref4","lenDelta","getReferenceGroup","lookup","found","generateReferenceGroupName","previousProgramPath","WeakMap","program_default","migrate","crawl","analyze","curIndex","reserves","allReferenceGroups","g","finalizeReferences","t12","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment_expression_default","t13","update_expression_default","t14","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t15","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t16","exit2","Boolean","IDENTIFIER_REG","attrsToObject","withRenderBody","t18","resultExtra","properties","t17","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t19","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t20","varName","createElFunction","referenceSectionId","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childFile","loadFileForTag","childProgramExtra","ast","attrsReferences","tagBody","tagIdentifier","t21","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceHydrateScope","translateHTML","tagSectionId","tagBodySectionId","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","attrsSubscriber","tagAttrsIdentifierInChild","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","_len2","_key2","_len3","_key3","toFirstExpressionOrBlock","nodes","t22","dynamic_tag_default","t23","dynamicTagExpr","bodySectionId","renderBodyIdentifier","tagNameReserve","nameReferences","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t24","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t25","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","prev","getPrevSibling","noOutput","t26","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","_ref5","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t27","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t28","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","_ref6","tag2","_ref7","isStateful","hoistedScopeIdentifier","singleNodeOptimization","every","_ref8","writePrependTo","object","sectionId2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t29","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t30","identifiers","effect_default","assertNoParams6","t31","inlineStatements","node2","lifecycle_default","assertNoParams7","t32","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t33","for_default","isOnlyChild","t34","getTagDef5","html","checkOnlyChild","parentTagName","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","keys","translateHTML2","translateDOM2","of","in","to","paramsPath","ofAttr","byAttr","ofAttrValue","valParam","paramsLookup","param","assign","namePath","inAttr","fromAttr","toAttr","block","forNode","keyParam","loopParam","indexName","generateUidIdentifierBasedOnNode","stepAttr","stepValue","indexParam","stepsName","stepName","obj","get_default","assertNoParams9","refId","t35","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId2","templateId","initContextConsumer","put_default","t37","scopeAccessor","valueAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","assertNoParams11","t36","registerAssignmentReplacer","ownerSectionId","getScopeExpression2","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t39","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t38","importDefault2","enum","trim","parseScript3","t40","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","add","t41","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","entries","visitor","_ref9","taglibs","_hashValueReturn","_hashValue","_repl","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","legacy","_resolveExportsOptions","browser","env","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}