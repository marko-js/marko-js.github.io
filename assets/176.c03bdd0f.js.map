{"version":3,"file":"176.c03bdd0f.js","mappings":"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","sources":["webpack:///../components/repl/components/editor.marko","webpack:///../utils/monaco.js"],"sourcesContent":["import { load, setModelMarkers, createEditor, createModel } from \"../../../utils/monaco\"\n\nstatic export const loading = load();\n\nclass {\n  onMount() {\n    const editorEl = this.getEl(\"editor\");\n    this.editor = createEditor(editorEl);\n    this.resizeObserver = new ResizeObserver(entries => {\n      this.editor.layout();\n    });\n    this.resizeObserver.observe(editorEl);\n    this.sync();\n  }\n\n  onUpdate() {\n    this.sync();\n  }\n\n  onDestroy() {\n    this.editor.dispose();\n    this.resizeObserver.disconnect();\n  }\n\n  sync() {\n    const { filename } = this.input;\n    const language = filename.substring(filename.indexOf(\".\")+1);\n\n    if (this.prevLanguage !== language) {\n      if (this.model) {\n        this.model.dispose();\n      }\n\n      this.model = createModel(this.input.value, language);\n      this.editor.setModel(this.model);\n      this.editor.layout();\n      this.model.onDidChangeContent(() => {\n        const value = this.model.getValue();\n        if (value !== this.input.value) {\n          this.input.valueChange(value);\n          this.isUpdating = true;\n        }\n\n        if (this.hasErrorMarkers) {\n          setModelMarkers(this.model, null, []);\n          this.hasErrorMarkers = false;\n        }\n      });\n    } else if (!this.isUpdating) {\n      this.model.setValue(this.input.value);\n    } else {\n      this.isUpdating = false;\n    }\n\n    this.prevLanguage = language;\n    this.prevFilename = filename;\n  }\n\n  focus(lineNumber, column) {\n    this.editor.focus();\n    this.editor.setPosition({\n      lineNumber,\n      column\n    });\n  }\n\n  showError({ line, column, message }) {\n    this.hasErrorMarkers = true;\n    setModelMarkers(this.model, null, [\n      {\n        startLineNumber: line,\n        startColumn: column,\n        endLineNumber: line,\n        endColumn: column,\n        message,\n        severity: 8\n      }\n    ]);\n  }\n}\n\nstyle {\n  .editor {\n    display: block;\n    height: 100%;\n    padding-top: 8px;\n    position:relative;\n  }\n  .editor .monaco-editor {\n    position:absolute;\n    top:0; bottom:0; right:0; left:0;\n  }\n}\n\n<div.editor key=\"editor\" no-update/>\n","require(\"monaco-editor/esm/vs/editor/browser/controller/coreCommands\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/clipboard/clipboard\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/comment/comment\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/find/findController\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/folding/folding\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/links/links\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/multicursor/multicursor\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations\");\nrequire(\"monaco-editor/esm/vs/editor/contrib/hover/hover\");\n\nconst { languages, editor } = require(\"monaco-editor/esm/vs/editor/editor.api\");\nconst EditorWorker = require(\"monaco-editor/esm/vs/editor/editor.worker\").default;\nconst { load, getColorMap, getTokenizer, tmTheme, syntaxes } = require(\"./language-registry\");\nconst langToScope = require(\"./lang-to-scope\");\nlet loaded = false;\n\nexports.setModelMarkers = editor.setModelMarkers;\n\nexports.createEditor = el => {\n  if (!loaded) {\n    throw new Error(\"You must call load() before using the editor.\");\n  }\n\n  return editor.create(el, {\n    autoIndent: \"full\",\n    renderControlCharacters: true,\n    renderIndentGuides: true,\n    matchBrackets: true,\n    minimap: {\n      enabled: false\n    }\n  });\n}\n\nexports.createModel = (value, lang) => {\n  return editor.createModel(value, langToScope(lang));\n}\n\nexports.load = async () => {\n  global.MonacoEnvironment = {\n    async getWorker() {\n      return new EditorWorker();\n    }\n  };\n\n  // Register all languages first, in order to be able to get it's encoded ID later.\n  for (const syntax of syntaxes) {\n    languages.register({\n      id: syntax.grammar.scopeName,\n      extensions: syntax.grammar.fileTypes && syntax.grammar.fileTypes.map(type => `.${type}`)\n    });\n  }\n\n  await load({\n    getEncodedLanguageId: languages.getEncodedLanguageId\n  });\n\n  const themeName = tmTheme.name.replace(/[^a-z0-9\\-]+/gi, \"-\");\n  const themeColorMap = [null, ...getColorMap().slice(1)]; // Monaco doesn't like the colorMap starting with undefined.\n\n  editor.defineTheme(themeName, {\n    rules: [],\n    base: \"vs-dark\",\n    inherit: false,\n    encodedTokensColors: themeColorMap,\n    colors: {\n      \"editor.foreground\": themeColorMap[1] /* Default foreground color */,\n      \"editor.background\": themeColorMap[2] /* Default background color */\n    }\n  });\n\n  editor.setTheme(themeName);\n\n  for (const syntax of syntaxes) {\n    const { scopeName } = syntax.grammar;\n    languages.setLanguageConfiguration(scopeName, syntax.editorConfig);\n    languages.setTokensProvider(scopeName, getTokenizer(scopeName));\n  }\n\n  loaded = true;\n}\n"],"names":["loading","load","onMount","editorEl","this","getEl","editor","createEditor","resizeObserver","ResizeObserver","entries","layout","observe","sync","onUpdate","onDestroy","dispose","disconnect","filename","input","language","substring","indexOf","prevLanguage","model","createModel","value","setModel","onDidChangeContent","getValue","valueChange","isUpdating","hasErrorMarkers","setModelMarkers","setValue","prevFilename","focus","lineNumber","column","setPosition","showError","line","message","startLineNumber","startColumn","endLineNumber","endColumn","severity","require","languages","EditorWorker","getColorMap","getTokenizer","tmTheme","syntaxes","langToScope","loaded","exports","el","Error","create","autoIndent","renderControlCharacters","renderIndentGuides","matchBrackets","minimap","enabled","lang","async","global","MonacoEnvironment","syntax","register","id","grammar","scopeName","extensions","fileTypes","map","type","getEncodedLanguageId","themeName","name","replace","themeColorMap","slice","defineTheme","rules","base","inherit","encodedTokensColors","colors","setTheme","setLanguageConfiguration","editorConfig","setTokensProvider"],"sourceRoot":""}