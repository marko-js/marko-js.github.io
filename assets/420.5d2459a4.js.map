{"version":3,"file":"420.5d2459a4.js","mappings":"gKA2BoBA,EA1BhBC,EAAWC,OAAOC,OAClBC,EAAYF,OAAOG,eACnBC,EAAmBJ,OAAOK,yBAC1BC,EAAoBN,OAAOO,oBAC3BC,EAAeR,OAAOS,eACtBC,EAAeV,OAAOW,UAAUC,eAKhCC,EAAcA,CAACC,EAAIC,EAAMC,EAAQC,KACnC,GAAIF,GAAwB,iBAATA,GAAqC,mBAATA,EAC7C,IAAK,IAAIG,KAAOZ,EAAkBS,GAC3BL,EAAaS,KAAKL,EAAII,IAAQA,IAAQF,GACzCd,EAAUY,EAAII,EAAK,CAAEE,IAAKA,IAAML,EAAKG,GAAMG,aAAcJ,EAAOb,EAAiBW,EAAMG,KAASD,EAAKI,aAE3G,OAAOP,CAAE,EAEPQ,EAAUA,CAACxB,EAAKyB,EAAYC,KAAYA,EAAgB,MAAP1B,EAAcC,EAASS,EAAaV,IAAQ,CAAC,EAAGe,GAKnGU,GAAezB,GAAQA,EAAI2B,WAA8ED,EAAjEtB,EAAUsB,EAAQ,UAAW,CAAEE,MAAO5B,EAAKuB,YAAY,IAC/FvB,IAKE6B,EAAqB,CAAC,EAvBXC,EAACJ,EAAQK,KACtB,IAAK,IAAIC,KAASD,EAChB3B,EAAUsB,EAAQM,EAAO,CAAEV,IAAKS,EAAIC,GAAQT,YAAY,GAAO,EAsBnEO,CAASD,EAAoB,CAC3BI,QAASA,IAAMA,GACfC,qBAAsBA,IAAMA,GAC5BC,qBAAsBA,IAAMC,EAC5BC,UAAWA,IAAMA,GACjBC,iBAAkBA,IAAMA,GACxBC,QAASA,IAAMA,GACfC,UAAWA,IAAMA,GACjBC,UAAWA,IAAMA,KAEnBC,EAAOC,SAda3C,EAcU6B,EAdFd,EAAYX,EAAU,CAAC,EAAG,aAAc,CAAEwB,OAAO,IAAS5B,IAiBtF,IACI4C,EAAuB,CACzBC,KAFmBC,EAAQ,uDAEND,KACrBE,SAAU,cAIRC,EAAkBF,EAAQ,yCAC1BG,EAAqBH,EAAQ,+CAGjC,SAASI,EAAoBC,GAC3B,IAAK,MAAMC,KAASD,EAAI7B,IAAI,cAC1B,GAAI8B,EAAMC,yBACR,MAAMD,EAAME,oBACV,SAASH,EAAI7B,IAAI,QAAQiC,KAAK3B,yDAItC,CACA,SAAS4B,EAAoBL,GAC3B,GAAIA,EAAII,KAAKE,KAAKA,KAAKC,OACrB,MAAMP,EAAI7B,IAAI,QAAQgC,oBACpB,SAASH,EAAI7B,IAAI,QAAQiC,KAAK3B,6CAGpC,CAGA,IAAI+B,EAAgB,CAClBC,QAAS,CACNT,KACC,EAAIF,EAAmBY,cAAcV,IACrC,EAAIF,EAAmBa,gBAAgBX,IACvC,EAAIF,EAAmBc,oBAAoBZ,GAC3CK,EAAoBL,IACpB,EAAIF,EAAmBe,uBAAuBb,IAC9C,EAAIF,EAAmBgB,qBAAqBd,EAAK,CAC/Ce,MAAO,mFACPC,GAAAA,GACE,MAAMC,EAASjB,EAAII,KAAKc,IACxB,IAAID,GAA4B,eAAhBA,EAAOE,MAAyC,UAAhBF,EAAOvB,KASrDM,EAAIoB,aAToE,CACxE,MAAMC,EAAWxB,EAAgByB,MAAMC,SACrC1B,EAAgByB,MAAME,cAAc,SACpC,CAAC3B,EAAgByB,MAAMG,eAAe,QAAS5B,EAAgByB,MAAMI,WAAW,WAChF7B,EAAgByB,MAAMK,aAAa,KAErCN,EAASH,IAAMD,EACfjB,EAAI4B,YAAYP,EAClB,CAGF,GACA,GAGNQ,WAAY,CAAC,EACbC,aAAc,CACZ,CACEC,YAAa,gBACbC,YAAa,2DACbC,QAAS,oBAMXC,EAAoBvC,EAAQ,yCAC5BwC,EAAuBxC,EAAQ,+CAG/ByC,EAAsBzC,EAAQ,+CAClC,SAAS0C,EAAS5D,GAChB,IAAI,MAAE6D,GAAU7D,EAIhB,GAHK6D,IACHA,EAAQ7D,EAAM6D,MAAQ,CAAC,QAED,IAApBA,EAAMC,UAAsB,CAC9B,MAAMC,GAAW,EAAIJ,EAAoBK,aAAahE,GAClD+D,GACFF,EAAME,SAAWA,EAAS/D,MAC1B6D,EAAMC,WAAY,IAElBD,EAAME,cAAW,EACjBF,EAAMC,WAAY,EAEtB,CACA,OAAOD,CACT,CAGA,IAAII,EAAoB/C,EAAQ,yCAG5BgD,EAAoBhD,EAAQ,yCAC5BiD,EAAuBjD,EAAQ,+CAC/BkD,EAAexE,EAAQsB,EAAQ,gDAGnC,SAASmD,EAAgCC,GACvC,GAAIA,EAAQC,sBAAsBC,KAAM,OAAO,EAC/C,IAAK,MAAMC,KAASH,EAAQI,QAC1B,GAAIL,EAAgCI,GAAQ,OAAO,EAErD,IAAK,MAAMA,KAASH,EAAQK,gBAAgBC,SAC1C,GAAIP,EAAgCI,GAAQ,OAAO,EAErD,OAAO,CACT,CAGA,IAAII,EAAmB3D,EAAQ,yCAC3B4D,EAAsB5D,EAAQ,+CAC9B6D,EAASC,SACTxE,EAAwB,CAC1ByE,KAAAA,CAAMC,GACJ,MAAMC,EAAQD,EAAUH,GACxB,IAAKI,EACH,MAAMD,EAAUE,KAAK1D,oBACnB,mFAGJ,MAAMG,EAAOsD,EAAME,QAAQC,KACxBC,GAAOV,EAAiBhC,MAAM2C,kBAAkB,GAAIX,EAAiBhC,MAAME,cAAcwC,MAe5F,OAbIJ,EAAMM,OACR5D,EAAK6D,QACHb,EAAiBhC,MAAM2C,kBACrB,CAACX,EAAiBhC,MAAM8C,gBAAgBd,EAAiBhC,MAAMI,WAAW,QAAS4B,EAAiBhC,MAAMI,WAAW,UACrH4B,EAAiBhC,MAAME,cACrB,GAAG/B,EAAqBC,QAAQiE,EAAUU,UAAUC,SAAW,GAAK,iBAI1EhE,EAAKiE,KACHjB,EAAiBhC,MAAMkD,oBAAoBlB,EAAiBhC,MAAMmD,eAAenB,EAAiBhC,MAAMI,WAAW,QAAS,OAGzHpB,CACT,EACAoE,KAAAA,CAAMC,EAAMhB,EAAWiB,GACrB,MAAMhB,EAAQD,EAAUH,KAAY,CAClCM,QAAS,GACTI,MAAM,IAEF,aAAEW,GAAiBF,EAAKG,SAASC,MACvCnB,EAAME,QAAQS,MACZ,EAAIhB,EAAoByB,qBAAqBrB,EAAWgB,EAAKM,KAAKC,WAEpEtB,EAAMM,OAASS,EAAKd,KAAKzD,KAAKkC,MAAM6C,qBAAuBR,EAAKd,KAAKzD,KAAKkC,MAAM8C,gBAAiB,EACjG,IAAK,MAAMpF,KAAO6E,GAAgB,GAChCD,EAAW5E,EAEf,GAIF,SAASqF,IACP,MAAiC,SAA1BC,IAAeC,MACxB,CACA,SAASC,IACP,OAAQH,GACV,CACA,SAASC,IACP,OAAOG,GAAmBC,IAAIf,KAAKN,SACrC,CACA,SAASsB,IACP,OAAOL,IAAehB,QACxB,CAGA,IAAIsB,EAAmBjG,EAAQ,yCAC3BkG,EAAsBlG,EAAQ,+CASlC,SAASmG,EAAqBjH,EAAOJ,GACnC,OAAOA,EAAQI,EAAQ,EACzB,CAR6C4E,SAY7C,IAAIsC,EAAkB,0CACtB,SAASC,EAAqBnH,EAAOJ,GACnC,OAAOA,GAAmB,IAAVA,EAAc,GAAGI,KAA0B,iBAAVJ,GAAsBA,IAAUsH,EAAgBE,KAAKpH,GAASJ,EAAQ,KAAOA,IAAU,EAC1I,CACA,SAASyH,EAAkBC,EAAKC,EAAWC,GACzC,cAAeF,GACb,IAAK,SACH,OAAOA,EACT,IAAK,SACH,GAAY,OAARA,EAAc,CAChB,IAAIG,EAAS,GACTC,EAAe,GACnB,GAAIC,MAAMC,QAAQN,GAChB,IAAK,MAAMO,KAAKP,EAAK,CACnB,MAAMQ,EAAOT,EAAkBQ,EAAGN,EAAWC,GAChC,KAATM,IACFL,GAAUC,EAAeI,EACzBJ,EAAeH,EAEnB,MAEA,IAAK,MAAMvH,KAASsH,EAAK,CACvB,MACMQ,EAAON,EAAUxH,EADbsH,EAAItH,IAED,KAAT8H,IACFL,GAAUC,EAAeI,EACzBJ,EAAeH,EAEnB,CAEF,OAAOE,CACT,EAEJ,MAAO,EACT,CACA,SAASM,EAAe/H,GACtB,MAAO,YAAYoH,KAAKpH,EAC1B,CACA,SAASgI,EAAoBhI,GAC3B,MAAoB,MAAbA,EAAM,GAAaA,EAAMiI,MAAM,GAAKjI,EAAMiI,MAAM,GAAGC,aAC5D,CAMA,SAASC,EAASb,GAChB,OAAOA,EAAMA,EAAM,GAAa,IAARA,EAAY,IAAM,EAC5C,CACA,IAAIc,EAAe,QACfC,EAAoBC,GAAY,MAANA,EAAY,QAAU,OAEpD,SAASC,EAAUjB,GACjB,OAAOA,GAFWkB,EAEQlB,EAAM,GAFNc,EAAahB,KAAKoB,GAAOA,EAAIC,QAAQL,EAAcC,GAAoBG,GAEnD,IAARlB,EAAY,IAAM,QAFtCkB,KAGpB,CACA,IAAIE,EAAkB,aAEtB,SAASC,EAAarB,GACpB,OAAOA,GAFckB,EAEQlB,EAAM,GAFNoB,EAAgBtB,KAAKoB,GAAOA,EAAIC,QAAQC,EAAiB,gBAAkBF,GAEvD,IAARlB,EAAY,IAAM,GAFtCkB,KAGvB,CACA,IAAII,EAAiB,YAErB,SAASC,EAAYvB,GACnB,OAAOA,GAFakB,EAEQlB,EAAM,GAFNsB,EAAexB,KAAKoB,GAAOA,EAAIC,QAAQG,EAAgB,cAAgBJ,GAEnD,IAARlB,EAAY,IAAM,GAFtCkB,KAGtB,CAGA,IAAI,eAAE1J,GAAmB,CAAC,EAsP1B,SAASgK,EAASC,GAChB,MAAMC,EAAQD,EAAS,GACvB,MAAiB,MAAVC,GAAiBA,GAAS,KAAOA,GAAS,IAAM,IAAMD,EAAW,IAAM,IAAMA,CACtF,CASA,SAASE,GAAU3B,GACjB,OAAO4B,GAAW,QA9UX7B,EA8U+BC,EA9UN,IAAKL,GA+UvC,CACA,SAASkC,GAAU7B,GACjB,OAAO4B,GAAW,QA3UX7B,EA2U+BC,EA3UN,IAAKH,GA4UvC,CAEA,SAASiC,GAAKpJ,EAAOsH,GACnB,OAnSgB,OADF1H,EAoSA0H,KAnSoB,IAAV1H,EAmSH,GAKvB,SAAqBI,EAAOsH,GAC1B,cAAeA,GACb,IAAK,SACH,MAAO,IAAItH,EAAQqJ,GAAe/B,KACpC,IAAK,UACH,MAAO,IAAItH,IACb,IAAK,SACH,MAAO,IAAIA,KAASsH,IACtB,IAAK,SACH,GAAIA,aAAegC,OACjB,MAAO,IAAItJ,EAAQqJ,GAAe/B,EAAIiC,UAI5C,MAAO,IAAIvJ,EAAQqJ,GAAe/B,EAAM,KAC1C,CApB4BkC,CAAYxJ,EAAOsH,GApS/C,IAAgB1H,CAqShB,CACA,SAASsJ,GAAWlJ,EAAOsH,GACzB,OAAOA,GAAO,IAAItH,KAASyJ,GAAgBnC,IAC7C,CAiBA,SAAS+B,GAAe/B,GACtB,OAAOA,EAAM,IAAImC,GAAgBnC,KAAS,EAC5C,EAhSgB,YAChB,EADgB,GACZoC,YACiBC,kBACrB,CADqBA,GACjBD,YACgB,MAClB,MAAME,EAAiC,IAAIC,IAC3C,IAAK,MAAM7J,KAAS9B,OAAOO,oBAAoBmG,QAAS,CACtD,MAAMkF,EAASlF,OAAO5E,GACA,iBAAX8J,GACTF,EAAeG,IAAID,EAAQ,UAAY9J,EAE3C,CAED,EATmB,GAUkB,IAAI6J,IAAI,CAG5C,CAACG,eAAgB,kBACjB,CAACrC,MAAO,SACR,CAACA,MAAM1I,KAAM,cACb,CAAC0I,MAAMC,QAAS,iBAChB,CAACD,MAAMsC,GAAI,YACX,CAACC,YAAa,eACd,CAACA,YAAYC,OAAQ,sBACrB,CAACC,QAAQC,IAAK,eACd,CAACD,QAAQE,IAAK,eACd,CAACF,QAAQG,gBAAiB,2BAC1B,CAACH,QAAQI,SAAU,oBACnB,CAACJ,QAAQK,WAAY,sBACrB,CAACL,QAAQM,KAAM,gBACf,CAACN,QAAQO,OAAQ,kBACjB,CAACP,QAAQQ,GAAI,cACb,CAACR,QAAQS,MAAO,iBAChB,CAACT,QAAQU,IAAK,eACd,CAACV,QAAQW,KAAM,gBACf,CAACC,OAAQ,UACT,CAACA,OAAOC,OAAQ,iBAChB,CAACD,OAAOE,QAAS,kBACjB,CAACC,cAAe,iBAChB,CAACA,cAAclM,KAAM,sBACrB,CAACkM,cAAclB,GAAI,oBACnB,CAACmB,eAAgB,kBACjB,CAACA,eAAenM,KAAM,uBACtB,CAACmM,eAAenB,GAAI,qBACpB,CAACoB,QAAS,WACV,CAACC,QAAQC,OAAQ,kBACjB,CAACD,QAAQE,MAAO,iBAChB,CAACF,QAAQG,MAAO,iBAChB,CAACH,QAAQI,WAAY,sBACrB,CAACJ,QAAQK,MAAO,iBAChB,CAACL,QAAQM,IAAK,eACd,CAACN,QAAQO,OAAQ,kBACjB,CAACP,QAAQQ,MAAO,iBAChB,CAACR,QAAQS,MAAO,iBAChB,CAACT,QAAQU,eAAgB,0BACzB,CAACV,QAAQW,SAAU,oBACnB,CAACX,QAAQY,KAAM,gBACf,CAACZ,QAAQa,IAAK,eACd,CAACb,QAAQc,MAAO,iBAChB,CAACd,QAAQe,KAAM,gBACf,CAACf,QAAQgB,QAAS,mBAClB,CAAChB,QAAQiB,QAAS,mBAClB,CAACjB,QAAQkB,UAAW,qBACpB,CAAClB,QAAQmB,MAAO,iBAChB,CAACnB,QAAQoB,KAAM,gBACf,CAACC,SAAU,YACX,CAACC,KAAM,QACP,CAACA,KAAKC,IAAK,YACX,CAACD,KAAKE,MAAO,cACb,CAACF,KAAKG,IAAK,YACX,CAACC,UAAW,aACZ,CAACC,mBAAoB,sBACrB,CAACC,UAAW,aACZ,CAACC,mBAAoB,sBACrB,CAACC,MAAO,SACR,CAACC,UAAW,aACZ,CAACC,aAAc,gBACf,CAACA,aAAarO,KAAM,qBACpB,CAACqO,aAAarD,GAAI,mBAClB,CAACsD,aAAc,gBACf,CAACA,aAAatO,KAAM,qBACpB,CAACsO,aAAatD,GAAI,mBAClB,CAACuD,SAAU,YACX,CAACC,WAAWC,KAAM,QAClB,CAACD,WAAWE,KAAM,QAClB,CAACF,WAAWG,eAAgB,kBAC5B,CAACH,WAAWI,cAAe,iBAC3B,CAACJ,WAAWK,aAAc,gBAC1B,CAACL,WAAWM,QAAQC,gBAAiB,0BACrC,CAACP,WAAWM,QAAQE,WAAY,qBAChC,CAACR,WAAWS,MAAO,SACnB,CAACT,WAAWU,aAAatB,IAAK,mBAC9B,CAACY,WAAWW,eAAgB,kBAC5B,CAACX,WAAWY,aAAc,gBAC1B,CAACZ,WAAWa,YAAa,eACzB,CAACb,WAAWc,WAAY,cACxB,CAACd,WAAWe,gBAAiB,mBAC7B,CAACf,WAAWgB,IAAK,OACjB,CAAChB,WAAWiB,gBAAiB,mBAC7B,CAACjB,WAAWkB,eAAgB,kBAC5B,CAACC,WAAY,cACb,CAACA,WAAW3P,KAAM,mBAClB,CAAC2P,WAAW3E,GAAI,iBAChB,CAAC4E,WAAY,cACb,CAACA,WAAW5P,KAAM,mBAClB,CAAC4P,WAAW5E,GAAI,iBAChB,CAAC6E,UAAW,aACZ,CAACA,UAAU7P,KAAM,kBACjB,CAAC6P,UAAU7E,GAAI,gBACf,CAAC8E,KAAKC,SAAU,iBAChB,CAACD,KAAKE,eAAgB,uBACtB,CAACF,KAAKG,aAAc,qBACpB,CAACH,KAAKI,oBAAqB,4BAC3B,CAACJ,KAAKK,WAAY,mBAClB,CAACL,KAAKM,OAAQ,eACd,CAACN,KAAKO,aAAc,qBACpB,CAACP,KAAKQ,YAAa,oBACnB,CAACR,KAAKS,mBAAoB,2BAC1B,CAACT,KAAKU,UAAW,kBACjB,CAACV,KAAKW,kBAAmB,0BACzB,CAACC,SAAU,YACX,CAACC,MAAO,SACR,CAACC,KAAK/C,MAAO,cACb,CAAC+C,KAAKrI,UAAW,kBACjB,CAACqC,IAAK,OACN,CAACA,IAAIiG,QAAS,eACd,CAACC,KAAKC,IAAK,YACX,CAACD,KAAKE,KAAM,aACZ,CAACF,KAAKG,MAAO,cACb,CAACH,KAAKI,KAAM,aACZ,CAACJ,KAAKK,MAAO,cACb,CAACL,KAAKM,KAAM,aACZ,CAACN,KAAKO,MAAO,cACb,CAACP,KAAKQ,MAAO,cACb,CAACR,KAAKS,KAAM,aACZ,CAACT,KAAKU,KAAM,aACZ,CAACV,KAAKW,MAAO,cACb,CAACX,KAAKY,IAAK,YACX,CAACZ,KAAKa,KAAM,aACZ,CAACb,KAAKc,IAAK,YACX,CAACd,KAAKe,MAAO,cACb,CAACf,KAAKgB,MAAO,cACb,CAAChB,KAAKiB,OAAQ,eACd,CAACjB,KAAKkB,MAAO,cACb,CAAClB,KAAKmB,KAAM,aACZ,CAACnB,KAAK5D,IAAK,YACX,CAAC4D,KAAKoB,MAAO,cACb,CAACpB,KAAKqB,MAAO,cACb,CAACrB,KAAKsB,KAAM,aACZ,CAACtB,KAAKuB,IAAK,YACX,CAACvB,KAAKwB,IAAK,YACX,CAACxB,KAAKyB,IAAK,YACX,CAACzB,KAAK0B,OAAQ,eACd,CAAC1B,KAAK2B,MAAO,cACb,CAAC3B,KAAK4B,KAAM,aACZ,CAAC5B,KAAK6B,IAAK,YACX,CAAC7B,KAAK8B,KAAM,aACZ,CAAC9B,KAAK+B,KAAM,aACZ,CAAC/B,KAAKgC,IAAK,YACX,CAAChC,KAAKiC,KAAM,aACZ,CAACjC,KAAKkC,MAAO,cACb,CAACC,OAAQ,UACT,CAACA,OAAOvC,SAAU,mBAClB,CAACuC,OAAOC,UAAW,oBACnB,CAACD,OAAOtC,MAAO,gBACf,CAACsC,OAAOE,cAAe,wBACvB,CAACF,OAAOG,WAAY,qBACpB,CAACH,OAAOI,SAAU,mBAClB,CAACpU,OAAQ,UACT,CAACA,OAAOqU,OAAQ,iBAChB,CAACrU,OAAOC,OAAQ,iBAChB,CAACD,OAAOsU,iBAAkB,2BAC1B,CAACtU,OAAOG,eAAgB,yBACxB,CAACH,OAAOuU,QAAS,kBACjB,CAACvU,OAAOwU,OAAQ,iBAChB,CAACxU,OAAOyU,YAAa,sBACrB,CAACzU,OAAOK,yBAA0B,mCAClC,CAACL,OAAO0U,0BAA2B,oCACnC,CAAC1U,OAAOO,oBAAqB,8BAC7B,CAACP,OAAO2U,sBAAuB,gCAC/B,CAAC3U,OAAOS,eAAgB,yBACxB,CAACT,OAAO4U,GAAI,aACZ,CAAC5U,OAAO6U,aAAc,uBACtB,CAAC7U,OAAO8U,SAAU,mBAClB,CAAC9U,OAAO+U,SAAU,mBAClB,CAAC/U,OAAOgV,KAAM,eACd,CAAChV,OAAOiV,kBAAmB,4BAC3B,CAACjV,OAAOkV,KAAM,eACd,CAAClV,OAAOmV,eAAgB,yBACxB,CAACnV,OAAOsG,OAAQ,iBAChB,CAAC6N,WAAY,cACb,CAACC,SAAU,YACX,CAACgB,QAAS,WACV,CAACC,MAAO,SACR,CAACC,WAAY,cACb,CAACC,eAAgB,kBACjB,CAACC,QAAQC,MAAO,iBAChB,CAACD,QAAQE,UAAW,qBACpB,CAACF,QAAQrV,eAAgB,0BACzB,CAACqV,QAAQG,eAAgB,0BACzB,CAACH,QAAQpU,IAAK,eACd,CAACoU,QAAQnV,yBAA0B,oCACnC,CAACmV,QAAQ/U,eAAgB,0BACzB,CAAC+U,QAAQI,IAAK,eACd,CAACJ,QAAQX,aAAc,wBACvB,CAACW,QAAQK,QAAS,mBAClB,CAACL,QAAQP,kBAAmB,6BAC5B,CAACO,QAAQ3J,IAAK,eACd,CAAC2J,QAAQL,eAAgB,0BACzB,CAAC/J,OAAQ,UACT,CAAC0K,IAAK,OACN,CAACC,OAAQ,UACT,CAACA,OAAOC,aAAc,uBACtB,CAACD,OAAOE,cAAe,wBACvB,CAACF,OAAOG,IAAK,cACb,CAACxP,OAAQ,UACT,CAACA,OAAOyP,IAAK,cACb,CAACC,YAAa,eACd,CAACC,UAAW,aACZ,CAACC,YAAa,eACd,CAACA,YAAYvV,KAAM,oBACnB,CAACuV,YAAYvK,GAAI,kBACjB,CAACwK,YAAa,eACd,CAACA,YAAYxV,KAAM,oBACnB,CAACwV,YAAYxK,GAAI,kBACjB,CAACyK,WAAY,cACb,CAACA,WAAWzV,KAAM,mBAClB,CAACyV,WAAWzK,GAAI,iBAChB,CAAC0K,kBAAmB,qBACpB,CAACA,kBAAkB1V,KAAM,0BACzB,CAAC0V,kBAAkB1K,GAAI,wBACvB,CAAC2K,SAAU,YACX,CAACC,QAAS,WACV,CAACC,QAAS,aAEwB,IAAIjL,IAAI,CAC1C,CAACO,QAAS,WACV,CAACkB,QAAS,WACV,CAACmC,WAAY,cACb,CAACA,WAAWM,OAAQ,UACpB,CAACgB,KAAM,QACP,CAACc,KAAM,QACP,CAACE,KAAM,QACP,CAAC2D,QAAS,aAQK9O,OAAO,YACDA,OAAO,oBACZA,SACP6I,WAAWY,cAAgBZ,WAAWc,YAAcd,WAAWW,eASrDxJ,OAAO,iBA0B5B,IAAImQ,GAAkB,WACtB,SAAStL,GAAgBjB,GACvB,GAAIuM,GAAgB3N,KAAKoB,GAAM,CAC7B,MAAMF,EAAIE,EAAIuM,GAAgBC,UAAY,GAE1C,OADAD,GAAgBC,UAAY,EACf,MAAN1M,EAAY,IAAIE,EAAIC,QAAQ,KAAM,YAAc,IAAID,EAAIC,QAAQ,KAAM,WAC/E,CACA,OAAOD,CACT,CASuB5D,SANvB,IASIqQ,GAAmBnU,EAAQ,yCAC/B,SAASoU,GAAelV,GACtB,MAAI,wBAAwBoH,KAAKpH,GACxBiV,GAAiBxS,MAAMI,WAAW7C,GAChC,sBAAsBoH,KAAKpH,GAC7BiV,GAAiBxS,MAAM0S,eAAe7C,SAAStS,EAAO,KAExDiV,GAAiBxS,MAAME,cAAc3C,EAC9C,CACA,SAASoV,GAAiBpV,EAAOJ,GAC/B,OAAOqV,GAAiBxS,MAAM4S,eAAeH,GAAelV,GAAQJ,EACtE,CACA,SAAS0V,GAAmBC,EAAQnW,EAAKoW,GACvC,MAAMC,EAAOP,GAAe9V,GACtBuE,EAAyB,eAAd8R,EAAKnT,KACtB,OAAOkT,EAAWP,GAAiBxS,MAAMiT,yBAAyBH,EAAQE,EAAM9R,GAAU,GAAQsR,GAAiBxS,MAAMkT,iBAAiBJ,EAAQE,EAAM9R,EAC1J,CAGA,IAAIiS,GAAgB,CAClB,iBACA,iBACA,0BACA,QACA,QACA,eACA,cACA,qBACA,iBACA,SACA,SACA,SACA,eAEF,SAASC,GAAc7V,GACrB,MAAM,OAAE0G,GAAWD,IACnB,OAAO6O,IACL,EAAItO,EAAoB8O,YAAYlP,GAAmBC,IAAIf,KA8B/D,SAAwBY,GACtB,MAAM,SAAEjB,GAAagB,IACrB,MAAO,GAAG7F,EAAqBC,QAAQ4E,EAAW,GAAK,WAAsB,SAAXiB,EAAoB,OAAS,OACjG,CAjCqEqP,CAAerP,GAAS,KACzF1G,EAEJ,CACA,SAASgW,GAAYhW,KAAUiW,GAC7B,MAAMC,EAAkBnP,EAAiBtE,MAAMmD,eAC7CiQ,GAAc7V,GA4BlB,SAAyBiW,GACvB,MAAME,EAAe,GACrB,IAAK,IAAIC,EAAIH,EAAKvU,OAAQ0U,KAAO,CAC/B,MAAMC,EAAMJ,EAAKG,IACbC,GAAOF,EAAazU,UACtByU,EAAaC,GAAKC,GAAOtP,EAAiBtE,MAAM6T,gBAAgB,OAAQvP,EAAiBtE,MAAM0S,eAAe,IAElH,CACA,OAAOgB,CACT,CApCII,CAAgBN,IAUlB,OARIL,GAAcY,SAASxW,KACzBkW,EAAgBO,gBAAkB,CAChC,CACEnU,KAAM,eACN1C,MAAO,iBAINsW,CACT,CACA,SAASQ,KACP,MAAO,CACLnO,YACAJ,WACAiB,QACAH,aACAE,aACAR,eACAE,cAEJ,CAeA,SAAS8N,KACP,MAAMnR,EAAYiB,IAClB,MAAO,yCAAyCD,IAAiB,OAAS,QAAQhB,EAAUC,SAAW,GAAK,YAAkC,QAAtBD,EAAUoR,QAAoB,MAAQ,MAChK,CAGA,IAAIC,GAAmB/V,EAAQ,yCAC3BgW,GAAsBhW,EAAQ,+CAG9BiW,GAAsBjW,EAAQ,+CAGlC,SAASkW,GAAW7V,GAClB,OAAOA,EAAII,KAAKV,KAAKjB,KACvB,CAGA,IAAI,SAAEmB,IAAaH,EAGnB,SAASqW,GAAU9V,GACjB,GAAIA,EAAI+V,aAAc,CACpB,MAAMC,GAAS,EAAIJ,GAAoBK,WAAWjW,GAClD,GAAIgW,EACF,OAAQA,EAAOpW,UACb,KAAKA,GACL,IAPc,uCAQZ,OAAO,EACT,IAVW,aAWT,OAAQoW,EAAOtW,MACb,IAAK,SACL,IAAK,QACH,OAAO,GAKnB,CACA,OAAO,CACT,CACA,SAASwW,GAAclW,EAAKnB,GAC1B,OAAOiX,GAAU9V,IAAQ6V,GAAW7V,KAASnB,CAC/C,CACA,SAASsX,GAAenW,GACtB,GAAI8V,GAAU9V,GACZ,OAAQ6V,GAAW7V,IACjB,IAAK,KACL,IAAK,UACL,IAAK,OACH,OAAO,EAGb,OAAO,CACT,CA0CA,SAASuE,GAAK6R,EAAMC,GAClB,OAAID,EACE5P,MAAMC,QAAQ2P,IAChBA,EAAK7R,KAAK8R,GACHD,GAEF,CAACA,EAAMC,GAETA,CACT,CAkDA,SAASC,GAAQF,EAAMG,GACrB,GAAIH,EACF,GAAI5P,MAAMC,QAAQ2P,GAAO,CACvB,IAAInB,EAAI,EACR,IAAK,MAAMoB,KAAQD,EACjBG,EAAGF,EAAMpB,IAEb,MACEsB,EAAGH,EAAM,EAGf,CACA,SAASI,GAAKJ,EAAMG,GAClB,GAAIH,EAAM,CACR,GAAI5P,MAAMC,QAAQ2P,GAChB,OAAOA,EAAKI,KAAKD,GAEnB,GAAIA,EAAGH,EAAM,GACX,OAAOA,CAEX,CACF,CACA,SAASK,GAAWC,EAASN,EAAMC,GACjC,IAAIlG,EAAMiG,EAAK7V,OACXoW,EAAM,EACV,KAAOA,EAAMxG,GAAK,CAChB,MAAMyG,EAAMD,EAAMxG,IAAQ,EACpB0G,EAAMT,EAAKQ,GACXE,EAAgBJ,EAAQG,EAAKR,GACnC,GAAsB,IAAlBS,EAAqB,OAAOD,EAC5BC,EAAgB,EAAG3G,EAAMyG,EACxBD,EAAMC,EAAM,CACnB,CACF,CACA,SAASG,GAAUL,EAASN,EAAMC,GAChC,MAAMW,EAAMZ,EAAK7V,OACjB,IAAI4P,EAAM6G,EACNL,EAAM,EACV,KAAOA,EAAMxG,GAAK,CAChB,MAAMyG,EAAMD,EAAMxG,IAAQ,EACpB2G,EAAgBJ,EAAQN,EAAKQ,GAAMP,GACzC,GAAsB,IAAlBS,EAAqB,OAAOV,EAC5BU,EAAgB,EAAG3G,EAAMyG,EACxBD,EAAMC,EAAM,CACnB,CACA,MAAMtQ,EAAS,IAAIE,MAAMwQ,EAAM,GAC/B,IAAK,IAAI/B,EAAI,EAAGA,EAAI0B,EAAK1B,IACvB3O,EAAO2O,GAAKmB,EAAKnB,GAEnB,IAAI4B,EAAMR,EACV,KAAOM,EAAMK,GAAK,CAChB,MAAMC,EAAOJ,EACbA,EAAMT,EAAKO,GACXrQ,EAAOqQ,KAASM,CAClB,CAEA,OADA3Q,EAAO0Q,GAAOH,EACPvQ,CACT,CAkCA,SAAS4Q,GAAeR,EAASS,EAAGC,GAClC,MAAMN,EAAgBJ,EAAQS,EAAGC,GACjC,OAAyB,IAAlBN,EAAsBK,EAAIL,EAAgB,EAAI,CAACK,EAAGC,GAAK,CAACA,EAAGD,EACpE,CAGA,IAAIE,GAAsBnT,IACxB,MAAMH,EAAsB,IAAI2P,QAChC,MAAO,CACL,KACE,IAAI9P,EAAQG,EAAI5F,IAAIsH,IAIpB,OAHK7B,GACHG,EAAI6E,IAAInD,GAAoB7B,EAAQM,KAE/BN,CAAK,EAEbnF,IACCsF,EAAI6E,IAAInD,GAAoBhH,EAAM,EAErC,EAEH,SAAS6Y,GAAmBrZ,EAAKiG,GAC/B,MAAO,CACJqT,IACC,MAAMC,EAAqB/R,GAAmB7B,MAAM3F,KAAS,CAAC,EAE9D,OADoBuZ,EAAmBD,EAAQE,MAAQvT,GAAQA,EAAKqT,EAClD,EAEpB,CAACA,EAAS9Y,MACmBgH,GAAmB7B,MAAM3F,KAAS,CAAC,GAC3CsZ,EAAQE,IAAMhZ,CAAK,EAG5C,CAGA,IAAIiZ,GAAmB/X,EAAQ,yCAC3BgY,GAAsBhY,EAAQ,+CAC9BiY,GAAiB,kBACrB,SAASC,GAAmB7X,GAC1B,MAAMsC,EAAQtC,EAAII,KAAKkC,QAAU,CAAC,EAClC,QAA0B,IAAtBA,EAAMwV,YAAwB,CAChC,MAAMjZ,EAAQmB,EAAI7B,IAAI,QAUtB,GATIU,EAAMkZ,mBACRzV,EAAMwV,YAAsC,MAAxBjZ,EAAMuB,KAAK3B,MAAM,GAAa,GAAuB,EAAIkZ,GAAoBK,aAAahY,GAAO,EAAoB,EACzIsC,EAAM2V,gBAAkB3V,EAAM2V,iBAAkB,GAoBtD,SAAkCpZ,EAAOyD,GACvC,MAAM4V,EAAU,CAACrZ,GACjB,IAAIsZ,EACAhX,EAEAiX,EADAC,GAAW,EAEf,MAAQF,EAAQD,EAAQI,QAAmB,IAATnX,GAChC,GAAIgX,EAAMI,0BACRL,EAAQ3T,KAAK4T,EAAMha,IAAI,eACnBga,EAAM/X,KAAKoY,WACbN,EAAQ3T,KAAK4T,EAAMha,IAAI,mBAEpB,GAAIga,EAAMM,sBACa,OAAxBN,EAAM/X,KAAKsY,SACbR,EAAQ3T,KAAK4T,EAAMha,IAAI,SAEvBka,GAAW,EAEbH,EAAQ3T,KAAK4T,EAAMha,IAAI,eAClB,GAAIga,EAAMQ,yBACfT,EAAQ3T,KAAK4T,EAAMha,IAAI,eAClB,GAAIga,EAAMS,qBACfzX,EAA+B,MAAxBgX,EAAM/X,KAAKsY,eAA6B,IAATvX,EAAkB,EAAqB,OACxE,GAAIgX,EAAMJ,mBAAqBI,EAAMU,oBAC1C1X,OAAgB,IAATA,EAAkB,EAAqB,OACzC,GAAIgX,EAAMW,gBACfT,GAAW,OACN,GAAIF,EAAMY,eAAgB,CAC/B,GAAwB,cAApBZ,EAAM/X,KAAKV,KAAsB,CACnC2Y,GAAW,EACX,QACF,CACA,MAAMtV,EAAUoV,EAAMa,MAAMC,WAAWd,EAAM/X,KAAKV,MAClD,IAAKqD,EAAS,CACZ5B,EAAO,EACP,QACF,CACA,GAAqB,WAAjB4B,EAAQmW,KAAmB,CAC7B,MAAMC,EAAOpW,EAAQc,KAAKuV,OAC1B,GAAIxB,GAAe3R,KAAKkT,EAAK/Q,OAAO3J,QAAU0a,EAAKE,WAAWC,MAAMtV,GAAO0T,GAAiBpW,MAAMiY,yBAAyBvV,KAAM,CAC/H,MAAMwV,GAAiB,EAAI7B,GAAoB8B,kBAAkB5a,EAAOsa,EAAK/Q,OAAO3J,QAAU0a,EAAK/Q,OAAO3J,MAC7F,IAAT0C,GAA8BiX,GAAmBA,IAAoBoB,GACvErY,EAAO,EACPiX,OAAkB,IAElBjX,EAAO,EACPiX,EAAkBoB,EAEtB,MACErY,EAAO,EAET,QACF,CACA,MAAMuY,EAAa3W,EAAQc,KAC3B,GAAI6V,EAAW3D,cAAiC,UAAjBhT,EAAQmW,KAAkB,CACvD,MAAMS,EAAiBD,EAAWvb,IAAI,QAAQiC,KAAK3B,MACnD,GAAuB,UAAnBkb,EAA4B,CAC9BzB,EAAQ3T,KACNmV,EAAWvb,IAAI,cAAc,GAAGA,IAAI,UAEtC,QACF,CACA,GAAuB,QAAnBwb,EAA0B,CAC5BxY,EAAO,EACP,QACF,CACA,QACF,CACAA,EAAO,CACT,MACEA,EAAO,EAGXmB,EAAMwV,YAAc3W,EACpBmB,EAAM2V,gBAAkBI,EACxB/V,EAAMsX,gBAAiB,EACV,IAATzY,GAA8BiX,IAChC9V,EAAM8V,gBAAkBA,EAE5B,CAjGMyB,CAAyBhb,EAAOyD,QAER,IAAtBA,EAAMwV,cACRxV,EAAMwV,YAAc,GAEI,IAAtBxV,EAAMwV,YAAmC,CAC3C,MAAMgC,GAAY,EAAInC,GAAoBoC,gBAAgB/Z,GACrD8Z,EAEkD,UAA5CA,EAAUE,IAAIC,QAAQ3X,MAAM4X,cACrC5X,EAAMwV,YAAc,EACpBxV,EAAM4X,YAAc,SACnBzU,GAAmBrF,KAAKkC,QAAU,CAAC,GAAG6X,aAAc,GAJrD7X,EAAMwV,YAAc,CAMxB,CACF,CACA,OAAOxV,EAAMwV,WACf,CAmFA,SAASsC,GAAajC,GACpB,MAAM7V,EAAQ6V,EAAM/X,KAAKkC,QAAU,CAAC,EACpC,IAAIiV,EAAUjV,EAAMiV,QACpB,IAAKA,IAA2B,YAAfY,EAAMhX,MAAsBgX,EAAMha,IAAI,QAAQoC,QAAS,CACtE,MAAM8Z,EAAgBlC,EAAMmC,WAAaC,GAAmBpC,EAAMmC,iBAAc,EAC1EE,EAAkBrC,EAAMmC,YAAYnc,IACxC,QAEIsc,EAActC,EAAMuC,YAAc,GAAKjV,GAAmBuT,MAAM2B,YACpEH,EAAgBxT,WAAa,YAEzB4T,EAAezC,EAAMzS,IAAIf,KAAKd,KAAKzD,KAAKkC,QAAU,CAAC,EACnDuY,EAAWD,EAAaC,WAAa,GAC3CtD,EAAUjV,EAAMiV,QAAU,CACxBE,GAAIoD,EAASta,OACbb,KAAM+a,EACNK,IAAKN,GAAiBpa,KAAK0a,UAAO,EAClCC,MAAOV,EAAgBA,EAAcU,MAAQ,EAAI,EACjD3B,OAAQiB,EACRW,YAAQ,EACRC,cAAU,EACVC,cAAU,EACVC,QAASC,GAAejD,GACxBkD,wBAAoB,EACpBC,gBAAgB,EAChBC,UAAU,GAEZV,EAAStW,KAAKgT,EAChB,CACA,OAAOA,CACT,CACA,SAASgD,GAAmBpC,GAC1B,IAAItB,EAAMsB,EACV,OAAa,CACX,GAAiB,YAAbtB,EAAI1V,MAAmC,iBAAb0V,EAAI1V,OAA4B0V,EAAIzW,KAAKob,eAAwD,IAAvC3D,GAAmBhB,EAAIyD,aAA+D,iBAA1BzD,EAAIuC,OAAO1Z,KAAKjB,MAClK,OAAO2b,GAAavD,GAEtBA,EAAMA,EAAIyD,UACZ,CACF,CACA,SAASmB,GAAkBnb,GACzB,OAAOA,EAAKF,KAAKkC,OAAOiV,OAC1B,CACA,SAASmE,GAAWvD,GAClB,IAAIZ,EACAoE,EAAcxD,EAClB,UAAuD,KAA/CZ,EAAUoE,EAAYvb,KAAKkC,OAAOiV,UACxCoE,EAAcA,EAAYrB,WAE5B,OAAO/C,CACT,CACA,IAAKqE,IAAwBtE,GAC3B,qBACCC,GAAY9R,GAAmBuT,MAAM6C,sBAAsB,QAAQtE,EAAQE,YAEzEqE,GAAyBC,IAA2BzE,GAAmB,iBAAiB,KAAM,KAC9F0E,IAAuB1E,GAC1B,mBACA,IAAM5B,GAAiBpU,MAAMI,WAAW,eAEtCua,GAAqBA,CAAC1E,EAAS2E,KACjC,MAAMC,EAAUH,GAAoBzE,GAIpC,OAHK2E,GAAkC,cAAjBC,EAAQzc,OAC5Byc,EAAQzc,KAAO+F,GAAmBuT,MAAM2B,YAAY,QAAQpD,EAAQE,QAE/D0E,CAAO,EAEhB,SAASC,GAAeC,GACtB,MAAM,SAAExB,GAAapV,GAAmBrF,KAAKkC,MAC7CuY,GAAUvE,QAAQ+F,EACpB,CAOA,SAASjB,GAAejD,GACtB,MAAM7X,EAAO6X,EAAMha,IAAI,QACjBme,EAAc,CAClBC,UAAW,KACXC,QAAS,KACTC,aAAa,GAEf,IAAK,IAAIC,EAAWpc,EAAKC,OAAQmc,KAAc,CAC7C,MAAMF,EAAUG,GAAmBrc,EAAKoc,GAAW,UAAWJ,GAC9D,GAAgB,OAAZE,EAAkB,CACpBF,EAAYE,QAAUA,EACtB,IAAK,IAAII,EAAa,EAAGA,EAAaF,EAAUE,IAAc,CAC5D,MAAML,EAAYI,GAAmBrc,EAAKsc,GAAa,aACvD,GAAkB,OAAdL,EAGF,OAFAD,EAAYC,UAAYA,EACxBD,EAAYG,aAAc,EACnBH,CAEX,CAEA,OADAA,EAAYC,UAAYI,GAAmBrc,EAAKoc,GAAW,aACpDJ,CACT,CACF,CACA,OAAO,IACT,CACA,SAASK,GAAmBxE,EAAO0E,EAAaP,GAC9C,OAAQnE,EAAMhX,MACZ,IAAK,YACH,OAAO,EACT,IAAK,mBACH,OAAO,EACT,IAAK,iBACL,IAAK,eACL,IAAK,oBACL,IAAK,uBACL,IAAK,yBACH,OAAO,KACT,IAAK,WAAY,CACf,MAAMnB,EAAMmY,EACZ,GAAIrC,GAAU9V,GACZ,OAAQA,EAAII,KAAKV,KAAKjB,OACpB,IAAK,eACH,OAAO,EACT,IAAK,cACL,IAAK,aACH,OAAO,EACT,IAAK,MACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,SAEN,KAAI,EAAIkX,GAAoBqC,aAAahY,GAC9C,OAAO,EACF,IAAI,EAAI2V,GAAoBmH,gBAAgB9c,GACjD,OAAO,KACF,GAAI0V,GAAiBpU,MAAMyW,gBAAgB/X,EAAII,KAAKV,MAAO,CAChE,MAAMqd,GAAa,EAAIpH,GAAoBoE,gBAAgB/Z,IAAMga,IAAIC,QAAQ3X,MAAMiV,QACnF,GAAIwF,EACF,OAAIA,EAAW5B,SACTmB,IAAgBS,EAAW5B,QAAQsB,aACjB,YAAhBI,IACFP,EAAYC,UAAYQ,EAAW5B,QAAQoB,UAC3CD,EAAYG,aAAc,GAGvBM,EAAW5B,QAAQ0B,IAEnB,IAGb,EACF,EAEF,OAAO,CACT,CACA,IAAIG,GAAqBzF,IACvB,MAAM8D,EAAqB9D,EAAQ8D,mBACnC,OAAQA,GAAsB4B,GAAqB5B,EAAmB6B,mBAAmB,EAEvFC,GAAwBA,CAAC5F,EAAS6F,MAC3B5G,GACPe,EAAQ0D,UACPoC,KAAcD,GAAiB7F,EAAQ6B,SAAWiE,EAAQ9F,UAAY0F,GAAqBI,KAK5FC,GAAoB3d,EAAQ,yCAC5B4d,GAAuB5d,EAAQ,+CAG/B6d,GAAcnf,EAAQsB,EAAQ,gDA8BlC,IAAI8d,GAAiB,sBAMjBC,GAAoB/d,EAAQ,yCAC5Bge,GAAsBhe,EAAQ,+CAG9Bie,GAAoBje,EAAQ,yCAC5Bke,GAAsBle,EAAQ,+CAGlC,SAASme,GAAmB9d,GAC1B,MAAM+d,EAAS,CAAC,EAChB,IAAK,MAAM9d,KAASD,EAAI6B,WACH,mBAAf5B,EAAMkB,OACR4c,EAAO9d,EAAMP,MAAQO,EAAMxB,OAG/B,OAAOsf,CACT,CAGA,IAAIC,GAAmBre,EAAQ,yCAC/B,SAASse,GAAMC,EAAc/F,GAC3B,IAAK+F,EACH,OAAO,EAET,MAAM,KAAE9d,GAAS+X,EACXgG,EAASC,GAAeF,GAAgBA,EAAaG,QAAUH,EAMrE,OALII,GAAiBH,GACnBA,EAAOhG,EAAO6F,GAAiB1c,OACtB6c,EAAOF,OAChBE,EAAOF,MAAM9F,EAAO6F,GAAiB1c,OAEhClB,IAAS+X,EAAM/X,IACxB,CACA,SAASme,GAAKL,EAAc/F,GAC1B,IAAK+F,EACH,OAAO,EAET,MAAM,KAAE9d,GAAS+X,EACXgG,EAASC,GAAeF,GAAgBA,EAAaG,QAAUH,EAIrE,OAHKI,GAAiBH,IAAWA,EAAOI,MACtCJ,EAAOI,KAAKpG,EAAO6F,GAAiB1c,OAE/BlB,IAAS+X,EAAM/X,IACxB,CACA,SAASge,GAAeD,GACtB,OAAOjU,QAAQiU,EAAOE,QACxB,CACA,SAASC,GAAiBH,GACxB,MAAyB,mBAAXA,CAChB,CAoBA,SAASK,IAAkB,KACzBC,EAAI,IACJC,IAEA,MAAO,CACLT,KAAAA,CAAM9F,GACJ8F,GAAM5Y,IAAiBoZ,EAAOC,EAAKvG,EACrC,EACAoG,IAAAA,CAAKpG,GACHoG,GAAKlZ,IAAiBoZ,EAAOC,EAAKvG,EACpC,EAEJ,CAGA,IAAIwG,GAAoBhf,EAAQ,yCAG5Bif,GAAmBjf,EAAQ,yCAC/B,SAASkf,GAA0BC,GACjC,MAAMC,EAAO,GACPC,EAAQ,GACd,IAAIC,EAASH,EAAM,GACnB,IAAK,IAAI7J,EAAI,EAAGA,EAAI6J,EAAMve,OAAQ0U,IAAK,CACrC,IAAIkG,EAAU2D,EAAM7J,GACpB,GAAuB,iBAAZkG,EAAsB,CAC/B,IAAIyD,GAAiBtd,MAAMyW,gBAAgBoD,GAEpC,IAAIyD,GAAiBtd,MAAMuX,kBAAkBsC,GAAU,CAC5D,IAAI+D,EAAYjK,EAAI,EACpB,MAAMkK,EAAUhE,EAAQiE,YAAY7e,OACpC8e,GAAWP,EAAOI,EAAW/D,EAAQmE,OAAO/e,OAAS4e,GACrD,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAASI,IAC3BT,EAAMI,KAAe/D,EAAQmE,OAAOC,GAAG9gB,MAAMwU,IAC7C6L,EAAMI,KAAe/D,EAAQiE,YAAYG,GAE3CT,EAAMI,GAAa/D,EAAQmE,OAAOH,GAAS1gB,MAAMwU,IACjD,QACF,CACE+L,EAAMza,KAAK4W,GACX4D,EAAKxa,KAAK0a,GACVA,EAAS,GACT,QACF,CAhBE9D,EAAUA,EAAQ1c,KAiBtB,CACAwgB,GAAU9D,CACZ,CACA,OAAI6D,EAAMze,OACa,IAAjBye,EAAMze,QAAiB0e,GAAWF,EAAK,IAG3CA,EAAKxa,KAAK0a,GACHL,GAAiBtd,MAAMke,gBAC5BT,EAAKhb,KAAKkP,GAAQ2L,GAAiBtd,MAAMme,gBAAgB,CAAExM,UAC3D+L,IALOA,EAAM,GAONC,EACFL,GAAiBtd,MAAME,cAAcyd,QADvC,CAGT,CACA,SAASS,GAAcC,EAAKtY,GAC1BsY,EAAIA,EAAIpf,OAAS,IAAM8G,CACzB,CACA,SAASgY,GAAWO,EAAM/X,EAAOgY,GAC/B,IAAK,IAAI5K,EAAI2K,EAAKrf,OAAS,EAAG0U,GAAKpN,EAAOoN,IACxC2K,EAAK3K,EAAI4K,GAAUD,EAAK3K,EAE5B,CAGA,IAAI6K,GAAmBngB,EAAQ,0CAC1BogB,IAAYzI,GACf,SACA,IAAM,CAAC,OAEJ0I,IAAkB1I,GACrB,eACA,IAAM,MAEH2I,IAAY3I,GAAmB,SAAS,IAAM,KAC/C4I,GAAiB,CACnB,GAAgB,MAChB,GAAmB,SACnB,GAAoB,UACpB,GAAqB,WACrB,GAAuB,aACvB,GAAiB,OACjB,GAAiB,OACjB,IAAiB,MACjB,IAAwB,aACxB,GAAoB,UACpB,IAAqB,UACrB,IAAoB,SACpB,IAA2B,iBAE7B,SAASC,GAAOhI,GACd8H,GAASvE,GAAWvD,IAAQ5T,KAAK,EACnC,CACA,SAAS6b,GAAMjI,GACb8H,GAASvE,GAAWvD,IAAQ5T,KAAK,EACnC,CACA,SAAS8b,GAAalI,GACpB8H,GAASvE,GAAWvD,IAAQ5T,KAAK,EAAe,EAClD,CAYA,SAASG,GAAMyT,EAAOmI,GACpB,GAAIjb,IACF,OAEF,MAAMkS,EAAUmE,GAAWvD,GACrBoI,EAAQN,GAAS1I,GACjBiJ,EAAQT,GAASxI,GACjBkJ,EAAcT,GAAezI,GACnC,IAAImJ,EAAa,GACjB,GAAIH,EAAMhgB,OAAQ,CAChB,MAAMogB,EAAY,GAClB,IAAI5F,EAAQ,EACZ,IAAK,MAAM6F,KAAQL,EACJ,IAATK,GACF7F,IACA4F,EAAUpc,KAAK,MAEfwW,IACIA,GAAS,GACX4F,EAAUpgB,OAASogB,EAAUE,YAAY,IACzCF,EAAUpc,KAAK,MAEfoc,EAAUpgB,OAASogB,EAAUE,YAAY,KAAiB,EAC1DF,EAAUpc,KAAK,KACfwW,EAAQ,IAId,IAAI+F,EAAUH,EAAU,GACpBrW,EAAQ,EACZ,IAAK,MAAMyW,KAAQJ,EACbI,IAASD,GACXL,EAAYlc,KAAK,GAAG2b,GAAeY,MAAYxW,MAC/CoW,GAAcM,GAAYF,EAASxW,GACnCwW,EAAUC,EACVzW,EAAQ,GAERA,IAGJmW,EAAYlc,KAAK,GAAG2b,GAAeY,MAAYxW,MAC/CoW,GAAcM,GAAYF,EAASxW,GACnCiW,EAAMhgB,OAAS,CACjB,MACa,IAAT+f,IACW,KAATA,GACFW,GAAQ9I,EAAM,MAEhBsI,EAAYlc,KAAK,GAAG2b,GAAeI,MACnCI,GAAc5N,OAAOC,aAAauN,IAEpCZ,GAAcc,EAAOE,EACvB,CACA,SAASM,GAAYV,EAAMY,GACzB,OAAQZ,GACN,KAAK,GACH,OAAOa,GAAaD,EAAQZ,EAAM,IACpC,KAAK,GAEL,KAAK,IACH,OAAOa,GAAaD,EAAQZ,EAAM,IACpC,QACE,MAAM,IAAIrU,MAAM,yBAAyBqU,KAE/C,CACA,SAASa,GAAaD,EAAQE,EAAWC,GACvC,IAAI/a,EAAS,GACb,GAAI4a,GAAUG,EAAW,CACvB,MAAMC,EAAa1S,KAAKgB,MAAMsR,EAASG,GACvC/a,GAAU6a,GACRG,EACA,IACA,IAEFJ,GAAUI,EAAaD,CACzB,CAEA,OADA/a,GAAUwM,OAAOC,aAAaqO,EAAYF,GACnC5a,CACT,CACA,SAASib,GAAchK,GACrB,MAAMiK,EAAyC,IAA/BjK,EAAQ4D,SAASoB,UAAgCzJ,OAAOC,aAAa,IAAqB,GACpG0O,EAAuC,IAA7BlK,EAAQ4D,SAASqB,QAA8B1J,OAAOC,aAAa,IAAqB,GAElG2O,EAAc7C,GAA0B,CAAC2C,KADjCzB,GAASxI,GAC2CkK,KAAa3B,GAAiBxe,MAAME,cAAc,IASpH,MAR0B,KAAtBkgB,EAAYjjB,QACdijB,EAAYpM,gBAAkB,CAC5B,CACEnU,KAAM,eACN1C,MAAO,IAAMuhB,GAAezI,GAASoK,KAAK,MAAQ,OAIjDD,CACT,CAGA,IAAKE,IAAatK,GAChB,UACA,IAAM,CAAC,OAEJuK,IAAoBvK,GACvB,iBACA,IAAM,CAAC,MAET,SAAS2J,GAAQ9I,EAAO2J,GACtB,MAAMvK,EAAUmE,GAAWvD,GACrBha,EAAM2jB,EAAUD,GAAmBD,GACzC,MAAO,CAAC7C,KAASC,KACf,MAAM+C,EAAW/C,EAAMze,OACjByhB,EAAS7jB,EAAIoZ,GACnBmI,GAAcsC,EAAQjD,EAAK,IAC3B,IAAK,IAAI9J,EAAI,EAAGA,EAAI8M,EAAU9M,IAC5B+M,EAAOzd,KAAKya,EAAM/J,GAAI8J,EAAK9J,EAAI,GACjC,CAEJ,CACA,SAASgN,GAAY9J,GACnB,MAAMZ,EAAUmE,GAAWvD,GACrB6J,EAASJ,GAAUrK,GACnB2K,EAAWL,GAAiBtK,GAC5B4K,EAActD,GAA0BmD,GACxCI,EAAgBvD,GAA0BqD,GAKhD,OAJAF,EAAOzhB,OAAS,EAChByhB,EAAO,GAAK,GACZE,EAAS3hB,OAAS,EAClB2hB,EAAS,GAAK,GACVC,GAAeC,EACVzD,GAAkBrd,MAAMkD,oBAC7Bma,GAAkBrd,MAAM+gB,mBAAmB,CACzCxN,GAAY,QAASsN,GACrBtN,GAAY,gBAAiBuN,MAGxBD,EACFxD,GAAkBrd,MAAMkD,oBAAoBqQ,GAAY,QAASsN,IAC/DC,EACFzD,GAAkBrd,MAAMkD,oBAAoBqQ,GAAY,gBAAiBuN,SAD3E,CAGT,CACA,SAASE,GAAYnK,GACnB,MAAMoK,EAAON,GAAY9J,GACrBoK,GACFpK,EAAMqK,aAAaD,GAAM,GAAGE,MAEhC,CACA,SAASC,GAAUvK,GACjB,MAAM5Z,EAAS4Z,EAAMuC,YAAcvC,EAAQA,EAAMha,IAAI,QAC/CokB,EAAON,GAAY1jB,GACrBgkB,GACFhkB,EAAOokB,cAAc,OAAQJ,GAAM,GAAGE,MAE1C,CACA,SAASG,GAAerL,GACtB,MAAMsL,EAA6C,IAA/BtL,EAAQ4D,SAASoB,UAAgC,MAAQ,GACvEuG,EAA4C,IAA7BvL,EAAQ4D,SAASqB,QAA8B,MAAQ,GACtEwF,EAASJ,GAAUrK,GACzB,MAAO,CACLwL,MAAOC,GAASzL,GAChBiJ,MAAOe,GAAchK,GACrByK,OAAQnD,GAA0B,CAACgE,KAAgBb,EAAQc,KAAkBnE,GAAkBrd,MAAME,cAAc,IAEvH,CACA,SAASyhB,GAAS9K,EAAOpV,GACvB,MAAMwU,EAAUmE,GAAWvD,GAC3B,GAAqB,IAAjBpV,EAAQ5B,KACV,MAAMgX,EAAMhY,oBACV,+EAGAkF,KACF4b,GAAQ9I,EAAM,GAAGtD,GACf,iBACA+G,GAAqBrE,GACrB2L,GAAwBngB,KAG9B,CAGA,IAAKogB,GAAUC,IAAgB9L,GAC7B,YAEE+L,GAA0B,IAAI1P,QAC9B2P,GAAiB,CACnBxkB,OAAAA,CAAQkB,GAMN,IALA,EAAI6d,GAAoBnd,cAAcV,IACtC,EAAI6d,GAAoB0F,aAAavjB,IACrC,EAAI6d,GAAoBld,gBAAgBX,GACxCK,EAAoBL,IACpB,EAAI6d,GAAoB2F,yBAAyBxjB,EAAK,CAAC,QAAS,gBAC5DqjB,GAAQ1Q,IAAI3S,EAAI0F,KAClB,MAAM1F,EAAI7B,IAAI,QAAQgC,oBACpB,wDAIJ,GADAkjB,GAAQna,IAAIlJ,EAAI0F,MACXoY,GAAmB9d,EAAII,MAAM3B,MAChC,MAAMuB,EAAI7B,IAAI,QAAQgC,oBAAoB,qCAE9C,EACAb,UAAWkf,GAAkB,CAC3BC,KAAM,CACJF,IAAAA,CAAKve,GACH,MAAMuX,EAAUmE,GAAW1b,GACrB+d,EAASD,GAAmB9d,EAAII,MAQtC,GAPAkiB,GAAYtiB,GACR+d,EAAO0F,aACTC,GAA6BnM,GAAS3O,IACpCgV,GAAkBtc,MAAME,cAAc,KACtCuc,EAAO0F,aAGP1F,EAAOtf,MAAO,CAChB,MAAMklB,EAAYle,GAAmBuT,MAAM6C,sBAAsB,UACjEuH,GAAa7L,EAASoM,GACtB3jB,EAAI4B,YACFgc,GAAkBtc,MAAMsiB,oBAAoB,QAAS,CACnDhG,GAAkBtc,MAAMuiB,mBAAmBF,EAAW5F,EAAOtf,UAE/D,GAAGgkB,MACP,CACF,GAEF/D,IAAK,CACHH,IAAAA,CAAKve,GACH,MAAMuX,EAAUmE,GAAW1b,GACrB+d,EAASD,GAAmB9d,EAAII,MAClC2d,EAAOtf,OACTqlB,GACEvM,EACAwG,EAAOtf,MAAM6D,OAAO4a,mBACpB,CACExb,WAAYgT,GAAc,gBAC1BqP,2BAA4BA,KAAM,GAEpChG,EAAOtf,OAGPsf,EAAO0F,aACTK,GACEvM,EACAwG,EAAO0F,YAAYnhB,OAAO4a,mBAC1B,CACExb,WAAYgT,GAAc,mBAC1BqP,2BAA4BA,KAAM,GAEpChG,EAAO0F,aAGXzjB,EAAIoB,QACN,KAGJ4iB,aAAc,CACZC,aAAa,GAEfniB,aAAc,CACZ,CACEC,YAAa,iBACbC,YAAa,iDACbC,QAAS,oBACTiiB,mBAAoB,gDAM1B,SAASC,GAAkB/jB,EAAMmW,GAC/B,OAAQnW,EAAKe,MACX,IAAK,gBACH,IAAK,MAAMmT,KAAQlU,EAAKgkB,WACtB,OAAQ9P,EAAKnT,MACX,IAAK,iBACqB,sBAApBmT,EAAK7V,MAAM0C,KACbgjB,GAAkB7P,EAAK7V,MAAM4lB,KAAM9N,GAEnC4N,GAAkB7P,EAAK7V,MAAO8X,GAEhC,MACF,IAAK,cACH4N,GAAkB7P,EAAKgQ,SAAU/N,GAIvC,MACF,IAAK,eACH,IAAK,MAAMgO,KAAMnkB,EAAKokB,SACpB,GAAU,MAAND,EACF,OAAQA,EAAGpjB,MACT,IAAK,cACHgjB,GAAkBI,EAAGD,SAAU/N,GAC/B,MACF,IAAK,oBACH4N,GAAkBI,EAAGF,KAAM9N,GAC3B,MACF,QACE4N,GAAkBI,EAAIhO,GAK9B,MACF,IAAK,aACHA,EAAGnW,GAGT,CAGA,IAAIqkB,GAAoB9kB,EAAQ,yCAChC,SAAS+kB,GAA6B3hB,GACpC,OAAIA,EAAQ4hB,WAAa5hB,EAAQ6hB,cACxBH,GAAkBnjB,MAAMI,WAAWqB,EAAQrD,WACpB,IAArBqD,EAAQ8hB,SACV1Q,GACLuQ,GAA6B3hB,EAAQ6hB,eACrC7hB,EAAQ8hB,SACR9hB,EAAQ6hB,cAAcvM,UAGjBqM,GAA6B3hB,EAAQ6hB,cAEhD,CAGA,IAAIE,GAAoBnlB,EAAQ,yCAChC,SAASolB,GAAuBxN,EAAS2F,GACvC,MAAM8H,EAAYzN,EAAQwD,MACpBkK,EAAcH,GAAkBxjB,MAAM4jB,cAAc,IAC1D,IAAIC,EA+BJ,OA9BA7O,GAAQ4G,GAAqBkI,IAC3B,GAAIA,EAAI1lB,KAAK2V,SAAS,KAAM,OAC5B,MAAMgQ,EAAcnC,GAAwBkC,GACtCE,EAAgBR,GAAkBxjB,MAAMI,WAAW0jB,EAAI1lB,MACvD6lB,EAAcF,EAAY5mB,QAAU6mB,EAAc5lB,KACxD,IAAI8lB,EAAUP,EACd,GAAIG,EAAI7N,UAAYA,EAAS,CACtB4N,IAAgBA,EAAiB,CAACF,IACvC,MAAMQ,EAAgBT,EAAYI,EAAI7N,QAAQwD,MAC9C,IAAI9F,EAAIkQ,EAAe5kB,OACnBmlB,EAAOP,EAAelQ,EAAI,GAC9B,KAAOA,GAAKwQ,EAAexQ,IAAK,CAC9B,MAAM0Q,EAAgBb,GAAkBxjB,MAAM4jB,cAAc,IAC5DQ,EAAKtB,WAAW7f,KACdugB,GAAkBxjB,MAAM4S,eAAe4Q,GAAkBxjB,MAAMI,WAAW,KAAMikB,IAElFR,EAAe5gB,KAAKohB,GACpBD,EAAOC,CACT,CACAH,EAAUL,EAAeM,EAC3B,CACAD,EAAQpB,WAAW7f,KACjBugB,GAAkBxjB,MAAM4S,eACtBqR,EAAcD,EAAgBD,EAC9BC,GACA,EACAC,GAEH,IAEIN,CACT,CACA,SAASW,GAAmBrO,EAASsO,GACnC,IAAI7M,EAAQ8M,IAAmBhB,GAAkBxjB,MAAMI,WAAW,aAClE,MAAMqkB,EAAOxO,EAAQwD,MAAQ8K,EAAc9K,MAC3C,IAAK,IAAI9F,EAAI,EAAGA,EAAI8Q,EAAM9Q,IACxB+D,EAAQ8L,GAAkBxjB,MAAMkT,iBAAiBwE,EAAO8L,GAAkBxjB,MAAMI,WAAW,MAE7F,GAAIqkB,EAAO,EACT,MAAM,IAAI9Z,MAAM,uCAElB,OAAO+M,CACT,CACA,SAASgN,GAA0BzO,EAAS0O,GAC1C,OAAOnB,GAAkBxjB,MAAMkT,iBAC7BoR,GAAmBrO,EAAS0O,EAAU1O,SACtC2L,GAAwB+C,IACxB,EAEJ,CAGA,IAAIC,GAAoBvmB,EAAQ,yCAChC,SAASwmB,GAAiB9J,GACxB,OAAQA,EAAGlb,MACT,IAAK,sBACL,IAAK,qBACL,IAAK,0BACH,OAAOkb,EACT,QACE,OAAO6J,GAAkB5kB,MAAM8kB,mBAC7B,KACA/J,EAAGrB,OACHqB,EAAG/b,KACH+b,EAAG7T,MACH6T,EAAGgK,WAGX,CAGA,IAAIC,GAAoB3mB,EAAQ,yCAChC,SAAS4mB,GAAyBC,GAChC,GAAqB,IAAjBA,EAAMjmB,QAAgB+lB,GAAkBhlB,MAAMmlB,sBAAsBD,EAAM,IAAK,CACjF,MAAM,WAAEE,GAAeF,EAAM,GAC7B,OAAQE,EAAWvlB,MACjB,IAAK,mBACL,IAAK,uBACH,OAAOwlB,GAAkCD,GAC3C,QACE,OAAOA,EAEb,CACA,OAAOJ,GAAkBhlB,MAAMslB,eAAeJ,EAChD,CACA,SAASG,GAAkCpE,GACzC,OAAQA,EAAKphB,MACX,IAAK,mBACL,IAAK,uBACH,OAAOmlB,GAAkBhlB,MAAMulB,wBAAwBtE,GACzD,QACE,OAAOA,EAEb,CAGA,IAAIuE,GAAoBnnB,EAAQ,yCAC5B8iB,GAAOhf,OAAO,QAClB,SAASsjB,GAAgBC,EAAW/oB,EAAKgpB,GACvC,MAAM7mB,EAAO4mB,EAAU/oB,GACvB,GAAImC,EACF,GAAIoG,MAAMC,QAAQrG,GAChB,IAAK,IAAI6U,EAAI7U,EAAKG,OAAQ0U,KACxB8R,GAAgB3mB,EAAM6U,EAAGgS,OAEtB,CACL,MAAMlV,EAAO+U,GAAkBxlB,MAAM4lB,aAAa9mB,EAAKe,MACvD,IAAK,IAAI8T,EAAIlD,EAAKxR,OAAQ0U,KACxB8R,GAAgB3mB,EAAM2R,EAAKkD,GAAIgS,GAEjC,MAAME,EAAcF,EAAO7mB,EAAM4mB,EAAW/oB,GACxCkpB,IAAaH,EAAU/oB,GAAOkpB,EACpC,CAEJ,CACA,SAASC,GAAiBhnB,EAAMinB,GAC9B,GAAIjnB,EACF,GAAIoG,MAAMC,QAAQrG,IAChB,IAAK,MAAMiW,KAAQjW,EACjB,GAAIgnB,GAAiB/Q,EAAMgR,GACzB,OAAO,MAGN,CACL,OAAQA,EAAMjnB,IACZ,KAAK,EACH,OAAO,EACT,KAAKqiB,GACH,OAAO,EAEX,IAAK,MAAMxkB,KAAO6oB,GAAkBxlB,MAAM4lB,aAAa9mB,EAAKe,MAC1D,GAAIimB,GAAiBhnB,EAAKnC,GAAMopB,GAC9B,OAAO,CAGb,CAEF,OAAO,CACT,CAGA,IAAKC,IAAchQ,GACjB,WACA,IAAsB,IAAI5O,OAEvB6e,GAAyBC,IAA4BlQ,GAAmB,SAC7E,SAASmQ,GAAwBznB,EAAK0nB,GACpCF,GAAyB/L,GAAkBzb,EAAI7B,IAAI,SAAUupB,EAC/D,CACA,IAAKC,GAAkBC,IAAwBtQ,GAAmB,oBAClE,SAASuQ,GAAoBtQ,GAC3BqQ,GAAqBrQ,GAAS,EAChC,CACA,IAAKmM,IAAgCpM,GAAmB,6BAA6B,IAAsB,IAAI5O,MAC3Gof,GAAqBA,IAChBpK,GAAkBpc,MAAME,cAAc,0BAE/C,SAASumB,GAAUxQ,EAAS2F,EAAoBre,EAkRhD,SAA4Bqe,GAC1B,IAAIre,EACJ,GAAIqe,EACF,GAAI1W,MAAMC,QAAQyW,GAAqB,CACrCre,EAAQ,OACR,IAAK,MAAMumB,KAAOlI,EAChBre,GAAS,IAAIumB,EAAI1lB,MAErB,MACEb,EAAQqe,EAAmBxd,UAG7Bb,EAAQ,QAEV,OAAOA,CACT,CAjSwDmpB,CAAmB9K,IACzE,MAAM+K,EAAUX,GAAW/P,GAC3B,IAAI2Q,EAASD,EAAQ9pB,IAAI+e,GACzB,IAAKgL,EAAQ,CACX,MAAMC,EAAajL,GAAsB1W,MAAMC,QAAQyW,IAAuBA,EAAmB3F,UAAYA,GAAW2F,EAAmBkL,QAAU7Q,EAAQ6B,QAAU3T,GAAmBrF,KAAKkC,MAAM+lB,YAAYtF,MAoDjN,GAnDAkF,EAAQrf,IACNsU,EACAgL,EAAS,CACPxmB,WAAYymB,EAAazK,GAAkBpc,MAAMI,WAAWymB,GAAc1iB,GAAmBuT,MAAM6C,sBACjGhd,EAAQ0Y,EAAQ7X,KAAK4H,QAAQ,IAAK,MAEpC4V,qBACA3F,UACAlU,OAAQ,GACRilB,kBAAc,EACdC,OAAQ,GACRC,8BAA0B,EAC1BC,OAAQ,GACRC,8BAA0B,EAC1BC,YAAa,GACb1N,SAA0B,IAAIvS,IAC9Bqb,2BAA4BA,KAC1B,IAAIA,IAA+BmE,EAAOI,aAC1C,IAAKvE,EACH,IAAK,MAAMtlB,KAASypB,EAAO7kB,OACzB,GAAI5E,EAAMypB,OAAOnE,6BAA8B,CAC7CA,GAA6B,EAC7B,KACF,CAGJ,IAAKA,IACEvd,MAAMC,QAAQyW,IAAuBA,EAAoB,CAC5D,IAAK,MAAMha,KAASga,EAAmB/Z,QACrC,GAAI4kB,GAAUxQ,EAASrU,GAAO6gB,6BAA8B,CAC1DA,GAA6B,EAC7B,KACF,CAEF,IAAKA,EACH,IAAK,MAAO,CAAE7gB,KAAUga,EAAmB9Z,gBACzC,GAAI2kB,GAAUxQ,EAASrU,GAAO6gB,6BAA8B,CAC1DA,GAA6B,EAC7B,KACF,CAGN,CAGF,OADAmE,EAAOnE,2BAA6B,IAAMA,EACnCA,CAA0B,EAEnCrgB,MAAOokB,GACPM,SAAUD,IAGV9iB,IACF,OAAO6iB,EACGhL,EAED1W,MAAMC,QAAQyW,IACvB0L,GAAU1L,EAAoBgL,GAC9BA,EAAOxkB,MAAQ,IACNmR,GACL,eACA6I,GAAkBpc,MAAM0S,eAAekJ,EAAmB3c,QAC1DsoB,GAAYX,EAAQ,CAACpC,IAAkB5I,GACvC4L,GAAyBZ,KAGpBhL,EAAmB3F,UAAYA,GAAWwR,GAAYvS,KAAKe,EAAQ0D,SAAUiC,KACtF6K,GAAU7K,EAAmB3F,QAAS2F,GAAoBjC,SAASrS,IACjE2O,EACA2Q,GAEFA,EAAOxkB,MAAQ,KACb,MAAMgkB,EAAUH,GAAwBhQ,GAClCyR,EAAapD,GACjBrO,EACA2F,EAAmB3F,SAEf0R,EAAmBD,EAAW5U,SAAW0R,GACzCoD,GAAoBD,IAAqBvB,EACzCa,EAASM,GAAYX,EAAQ,CACjCpC,GACApI,GAAkBpc,MAAMI,WAAWwb,EAAmBxd,QAExDwoB,EAAOgB,iBAAmBA,EAC1B,MAAMZ,EAAeQ,GAAyBZ,GAC9C,OAAOgB,EAAmBrU,GACxB,iBACA0T,EACAU,EAAmB,KAAOvL,GAAkBpc,MAAM6nB,wBAAwB,CAACrD,IAAkBkD,GAC7FV,GACEZ,EAAQQ,EAAQK,EAAQD,EAAa,EAE3Cc,GACE,SACA7R,OACA,EACAmG,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eACtBiZ,GAAkBpc,MAAMkT,iBAAiB0T,EAAOxmB,WAAYgc,GAAkBpc,MAAMI,WAAW,MAC/F,CACEokB,GACAE,GAA0BzO,EAAS2F,QA9C3CgL,EAAOxkB,MAAQ,IAAMmlB,GAAYX,EAAQ,CAACpC,IAoD9C,CACA,OAAOoC,CACT,CACA,SAASmB,GAAUtmB,EAASumB,EAAgB,SAC1C,MAAMC,EAAgBrG,GAAwBngB,GAExCmlB,EAASH,GADChlB,EAAQwU,QACUxU,GAClCmlB,EAAOxkB,MAAQ,KACb,MAAM2Y,EAAKwM,GAAYX,EAAQ,CAC7BpC,GACApI,GAAkBpc,MAAMI,WAAWqB,EAAQrD,QAEvC8pB,EAAgBV,GAAyBZ,GACzCuB,GAAkB1mB,EAAQ6hB,gBAAmC,IAAjB7hB,EAAQ5B,MAA2C,IAAjB4B,EAAQ5B,MAK5F,QAJqB4B,EAAQ6hB,eAAkB7hB,EAAQ8hB,YAClB9hB,EAAQC,sBAAsBC,MAAQoZ,EAAG/b,KAAKA,KAAKC,OAAS,IAChEipB,GACdC,GAAkBD,EAE5B3U,GAAYyU,EAAeC,EAAelN,EAAImN,GAE9CnN,CACT,EAEF6L,EAAOqB,cAAgBA,EACvB,IAAK,MAAMrmB,KAASH,EAAQI,QAC1BkmB,GAAUnmB,GAEZ,IAAK,MAAMA,KAASH,EAAQK,gBAAgBC,SAC1CgmB,GAAUnmB,GAEZ,OAAOglB,CACT,CACA,SAASW,GAAYX,EAAQlN,EAAQkC,GACnC,MAAM3F,EAAU2Q,EAAO3Q,QACjBxU,EAAUmlB,EAAOhL,oBAChBwM,EAAkBC,GAAmB3O,EACtC4O,EAAgB7mB,IAAYyD,MAAMC,QAAQ1D,IAAYA,EAAQwU,UAAYA,EAChF,GAAIqS,EAAe,CACjB,IAAK,MAAM1mB,KAASH,EAAQI,QAAS,CACnC,MAAM0mB,EAAc9B,GAAU7kB,EAAMqU,QAASrU,GAC7CglB,EAAOK,OAAOhkB,KACZmZ,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eAAeolB,EAAYnoB,WAAY,CAC7DgoB,EACAC,KACGG,GAAuBD,MAIlC,CACA,IAAK,MAAO5rB,EAAKiF,KAAUH,EAAQK,gBAAiB,CAClD,MAAMymB,EAAc9B,GAAU7kB,EAAMqU,QAASrU,GAC7CglB,EAAOK,OAAOhkB,KACZmZ,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eAAeolB,EAAYnoB,WAAY,CAC7DgoB,EACAvV,GAAmBwV,EAAiB1rB,EAAK8E,EAAQsV,aAC9CyR,GAAuBD,MAIlC,CACF,CACA,IAAK,MAAMprB,KAASypB,EAAO7kB,OACzB6kB,EAAOK,OAAOhkB,KACZmZ,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eAAehG,EAAMypB,OAAOxmB,WAAY,CAC9DjD,EAAMua,MACNva,EAAMA,SACHqrB,GAAuBrrB,EAAMypB,YAKxC,GAAI0B,EAAe,CACjB,MAAMG,EAAiBvjB,MAAM1I,KAAKoqB,EAAOjN,SAAS3J,WAAW0Y,MAC3D,EAAE7S,IAAKC,KAAOD,EAAEM,GAAKL,EAAEK,KAEzB,IAAK,MAAOwS,EAAiBC,KAAkBH,EACzC9M,GAAqBiN,EAAchN,qBACrCgL,EAAOK,OAAOhkB,KACZmZ,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eAAeylB,EAAcxoB,WAAY,CAC/DgoB,EACAC,KAMZ,CAWA,OAVIzM,GACFgL,EAAOK,OAAOpkB,QACZuZ,GAAkBpc,MAAMsiB,oBAAoB,QAAS,CACnDlG,GAAkBpc,MAAMuiB,mBACtBkB,GAAuBxN,EAAS2F,GAChCwM,MAKDhM,GAAkBpc,MAAM6nB,wBAAwBnO,EAAQ0C,GAAkBpc,MAAMslB,eAAesB,EAAOK,QAC/G,CACA,IAAI4B,GAAyC,IAAIxW,QAC7CyW,GAAiB,GACrB,SAASN,GAAuB5B,GAC9B,OAAIA,EAAOmC,WACJF,GAAuBxX,IAAIuV,KAC9BiC,GAAuBjhB,IAAIgf,GAC3BnB,GAAgBmB,EAAQ,YAAaoC,KAEhCpC,EAAOmC,WAETD,EACT,CACA,SAAStB,GAAyBZ,GAChC,IAAIsB,EAAgBtB,EAAOI,aAC3B,MAAMvlB,EAAUmlB,EAAOhL,mBACvB,GAAIna,IAAYyD,MAAMC,QAAQ1D,IAAYA,EAAQwU,UAAY2Q,EAAO3Q,QAAS,CAC5E,IAAK,MAAMrU,KAASH,EAAQI,QAAS,CACnC,MAAMonB,EAAUxC,GAAU7kB,EAAMqU,QAASrU,GACrCqnB,EAAQxG,+BACVyF,EAAgBjlB,GACdilB,EACA9L,GAAkBpc,MAAMI,WAAW6oB,EAAQ7oB,WAAWhC,OAG5D,CACA,IAAK,MAAO,CAAEwD,KAAUH,EAAQK,gBAAiB,CAC/C,MAAMmnB,EAAUxC,GAAU7kB,EAAMqU,QAASrU,GACrCqnB,EAAQxG,+BACVyF,EAAgBjlB,GACdilB,EACA9L,GAAkBpc,MAAMI,WAAW6oB,EAAQ7oB,WAAWhC,OAG5D,CACF,CACA,IAAK,MAAMjB,KAASypB,EAAO7kB,OACrB5E,EAAMypB,OAAOnE,+BACfyF,EAAgBjlB,GACdilB,EACA/qB,EAAM+rB,yBAA2B9M,GAAkBpc,MAAMmpB,mBAAmBhsB,EAAMypB,OAAOxmB,YAAcjD,EAAMypB,OAAOxmB,WAAagc,GAAkBpc,MAAMI,WAAWjD,EAAMypB,OAAOxmB,WAAWhC,SAIlM,OAAO8pB,GAAiB9L,GAAkBpc,MAAM6nB,wBAC9C,GACA3iB,MAAMC,QAAQ+iB,GAAiB3U,GAAY,gBAAiB6I,GAAkBpc,MAAMopB,gBAAgBlB,IAAkBA,EAE1H,CACA,SAASZ,GAAU+B,EAAUC,GAC3B,GAAIpkB,MAAMC,QAAQkkB,GAEhB,YADAA,EAASrU,SAASuU,GAAMjC,GAAUiC,EAAGD,KAGvC,MAAME,EAAiB/C,GAAU6C,EAAWrT,QAASoT,GACrDG,EAAexC,aAAe/jB,GAC5BumB,EAAexC,aACfsC,EAAWlpB,WAEf,CAiBA,SAASqpB,GAAmBjW,GAC1B,IAAK,IAAIG,EAAIH,EAAKvU,OAAS,EAAG0U,GAAK,EAAGA,IAAK,CACzC,MAAMC,EAAMJ,EAAKG,GACjB,GAAIyI,GAAkBpc,MAAM0pB,0BAA0B9V,IAAQwI,GAAkBpc,MAAM2pB,iBAAiB/V,EAAI5U,MAAO,CAChH,MAAMA,EAAO4U,EAAI5U,KAAKA,KACF,IAAhBA,EAAKC,OACPuU,EAAKG,GAAKyI,GAAkBpc,MAAM0S,eAAe,GACxB,IAAhB1T,EAAKC,QAAgBmd,GAAkBpc,MAAMmlB,sBAAsBnmB,EAAK,MACjF4U,EAAI5U,KAAOqmB,GAAkCrmB,EAAK,GAAGomB,YAEzD,CACF,CACA,IAAK,IAAIzR,EAAIH,EAAKvU,OAAS,EAAGmd,GAAkBpc,MAAMwX,cAAchE,EAAKG,KACvEH,EAAKvU,OAAS0U,GAElB,CACA,SAASmU,GAAajoB,EAAM0kB,EAAe3I,EAAoBgO,EAAWC,GACxE,MAAMjD,EAASH,GAAUlC,EAAe3I,GAClCkO,EAAalD,EAAO/mB,KAAU,GAC9B+H,EAAe,WAAT/H,EAAoBkqB,GAAsBC,GAMtD,GALI9kB,MAAMC,QAAQykB,GAChBE,EAAW7mB,QAAQ2mB,GAEnBE,EAAW7mB,KAAK2mB,IAEK,IAAnBC,EACF,GAAIA,EACF,IAAK,MAAM/F,KAAO+F,EAChBjiB,EAAIgf,EAAQ9C,QAGdlc,EAAIgf,EAAQhL,EAGlB,CACA,SAASmO,GAAoBnD,EAAQhL,GACnCgL,EAAOQ,yBAA2BK,GAAYwC,MAC5CrD,EAAOQ,yBACPxL,EAEJ,CACA,SAASoO,GAAoBpD,EAAQhL,GACnCgL,EAAOM,yBAA2BO,GAAYwC,MAC5CrD,EAAOM,yBACPtL,EAEJ,CACA,SAAS4G,GAAS+B,EAAe3I,EAAoBgL,EAAQzpB,EAAOua,EAAQ8M,GAAiB0E,GAC3FzC,GAAUlC,EAAe3I,GAAoB7Z,OAAOkB,KAAK,CACvD2jB,SACAzpB,QACAua,QACAwR,0BAEJ,CACA,SAASgB,GAAoBjU,EAAS2F,EAAoB/b,GACxD,MAAM,UACJkD,EACAY,MAAM,SAAEC,IACNO,GAAmBC,IAAIf,KAC3B,IAAI9F,EAAQ,GACZ,GAAIqe,EACF,GAAkC,iBAAvBA,EACTre,GAAS,IAAIqe,SACR,GAAI1W,MAAMC,QAAQyW,GACvB,IAAK,MAAMkI,KAAOlI,EAChBre,GAAS,IAAIumB,EAAI1lB,YAGnBb,GAAS,IAAIqe,EAAmBxd,OAGpC,OAAO,EAAIie,GAAoB8N,eAC7BpnB,EACAa,EACA,GAAGqS,EAAQE,KAAK5Y,IAAQsC,EAAO,IAAMA,EAAO,KAEhD,CACA,IAAIuqB,GAA2C,IAAIhY,QACnD,SAASiY,GAAepU,EAAS1Y,GAC/B,MAAM,UACJwF,EACAY,MAAM,SAAEC,IACNO,GAAmBC,IAAIf,KAC3B,IAAIinB,EAAOF,GAAyBvtB,IAAIoZ,GACnCqU,GAAMF,GAAyB9iB,IAAI2O,EAASqU,EAAuB,IAAI/Y,KAC5E,MAAMgZ,GAAS,EAAIlO,GAAoB8N,eACrCpnB,EACAa,EACA,GAAGqS,EAAQE,MAAM5Y,KAEnB,IAAIyL,EAAQ,EACRmN,EAAKoU,EACT,KAAOD,EAAKjZ,IAAI8E,IACdA,EAAKoU,EAAS,OAAQvhB,EAGxB,OADAshB,EAAK1iB,IAAIuO,GACFA,CACT,CACA,SAASqU,GAAavU,GACpB,MAAM0Q,EAAU,IAAIX,GAAW/P,GAASlU,UAAU2mB,KAAK+B,IACvD,IAAK,MAAM7D,KAAUD,EAAS,CAC5BlB,GAAgBmB,EAAQ,SAAUoC,IAClC,IAAK,MAAM0B,KAAU9D,EAAO7kB,OAC1B0jB,GAAgBiF,EAAQ,QAAS1B,IAEnC,IAAI2B,EACJ,GAAI/D,EAAOO,OAAOloB,OAAQ,CACxBwmB,GAAgBmB,EAAQ,SAAUgE,IAClC,MAAMC,EAAmBzO,GAAkBpc,MAAMI,WAAW,GAAGwmB,EAAOxmB,WAAWhC,eAC3Ewd,EAAqBgL,EAAOQ,yBAC5B0D,EAAkBhF,GACtBc,EAAOO,OACP4D,IAEFJ,EAAmBvO,GAAkBpc,MAAMuiB,mBACzCsI,EACAtX,GACE,SACA6I,GAAkBpc,MAAME,cACtBgqB,GAAoBjU,EAAS2Q,EAAOhL,qBAEtCQ,GAAkBpc,MAAM6nB,wBACtBjM,EAAqBkP,EAAkB,CACrCtG,GACAf,GAAuBxN,EAAS2F,IAC9B,CAAC6H,GAAuBxN,EAAS2F,IAAuBkP,EAAkB,CAACtG,IAAmB,GAClGS,GAAyB2B,EAAOO,WAItCP,EAAOK,OAAOhkB,KACZmZ,GAAkBpc,MAAMkD,oBACtBkZ,GAAkBpc,MAAMmD,eAAe0nB,EAAkB,CAACrG,MAGhE,CACA,IAAIrnB,EAAQypB,EAAOxkB,QACfga,GAAkBpc,MAAMgrB,iBAAiB7tB,IAC3CssB,GAAmBtsB,EAAM8tB,WAEvBrE,EAAOsE,WACT/tB,EAAQoW,GACN,sBACA6I,GAAkBpc,MAAME,cACtBgqB,GAAoBjU,EAAS2Q,EAAOhL,mBAAoB,QAE1Dze,IAGAypB,EAAOgB,kBAAoBjM,GAAqBiL,EAAOhL,sBACzDze,EAAQoW,GACN,qBACA6I,GAAkBpc,MAAME,cACtBgqB,GAAoBjU,EAAS2Q,EAAOhL,mBAAoB,eAE1Dze,IAGJ,MAAMguB,EAAmB/O,GAAkBpc,MAAMuiB,mBAAmBqE,EAAOxmB,WAAYjD,GACvF,IAAIiuB,EAAqBnV,EAAQ6B,QAAW8O,EAAOhL,qBAAuBQ,GAAkBpc,MAAMqrB,qBAAqBluB,KAAUif,GAAkBpc,MAAM0pB,0BAA0BvsB,GAI/Kif,GAAkBpc,MAAMsiB,oBAAoB,QAAS,CAAC6I,IAJmI/O,GAAkBpc,MAAMsrB,oBACnN1E,EAAOxmB,WACPjD,EAAMuc,OACN0C,GAAkBpc,MAAMurB,aAAapuB,EAAM6B,MAAQod,GAAkBpc,MAAMslB,eAAe,CAAClJ,GAAkBpc,MAAMkD,oBAAoB/F,EAAM6B,QAAU7B,EAAM6B,MAE3J4nB,EAAOE,SACTsE,EAAoBhP,GAAkBpc,MAAMwrB,uBAAuBJ,IAErEjnB,GAAmBkd,cACjB,OACAsJ,EAAmB,CACjBvO,GAAkBpc,MAAMsiB,oBAAoB,QAAS,CAACqI,IACtDS,GACEA,EAER,CACF,CAyDA,SAASK,GAAmBC,GAC1B,MAAM3Q,EAAK8J,GAAiB6G,GAC5B,MAAmB,wBAAZ3Q,EAAGlb,KAAiC,CAACkb,EAAIqB,GAAkBpc,MAAM2rB,gBAAgB5Q,EAAG5E,KAAO,CAACiG,GAAkBpc,MAAM2rB,gBAAgB5Q,GAC7I,CACA,SAAS0P,GAAY5U,EAAGC,GACtB,MAAM8V,EAAsBC,GAAsBhW,GAC5CiW,EAAsBD,GAAsB/V,GAClD,IAAK,IAAInC,EAAIrG,KAAKuB,IAAI+c,EAAoB3sB,OAAQ6sB,EAAoB7sB,QAAU,EAAG0U,GAAK,EAAGA,IAAK,CAC9F,MAAM8Q,GAAQqH,EAAoBnY,KAAO,IAAMiY,EAAoBjY,KAAO,GAC1E,GAAa,IAAT8Q,EAAY,OAAOA,CACzB,CACA,OAAO,CACT,CACA,SAASoH,IAAwBjQ,mBAAoBmQ,IACnD,OAAKA,EAEM7mB,MAAMC,QAAQ4mB,GAChBA,EAAQtpB,IAAIupB,IAAatD,OAEzB,CAACsD,GAAYD,IAJb,EAMX,CACA,SAASC,GAAYrH,GACnB,OAAkD,KAAvB,IAAnBA,EAAU9kB,KAAuB,EAAI,GAAW8kB,EAAUxO,EACpE,CACA,SAAS8V,GAAkBhW,EAAS2F,GAClCkM,GAAa,SAAU7R,EAAS2F,OAAoB,GAAQ,EAC9D,CACA,SAASsQ,GAA0BrV,EAAOsV,GACxC,MAAMlW,EAAUkE,GAAkBtD,GAClC,IAAKZ,EAAS,OACd,MAAMmW,EAAalnB,MAAM1I,KAAKwpB,GAAW/P,GAASlU,UAC5CsqB,EAAoB/R,GAAqBrE,GAC/CjB,GAAQiB,EAAQ0D,UAAWoC,IACzB,GAAIJ,GAAqBI,GAAU,CACjC,IAAIuQ,EAAiBrW,EACrB,KAAOqW,IAAmBvQ,EAAQ9F,SAChCmM,GAA6BkK,GAAgBhlB,IAC3C8U,GAAkBpc,MAAME,cAAc,KACtCqT,GACE,oBACA+G,GAAqBgS,EAAiBA,EAAexU,UAI3DyO,GAAoBxK,EAAQ9F,SAC5B,MAAM0R,EAAmB1R,EAAQ6B,QAAQ3B,KAAO4F,EAAQ9F,QAAQE,KACtC8P,GAAwBhQ,KAAa0R,IAE7D9Q,EAAMwK,cACJ,OACAjF,GAAkBpc,MAAMkD,oBACtBqQ,GACE,cACA8Y,EACAjQ,GAAkBpc,MAAME,cACtBgqB,GAAoBjU,EAAS8F,EAAS,iBAMlD,KAEF,IAAK,IAAIpI,EAAIyY,EAAWntB,OAAQ0U,KAC9B,GAAIyY,EAAWzY,GAAGwT,OAAOloB,OAAQ,CAC/B,MAAMstB,EAAaH,EAAWzY,GAAGiI,mBACjC/E,EAAMwK,cACJ,OACAjF,GAAkBpc,MAAMkD,oBACtBqQ,GACE,cACA8Y,EACAjQ,GAAkBpc,MAAME,cAAcgqB,GAAoBjU,EAASsW,MAI3E,CAEF,MAAMC,EAA4B,IAAIjb,IAChCkb,EAAuBrK,GAA6BnM,GACpDyW,EAAuB,GAC7B1X,GAAQiB,EAAQ2D,UAAWnY,IACzB,GAAIA,EAAQkrB,WAA8B,IAAjBlrB,EAAQ5B,KAAsB,CACrD,MAAMyG,EAAWsb,GAAwBngB,GACzCirB,EAAqBzpB,KACnBmZ,GAAkBpc,MAAM4S,eAAetM,EAAU8c,GAA6B3hB,KAEhF+qB,EAAU5kB,IAAItB,EAASnJ,MACzB,KAEEgvB,QAA0C,IAAtBtK,GAAS5L,IAC/ByW,EAAqBzpB,KACnBmZ,GAAkBpc,MAAM4S,eACtBwJ,GAAkBpc,MAAME,cAAc,KACtCisB,IAIN,IAAK,MAAOxvB,EAAKQ,KAAUsvB,EACpBD,EAAUnb,IAAI1U,EAAIQ,SACrBuvB,EAAqBzpB,KACnBmZ,GAAkBpc,MAAM4S,eAAejW,EAAKQ,GAAQif,GAAkBpc,MAAM4sB,UAAUjwB,KAExF6vB,EAAU5kB,IAAIjL,EAAIQ,QAGtB,GAAIuvB,EAAqBztB,QAAUonB,GAAiBpQ,GAAU,CAC5D,IAAI4W,EAActZ,GAChB,aACA8Y,EACAjQ,GAAkBpc,MAAM8sB,iBAAiBJ,IAE3C,IAAKroB,IAAc,CACjB,IAAI0oB,EACJ/X,GAAQiB,EAAQ2D,UAAWnY,IACzB,IAAIurB,EAAOvrB,EACPwrB,EAAS,GACb,MAAQD,EAAKxT,KAAOwT,EAAK1J,oBACD,IAAlB0J,EAAKzJ,WACP0J,EAAS5mB,EAAS2mB,EAAKzJ,UAAY0J,GAErCD,EAAOA,EAAK1J,cAEd,GAAI0J,EAAKxT,IAAK,CACZ,MAAM0T,EAAS9Q,GAAkBpc,MAAME,cACrC,GAAG8sB,EAAKxT,IAAIjT,MAAM4mB,QAAQH,EAAKxT,IAAIjT,MAAM6mB,OAAS,MAEnDL,IAAc,IAAI9pB,KACjBmZ,GAAkBpc,MAAM4S,eACtBgP,GAAwBngB,GACxBurB,IAASvrB,EAAU2a,GAAkBpc,MAAMopB,gBAAgB,CACzDhN,GAAkBpc,MAAME,cAAc8sB,EAAK5uB,KAAO6uB,GAClDC,IACGA,GAGX,KAEFL,EAActZ,GACZ,QACAsZ,EACAzQ,GAAkBpc,MAAME,cAAc2W,EAAMzS,IAAIf,KAAKM,KAAK0pB,kBAC1DpX,EAAQuD,KAAiC,MAA1BvD,EAAQuD,IAAIjT,MAAM4mB,KAAe/Q,GAAkBpc,MAAME,cACtE,GAAG+V,EAAQuD,IAAIjT,MAAM4mB,QAAQlX,EAAQuD,IAAIjT,MAAM6mB,OAAS,KACtDhR,GAAkBpc,MAAM0S,eAAe,GAC3Cqa,GAAa3Q,GAAkBpc,MAAM8sB,iBAAiBC,GAE1D,CACAlW,EAAMwK,cAAc,OAAQjF,GAAkBpc,MAAMkD,oBAAoB2pB,GAC1E,EAC8B5W,EAAQgE,WAAahE,EAAQ+D,kBAAoB/D,EAAQ0D,YAAczE,GAAKe,EAAQ2D,UAAWnY,GAA6B,IAAjBA,EAAQ5B,SAE/IgX,EAAMwK,cACJ,OACAjF,GAAkBpc,MAAMkD,oBACtBqQ,GAAY,sBAAuB8Y,KAIrCxV,EAAMha,IAAI,QAAQoC,QACpB4X,EAAMyW,iBACJ,OACAlR,GAAkBpc,MAAMsiB,oBAAoB,QAAS,CACnDlG,GAAkBpc,MAAMuiB,mBAAmB8J,EAAmB9Y,GAAY,kBAIlF,CACA,SAASmO,GAASzL,GAChB,OAAO+P,GAAW/P,GAASpZ,SAAI,IAASuD,UAC1C,CACA,SAAS4oB,GAAkBlqB,GACzB,OAAOyuB,GAAoBzuB,IAAS0uB,GAAuB1uB,IAAS2uB,GAA8B3uB,EACpG,CACA,SAAS8rB,GAAkB9rB,GACzB,OAAOyuB,GAAoBzuB,IAAS0uB,GAAuB1uB,EAC7D,CACA,SAAS0uB,GAAuB1uB,GAC9B,OAAQA,EAAKe,MACX,IAAK,aACL,IAAK,mBACH,OAAO6tB,GAAmB5uB,GAGhC,CACA,SAASyuB,GAAoBzuB,GAC3B,OAAQA,EAAKe,MACX,IAAK,mBAAoB,CACvB,MAAM,MAAEmB,GAAUlC,EAAKkkB,SACvB,GAAI2K,GAAuB3sB,GAAQ,CACjC,MAAM,gBAAE4sB,GAAoBnH,GAC1BzlB,EAAM6sB,WAAW5X,QACjBjV,EAAM6sB,YAER,GAAID,EAAiB,CACnB,MAAM/H,EAAc+H,EAClB5sB,EAAMiV,QACNmG,GAAkBpc,MAAM8tB,iBACJ,OAAlBhvB,EAAKsY,SAAoB,IAAM,IAC/BtY,EAAKkkB,SACL5G,GAAkBpc,MAAM0S,eAAe,KAG3C,OAAK5T,EAAKivB,OAGHlI,EAFEzJ,GAAkBpc,MAAM+gB,mBAAmB,CAAC8E,EAAa/mB,EAAKkkB,UAGzE,CACF,CACA,KACF,CACA,IAAK,uBACH,OAAQlkB,EAAKikB,KAAKljB,MAChB,IAAK,aAAc,CACjB,MAAM,MAAEmB,GAAUlC,EAAKikB,KACvB,GAAI4K,GAAuB3sB,GAAQ,CACjC,MAAM,gBAAE4sB,GAAoBnH,GAC1BzlB,EAAM6sB,WAAW5X,QACjBjV,EAAM6sB,YAER,GAAID,EACF,OAAOA,EACL5sB,EAAMiV,QACY,MAAlBnX,EAAKsY,SAAmBtY,EAAKkvB,MAAQ5R,GAAkBpc,MAAM8tB,iBAC3DhvB,EAAKsY,SAAS5R,MACZ,GACC,GAEH1G,EAAKikB,KACLjkB,EAAKkvB,OAIb,CACA,KACF,CACA,IAAK,eACL,IAAK,gBAAiB,CACpB,IAAItU,EACAuU,EAiBJ,GAhBApL,GAAkB/jB,EAAKikB,MAAO5M,IAC5B,MAAM,MAAEnV,GAAUmV,EAClB,GAAIwX,GAAuB3sB,GAAQ,CACjC,MAAM4lB,EAASH,GACbzlB,EAAM6sB,WAAW5X,QACjBjV,EAAM6sB,YAEJjH,GAAQgH,kBACVzX,EAAG/X,KAAO+F,GAAmBuT,MAAM2B,YAAYlD,EAAG/X,OACjDsb,IAAW,IAAIzW,KAAKmZ,GAAkBpc,MAAMI,WAAW+V,EAAG/X,QAC1D6vB,IAAgB,IAAIhrB,KACnB2jB,EAAOgH,gBAAgB5sB,EAAMiV,QAASmG,GAAkBpc,MAAMI,WAAW+V,EAAG/X,QAGlF,KAEEsb,GAAUuU,EAAa,CACzB,MAAMC,EAAW/pB,GAAmBuT,MAAM2B,YAAY,UACtD,OAAO+C,GAAkBpc,MAAMmD,eAC7BiZ,GAAkBpc,MAAM6nB,wBACtB,CAACzL,GAAkBpc,MAAMI,WAAW8tB,MAAcxU,GAClD0C,GAAkBpc,MAAM+gB,mBAAmB,CACzC3E,GAAkBpc,MAAMmuB,qBACtB,IACArvB,EAAKikB,KACL3G,GAAkBpc,MAAMI,WAAW8tB,OAElCD,EACH7R,GAAkBpc,MAAMI,WAAW8tB,MAGvC,CAACpvB,EAAKkvB,OAEV,CACA,KACF,GAIR,CACA,IAAII,GAA0C,IAAIhc,QAClD,SAASqb,GAA8B3uB,GACrC,OAAQA,EAAKe,MACX,IAAK,cAAe,CAClB,MAAMgmB,EAAcwI,GAA0BvvB,GAC9C,OAAO+mB,GAAezJ,GAAkBpc,MAAMsuB,cAAcxvB,EAAKnC,IAAKkpB,EACxE,CACA,IAAK,qBAAsB,CACzB,MAAMA,EAAcwI,GAA0BvvB,GAC9C,OAAO+mB,GAAezJ,GAAkBpc,MAAMuuB,qBAAqBzvB,EAAKnC,IAAKkpB,EAC/E,CACA,IAAK,eAAgB,CACnB,MAAMA,EAAcwI,GAA0BvvB,GAC9C,OAAO+mB,GAAezJ,GAAkBpc,MAAM4S,eAAe9T,EAAKnC,IAAKkpB,EACzE,CACA,IAAK,0BACL,IAAK,qBACH,OAAOwI,GAA0BvvB,GAEnC,IAAK,sBAAuB,CAC1B,MAAM+mB,EAAcwI,GAA0BvvB,GAC9C,GAAI+mB,EACF,OAAOzJ,GAAkBpc,MAAMsiB,oBAAoB,QAAS,CAC1DlG,GAAkBpc,MAAMuiB,mBAAmBzjB,EAAKqX,GAAI0P,KAGxD,KACF,EAEJ,CACA,SAASwI,GAA0BvvB,GACjC,MAAM,MAAEkC,GAAUlC,EAClB,GAAI0vB,GAAoBxtB,GAAQ,CAC9B,MAAMmV,EAAKhS,GAAmBuT,MAAM2B,YAAYrY,EAAM5C,MAChD0sB,EAAkB9pB,EAAM8pB,gBACxBlP,EAAqB5a,EAAMytB,6BACjC,IAAIC,EAAcN,GAAwBvxB,IAAIsH,GAAmBrF,MAYjE,OAXK4vB,GACHN,GAAwB9mB,IAAInD,GAAmBrF,KAAM4vB,EAAc,IAErEA,EAAYzrB,KAAK,CACfkT,KACArX,OACA6vB,WAAY3tB,EAAM2tB,WAClB1Y,QAASjV,EAAMiV,QACf6U,kBACAlP,uBAEEkP,GAAmBlP,EACdQ,GAAkBpc,MAAMmD,eAAeiZ,GAAkBpc,MAAMI,WAAW+V,GAAK,CAACqO,KAEhFpI,GAAkBpc,MAAMI,WAAW+V,EAE9C,CACF,CAGA,IAAIyY,GAAc,CAChB5wB,UAAW,CACTif,IAAAA,CAAKtE,GACHvV,GAAMuV,GACN,MAAM1C,EAAUkE,GAAkBxB,IAC5B,MAAEuG,EAAK,OAAEwB,EAAM,MAAEe,GAAUH,GAAerL,GAC1C8Q,EAAapO,EAAQ7Z,KAAKkC,MAAM+lB,WAChC8H,EAAqB7S,GAAkBhc,MAAMI,WAAW2mB,EAAW+H,UACnEC,EAAkB/S,GAAkBhc,MAAMI,WAAW2mB,EAAW7H,OAChE8P,EAAkBhT,GAAkBhc,MAAMI,WAAW2mB,EAAWtF,OAChEwN,EAAgBtW,EAAQ7Z,KAAKkC,MAAMS,QACnCytB,EAAsBD,GAAiBztB,EAAgCytB,GAAiBlH,GAAUkH,QAAiB,EACnHE,EA3iDZ,SAAsB9rB,GACpB,MAAM,SAAEO,GAAaP,EAAKM,KACpByrB,EAAK/rB,EAAKN,UAAUssB,WACpBC,EAUR,SAAiB1rB,GACf,MAAM2C,EAAQ3C,EAAS2b,YAAYrD,GAAYa,QAAQwS,KAAO,EACxDC,EAAU5rB,EAAS6rB,QAAQ,IAAKlpB,GACtC,IAAiB,IAAbipB,EACF,OAAO5rB,EAAS4B,MAAMe,GAExB,MAAMmpB,EAAW9rB,EAAS2b,YAAY,KAChCoQ,EAAeH,EAAU,EAC/B,GAA+B,MAA3B5rB,EAAS+rB,GAAuB,CAClC,MAAMC,EAAchsB,EAAS2b,YAAY,IAAKoQ,GAC9C,GAAIC,EAAcrpB,EAChB,OAAO3C,EAAS4B,MAAMe,EAAOqpB,GAAehsB,EAAS4B,MAAMgqB,EAASE,EAExE,CACA,OAAO9rB,EAAS4B,MAAMe,EAAOmpB,EAC/B,CAzBeG,CAAQjsB,GACfksB,EAAa,IAAIjpB,OACrB,KAyBkBd,EAzBAupB,EA0BbvpB,EAAIC,QAAQmW,GAAgB,aA1BJ,UAAYmT,EAAO,IAAM,oBAyB1D,IAAsBvpB,EAvBpB,IAAK,MAAMgqB,KAASX,EAAGY,YAAY9T,GAAYa,QAAQkT,QAAQrsB,IAAW8kB,OACxE,GAAIoH,EAAWnrB,KAAKorB,GAClB,MAAO,KAAKA,GAGlB,CA+hDwBG,CAAavX,EAAQvU,IAAIf,MACvC8rB,IACF,EAAIlT,GAAqBkU,eAAexX,EAAQvU,IAAIf,KAAM8rB,GAhpDlE,SAA+BpU,GAC7B,MAAM,SAAExB,GAAapV,GAAmBrF,KAAKkC,MAC7C,IAAK,IAAI2S,EAAI4F,EAASta,OAAQ0U,KAC5BoH,EAAGxB,EAAS5F,GAEhB,CA6oDMyc,EAAuBC,IACrB,GAAIA,IAAiBpa,EAAS,CAC5B,MAAMqa,EAAkBD,EAAa3W,QAAUqO,GAAUsI,EAAa3W,SAC9DwF,MAAOqR,EAAQ7P,OAAQ8P,EAAS/O,MAAOgP,GAAWnP,GAAe+O,GACnEjwB,EAAa4b,GAAkBhc,MAAMI,WAAWiwB,EAAajyB,MAC7DsyB,EAAWnd,GACfiH,GAAwB6V,GAAgB,iBAAmB,0BAC3DG,EACAD,EACAE,EACAH,GAAiBlwB,YAAc4b,GAAkBhc,MAAM6nB,wBAAwB,GAAIyI,EAAgBlwB,aAErGoqB,GAAa6F,GACb1X,EAAQ7Z,KAAKE,KAAKiE,KAChB+Y,GAAkBhc,MAAMsiB,oBAAoB,QAAS,CACnDtG,GAAkBhc,MAAMuiB,mBACtBniB,EACAsb,GAAkB2U,GAAgB9c,GAChC,WACAyI,GAAkBhc,MAAME,cACtBgqB,GAAoBmG,EAAc,aAEpCK,GACEA,KAIZ,KAEFlG,GAAavU,GAvbnB,WACE,MAAM0a,EAAgBvC,GAAwBvxB,IAAIsH,GAAmBrF,MAC/DgrB,EAAa,GACnB,GAAI6G,EAAe,CACjB,IAAK,MAAMC,KAAgBD,EAAe,CACxC,IAAI5V,EACJ,MAAMrB,EAASkX,EAAahV,mBAAqBgV,EAAa9F,gBAAkB,CAC9EtG,GACApI,GAAkBpc,MAAM6wB,kBACtBpN,GACEmN,EAAa3a,QACb2a,EAAahV,oBAEf4I,KAEA,CACFf,GACEmN,EAAa3a,QACb2a,EAAahV,qBAEbgV,EAAa9F,gBAAkB,CAACtG,SAAmB,EAErDzJ,EADErB,EACG0C,GAAkBpc,MAAMsrB,oBAC3BlP,GAAkBpc,MAAMI,WAAWwwB,EAAaza,IAChDuD,EACA0C,GAAkBpc,MAAMslB,eAAemG,GAAmBmF,EAAa9xB,QAErC,wBAA3B8xB,EAAa9xB,KAAKe,MAAkC+wB,EAAa9xB,KAAKqX,IAAI/X,OAASwyB,EAAaza,GACpGya,EAAa9xB,KAEbsd,GAAkBpc,MAAMsrB,oBAC3BlP,GAAkBpc,MAAMI,WAAWwwB,EAAaza,IAChDya,EAAa9xB,KAAK4a,OACc,mBAAhCkX,EAAa9xB,KAAKE,KAAKa,KAA4B+wB,EAAa9xB,KAAKE,KAAOod,GAAkBpc,MAAMslB,eAAe,CAAClJ,GAAkBpc,MAAM2rB,gBAAgBiF,EAAa9xB,KAAKE,QAC9K4xB,EAAa9xB,KAAKimB,UAClB6L,EAAa9xB,KAAKoI,OAGtB4iB,EAAW7mB,KAAK8X,EAClB,CACA,IAAK,MAAM6V,KAAgBD,EACzB7G,EAAW7mB,KACTmZ,GAAkBpc,MAAMkD,oBACtBqQ,GACE,WACA6I,GAAkBpc,MAAME,cAAc0wB,EAAajC,YACnDvS,GAAkBpc,MAAMI,WAAWwwB,EAAaza,OAKxD,IAAK,MAAM2a,KAAQ3sB,GAAmBkd,cAAc,OAAQyI,GAC1DgH,EAAK3P,MAET,CACF,CAiYM4P,GACKtP,GACH9I,EAAQ7Z,KAAKE,KAAK6D,QAChBmZ,GAAkBhc,MAAMwrB,uBACtBxP,GAAkBhc,MAAMsiB,oBAAoB,QAAS,CACnDtG,GAAkBhc,MAAMuiB,mBACtByM,EACAhT,GAAkBhc,MAAM6nB,wBAAwB,GAAI7L,GAAkBhc,MAAMslB,eAAe,UAMrG3M,EAAQ7Z,KAAKE,KAAK6D,QAChBmZ,GAAkBhc,MAAMwrB,uBACtBxP,GAAkBhc,MAAMsiB,oBAAoB,QAAS,CACnDtG,GAAkBhc,MAAMuiB,mBACtBsM,EACAnO,GAAU1E,GAAkBhc,MAAME,cAAc,QAItD8b,GAAkBhc,MAAMwrB,uBACtBxP,GAAkBhc,MAAMsiB,oBAAoB,QAAS,CACnDtG,GAAkBhc,MAAMuiB,mBAAmBwM,EAAiB7P,GAASlD,GAAkBhc,MAAME,cAAc,SAIjHyY,EAAQ7Z,KAAKE,KAAKiE,KAChB+Y,GAAkBhc,MAAMgxB,yBACtBzd,GACE,iBACAyI,GAAkBhc,MAAME,cAAcyY,EAAQvU,IAAIf,KAAKG,SAASC,MAAM0S,IACtE0Y,EACAE,EACAC,EACAE,GAAqB9uB,YAAc4b,GAAkBhc,MAAM6nB,wBAAwB,GAAIqH,EAAoB9uB,cAInH,IAKA6wB,GAAoB5yB,EAAQ,yCAQ5B6yB,GAAe,CACjBlzB,UAAW,CACTif,IAAAA,CAAKtE,GACH,MAAM1C,EAAUkE,GAAkBxB,GAC5BwT,EAAmBxT,EAAQjB,MAAM6C,sBAAsB,UAC7D6G,GAAUzI,GACVuT,GAA0BvT,EAASwT,GACnC1G,GAAgB9M,EAAQ7Z,KAAM,OAAQqyB,IACtC,MAAMC,EAAmBvP,GAAS5L,QACT,IAArBmb,GACFzY,EAAQ0I,cAAc,OAAQ4P,GAAkBjxB,MAAM2rB,gBAAgByF,IAExE,MAAMC,EAAgB,GACtB,IAAK,MAAMC,KAAS3Y,EAAQ9b,IAAI,SAlBpBga,EAmBIya,GAlBPC,uBAAyB1a,EAAM2a,uBAAyB3a,EAAM4a,iBAAiB,CAAEC,QAAQ,IAqBrFJ,EAAMG,qBACXH,EAAMxyB,KAAK7B,QAAgC,WAAtBq0B,EAAMxyB,KAAK7B,OAClCq0B,EAAMxxB,SAENwxB,EAAMK,oBAAoBL,EAAMxyB,KAAKE,QANvCqyB,EAAcpuB,KAAKquB,EAAMxyB,MACzBwyB,EAAMxxB,UArBhB,IAAkB+W,EA8BZ8B,EAAQ0I,cAAc,OAAQ,CAC5B4P,GAAkBjxB,MAAMsiB,oBAAoB,QAAS,CACnD2O,GAAkBjxB,MAAMuiB,mBACtBqP,GACAre,GACE,iBACA0d,GAAkBjxB,MAAM6nB,wBACtB,CAACoJ,GAAkBjxB,MAAMI,WAAW,SAAU+rB,GAC9C8E,GAAkBjxB,MAAMslB,eAAe+L,QAK/CJ,GAAkBjxB,MAAMgxB,yBACtBzd,GACE,iBACA0d,GAAkBjxB,MAAME,cAAcyY,EAAQvU,IAAIf,KAAKG,SAASC,MAAM0S,IACtEyb,MAIR,IAGJ,SAAST,GAAYryB,EAAM4mB,GACzB,OAEF,SAAiC5mB,GAC/B,OAAQA,EAAKe,MACX,IAAK,aACL,IAAK,mBAAoB,CACvB,MAAM,MAAEmB,GAAUlC,EAClB,GAAIkC,KAAWA,EAAM6wB,OAAS7wB,EAAM6wB,KAAKpwB,QAAQ4hB,UAAYriB,EAAMS,UAAYT,EAAMS,QAAQ4hB,UAC3F,OAAOqK,GAAmB5uB,EAE9B,EAEJ,CAZSgzB,CAAwBhzB,IAajC,SAAwCA,EAAM4mB,GAC5C,OAAQ5mB,EAAKe,MACX,IAAK,cAAe,CAClB,MAAMgmB,EAAckM,GAA2BjzB,GAC/C,OAAO+mB,GAAeoL,GAAkBjxB,MAAMsuB,cAAcxvB,EAAKnC,IAAKkpB,EACxE,CACA,IAAK,qBAAsB,CACzB,MAAMA,EAAckM,GAA2BjzB,GAC/C,OAAO+mB,GAAeoL,GAAkBjxB,MAAMuuB,qBAAqBzvB,EAAKnC,IAAKkpB,EAC/E,CACA,IAAK,eAAgB,CACnB,MAAMA,EAAckM,GAA2BjzB,GAC/C,OAAO+mB,GAAeoL,GAAkBjxB,MAAM4S,eAAe9T,EAAKnC,IAAKkpB,EACzE,CACA,IAAK,sBAAuB,CAC1B,MAAM,MAAE7kB,GAAUlC,EAClB,GAAI0vB,GAAoBxtB,GAAQ,CAC9B,IAAIgxB,EAA2BC,GAA+Bp1B,IAC5D6oB,GAEGsM,GACHC,GAA+B3qB,IAC7Boe,EACAsM,EAA2B,IAG/BA,EAAyB/uB,KAAK,CAC5BkT,GAAIrX,EAAKqX,GAAG/X,KACZuwB,WAAY3tB,EAAM2tB,YAEtB,CACA,KACF,CACA,IAAK,0BACL,IAAK,qBACH,OAAOoD,GAA2BjzB,GAEpC,IAAK,iBACL,IAAK,kBAMT,SAAmCE,GACjC,MAAMgzB,EAA2BC,GAA+Bp1B,IAAImC,GACpE,GAAIgzB,EACF,IAAK,MAAM,GAAE7b,EAAE,WAAEwY,KAAgBqD,EAC/BhzB,EAAKiE,KACHguB,GAAkBjxB,MAAMkD,oBACtBqQ,GACE,WACA0d,GAAkBjxB,MAAMI,WAAW+V,GACnC8a,GAAkBjxB,MAAME,cAAcyuB,KAMlD,CApBMuD,CAA0BpzB,EAAKE,MAGrC,CAvD0CmzB,CAA+BrzB,EAAM4mB,EAC/E,CAuDA,IA8BIvhB,GAEAytB,GACApN,GAjCAyN,GAAiD,IAAI7f,QAiBzD,SAAS2f,GAA2BjzB,GAClC,MAAM,MAAEkC,GAAUlC,EAClB,GAAI0vB,GAAoBxtB,GACtB,OAAOuS,GACL,WACAsR,GAAiB/lB,GACjBmyB,GAAkBjxB,MAAME,cAAcc,EAAM2tB,aAC3C3tB,EAAMytB,8BAAgCztB,EAAM8pB,kBAAoBxQ,GAAqBtZ,EAAMiV,SAGlG,CAOA,SAAS8U,GAAkBjsB,GACzB,OAAOA,IAAS0lB,EAClB,CACA,IAAI4N,GAAsC,IAAIhgB,QAC1CigB,GAAkB,CACpBlzB,QAAS,CACPwd,KAAAA,CAAMhE,GACJyZ,GAAoB9qB,IAAIqR,EAASxU,IACjCwU,EAAQ7Z,KAAK4a,OAAS,CAACrY,EAAkBrB,MAAMI,WAAW,UAC1D+D,GAAqBwU,CACvB,EACAsE,IAAAA,GACE9Y,GAAmBuT,MAAM4a,QACzBnuB,GAAqBiuB,GAAoBv1B,IAAIsH,GAC/C,GAEF3G,QAAS,CACPmf,KAAAA,CAAMhE,GACJyZ,GAAoB9qB,IAAIqR,EAASxU,IACjCA,GAAqBwU,EACrBG,GAAaH,GACb4Z,GAAsB5Z,EAAS,GAC/BA,EAAQ7Z,KAAK4a,OAAO,GAAG1Y,MAAMS,QAAQsV,UAAW,EAChD,MAAM,MAAEW,GAAUiB,GACjBA,EAAQ7Z,KAAKkC,QAAU,CAAC,GAAG+lB,WAAa,CACvC+H,SAAUpX,EAAM2B,YAAY,aAC5B6F,MAAOxH,EAAM2B,YAAY,UACzBoI,MAAO/J,EAAM2B,YAAY,UACzBK,YAAQ,EAERC,SAAUjC,EAAM2B,YAAY,aAEhC,EACA4D,IAAAA,CAAKtE,IAgcT,WACE,MAAMiB,EAAW4Y,KACXC,EAAoBC,KACpBC,EAAYC,KACZC,EAAmBC,KACzB,GAAID,EAAiBlxB,KACnB,IAAK,MAAO1E,EAAQ81B,KAAUF,EAAkB,CAC9C,MAAMG,EAAc/1B,EAAO+D,MAC3B,IAAIiyB,EAAQR,EAAkB51B,IAAIm2B,IAC9B,SAAEE,GAAaF,EACnB,IAAK,MAAMl0B,KAAQi0B,EAAO,CACxB,MAAM/xB,EAAQlC,GAAMkC,MACpB,GAAImyB,GAAkBnyB,GAAQ,CAC5BkyB,IAAalyB,EAAMkyB,SACnB,MAAME,EAAkBX,EAAkB51B,IAAImE,GAC1CoyB,IAvsFKtd,EAwsFesd,EAAtBH,GAxsFIpd,EAwsFWod,GAtsFnBnd,EACE5Q,MAAMC,QAAQ0Q,GACTA,EAAEwd,OAAOvd,GACP5Q,MAAMC,QAAQ2Q,GAChB,CAACD,KAAMC,GAEP,CAACD,EAAGC,GAGRD,EAEFC,EA4rFG2c,EAAkBa,OAAOtyB,GAE7B,CACF,CACAyxB,EAAkBnrB,IAAI0rB,EAAaC,GACnCD,EAAYE,SAAWA,CACzB,CA/sFJ,IAAgBrd,EAAGC,EAitFjB,MAAMyd,EAAyC,IAAInsB,IACnD,IAAK,MAAO6Z,EAAMgS,KAAUR,EACtBU,GAAkBlS,KACpBA,EAAKrF,mBAAqB4X,GACxBvS,EACAgS,EACAM,GAEFve,GAAQiM,EAAKrF,oBAAqBna,IAChCA,EAAQC,sBAAsBkG,IAAIqZ,EAAK,KAI7C,IAAK,MAAOlG,EAAIkY,KAAUN,EACxB5X,EAAG0T,6BAA+B+E,GAChCzY,EACAkY,EACAM,GAEFve,GAAQ+F,EAAG0T,8BAA+BhtB,IACxCA,EAAQkrB,WAAY,CAAI,IAG5B,IAAK,MAAMlrB,KAAWmY,EACC,IAAjBnY,EAAQ5B,MAAyB4B,EAAQ6hB,eAC3CmQ,GAAa7Z,EAAUnY,GAG3B,IAAK,MAAMA,KAAWmY,EAAU,CAC9B,MAAQxb,KAAMb,EAAK,QAAE0Y,GAAYxU,EACZ,IAAjBA,EAAQ5B,MACNqV,GAAKe,EAAQ2D,UAAU,EAAGxb,KAAMs1B,KAAYA,IAAUjyB,EAAQrD,SAChEqD,EAAQrD,KAAO+F,GAAmBuT,MAAM2B,YAAY9b,IAGxD0Y,EAAQ2D,SAAW6N,GAAY7f,IAAIqO,EAAQ2D,SAAUnY,GACrD,IAAK,MAAM,mBACTma,EAAkB,SAClBsX,EACAjd,QAAS0d,KACNlyB,EAAQC,sBACPiyB,IAAalyB,EAAQwU,UACvB0d,EAASha,SAAW8N,GAAY7f,IAAI+rB,EAASha,SAAUlY,IAErDyxB,GACFle,GAAQ4G,GAAqBgY,IAC3BA,EAAiBjH,WAAY,CAAI,GAIzC,CACA7R,IAAgB7E,IACd,MAAMiS,EAAgBqL,EAAuB12B,IAAIoZ,GACjD,GAAIiS,EACF,IAAK,MAAMlB,KAAgBkB,EAAe,CACxC,MAAM2L,EAAgB7M,EAAa/nB,OACnC,IAAK,IAAI0U,EAAI,EAAGA,EAAIkgB,EAAgB,EAAGlgB,IACrC,IAAK,IAAIsK,EAAItK,EAAI,EAAGsK,EAAI4V,EAAe5V,IAAK,CAC1C,MAAM6V,EAAW9M,EAAarT,GACxBogB,EAAW/M,EAAa/I,GACxB+V,EAAWC,GAAkBH,GAC7BI,EAAWD,GAAkBF,GAC9BD,EAASnH,WAAcwH,GAAWH,EAAUE,KAC/CJ,EAASnH,WAAY,GAElBoH,EAASpH,WAAcwH,GAAWD,EAAUF,KAC/CD,EAASpH,WAAY,EAEzB,CAEJ,CAEF3X,GAAQiB,EAAQ0D,UAAWlY,IACzB,IAAKA,EAAQkrB,UAAW,CACtB,IAAIA,GAAY,EAChB,MAAMyH,EAAgB3yB,EAAQwU,QAC9B,IAAIqW,EAAiBrW,EACrB,KAAOqW,IAAmB8H,KAAmBzH,GAAaL,EAAevS,oBAAsB4B,GAC7F2Q,EAAevS,mBAAmB6B,sBAElC0Q,EAAiBA,EAAexU,OAElCrW,EAAQkrB,UAAYA,CACtB,IACA,IAEJ7R,IAAe,EAAG3E,KAAIyD,SAAUya,MAC9Brf,GAzxFJ,SAAgBF,EAAMG,GACpB,GAAIH,EAAM,CACR,GAAI5P,MAAMC,QAAQ2P,GAAO,CACvB,MAAMY,EAAMZ,EAAK7V,OACjB,IAAI+F,EACA2O,EAAI,EACR,KAAOA,EAAI+B,GAAK,CACd,IAAIX,EAAOD,EAAKnB,KAChB,GAAIsB,EAAGF,GAAO,CAEZ,IADA/P,EAAS+P,EACFpB,EAAI+B,GAET,GADAX,EAAOD,EAAKnB,KACRsB,EAAGF,GAAO,CAEZ,IADA/P,EAAS,CAACA,EAAQ+P,GACXpB,EAAI+B,GACTX,EAAOD,EAAKnB,KACRsB,EAAGF,IACL/P,EAAO/B,KAAK8R,GAGhB,OAAO/P,CACT,CAEF,OAAOA,CACT,CACF,CACA,OAAOA,CACT,CACA,GAAIiQ,EAAGH,GACL,OAAOA,CAEX,CAEF,CAyvFMwf,CAAOD,GAAW,EAAGpe,aAAcA,EAAQE,KAAOA,KAClD,CAAC1U,EAASkS,KACRlS,EAAQ0U,GAAKxC,CAAC,GAEjB,IAEHkf,EAAiB9pB,QACjB0pB,EAAkB1pB,QAClB4pB,EAAU5pB,OACZ,CAzjBMwrB,GACA,MAAM,MACJ7c,EACA5Y,MAAM,MAAEkC,IACN2X,EACA3X,EAAMS,SAAWD,EAAgCR,EAAMS,WACzDT,EAAM+lB,WAAWrN,OAAS8a,GAAqBxzB,EAAMS,QAASiW,IAEhEvT,GAAqBiuB,GAAoBv1B,IAAIsH,GAC/C,GAEFnG,UAAW,CACT2e,KAAAA,CAAMhE,GAMJ,GALAyZ,GAAoB9qB,IAAIqR,EAASxU,IACjCA,GAAqBwU,EACrB6L,GAAkBtgB,IAAgByU,EAAQjB,MAAM6C,sBAAsB,SAAW,KAC/DrW,KAAgByU,EAAQjB,MAAM6C,sBAAsB,SACtEqX,GAAyB7tB,IAAiB4U,EAAQjB,MAAM6C,sBAAsB,YAAc,KAC9D,YAA1BvW,IAAeC,OAAsB,CACvC,MAAM5B,EAAYsW,EAAQvU,IAAIf,KACxBoxB,EAA+B,IAAIljB,IAAI,EAC3C,EAAIjQ,EAAqBoC,qBAAqBrB,EAAWA,EAAUsB,KAAKC,YAiB1E,OAfAjG,EAAsByF,MAAMf,EAAWA,GAAW,SAASiB,EAAWoxB,GACpE,IAAKD,EAAapjB,IAAIqjB,GAAW,CAC/BD,EAAa7sB,IAAI8sB,GACjB,MAAMrxB,GAAO,EAAI/B,EAAqBqzB,mBAAmBtyB,EAAWqyB,GAChErxB,GACF1F,EAAsByF,MACpBC,EACAhB,GACC8T,GAAO7S,EAiCxB,SAAgCjB,EAAWgB,EAAMuxB,GAC/C,OAAOvxB,IAAShB,GAAY,EAAIf,EAAqBoC,qBAAqBL,EAAMuxB,IAAO,EAAItzB,EAAqBoC,qBAC9GrB,EACW,MAAXuyB,EAAI,GAAarzB,EAAawb,QAAQsD,KAAKhd,EAAKM,KAAKC,SAAU,KAAMgxB,GAAOA,EAEhF,CAtCmCC,CAAuBxyB,EAAWgB,EAAM8S,KAGjE,CACF,IACAwC,EAAQ7Z,KAAKE,KAAOrB,EAAsByE,MAAMC,QAChDsW,EAAQwI,MAEV,CACF,EACAlE,IAAAA,CAAKtE,GAMH,GALI5U,IACFmtB,GAAalzB,UAAUif,KAAKtE,GAE5BiW,GAAY5wB,UAAUif,KAAKtE,GAEzBA,EAAQ7Z,KAAKkC,OAAO6X,YAAa,CACnC,MAAMic,EAAa5gB,KACblV,EAAO,MAAC,GACd,IAAK,MAAMsyB,KAAS3Y,EAAQ7Z,KAAKE,KACZ,sBAAfsyB,EAAMzxB,MAAgCyxB,EAAMxqB,OAAO3J,QAAU23B,EAC/D91B,EAAK,GAAKsyB,EAEVtyB,EAAKiE,KAAKquB,GAGdtyB,EAAK,KAAOqC,EAAkBrB,MAAM2C,kBAAkB,GAAItB,EAAkBrB,MAAME,cAAc40B,IAChGnc,EAAQ7Z,KAAKE,KAAOA,CACtB,CACAmF,GAAqBiuB,GAAoBv1B,IAAIsH,GAC/C,IASJ,SAASqwB,GAAqB/yB,EAASiW,GACrC,MAAMqd,EAAiB,CACrB5e,GAAI1U,EAAQqlB,SAAWpP,EAAM2B,YAAY5X,EAAQrD,KAAO,KACxD42B,WAAO,IAEH,QAAEnzB,EAAO,gBAAEC,EAAe,sBAAEJ,GAA0BD,EAC5D,IAAKC,EAAsBC,KAAM,CAC/BozB,EAAeC,MAAQ,CAAC,EACxB,IAAK,MAAOzR,EAAU3hB,KAAUE,EAC9BizB,EAAeC,MAAMzR,GAAYiR,GAAqB5yB,EAAO8V,GAE/D,IAAK,MAAM9V,KAASC,EAAS,CAC3B,MAAMozB,EAAWT,GAAqB5yB,EAAO8V,GAC7C,IAAIud,EAASD,MAIX,OADAD,EAAeC,WAAQ,EAChBD,EAHPA,EAAeC,MAAQ,IAAKD,EAAeC,SAAUC,EAASD,MAKlE,CACF,CACA,OAAOD,CACT,CAUA,SAASG,GAAYre,GACnB,IAAIse,EAAUte,EACd,MAAQue,GAAQD,EAAQnc,aACtBmc,EAAUA,EAAQnc,WAEpB,OAAOmc,CACT,CACA,SAASE,GAAUxe,GACjB,IAAIse,EAAUte,EACd,IAAIse,EAAQ/b,YAAZ,CACA,MAAQiS,GAAqB8J,IAAU,CACrC,GAAIC,GAAQD,GAAU,OACtBA,EAAUA,EAAQnc,UACpB,CACA,OAAOmc,CALwB,CAMjC,CACA,SAASC,GAAQve,GACf,OAAQA,EAAMhX,MACZ,IAAK,WACL,IAAK,eACL,IAAK,iBACL,IAAK,uBACL,IAAK,mBACL,IAAK,iBACH,OAAO,EACT,QACE,OAAO,EAEb,CACA,SAASwrB,GAAqBxU,GAC5B,OAAQA,EAAMhX,MACZ,IAAK,qBACL,IAAK,0BACH,OAAO,EACT,QACE,OAAO,EAEb,CAGA,SAASy1B,GAAqBC,EAASC,GAIrC,OAHAD,EAAQhvB,MAAQivB,EAAajvB,MAC7BgvB,EAAQ/b,IAAMgc,EAAahc,IAC3B+b,EAAQE,IAAMD,EAAaC,IACpBF,CACT,CAGA,IAAK/C,IAAezc,IAAmB,IAAsB,IAAIxE,OAC5DmkB,GAAkBC,IAAoB5f,IAAmB,IAAM,IACpE,SAAS6f,GAAcr4B,EAAOsC,EAAMoW,EAASqN,EAAevJ,EAAoBwJ,EAAU/J,EAAM,KAAM6J,GAAW,GAC/G,MAAMlN,EAAKuf,KACLj0B,EAAU,CACd0U,KACA/X,KAAMb,EACNsC,OACA2Z,MACAvD,UACAsN,WACAF,WACAwS,uBAAmB,EACnBlJ,WAAW,EACX9qB,QAAyB,IAAI0P,IAC7BzP,gBAAiC,IAAIsF,IACrCkc,gBACAvJ,qBACArY,sBAAuC,IAAI6P,IAC3CuV,YAAQ,EACR/P,UAAWgD,GAAoB9Y,WAA4C,MAA/B8Y,EAAmB7Y,UAEjE,GAAIqiB,EAAU,CACRF,IAAUC,EAAcvM,UAAW,GACvC,MAAM+e,EAAcxS,EAAcxhB,gBAAgBjF,IAAI0mB,GAClDuS,GACFr0B,EAAQ8hB,cAAW,EACnB9hB,EAAQ6hB,cAAgBwS,EACxBA,EAAYj0B,QAAQ+F,IAAInG,IAExB6hB,EAAcxhB,gBAAgBwF,IAAIic,EAAU9hB,EAEhD,MAAW6hB,GACTA,EAAczhB,QAAQ+F,IAAInG,GAI5B,OAFAk0B,GAAiBxf,EAAK,GACtBqc,KAAc5qB,IAAInG,GACXA,CACT,CACA,SAASs0B,GAAmBr3B,EAAKmB,EAAMyjB,EAAevJ,GACpD,MAAMpa,EAASjB,EAAII,KAAKc,IACxB,GAAID,EAAQ,CACV,MAAMsW,EAAUgD,GAAmBva,GAC7Bs3B,EAAyBC,GAAoB3S,GAC/CA,GAAiBvJ,IAAoBA,EAAmBmc,QAAS,GACrEC,GACEx2B,EACAE,EACAnB,EAAIgZ,MACJzB,EACA+f,EACAjc,OACA,EAEJ,CACF,CACA,SAASwY,GAAsBvzB,EAAMa,EAAMyjB,EAAevJ,GACxD,MAAML,EAAS1a,EAAKF,KAAK4a,OACzB,GAAI1a,EAAKF,KAAKE,KAAKC,QAAUya,EAAOza,OAAQ,CACtCqkB,GAAiBvJ,IAAoBA,EAAmBmc,QAAS,GACrE,MAAMjgB,EAAUgD,GAAmBja,GAC7Bg3B,EAAyBC,GAAoB3S,GAC7C2L,EAAgB+G,KAA4Bh3B,EAAKF,KAAKkC,QAAU,CAAC,GAAGS,QAAUm0B,GAClFzxB,GAAmBuT,MAAM2B,YAAY,WACrCxZ,EACAoW,EACA+f,EACAjc,OACA,IAEF9D,EAAQyD,OAASuV,EACjB,IAAK,IAAItb,EAAI,EAAGA,EAAI+F,EAAOza,OAAQ0U,IACjCwiB,GACEzc,EAAO/F,GACP9T,EACAb,EAAK0Y,MACLzB,EACAgZ,EACAlV,EACApG,EAAI,GAGV,CACF,CAqBA,SAASyiB,GAAgBvI,EAAYpsB,GACnC,MAAMwU,EAAUgD,GAAmB4U,GACnCwI,GAAmBxI,GACnBhL,GAAkBgL,EAAW/uB,MAAOqX,IAClC,GAAIA,EAAG/X,OAASqD,EAAQrD,KAAM,CAC5B,MAAM4C,EAAQmV,EAAGnV,QAAU,CAAC,EAC5BA,EAAM6sB,WAAapsB,EACnBT,EAAMiV,QAAUA,CAClB,IAEJ,CACA,SAASogB,GAAmBxf,GAC1B,IAAIyf,EAASjB,GAAUxe,GACvB,KAAOyf,IACJA,EAAOx3B,KAAKkC,QAAU,CAAC,GAAG8pB,iBAAkB,EAC7CwL,EAASjB,GAAUiB,EAAOtd,WAE9B,CACA,SAASmd,GAAiCI,EAAM12B,EAAM6X,EAAOzB,EAASqN,EAAevJ,EAAoBwJ,GACvG,OAAQgT,EAAK12B,MACX,IAAK,cACF02B,EAAKv1B,QAAU,CAAC,GAAGS,QAAUm0B,GAC5BW,EAAKn4B,KACLyB,EACAoW,EACAqN,EACAvJ,EACAwJ,EACAgT,EAAK/c,KACL,GAjDR,SAAmCgd,GACjC,MAAM,WAAEp2B,EAAU,eAAEq2B,EAAc,mBAAEC,GAAuBF,EACrD/0B,EAAUrB,EAAWY,MAAMS,QACjC,IAAK,MAAMk1B,KAAiBF,EAC1BG,GAAeD,EAAel1B,GAEhC,IAAK,MAAMqiB,KAAO4S,EAChB,GAAI5S,EAAI+S,qBACNT,GAAgBtS,EAAIjnB,IAAI,YAAa4E,QAChC,GAAIqiB,EAAIzM,2BACb+e,GAAgBtS,EAAIjnB,IAAI,QAAS4E,GACP,MAAtBqiB,EAAIhlB,KAAKsY,UAAkB,CAC7B,MAAM2L,EAAOe,EAAIjnB,IAAI,QACjBkmB,EAAKtL,gBACPmf,GAAe7T,EAAMthB,EAEzB,CAGN,CAgCMq1B,CAA0Bpf,EAAMC,WAAW4e,EAAKn4B,OAChD,MACF,IAAK,gBAAiB,CACpB,MAAM24B,GAAkBxT,EAAWD,EAAcxhB,gBAAgBjF,IAAI0mB,GAAYD,MAAoBiT,EAAKv1B,QAAU,CAAC,GAAGS,QAAUm0B,GAChIzxB,GAAmBuT,MAAM2B,YAAY,YACrCxZ,EACAoW,EACAqN,OACA,EACAC,EACAgT,EAAK/c,MAEP,IAAK,MAAMxG,KAAQujB,EAAKzT,WACtB,GAAkB,gBAAd9P,EAAKnT,KACPs2B,GACEnjB,EAAKgQ,SACLnjB,EACA6X,EACAzB,EACA8gB,OACA,EACAxT,OAEG,CACL,IAAI5mB,EACJ,GAAsB,eAAlBqW,EAAKrW,IAAIkD,KACXlD,EAAMqW,EAAKrW,IAAIyB,SACV,IAAsB,kBAAlB4U,EAAKrW,IAAIkD,KAGlB,MAAM,IAAI8K,MAAM,iDAFhBhO,EAAMqW,EAAKrW,IAAIQ,KAGjB,CACAg5B,GACEnjB,EAAK7V,MACL0C,EACA6X,EACAzB,EACA8gB,OACA,EACAp6B,EAEJ,CAEF,KACF,CACA,IAAK,eAAgB,CACnB,MAAMo6B,GAAkBxT,EAAWD,EAAcxhB,gBAAgBjF,IAAI0mB,GAAYD,MAAoBiT,EAAKv1B,QAAU,CAAC,GAAGS,QAAUm0B,GAChIzxB,GAAmBuT,MAAM2B,YAAY,YACrCxZ,EACAoW,EACAqN,OACA,EACAC,EACAgT,EAAK/c,MAEP,IAAI7F,GAAK,EACT,IAAK,MAAMqjB,KAAWT,EAAKrT,SACzBvP,IACIqjB,IACmB,gBAAjBA,EAAQn3B,KACVs2B,GACEa,EAAQhU,SACRnjB,EACA6X,EACAzB,EACA8gB,OACA,EACAxT,GAGF4S,GACEa,EACAn3B,EACA6X,EACAzB,EACA8gB,OACA,EACA,GAAGpjB,MAKX,KACF,CACA,IAAK,oBACHwiB,GACEI,EAAKxT,KACLljB,EACA6X,EACAzB,EACAqN,OACA,EACAC,GAIR,CACA,SAASqT,GAAeD,EAAel1B,GACrC,IAAIurB,EAAO2J,EACPhS,EAAYljB,EACZw1B,EAAWx1B,EAAQrD,KACvB,OAAa,CACX,MAAM,OAAE0Z,GAAWkV,EACnB,IAAK5rB,EAAkBpB,MAAMmpB,mBAAmBrR,GAAS,MACzD,MAAM9E,EAAOkkB,GAA8Bpf,GAC3C,QAAa,IAAT9E,EAAiB,MACrB,GAAI2R,EAAU7iB,gBAAgBuP,IAAI2B,GAChCga,EAAOA,EAAKhU,WACZ2L,EAAYA,EAAU7iB,gBAAgBjF,IAAImW,GAC1CikB,EAAWtS,EAAUvmB,SAHvB,CAMA,GAAI4uB,EAAKhU,WAAWA,WAAWgS,qBAAuBmM,GAAuBnkB,GAC3E,MAEFga,EAAOA,EAAKhU,WACZ2L,EAAYiR,GACVqB,GAAY,IAAIjkB,EAAKhN,QAAQ,kBAAmB,OAChD2e,EAAU9kB,KACV8kB,EAAU1O,QACV0O,OACA,EACA3R,EAXF,CAaF,CACA,MAAMsjB,EAASjB,GAAUrI,GACnBoK,EAAWlC,GAAYoB,GAAUtJ,IACjC,QAAE/W,GAAYohB,GAAoBD,EAAUzS,EAAWqI,EAAKluB,MAClE,GAAIw3B,EAAQ,CACV,MAAM3D,EAAYC,KACZ0E,EAAUhB,EAAOx3B,KAAKkC,QAAU,CAAC,EACvCs2B,EAAQrhB,QAAUA,EAClB0c,EAAUrrB,IACRgwB,EACAr0B,GAAK0vB,EAAU91B,IAAIy6B,GAAU,CAC3B71B,QAASkjB,EACT7lB,KAAMkuB,EAAKluB,OAGjB,CACF,CACA,IAAKg0B,IAAuB/c,IAC1B,IAAsB,IAAI3O,MAE5B,SAASmwB,GAAgBthB,EAAShZ,EAAQ81B,IACvC91B,EAAO+D,QAAU,CAAC,GAAGiV,QAAUA,EAChC6c,KAAsBxrB,IAAIrK,EAAQ81B,EACpC,CACA,SAASyE,GAAqB3hB,EAAGC,GAC/B,MAAMJ,EAAMG,EAAE5W,OACRw4B,EAAW/hB,EAAMI,EAAE7W,OACzB,GAAiB,IAAbw4B,EACF,OAAOA,EAET,IAAK,IAAI9jB,EAAI,EAAGA,EAAI+B,EAAK/B,IAAK,CAC5B,MAAM6B,EAAgBiS,GAAYrS,QAAQS,EAAElC,GAAImC,EAAEnC,IAClD,GAAsB,IAAlB6B,EACF,OAAOA,CAEX,CACA,OAAO,CACT,CA4HA,SAAS2e,GAAW7sB,EAAKowB,GACvB,IAAK,MAAMC,KAAQD,EACjB,IAAKpwB,EAAI+J,IAAIsmB,GACX,OAAO,EAGX,OAAO,CACT,CACA,SAAS1D,GAAkBxyB,GACzB,MAAMm2B,EAA0B,IAAIrmB,IAC9BsmB,EAA0B,IAAItmB,IAEpC,OACA,SAAS+gB,EAAMyB,GACb,GAAsB,IAAlBA,EAASl0B,MAA8C,IAAlBk0B,EAASl0B,KAAwB,CACxE,IAAI+B,EACAk2B,EAAa/D,EACjB,KAAOnyB,EAAQk2B,EAAWxU,eACxBwU,EAAal2B,EAEf,GAAIk2B,EAAW/d,mBAAoB,CACjC,GAAI6d,EAAQvmB,IAAIymB,GAAa,OAC7BF,EAAQhwB,IAAIkwB,GACZ9iB,GAAQ8iB,EAAW/d,mBAAmB6B,mBAAoB0W,EAC5D,MACEuF,EAAQjwB,IAAIkwB,EAEhB,MACED,EAAQjwB,IAAImsB,EAEhB,CAnBAzB,CAAM7wB,GACCo2B,CAmBT,CACA,IAAIpQ,GAAc,IAp4FL,MACXxgB,WAAAA,CAAYmO,GACV2iB,KAAK3iB,QAAUA,CACjB,CACAxN,GAAAA,CAAIkN,EAAMC,GACR,OAAOD,EAAO5P,MAAMC,QAAQ2P,GAAQW,GAAUsiB,KAAK3iB,QAASN,EAAMC,GAAQa,GAAemiB,KAAK3iB,QAASN,EAAMC,GAAQA,CACvH,CACAkV,KAAAA,CAAMpU,EAAGC,GACP,OAAID,EACE3Q,MAAMC,QAAQ0Q,GACZC,EACE5Q,MAAMC,QAAQ2Q,GAiJ5B,SAA+BV,EAASS,EAAGC,GACzC,MAAMkiB,EAAOniB,EAAE5W,OACTg5B,EAAOniB,EAAE7W,OACf,IAAIi5B,EAAS,EACTC,EAAS,EACb,MAAMnzB,EAAS,GACf,KAAOkzB,EAASF,GAAQG,EAASF,GAAM,CACrC,MAAMG,EAASviB,EAAEqiB,GACXG,EAASviB,EAAEqiB,GACXG,EAAQljB,EAAQgjB,EAAQC,GAChB,IAAVC,GACFJ,IACAC,IACAnzB,EAAO/B,KAAKm1B,IACHE,EAAQ,GACjBJ,IACAlzB,EAAO/B,KAAKm1B,KAEZD,IACAnzB,EAAO/B,KAAKo1B,GAEhB,CACA,GAAIL,IAASC,GAAQC,IAAWF,EAC9B,OAAOniB,EAET,KAAOqiB,EAASF,GACdhzB,EAAO/B,KAAK4S,EAAEqiB,MAEhB,KAAOC,EAASF,GACdjzB,EAAO/B,KAAK6S,EAAEqiB,MAEhB,OAAOnzB,CACT,CAhLmBuzB,CAAsBR,KAAK3iB,QAASS,EAAGC,GAEvCL,GAAUsiB,KAAK3iB,QAASS,EAAGC,GAG/BD,EAELC,EACE5Q,MAAMC,QAAQ2Q,GACTL,GAAUsiB,KAAK3iB,QAAS,IAAIU,GAAID,GAElCD,GAAemiB,KAAK3iB,QAASU,EAAGD,GAElCA,EAEFC,CACT,CACAZ,IAAAA,CAAKJ,EAAMC,GACT,GAAID,EAAM,CACR,GAAI5P,MAAMC,QAAQ2P,GAChB,OAAOK,GAAW4iB,KAAK3iB,QAASN,EAAMC,GACjC,GAAiC,IAA7BgjB,KAAK3iB,QAAQN,EAAMC,GAC5B,OAAOD,CAEX,CACF,IA+1F2B,SAAyBe,EAAGC,GACvD,OAAOD,EAAEI,QAAQE,GAAKL,EAAEG,QAAQE,IAAMN,EAAEhW,OAASiW,EAAEjW,OAAoB,IAAXgW,EAAEhW,MAAmC,IAAXiW,EAAEjW,QAAwBgW,EAAEhW,KAAOiW,EAAEjW,MAAsBgW,EAAEM,GAAKL,EAAEK,EAC5J,KACKuc,IAAwB3c,IAC3B,IAAsB,IAAI3O,OAEvBwrB,IAAsB7c,IACzB,IAAsB,IAAI3O,MAE5B,SAASiwB,GAAoBxgB,EAAOpV,EAAS3C,GAC3C,MAAM05B,EAAY3hB,EAAM/X,KAAKkC,QAAU,CAAC,EAClCyxB,EAAoBC,KAM1B,OALA8F,EAAUviB,QAAUgD,GAAmBpC,GACvC4b,EAAkBnrB,IAChBkxB,EACAv1B,GAAKwvB,EAAkB51B,IAAI27B,GAAY,CAAE/2B,UAAS3C,UAE7C05B,CACT,CACA,SAASC,GAAe35B,GACtB,GAAIoG,MAAMC,QAAQrG,GAChB,IAAK,MAAMiW,KAAQjW,GAChBiW,EAAK/T,QAAU,CAAC,GAAGk1B,QAAS,OAG9Bp3B,EAAKkC,QAAU,CAAC,GAAGk1B,QAAS,CAEjC,CACA,SAASD,GAAoBx0B,GAC3B,OAAOA,IAAYA,EAAQ8hB,SAAW9hB,EAAUA,EAAQ6hB,eAAiB7hB,EAC3E,CACA,SAASi3B,GAAwBh6B,EAAKi6B,EAAiB,IACrD,GAAIj6B,EAAIusB,UACN,IAAK,MAAMrX,KAAOlV,EAAIusB,UACpB0N,EAAe11B,KAAK2Q,GAGxB,IAAK,MAAMjV,KAASD,EAAI6B,WACtBo4B,EAAe11B,KAAKtE,EAAMxB,OAE5B,IAAK,MAAMm0B,KAAS5yB,EAAIM,KAAKkb,cAAgBxb,EAAIM,KAAKA,KAAON,EAAIwb,cAC/D,OAAQoX,EAAMzxB,MACZ,IAAK,WACH64B,GAAwBpH,EAAOqH,GAC/B,MACF,IAAK,iBACH,IAAK,MAAM/O,KAAa0H,EAAMtyB,KAC5B25B,EAAe11B,KAAK2mB,GAK5B,OAAO+O,CACT,CACA,SAAS/W,GAAwBngB,GAC/B,OAAI4C,IACKjD,EAAkBpB,MAAM0S,eAAejR,EAAQ0U,IAEjD/U,EAAkBpB,MAAME,cAC7BuB,EAAQrD,MAAyB,IAAjBqD,EAAQ5B,KAAuB,IAAI4B,EAAQ0U,KAAO,IAEtE,CACA,SAASuX,GAAmB5uB,GAC1B,MAAM,MAAEkC,GAAUlC,EAClB,IAAKkC,EAAO,OACZ,IACI6kB,GADA,QAAEpkB,EAAO,KAAEowB,GAAS7wB,EAUxB,GARI6wB,SACiB,IAAfA,EAAKmD,OACPvzB,EAAUowB,EAAKpwB,QACfowB,OAAO,GAEPpwB,OAAU,GAGVA,EACgB,eAAd3C,EAAKe,KACH4B,EAAQrD,OAASU,EAAKV,OACxBU,EAAKV,KAAOqD,EAAQrD,MAGtBynB,EAAczkB,EAAkBpB,MAAMI,WAAWqB,EAAQrD,WAEtD,GAAIyzB,IACThM,EAAchT,GACZzR,EAAkBpB,MAAMI,WAAWyxB,EAAKpwB,QAAQrD,MAChD8G,MAAMC,QAAQ0sB,EAAKmD,OAASnD,EAAKmD,MAAM,GAAKnD,EAAKmD,OAE/C9vB,MAAMC,QAAQ0sB,EAAKmD,QACrB,IAAK,IAAIrhB,EAAI,EAAGA,EAAIke,EAAKmD,MAAM/1B,OAAQ0U,IACrCkS,EAAchT,GAAmBgT,EAAagM,EAAKmD,MAAMrhB,IAI/D,OAAOkS,GAAeyP,GAAqBzP,EAAa/mB,EAC1D,CACA,SAAS20B,GAAa7Z,EAAUnY,GAC9B,IAAIm3B,GAAen3B,EAAQC,sBAAsBC,KACjD,IAAK,MAAMC,KAASH,EAAQI,QACtB4xB,GAAa7Z,EAAUhY,GACzBH,EAAQI,QAAQyxB,OAAO1xB,GAEvBg3B,GAAc,EAGlB,IAAK,MAAOj8B,EAAKiF,KAAUH,EAAQK,gBAC7B2xB,GAAa7Z,EAAUhY,GACzBH,EAAQK,gBAAgBwxB,OAAO32B,GAE/Bi8B,GAAc,EAMlB,OAHIA,GACFhf,EAAS0Z,OAAO7xB,GAEXm3B,CACT,CACA,SAASpF,GAA0BvS,EAAMgS,EAAOM,GAC9C,IAAI3X,EACJ,GAAI1W,MAAMC,QAAQ8tB,GAChB,IAAK,MAAMpB,KAAQoB,EAAO,CACxB,IAAI,QAAExxB,GAAYowB,EAClB,GAAIA,EAAK/yB,KAAM,CACb,MAAM+5B,GAAiBhH,EAAK/yB,KAAKkC,QAAU,CAAC,GAAG6wB,OAASiH,GAA2B7F,EAAOxxB,OAAS,KAChGA,YAAaowB,EAAK/yB,KAAKkC,QAAU,CAAC,GAAG6wB,KAAOgH,EACjD,CACAjd,EAAqB6L,GAAY7f,IAAIgU,EAAoBna,EAC3D,MACSwxB,IACLA,EAAMn0B,QACPm0B,EAAMn0B,KAAKkC,QAAU,CAAC,GAAG6wB,KAAOkH,GAAW9F,EAAMxxB,aAAS,IAE7Dma,EAAqBqX,EAAMxxB,SAE7B,GAAIyD,MAAMC,QAAQyW,GAAqB,CACrC,MAAMsM,EAAgBqL,EAAuB12B,IAAIokB,EAAKhL,UAAY,GAC5D+Q,EAAe7R,GACnBqiB,GACAtP,EACAtM,GAEEoL,EACFpL,EAAqBoL,EAErBuM,EAAuBjsB,IACrB2Z,EAAKhL,QACLR,GAAU+hB,GAAsBtP,EAAetM,GAGrD,CACA,OAAOA,CACT,CACA,SAASkd,GAA2B7F,EAAO+F,EAAaC,GACtD,MAAM,cAAE3V,GAAkB0V,EAC1B,GAAI1V,GAAiBpe,MAAMC,QAAQ8tB,GAAQ,CACzC,MAAMjgB,GAgBoBvR,EAhBQu3B,GAiBrBzV,UAAY9hB,EAAQ6hB,eAAeC,SAhB1C2V,OAAsB,IAATlmB,EAAkBimB,EAAYh2B,GAAKg2B,EAAWjmB,GACjE,IAAK,MAAM,QAAEvR,KAAawxB,EACxB,GAAIxxB,IAAYu3B,EAAa,CAC3B,IAAIp3B,EAAQ0hB,EACZ,KAAO1hB,GAAO,CACZ,GAAIH,IAAYG,EACd,OAAOk3B,GAA2B7F,EAAOrxB,EAAOs3B,GAElDt3B,EAAQA,EAAM0hB,aAChB,CACF,CAEJ,CAGF,IAA8B7hB,EAF5B,OAAOs3B,GAAWC,EAAaC,EACjC,CAIA,SAASF,GAAWt3B,EAASuzB,GAC3B,MAAO,CAAEvzB,UAASuzB,QACpB,CACA,SAASkC,GAA8BjW,GACrC,OAAQA,EAAKsC,SAAS1jB,MACpB,IAAK,gBACH,OAAOohB,EAAKsC,SAASpmB,MACvB,IAAK,iBACH,MAAO,GAAK8jB,EAAKsC,SAASpmB,MAC5B,IAAK,aACH,GAAI8jB,EAAK/f,SAAU,OACnB,OAAO+f,EAAKsC,SAASnlB,KAE3B,CACA,SAAS+4B,GAAuBnkB,GAC9B,MAAO,yDAAyDrO,KAAKqO,EACvE,CACA,SAASmgB,GAAkBnyB,GACzB,SAAUA,GAAUA,EAAMk1B,SAAUl1B,EAAMiV,QAC5C,CACA,SAAS0X,GAAuB3sB,GAC9B,OAAOmyB,GAAkBnyB,SAA+B,IAArBA,EAAM6sB,UAC3C,CACA,SAASW,GAAoBxtB,GAC3B,OAAOmyB,GAAkBnyB,SAA+B,IAArBA,EAAM2tB,UAC3C,CAGA,SAAShT,GAAqBC,GAC5B,GAAIA,EAAoB,CACtB,IAAI1W,MAAMC,QAAQyW,GAOhB,OAAOud,GAAkBvd,GANzB,IAAK,MAAMkI,KAAOlI,EAChB,GAAIud,GAAkBrV,GACpB,OAAO,CAMf,CACA,OAAO,CACT,CACA,SAASqV,GAAkB13B,GACzB,OAAQA,EAAQ5B,MACd,KAAK,EACL,KAAK,EACH,OAAO,EACT,QACE,OAAQ4B,EAAQsY,oBAAsB4B,GAAqBla,EAAQsY,mBAAmB6B,oBAE5F,CAGA,IAAIwd,GAAgB,CAClB57B,OAAAA,CAAQkB,IACN,EAAImC,EAAqBohB,aAAavjB,IACtC,EAAImC,EAAqBzB,cAAcV,GACvCD,EAAoBC,IACpB,EAAImC,EAAqBtB,uBAAuBb,GAChD,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,WACzB,IAAK84B,EACH,MAAM36B,EAAI7B,IAAI,QAAQgC,oBAAoB,qCAE5C,GAAIC,EAAKyB,WAAWtB,OAAS,IAAM2B,EAAkBZ,MAAMs5B,iBAAiBD,IAAiC,UAAnBA,EAAUj7B,KAClG,MAAMM,EAAI7B,IAAI,QAAQgC,oBACpB,wDAGJ,IAAKC,EAAKE,KAAKA,KAAKC,OAClB,MAAMP,EAAI7B,IAAI,QAAQgC,oBAAoB,0CAE5C,GAAIC,EAAKE,KAAK0a,OAAOza,SAAWH,EAAKE,KAAK0a,OAAOza,OAAS,GAAK2B,EAAkBZ,MAAMu5B,gBAAgBz6B,EAAKE,KAAK0a,OAAO,KACtH,MAAMhb,EAAI7B,IAAI,QAAQgC,oBACpB,qDAGJoa,GAAmBva,GACnB6zB,GACE7zB,EAAI7B,IAAI,QACR,OACA,EACAkE,EAASs4B,EAAUl8B,OAEvB,EACAa,UAAWkf,GAAkB,CAC3BC,KAAM,CACJR,KAAAA,CAAMje,GACJ,MACM86B,EAAcrf,GADJzb,EAAI7B,IAAI,SAEnB28B,GAIL/e,GAAwB+e,GAAa,GACrCxY,GAAYtiB,IAJVA,EAAIoB,QAKR,EACAmd,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,WACnBk5B,EAAU/6B,EAAI7B,IAAI,QAClB28B,EAAcrf,GAAkBsf,IAClC9d,GAAqB0d,EAAUr4B,OAAO4a,qBAAuBC,GAAsB2d,GAAa,KAClGjT,GAAoBiT,GAEtBpY,GAAU1iB,GACVwtB,GAA0BuN,GAC1B/6B,EAAI4B,YACFM,EAAkBZ,MAAMkD,oBACtBqQ,GACE,OACA8lB,EAAUl8B,MACVyD,EAAkBZ,MAAM6nB,wBACtB/oB,EAAKE,KAAK0a,OACVuL,GAAyBnmB,EAAKE,KAAKA,UAIzC,GAAGmiB,MACP,GAEF/D,IAAK,CACHT,KAAAA,CAAMje,GACJ,MACM86B,EAAcrf,GADJzb,EAAI7B,IAAI,SAEnB28B,EAIL/e,GAAwB+e,GAAa,GAHnC96B,EAAIoB,QAIR,EACAmd,IAAAA,CAAKve,GACHA,EAAIoB,QACN,KAGJS,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,uCACbkiB,mBAAoB,8CAGxB5iB,MAAO7B,EAAqBC,KAAO,4BAIjCs7B,GAAoBr7B,EAAQ,yCAC5Bs7B,GAAuBt7B,EAAQ,+CAC/Bu7B,GAAiB,CACnBvvB,KAAAA,CAAM3L,GACJ,MAAM,KACJI,EACAsF,KAAK,KAAEf,IACL3E,EACEm7B,EAAW/6B,EAAK+6B,SAChB7a,EAAO6a,EAAS7zB,QAAQ,aAAc,IAAI8zB,OAC1CvzB,EAAQzH,EAAKV,KAAKmI,OAASszB,EAAS56B,OAAS+f,EAAK/f,QACxD,IAAID,GAAO,EAAI26B,GAAqBI,iBAAiB12B,EAAM2b,EAAMzY,EAAOA,EAAQyY,EAAK/f,QACjE,IAAhBD,EAAKC,QAAgBy6B,GAAkB15B,MAAM2pB,iBAAiB3qB,EAAK,MACrEA,EAAOA,EAAK,GAAGA,MAEjBN,EAAI4B,YAAYo5B,GAAkB15B,MAAMg6B,eAAeh7B,GAAM,EAAM,UACrE,EACA0jB,aAAc,CACZkH,WAAW,EACXqQ,YAAY,GAEdz5B,aAAc,CACZ,CACEC,YAAa,qBACbC,YAAa,6FACbkiB,mBAAoB,wDAMtBsX,GAAoB77B,EAAQ,yCAC5B87B,GAAuB97B,EAAQ,+CAG/B+7B,GAAoB/7B,EAAQ,yCAChC,SAASg8B,GAAa37B,EAAK47B,EAAc1iB,EAAO,SAC9C,MACE9Y,MAAQc,IAAKD,IACXjB,EACCiB,GAGLjB,EAAIwiB,aACFkZ,GAAkBp6B,MAAMsiB,oBAAoB1K,EAAM,CAACwiB,GAAkBp6B,MAAMuiB,mBAAmB5iB,EAAQ26B,KAE1G,CAGA,IAAIC,GAAgB,CAClB/8B,OAAAA,CAAQkB,IACN,EAAIy7B,GAAqB/6B,cAAcV,IACvC,EAAIy7B,GAAqB96B,gBAAgBX,GACzCK,EAAoBL,GACpB,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,WACzB,IAAKzB,EAAKc,IACR,MAAMlB,EAAI7B,IAAI,QAAQgC,oBAAoB,4CAE5C,IAAKw6B,EACH,MAAM36B,EAAI7B,IAAI,QAAQgC,oBAAoB,qCAE5C,GAAIC,EAAKyB,WAAWtB,OAAS,IAAMi7B,GAAkBl6B,MAAMs5B,iBAAiBD,KAAeA,EAAUtc,SAA8B,UAAnBsc,EAAUj7B,KACxH,MAAMM,EAAI7B,IAAI,QAAQgC,oBACpB,wDAGJ,MAAMykB,EAAgB4W,GAAkBl6B,MAAMyX,aAAa4hB,EAAUl8B,OAASuB,EAAIgZ,MAAMC,WAAW0hB,EAAUl8B,MAAMiB,OAAOgC,WAAWY,OAAOS,aAAU,EACtJs0B,GACEr3B,EACA,EACA4kB,EACAviB,EAASs4B,EAAUl8B,OAGvB,EACAa,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,YACnB,MAAEpD,GAAUk8B,EAClB,GAAIn1B,IAAe,CACjB,MAAM+R,EAAUmE,GAAW1b,GACrB87B,EAAa17B,EAAKc,IAAIoB,OAAOS,QACnC,GAAI+4B,IAAeA,EAAWlX,cAAe,CAC3C,MAAMmX,EAAa1S,GAAUyS,GAC7BhY,GAASvM,EAAS9Y,EAAM6D,OAAO4a,mBAAoB6e,EAAYt9B,EACjE,CACF,MACEk9B,GAAa37B,EAAKvB,GAEpBuB,EAAIoB,QACN,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,qCACbkiB,mBAAoB,8CAGxB5iB,MAAO7B,EAAqBC,KAAO,4BAIjCs8B,GAAoBr8B,EAAQ,yCAC5Bs8B,GAAuBt8B,EAAQ,+CAC/Bu8B,GAAgB,CAClBp9B,OAAAA,CAAQkB,GACN,MAAO26B,GAAa36B,EAAII,KAAKyB,WAK7B,IAJA,EAAIo6B,GAAqB1Y,aAAavjB,IACtC,EAAIi8B,GAAqBv7B,cAAcV,IACvC,EAAIi8B,GAAqBt7B,gBAAgBX,GACzCK,EAAoBL,GAChBA,EAAII,KAAKyB,WAAWtB,OAAS,GAAoC,IAA/BP,EAAII,KAAKyB,WAAWtB,UAAkBy7B,GAAkB16B,MAAMs5B,iBAAiBD,KAAeA,EAAUtc,SAA8B,UAAnBsc,EAAUj7B,MACjK,MAAMM,EAAI7B,IAAI,QAAQgC,oBACpB,uDAGN,EACAb,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAMuX,EAAUmE,GAAW1b,IACpB26B,GAAa36B,EAAII,KAAKyB,WACvBqb,EAAqByd,GAAWl8B,MAAM6D,OAAO4a,mBAC7CgO,EAAY0L,GAAqBoF,GAAkB16B,MAAM66B,oBAAqBn8B,EAAII,MACpFiF,IACFrF,EAAIwiB,aAAa0I,GAEjB9B,GAAa,SAAU7R,EAAS2F,EAAoBgO,GAEtDlrB,EAAIoB,QACN,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,yBACbkiB,mBAAoB,8CAGxB5iB,MAAO7B,EAAqBC,KAAO,4BAKjC08B,IADoBz8B,EAAQ,yCACLA,EAAQ,gDAG/B08B,GAAoB18B,EAAQ,yCAC5B28B,GAAuB38B,EAAQ,+CAGnC,SAAS48B,GAAav8B,GACpB,MAAMoZ,EAA6B,iBAApBpZ,EAAIoZ,OAAOjY,KAA0BnB,EAAIsa,WAAWA,WAAata,EAAIsa,WACpF,GAAoB,aAAhBlB,EAAOjY,KACT,OAAOiY,CAEX,CAGA,IAAIojB,GAA4C,IAAI9oB,QACpD,SAAS+oB,GAAqBC,GAC5B,IAAI79B,EAAQ29B,GAA0Br+B,IAAIu+B,GAK1C,OAJK79B,IACHA,EAAQ4G,GAAmBuT,MAAM2B,YAAY+hB,EAAKh9B,MAClD88B,GAA0B5zB,IAAI8zB,EAAM79B,IAE/Bw9B,GAAkB/6B,MAAMI,WAAW7C,EAC5C,CACA,SAAS89B,GAAqB38B,GAC5B,GAAIA,EAAII,KAAKkC,OAAOkZ,cAAe,OAAOxb,EAAII,KAAKkC,MAAMkZ,cACzD,MAAMohB,EAAY58B,EAAII,KAAKE,KAAKkb,cAAgBxb,EAAI7B,IAAI,QAAQA,IAAI,QAAU6B,EAAI7B,IAAI,iBACtF,IAAKy+B,EAAUr8B,OAAQ,OACvB,MACMs8B,GADW78B,EAAII,KAAKkC,QAAU,CAAC,GACbkZ,cAAgB,CAAC,EACnCshB,EAAqB,CAAC,EACtBC,EAA+C,IAAIr0B,IACzD,IAAK,MAAMkqB,KAASgK,EAClB,GAAIhK,EAAM7c,aACR,IAAI,EAAIumB,GAAqBxf,gBAAgB8V,GAAQ,CACnD,MAAM/zB,EAAQgX,GAAW+c,GACzBiK,EAAOh+B,KAAWm+B,GAAkBn+B,EAAO,CAACA,IAC5C89B,GAAqB/J,EACvB,KAAO,CACL,MAAMqK,GAAa,EAAIX,GAAqBY,WAAWtK,GACvD,IAAIuK,EACJ,IAAK,MAAMt+B,KAASu+B,GAAcxK,EAAOkK,GAAqB,CAC5D,MAAMO,EAAUR,EAAOh+B,GACvB,GAAIw+B,EACF,GAAKF,GAEE,GAAIA,IAAaE,EAAQzyB,MAC9B,IAAK,MAAMoqB,KAASqI,EAAQzyB,MAC1BiyB,EAAO7H,GAAOpqB,MAAQuyB,EACtBA,EAAS54B,KAAKywB,QAJhBmI,EAAWE,EAAQzyB,MAQvB,IAAI0yB,EAAcT,EAAOh+B,GACpBy+B,IACHA,EAAcT,EAAOh+B,GAASm+B,GAAkBn+B,EAAO,IACvDs+B,EAAWG,EAAY1yB,MACvBuyB,EAAS54B,KAAK1F,IAEhBy+B,EAAYC,SAAU,EAClBN,IACFK,EAAYE,UAAW,GAEzBT,EAA6Bn0B,IAAIgqB,EAAO/zB,EAC1C,CACF,CAGJ,IAAK,MAAO4+B,EAAgBC,KAAmBX,GAC5CU,EAAer9B,KAAKkC,QAAU,CAAC,GAAGq7B,kBAAoBd,EAAOa,GAAgB9yB,MAEhF,IAAK,MAAM/L,KAASi+B,EAAoB,CACtC,MAAMQ,EAAcT,EAAOh+B,GAC3B,IAAKy+B,EAAYE,SAAU,CACzB,MAAMI,EAAed,EAAmBj+B,GACpC++B,EAAar9B,OAAS,IACxB+8B,EAAYE,UAAYF,EAAYC,SAAWM,GAA2BD,GAE9E,CACF,CACA,OAAOf,CACT,CACA,SAASG,GAAkBn+B,EAAO+L,GAChC,MAAO,CACLlL,KAAMb,EAAMiI,MAAM,GAClBy2B,SAAS,EACTC,UAAU,EACV5yB,QAEJ,CACA,SAASwyB,GAAcp9B,EAAK88B,EAAoBgB,EAA+B,IAAIjrB,KACjF,MAAM+pB,EAAY58B,EAAII,KAAKE,KAAKkb,cAAgBxb,EAAI7B,IAAI,QAAQA,IAAI,QAAU6B,EAAI7B,IAAI,iBACtF,IAAK,MAAMy0B,KAASgK,EAClB,GAAIhK,EAAM7c,aACR,IAAI,EAAIumB,GAAqBxf,gBAAgB8V,GAAQ,CACnD,MAAMmL,EAAUloB,GAAW+c,GAC3BkL,EAAa50B,IAAI60B,IAChBjB,EAAmBiB,KAAa,IAAIx5B,KAAKquB,GAC1C+J,GAAqB/J,EACvB,MACEwK,GAAcxK,EAAOkK,EAAoBgB,GAI/C,OAAOA,CACT,CACA,SAASD,GAA2BjB,GAClC,IAAIoB,EACJ,MAAMC,EAA+B,IAAIprB,IACzC,IAAK,MAAMqrB,KAAYtB,EAAW,CAChC,MAAMuB,EAAY5B,GAAa2B,GAC/B,GAAID,EAAatrB,IAAIwrB,KAAehoB,GAAegoB,GACjD,OAAO,EAET,MAAMC,EAAmBC,GAAiBF,GAC1C,GAAIC,GAAoBA,KAAsBJ,IAAkBI,GAC9D,OAAO,EAETH,EAAa/0B,IAAIi1B,EACnB,CACA,OAAO,CACT,CACA,SAASE,GAAiBr+B,GACxB,GAAwB,OAApB6V,GAAW7V,GAAe,OAAOA,EACrC,IAAI0lB,EAAO1lB,EAAIs+B,iBACf,KAAO5Y,EAAKtlB,MAAM,CAChB,GAAIslB,EAAK3P,cAAqC,OAArBF,GAAW6P,GAClC,OAAOA,EAETA,EAAOA,EAAK4Y,gBACd,CACF,CAGA,IAAIC,GAAoB5+B,EAAQ,yCAC5B6+B,GAAuB7+B,EAAQ,+CAG/B8+B,GAAoB9+B,EAAQ,yCAC5B++B,GAAuB/+B,EAAQ,+CAG/Bg/B,GAAoBh/B,EAAQ,yCAC5Bi/B,GAAuBj/B,EAAQ,+CAC/Bk/B,GAAoBp7B,OAAO,sBAC3Bq7B,GAAmBr7B,OAAO,oBAC1Bs7B,GAAYt7B,OAAO,kBACnBu7B,GAAiC,IAAItrB,QAczC,SAASurB,GAAuBlB,EAAShgB,GACvC,OAAQggB,GACN,IAAK,QACH,GAAIhgB,EAAOmhB,SAAWnhB,EAAOohB,cAC3B,MAAO,CACLC,SAAS,EACTC,OAAQ,6BACRC,MAAO,CAACvhB,EAAOmhB,QAASnhB,EAAOohB,gBAGnC,GAAIphB,EAAOwhB,cAAgBxhB,EAAOyhB,mBAChC,MAAO,CACLJ,SAAS,EACTC,OAAQ,kCACRC,MAAO,CAACvhB,EAAOwhB,aAAcxhB,EAAOyhB,mBAAoBzhB,EAAOtf,QAGnE,GAAIsf,EAAOtf,OAASsf,EAAO0F,YACzB,MAAO,CACL2b,SAAS,EACTC,OAAQ,2BACRC,MAAO,CAACvhB,EAAOtf,MAAOsf,EAAO0F,cAGjC,MACF,IAAK,SACH,GAAI1F,EAAOtf,OAASsf,EAAO0F,YACzB,MAAO,CACL2b,SAAS,EACTC,OAAQ,4BACRC,MAAO,CAACvhB,EAAOtf,MAAOsf,EAAO0F,cAGjC,MACF,IAAK,WACH,GAAI1F,EAAOtf,OAASsf,EAAO0F,YACzB,MAAO,CACL2b,SAAS,EACTC,OAAQ,8BACRC,MAAO,CAACvhB,EAAOtf,MAAOsf,EAAO0F,cAGjC,MACF,IAAK,UACL,IAAK,SACH,GAAI1F,EAAO0hB,MAAQ1hB,EAAO2hB,WACxB,MAAO,CACLN,SAAS,EACTC,OAAQ,oCACRC,MAAO,CAACvhB,EAAO0hB,KAAM1hB,EAAO2hB,aAKtC,CACA,IAAIC,GAAqB,CACvBtgC,UAAW,CACT4e,KAAAA,CAAMje,GAEJ,GAAgB,aADA6V,GAAW7V,IACGA,EAAII,KAAKE,KAAKA,KAAKC,OAAQ,CACvD,MAAMue,EAAQ,GACd,IAAK,MAAM8T,KAAS5yB,EAAII,KAAKE,KAAKA,KAAM,CACtC,KAAmB,cAAfsyB,EAAMzxB,MAAuC,qBAAfyxB,EAAMzxB,MAA+ByxB,EAAMgN,QAG3E,MAAM5/B,EAAI0F,IAAIf,KAAKe,IAAIm6B,WACrBjN,EACA,4EACAzf,aALF2L,EAAMva,KAAKquB,EAAMn0B,MAQrB,CACAuB,EAAII,KAAKyB,WAAW0C,KAClBo6B,GAAkBr9B,MAAMG,eACtB,QACAod,GAA0BC,IAAUghB,OAGxC9/B,EAAII,KAAKE,KAAKA,KAAO,EACvB,CACF,GAEFxB,QAAS,CACPmf,KAAAA,CAAMje,IACJ,EAAI4+B,GAAqBl+B,cAAcV,IACvC,EAAI4+B,GAAqBj+B,gBAAgBX,IACzC,EAAI4+B,GAAqB/9B,uBAAuBb,GAChD,MAAM,KAAEI,GAASJ,EACjB,GAAII,EAAKc,MAAQy9B,GAAkBr9B,MAAMyX,aAAa3Y,EAAKc,KACzD,MAAMlB,EAAI7B,IAAI,OAAOgC,oBACnB,4DAGJ,MAAM49B,EAAUloB,GAAW7V,GACrBuX,EAAUgD,GAAmBva,GACnC,IAAI+/B,GAAmB,EACnBC,GAAuB,EAC3B,MAAMC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EAAII,KAC3B,IAAI8/B,EACAC,EACJ,IAAK,IAAIlrB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAI0pB,GAAkBr9B,MAAMs5B,iBAAiB36B,GAAQ,CACnD,GAAIggC,EAAKhgC,EAAMP,MAAO,CACpBq6B,GAAe95B,EAAMxB,OACrB,QACF,CACAwhC,EAAKhgC,EAAMP,MAAQO,EACf2G,EAAe3G,EAAMP,QA8fV0gC,EA9fmCngC,EAAMP,KA+fzD,0CAA0CuG,KAAKm6B,MA9f3CngC,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,EACtCuL,GAAmB,GACT19B,EAASpC,EAAMxB,OAAO8D,YAChCy9B,GAAuB,EAE3B,MAAWrB,GAAkBr9B,MAAMpB,uBAAuBD,KACxD8/B,GAAmB,EACnBC,GAAuB,GACtB//B,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,GAEpC2L,EACFA,EAAqB57B,KAAKtE,EAAMxB,OACvBkgC,GAAkBr9B,MAAMpB,uBAAuBD,KACxDkgC,EAAuB,CAAClgC,EAAMxB,OAC9ByhC,EAAsBjB,GAAuBlB,EAASkC,GAE1D,CA6eN,IAAyBG,EA3enB,GA7IN,SAA2CpgC,EAAK+d,GAC9C,MAAMsiB,EAAkB,CACtBtiB,EAAO0hB,MAAQ1hB,EAAO2hB,WACtB3hB,EAAOmhB,SAAWnhB,EAAOohB,cACzBphB,EAAOwhB,cAAgBxhB,EAAOyhB,mBAC9BzhB,EAAO0F,aACPmS,OAAO1rB,SACT,GAAIm2B,EAAgB9/B,OAAS,EAC3B,MAAMP,EAAI7B,IAAI,QAAQgC,oBACpB,kBAAkBkgC,EAAgBt8B,KAAK9D,GAAU,IAAIA,EAAMP,UAASiiB,KAAK,gCAG/E,CAgIM2e,CAAkCtgC,EAAKigC,GACnCE,EAAsB,CACxB,GAAID,IAAwBA,EAAoBZ,MAAMiB,MAAMr2B,SAAU,CACpE,IAAK,MAAMjK,KAASigC,EAAoBZ,MAClCr/B,GACFkgC,EAAqB57B,KAAKtE,EAAMxB,OAGpCyhC,OAAsB,CACxB,CACArH,GAAgBthB,EAASvX,EAAII,KAAM+/B,EACrC,MACED,EAAsBjB,GAAuBlB,EAASkC,GASxD,GAPIC,GACFrH,GACEthB,EACA2oB,EAAoBZ,MAAM9oB,KAAKtM,SAASzL,MACxCyhC,EAAoBZ,MAAMv7B,KAAKC,GAAOA,GAAIvF,SAG1C2B,EAAKc,KAAO6+B,GAAoBC,EAAsB,CACxDv6B,GAAmBrF,KAAKkC,MAAM8C,gBAAkB26B,EAChD,MAAMS,EAA8B,kBAAnBpgC,EAAKV,KAAKyB,KAA2Bf,EAAKV,KAAKjB,MAAQkgC,GAAkBr9B,MAAMm/B,aAAazgC,EAAI7B,IAAI,SAC/GuiC,EAAWtgC,EAAKkC,QAAU,CAAC,EAC3Bq+B,EAAc,IAAMH,EAO1B,GANAE,EAAS5B,IAAoBiB,KAAsB3/B,EAAKc,IACxDw/B,EAAS7B,IAAqB3H,GAC5ByJ,EACA,EACAppB,GAEEnX,EAAKc,IACP,IAAK,MAAMkkB,KAAOplB,EAAIgZ,MAAMC,WAAW7Y,EAAKc,IAAIxB,MAAMq4B,eAEpD,GADAJ,GAAmBvS,IACdwb,GAAkBxb,GAAM,CAC3Bsb,EAAS3B,IAAapT,GAAepU,EAASopB,GAC9C,KACF,CAGN,CACF,GAEFrhC,UAAW,CACT2e,KAAAA,CAAMje,GACJ,MAAM+9B,EAAUloB,GAAW7V,GACrBsC,EAAQtC,EAAII,KAAKkC,MACjBu+B,EAAWv+B,EAAMu8B,IACjBiC,EAASz7B,IACTxG,EAAQmB,EAAI7B,IAAI,QAChB6X,GAAS,EAAI4oB,GAAqB3oB,WAAWjW,GAC7C+gC,EAAS9f,GAAQjhB,GACjBuX,EAAUmE,GAAW1b,GAI3B,GAHI8gC,GAAUx+B,EAAM2V,iBAClBqK,GAAYtiB,GAEVA,EAAI2S,IAAI,OAAQ,CAClB,MAAMquB,EAAW1+B,EAAMy8B,IACvB,GAAI+B,EAAQ,CACV,MAAMG,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAK,MAAM9R,KAAaib,EAAY,CAClC,IAAItT,EAAiBlS,GAAWuK,GAChC,KAAO2H,IAAmBrW,GAAWqW,EAAexU,QAClDsK,GAA6BkK,GAAgBhlB,IAC3C+1B,GAAkBr9B,MAAME,cAAc,KACtCqT,GACE,oBACA+G,GACEgS,EAAiBA,EAAexU,SAK1C,CACAuiB,GACE37B,EACA6U,GACE,UACAmsB,GAAYplB,GAAqBrE,GACjCypB,GAAYrC,GAAkBr9B,MAAME,cAAcw/B,IAGxD,KAAO,CACL,MAAMC,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAIoJ,EACAH,IACFG,EAAqB17B,GAAmBuT,MAAM6C,sBAC5C,OAAOolB,KAETx7B,GAAmBkd,cACjB,OACAgc,GAAkBr9B,MAAMsiB,oBAAoB,QAAS,CACnD+a,GAAkBr9B,MAAMuiB,mBACtBsd,EACAtsB,GACE,UACA8pB,GAAkBr9B,MAAME,cAAcw/B,GACtC9d,GAAwB2d,SAMlC,IAAK,MAAM5a,KAAaib,EAAY,CAClC,MAAME,EAAmB1lB,GAAWuK,GAChC2a,GAAkB3a,GACpBA,EAAU3L,WAAW1Y,YACnB+8B,GAAkBr9B,MAAMkD,oBACtBwhB,GAA0Bob,EAAkBP,KAGvCM,GACTlb,EAAUrkB,YACR+8B,GAAkBr9B,MAAMmD,eAAe08B,EAAoB,CACzDvb,GAAmBwb,EAAkB1lB,GAAW1b,MAIxD,CACF,CACF,CACA,IAAIqhC,EACAR,IACFQ,EAAgBne,GAAwB2d,GACxCn8B,GAAM1E,EAAK,KAEb+gC,CAAM,IAAIliC,EAAMuB,OAChB,MAAMkhC,EA8RZ,SAAsBvD,EAAS/9B,GAC7B,MAAMigC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EACjBuhC,EAAmC,IAAI1uB,IAC7C,IAAI2uB,EACAC,EACAC,EACAC,EACAC,EACJ,IAAK,IAAI3sB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,IACnB,MAAExW,GAAUwB,EAClB,GAAI0+B,GAAkBr9B,MAAMpB,uBAAuBD,GAAQ,CACzD,IAAKyhC,IACHA,EAAc,GACdE,EAAqB3C,GAAuBlB,EAASkC,GACjD2B,IAAuBA,EAAmBtC,MAAMiB,MAAMr2B,UAAU,CAClE,IAAK,MAAM23B,KAASD,EAAmBtC,MACjCuC,IACFH,EAAYn9B,KAAK0P,GAAiB4tB,EAAMniC,KAAMmiC,EAAMpjC,QACpD8iC,EAAiB3M,OAAOiN,IAG5BD,OAAqB,CACvB,CAEFF,EAAYn9B,KAAKo6B,GAAkBr9B,MAAMwgC,cAAcrjC,GACzD,MAAYwhC,EAAKhgC,EAAMP,QACrBugC,EAAKhgC,EAAMP,MAAQO,EACfyhC,EACFA,EAAYn9B,KAAK0P,GAAiBhU,EAAMP,KAAMO,EAAMxB,QAEpD8iC,EAAiBr4B,IAAIjJ,GAG3B,CAOA,GANKyhC,IACHE,EAAqB3C,GAAuBlB,EAASkC,IACjB,IAAhC2B,GAAoBxC,SAAsBwC,EAAmBtC,MAAM,KACrEsC,OAAqB,IAGrBA,EACF,IAAK,MAAM3hC,KAAS2hC,EAAmBtC,MACjCr/B,GACFshC,EAAiB3M,OAAO30B,GAI9B,MAAM8hC,EAAc,IAAIR,GAAkBS,UAC1C,GAAIN,EAAa,CAEf,GADAA,EAAYM,UACRJ,EACF,IAAK,MAAM3hC,KAAS2hC,EAAmBtC,MACjCr/B,IACD0hC,IAAc,IAAIp9B,KACjB0P,GAAiBhU,EAAMP,KAAMi/B,GAAkBr9B,MAAM0S,eAAe,KAK5E,IAAK,MAAQtU,KAAMb,KAAWkjC,GAC3BJ,IAAc,IAAIp9B,KAAK0P,GAAiBpV,EAAO8/B,GAAkBr9B,MAAM0S,eAAe,KAErF2tB,IACFF,EAAiB9C,GAAkBr9B,MAAM8sB,iBAAiBuT,IAE5DH,EAAmBS,GAAkBP,EACvC,CACA,MAAO,CACLK,cACAH,qBACAJ,mBACAC,iBAEJ,CAzWwBS,CAAanE,EAAS/9B,EAAII,OACtC,YAAE2hC,EAAW,mBAAEH,EAAkB,eAAEH,GAAmBH,EAC5D,IA8BIa,GA9BA,iBAAEX,GAAqBF,EAC3B,GAAIM,EAAoB,CACtB,MAAM,OAAEvC,EAAQC,MAAOvhB,GAAW6jB,EAC5BQ,EAAYrkB,EAAOvH,KAAKtM,SACxBgT,EAAqBklB,EAAU3jC,MAAM6D,OAAO4a,mBAC5C7Z,EAAS0a,EAAOha,KAAK9D,GAAUA,GAAOxB,QACxCqiC,GACc,WAAZ/C,GAAoC,aAAZA,GAC1BgD,CAAM,GAAGlsB,GAAYwqB,EAAQzjB,GAAqBrE,GAAU8pB,KAAkBh+B,KAEhFkqB,GAAkBhW,OAAS,KAE3B6R,GACE,SACA7R,EACA2F,EACAyhB,GAAkBr9B,MAAMkD,oBACtBqQ,GAAYwqB,EAAQvZ,GAAiBub,KAAkBh+B,KAG3D+lB,GACE,SACA7R,OACA,EACAonB,GAAkBr9B,MAAMkD,oBACtBqQ,GAAY,GAAGwqB,WAAiBvZ,GAAiBub,KAIzD,CAEA,GAAIP,EACF,GAAgB,WAAZ/C,GACF,GAAI6D,EACF5C,GAAep2B,IAAI5I,EAAII,KAAM,CAC3B3B,MAAOmjC,EAAmBtC,MAAM,IAAI7gC,OAASqhC,KAC7Crc,YAAame,EAAmBtC,MAAM,IAAI7gC,OAASqhC,YAEhD,GAAI0B,EAAkB,CAC3B,MAAMa,EAAmBriC,EAAIgZ,MAAM6C,sBAAsB,gBACzD7b,EAAIwiB,aACFmc,GAAkBr9B,MAAMsiB,oBAAoB,QAAS,CACnD+a,GAAkBr9B,MAAMuiB,mBAAmBwe,EAAkBb,MAGjExC,GAAep2B,IAAI5I,EAAII,KAAM,CAC3B3B,MAAOkgC,GAAkBr9B,MAAMkT,iBAC7B6tB,EACA1D,GAAkBr9B,MAAMI,WAAW,UAErC+hB,YAAakb,GAAkBr9B,MAAMkT,iBACnC6tB,EACA1D,GAAkBr9B,MAAMI,WAAW,kBAGvC8/B,EAAmBa,CACrB,OACK,GAAgB,aAAZtE,EAAwB,CACjC,IAAIt/B,EACAglB,EACJ,GAAIme,EACFnjC,EAAQmjC,EAAmBtC,MAAM,IAAI7gC,MACrCglB,EAAcme,EAAmBtC,MAAM,IAAI7gC,WACtC,GAAI+iC,EAAkB,CAC3B,MAAMa,EAAmBriC,EAAIgZ,MAAM6C,sBAAsB,kBACzD7b,EAAIwiB,aACFmc,GAAkBr9B,MAAMsiB,oBAAoB,QAAS,CACnD+a,GAAkBr9B,MAAMuiB,mBAAmBwe,EAAkBb,MAGjE/iC,EAAQkgC,GAAkBr9B,MAAMkT,iBAAiB6tB,EAAkB1D,GAAkBr9B,MAAMI,WAAW,UACtG+hB,EAAckb,GAAkBr9B,MAAMkT,iBACpC6tB,EACA1D,GAAkBr9B,MAAMI,WAAW,gBAErC8/B,EAAmBa,CACrB,EACI5jC,GAASglB,KACX0e,EAAqBttB,GACnB,8BACA+G,GAAqBF,GAAW1b,IAChCkjB,GAAwB2d,GACxBpiC,EACAglB,GAGN,CAEF,IAAK,MAAMxjB,KAAS8hC,EAAa,CAC/B,MAAQriC,KAAMs1B,EAAK,MAAEv2B,GAAUwB,GACzB,UAAEsC,EAAS,SAAEC,GAAa/D,EAAM6D,OAAS,CAAC,EAC1CggC,EAAkB7jC,EAAM6D,OAAO4a,mBACrC,GAAI4jB,GAAsB,WAAZ/C,GAAkC,UAAV/I,EACpC+L,CAAM,GAAGlsB,GAAY,kBAAmBpW,UAG1C,OAAQu2B,GACN,IAAK,QACL,IAAK,QAAS,CACZ,MAAMqK,EAAS,GAAGrK,QACdzyB,EACFw+B,CAAM,GAAGxrB,KAAiB8pB,GAAQ78B,KACzBs+B,EACTC,CAAM,GAAGlsB,GAAYwqB,EAAQ5gC,KAE7B2qB,GACE,SACA7R,EACA+qB,EACA3D,GAAkBr9B,MAAMkD,oBACtBqQ,GACEwqB,EACAV,GAAkBr9B,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE5iC,KAKR,KACF,CACA,QACM8D,EACFw+B,CAAM,GAAGxrB,KAAiBtN,KAAK+sB,EAAOxyB,KAC7Bs+B,EACLl6B,EAAeouB,GACjBzH,GAAkBhW,EAAS+qB,GAE3BvB,CAAM,GAAGlsB,GAAY,OAAQ8pB,GAAkBr9B,MAAME,cAAcwzB,GAAQv2B,KAEpEmI,EAAeouB,GACxB5L,GACE,SACA7R,EACA+qB,EACA3D,GAAkBr9B,MAAMkD,oBACtBqQ,GACE,KACA8pB,GAAkBr9B,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE1C,GAAkBr9B,MAAME,cAAcqF,EAAoBmuB,IAC1Dv2B,KAKN2qB,GACE,SACA7R,EACA+qB,EACA3D,GAAkBr9B,MAAMkD,oBACtBqQ,GACE,OACA8pB,GAAkBr9B,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE1C,GAAkBr9B,MAAME,cAAcwzB,GACtCv2B,KAOd,CAmDA,GAlDI+iC,IACEV,GACFvT,GAAkBhW,EAASjV,EAAM4a,oBAC7BukB,EACFV,CAAM,GAAGlsB,GAAY,eAAgB2sB,EAAkBC,EAAgBJ,EAAezlB,GAAqBrE,GAAU1Y,EAAMuB,QAE3H2gC,CAAM,GAAGlsB,GAAY,QAAS2sB,EAAkBH,EAAezlB,GAAqBrE,GAAU1Y,EAAMuB,UAIpGgpB,GACE,SACA7R,EACAjV,EAAM4a,mBAJNukB,EAKA9C,GAAkBr9B,MAAMkD,oBACtBqQ,GACE,eACAiR,GACAub,EACAG,EACAC,IASJ9C,GAAkBr9B,MAAMkD,oBACtBqQ,GACE,QACAiR,GACAub,EACAG,KAKRpY,GACE,SACA7R,EACAjV,EAAM4a,mBACNyhB,GAAkBr9B,MAAMkD,oBACtBqQ,GAAY,cAAeiR,GAAiBub,KAE9C,KAIFrrB,GAAUA,EAAOgO,cAAcC,YACjC,OAAQjO,EAAOusB,UACb,IAAK,MACL,IAAK,OACHxB,CAAM,KACN,MACF,QACEA,CAAM,SAIVA,CAAM,IAEJD,GAAUx+B,EAAM2V,iBAClBjY,EAAIwiB,aAAamc,GAAkBr9B,MAAMkhC,YAAY3jC,EAAMuB,KAAM6hB,GAAYjiB,KAAO,GAAGyiB,OAErF0f,GACFpB,CAAM,GAAGoB,IAEXhiB,GAAOngB,EACT,EACAue,IAAAA,CAAKve,GACH,MAAMsC,EAAQtC,EAAII,KAAKkC,MACjBu+B,EAAWv+B,EAAMu8B,IACjBiC,EAASz7B,IACT4e,GAAc,EAAI2a,GAAqB3oB,WAAWjW,IAAMgkB,cAAcC,YACtEwe,EAAa3B,GAAU9B,GAAe7gC,IAAI6B,EAAII,MAC9C29B,EAAUloB,GAAW7V,GACvB8gC,GAAUx+B,EAAM2V,iBAClByK,GAAU1iB,GAERyiC,GACFxhB,GAAQjhB,EAAI,KAAKA,EAAII,KAAKV,QAC1BgjB,GAAU1iB,GACVA,EAAIwiB,aACFmc,GAAkBr9B,MAAMkD,oBACtBqQ,GACE,4BACA+G,GAAqBF,GAAW1b,IAChCkjB,GAAwB2d,GACxB4B,EAAWhkC,MACXgkC,EAAWhf,YACXkb,GAAkBr9B,MAAM6nB,wBACtB,GACAwV,GAAkBr9B,MAAMslB,eAAe5mB,EAAII,KAAKE,KAAKA,WAM7DN,EAAIwiB,aAAaxiB,EAAII,KAAKE,KAAKA,MAAMgW,SAASsc,GAAUA,EAAMnQ,SAE3DwB,GAAgBwe,GACnBxhB,GACEjhB,EACA8gC,IAAuB,SAAZ/C,GAAkC,SAAZA,GAClC,KAAK/9B,EAAII,KAAKV,QAEbohC,GAAUx+B,EAAM2V,iBAClBjY,EAAIwiB,aACFmc,GAAkBr9B,MAAMkhC,YAAYxiC,EAAII,KAAKV,KAAMuiB,GAAYjiB,KAC/D,GAAGyiB,OAEHoe,IAAav+B,EAAMw8B,KAAqB7hB,GAAqB3a,EAAM4a,qBAAuBld,EAAII,KAAKyB,WAAWyX,MAC/GrZ,GAAUgd,GAAqBhd,EAAMxB,MAAM6D,OAAO4a,wBAEnD+F,GAASjjB,EAAK6gC,GAEhBzgB,GAAMpgB,GACNA,EAAIoB,QACN,IAkFJ,SAAS0+B,KACP,OAAOnB,GAAkBr9B,MAAM6T,gBAAgB,OAAQwpB,GAAkBr9B,MAAM0S,eAAe,GAChG,CACA,SAAS4sB,GAAkBre,GACzB,MAAM,OAAEnJ,EAAM,KAAEhZ,GAASmiB,EACzB,MAAuB,mBAAhBnJ,EAAOjY,MAA6BiY,EAAOspB,SAAWtiC,CAC/D,CAGA,IAAIuiC,GAAoBl/B,OAAO,sBAC3Bm/B,GAAqBn/B,OAAO,wBAC5Bo/B,GAAc,CAChB/jC,OAAAA,CAAQkB,GACN,MAAM0gC,EAAW1gC,EAAII,KAAKkC,QAAU,CAAC,EAC/BwgC,EAAY9iC,EAAII,KAAKE,KAAKkb,cAChC,IAAIunB,EAIJ,QAHA,EAAIrE,GAAqBnb,aAAavjB,IACtC,EAAI0+B,GAAqBh+B,cAAcV,GACvCD,EAAoBC,GACZgjC,GAAWhjC,EAAII,OACrB,IAAK,KACH2iC,EAAa,CAAC,MACd,MACF,IAAK,KACHA,EAAa,CAAC,MACd,MACF,IAAK,KACHA,EAAa,CAAC,KAAM,OAAQ,QAC5B,MACF,QACE,MAAM/iC,EAAIG,oBACR,gEAON,GAJK2iC,GACHC,EAAWx+B,KAAK,OAElB,EAAIm6B,GAAqBlb,yBAAyBxjB,EAAK+iC,GACnDD,EAAW,OACf,MAAM/H,EAAU/6B,EAAI7B,IAAI,QAClB28B,EAAc1gB,GAAa2gB,GACjC,IAAKD,EAEH,YADAf,GAAeC,GAAwBh6B,EAAII,OAG7C06B,EAAYvf,UAAW,EACvB,MAAMhE,EAAUgD,GAAmBva,GACnC,GAAIijC,GAAoBjjC,GAAM,CAC5B,MAAMm+B,EAAY5B,GAAav8B,GAAKI,KAC9B8iC,EAAgB/E,EAAUz+B,MAAMjB,OACrC0/B,EAAU77B,QAAU,CAAC,GAAGu8B,MAAuB3H,GAC9C,IAAMgM,EACN,EACA3rB,EAEJ,MACEmpB,EAASiC,IAAqBzL,GAC5B,QACA,EACA3f,GAGJsc,GAAsBkH,EAAS,OAAe,EAAQ2F,GACtD7H,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,OAC/D06B,EAAYzf,mBAAqBqlB,CACnC,EACAphC,UAAWkf,GAAkB,CAC3BC,KAAM,CACJR,KAAAA,CAAMje,GACJ,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MACMsf,EAAcrf,GADJzb,EAAI7B,IAAI,SAEnB28B,GAIL/e,GAAwB+e,GAAa,GAChCmI,GAAoBjjC,KACvB0E,GAAM1E,EAAK,IACXqgB,GAAargB,IAEfsiB,GAAYtiB,IARVA,EAAIoB,QASR,EACAmd,IAAAA,CAAKve,GACH,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MAAMuf,EAAU/6B,EAAI7B,IAAI,QAClB4e,EAAarB,GAAW1b,GACxB86B,EAAcrf,GAAkBsf,IAChC,KAAE36B,GAASJ,EAEXmjC,EAAalmB,GADF7c,EAAKkC,MAC2B4a,oBAC3CihB,EAAY5B,GAAav8B,GACzB6gC,EAAWoC,GAAoBjjC,GAAOm+B,EAAU/9B,KAAKkC,MAAMu8B,IAAqB7+B,EAAII,KAAKkC,MAAMqgC,IAC/FS,EAAWtlB,GAAmB1d,GAC9BijC,EAAUL,GAAW5iC,GACrB4a,EAAS5a,EAAKE,KAAK0a,OACnBoQ,EAAa,GACbkY,EAAiBljC,EAAKE,KAAKA,KAC3BijC,EAAsBpmB,GAAsB2d,GAAa,GACzD0I,EAAiD,OAAxB1I,EAAY3f,SAAoB2f,EAAY3f,QAAQsB,YACnF,IAAIgnB,EAIJ,GAHIN,GAAcF,GAAoBjjC,KACpCm+B,EAAU/9B,KAAKkC,MAAMw8B,KAAoB,GAEvCqE,GAAcI,EAAqB,CACrC,MAAMG,EAAoB,CACxB56B,GAAI,CAAC,OAAQ,SACb66B,GAAI,CAAC,MAAO,SACZ9lC,GAAI,CAAC,UACLwlC,GACIO,EAAkC,OAAZP,EAAmB,EAAI,EAC7CQ,EAAsBT,EAASU,GAAKJ,EAAkBnjC,OAAS,EAAIqjC,EACzE/b,GAAoBiT,GACpB,IAAK,IAAI7lB,EAAI,EAAGA,GAAK4uB,EAAqB5uB,IAAK,CAC7C,MAAM8uB,EAAgB/oB,EAAO/F,GAC7B,IAAK8uB,IAAkBtF,GAAkBn9B,MAAMyX,aAAagrB,GAAgB,CAC1E,MAAMtsB,EAAKuD,EAAO/F,GAAKxP,GAAmBuT,MAAM6C,sBAC9C6nB,EAAkBzuB,IAEhB8uB,GACFT,EAAen/B,QACbs6B,GAAkBn9B,MAAMsiB,oBAAoB,MAAO,CACjD6a,GAAkBn9B,MAAMuiB,mBAAmBkgB,EAAetsB,KAIlE,CACF,CACA,GAAI2rB,EAASU,GACX,GAAIrF,GAAkBn9B,MAAMyW,gBAAgBqrB,EAASU,IACnDL,EAAgBtvB,GACd6G,EAAO,GACPooB,EAASU,GAAGrlC,YAET,GAAIggC,GAAkBn9B,MAAM0iC,WAAWZ,EAASU,IAAK,CAC1D,MAAMG,EAAex+B,GAAmBuT,MAAM6C,sBAAsB,MACpEuP,EAAW7mB,KACTk6B,GAAkBn9B,MAAMsiB,oBAAoB,QAAS,CACnD6a,GAAkBn9B,MAAMuiB,mBAAmBogB,EAAcb,EAASU,OAGtEL,EAAgBhF,GAAkBn9B,MAAMmD,eACtCw/B,EACAjpB,EAEJ,MACEyoB,EAAgB5uB,GA8Q9B,SAAgC1T,GAC9B,OAAQA,GACN,IAAK,KACH,MAAO,UACT,IAAK,KACH,MAAO,UACT,IAAK,KACH,MAAO,UAEb,CAtRgB+iC,CAAuBb,GACvBD,EAASU,MACN9oB,QAIPyoB,EAAgBzoB,EAAO4oB,GAEzB,MAAMO,EAAsBloB,GAAmB6e,GAC/C1P,EAAW7mB,KACTk6B,GAAkBn9B,MAAMsiB,oBAAoB,QAAS,CACnD6a,GAAkBn9B,MAAMuiB,mBACtBsgB,EACA1F,GAAkBn9B,MAAM8iC,cAAc3F,GAAkBn9B,MAAMI,WAAW,OAAQ,QAInF+hC,IAAkBN,GAAcI,IAClCD,EAAe/+B,KACbk6B,GAAkBn9B,MAAMkD,oBACtBi6B,GAAkBn9B,MAAMmD,eACtBg6B,GAAkBn9B,MAAMkT,iBACtByH,GAAmB6e,GACnB2D,GAAkBn9B,MAAMI,WAAW,QAErC,CACE+hC,EACA5uB,GACE,oBACA+G,GAAqBkf,QAOjCpX,GAA6B3G,GAAYnU,IACvC61B,GAAkBn9B,MAAME,cACtB0hB,GAAwB2d,GAAUpiC,MAAQ,KAE5CggC,GAAkBn9B,MAAM+iC,sBACtB5F,GAAkBn9B,MAAMkT,iBAAiB2vB,EAAqB1F,GAAkBn9B,MAAMI,WAAW,SACjGyiC,EACA1F,GAAkBn9B,MAAMI,WAAW,cAGzC,CACAghB,GAAU1iB,GACVynB,GAAwBznB,GAAK,SAE7BwtB,GAA0BuN,GAC1B,MAAMuJ,EAAaC,GAAoBlB,EAASD,GAC1CoB,EAAoBrB,EA0LlC,SAAoChiC,EAAMqiC,GACxC,GAAIA,EACF,OAAQriC,GACN,IAAK,KACH,MAAO,wBACT,IAAK,KACH,MAAO,wBACT,IAAK,KACH,MAAO,6BAGX,OAAQA,GACN,IAAK,KACH,MAAO,cACT,IAAK,KACH,MAAO,cACT,IAAK,KACH,MAAO,cAGf,CA9M+CsjC,CAA2BpB,EAASG,GAA0BkB,GAAiBrB,GACtHiB,EAAW//B,KACTk6B,GAAkBn9B,MAAM6nB,wBAAwBnO,EAAQyjB,GAAkBn9B,MAAMslB,eAAe0c,KAE7FH,GACFmB,EAAW//B,KACTqX,GAAqBmB,GACrBmG,GAAwB2d,IAG5BzV,EAAW7mB,KACTk6B,GAAkBn9B,MAAMkD,oBAAoBqQ,GAAY2vB,KAAsBF,KAEhF,IAAK,MAAMnd,KAAennB,EAAIizB,oBAAoB7H,GAChDjE,EAAY1E,MAEhB,GAEF/D,IAAK,CACHT,KAAAA,CAAMje,GACJ,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MACMsf,EAAcrf,GADJzb,EAAI7B,IAAI,SAEnB28B,GAIL/e,GAAwB+e,GAAa,GAChCmI,GAAoBjjC,KACvB0E,GAAM1E,EAAK,IACXqgB,GAAargB,KANbA,EAAIoB,QAQR,EACAmd,IAAAA,CAAKve,GACH,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MAAMuf,EAAU/6B,EAAI7B,IAAI,QAClB4e,EAAarB,GAAW1b,GACxB86B,EAAcrf,GAAkBsf,IAChC,KAAE36B,GAASJ,EACX0gC,EAAWtgC,EAAKkC,OAChB,mBAAE4a,GAAuBwjB,EACzBG,EAAWoC,GAAoBjjC,GAAOu8B,GAAav8B,GAAKI,KAAKkC,MAAMu8B,IAAqB7+B,EAAII,KAAKkC,MAAMqgC,IAC7Glb,GAAwBznB,GAAK,CAAC2kC,EAAgBpc,EAAQD,IAC7CzT,GACL,cACAqO,GAAwB2d,GACxBtY,EACAD,KAGJ,MAAM+a,EAAUL,GAAW5iC,GACrB8nB,EAASH,GAAUhL,EAAY8jB,EAAU,OAC/C3Y,EAAOxkB,MAAQ,IACNmR,GA0JjB,SAA6B1T,GAC3B,OAAQA,GACN,IAAK,KACH,MAAO,SACT,IAAK,KACH,MAAO,SACT,IAAK,KACH,MAAO,SAEb,CAlKYyjC,CAAoBvB,GACpBngB,GAAwB2d,GACxBpC,GAAkBn9B,MAAMI,WAAWo5B,EAAYp7B,OAGnD,MAAMsb,EAAS5a,EAAKE,KAAK0a,OACzBkN,EAAOnE,2BAA6B,KAClC,GAAI+W,EAAY7f,SACd,OAAO,EAET,IAAK,MAAM4pB,KAAS7pB,EAAQ,CAC1B,MAAMjY,EAAU8hC,EAAMviC,OAAOS,QAC7B,GAAIA,EACF,IAAK,MACHma,mBAAoB4nB,KACjB/hC,EAAQC,sBACX,GAAI+kB,GACF+S,EACAgK,GACA/gB,6BACA,OAAO,CAIf,CACA,OAAO,CAAK,EAEd,MAAMqf,EAAWtlB,GAAmB1d,GAC9B2kC,EAAWR,GAAoBlB,EAASD,GAC1CA,EAASU,IACXiB,EAASxgC,KAAK6+B,EAASU,IAEzBhgB,GACE/G,EACAG,EACAgL,EACAuW,GAAkBn9B,MAAMopB,gBAAgBqa,IAE1C/kC,EAAIoB,QACN,KAGJ4iB,aAAc,CAAEghB,aAAa,GAC7BnjC,WAAY,CACViH,GAAI,CACF3H,KAAM,aACNW,aAAc,CACZ,CACEE,YAAa,oCAInB2hC,GAAI,CACFxiC,KAAM,aACNW,aAAc,CACZ,CACEE,YAAa,qDAInBnE,GAAI,CACFsD,KAAM,SACNW,aAAc,CACZ,CACEE,YAAa,oDAInBlE,KAAM,CACJqD,KAAM,SACNW,aAAc,CACZ,CACEE,YAAa,4DAInB4e,KAAM,CACJzf,KAAM,SACNW,aAAc,CACZ,CACEE,YAAa,oEAKrBF,aAAc,CACZ,CACEG,QAAS,uCACTD,YAAa,mEACbkiB,mBAAoB,6DAEtB,CACEjiB,QAAS,uCACTiiB,mBAAoB,4EAEtB,CACEjiB,QAAS,iCACTiiB,mBAAoB,8EAa1B,SAAS8e,GAAWhjC,GAClB,IAAK,MAAMC,KAASD,EAAI6B,WACtB,GAAmB,mBAAf5B,EAAMkB,KACR,OAAQlB,EAAMP,MACZ,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAOO,EAAMP,KAIvB,CACA,SAASglC,GAAiBvjC,GACxB,OAAQA,GACN,IAAK,KACH,MAAO,QACT,IAAK,KACH,MAAO,QACT,IAAK,KACH,MAAO,QAEb,CA0CA,SAASojC,GAAoBpjC,EAAM4c,GACjC,OAAQ5c,GACN,IAAK,KACH,MAAO,CAAC4c,EAAO4lB,IACjB,IAAK,KACH,MAAO,CAAC5lB,EAAOjV,IACjB,IAAK,KACH,MAAO,CACLiV,EAAOlgB,GACPkgB,EAAOjgB,MAAQ2gC,GAAkBn9B,MAAM0S,eAAe,GACtD+J,EAAO6C,MAAQ6d,GAAkBn9B,MAAM0S,eAAe,IAG9D,CACA,SAASivB,GAAoBjjC,GAC3B,MAAMsC,EAAQtC,EAAII,KAAKkC,MACvB,QAAkC,IAA9BA,EAAMsgC,IACR,OAAOtgC,EAAMsgC,IAEf,MAAMzE,EAAY5B,GAAav8B,GAC/B,OAAIm+B,IAAa,EAAIO,GAAqBzoB,WAAWkoB,IAAY1f,KACxDnc,EAAMsgC,IAAiD,IAA3B5iC,EAAIoZ,OAAO9Y,KAAKC,OAE9C+B,EAAMsgC,KAAsB,CACrC,CAGA,IAAIqC,GAA+B,IAAItxB,QACvC,SAASuxB,GAAellC,EAAKmlC,EAAiB/Z,EAAa,GAAIga,EAAa,WAC1E,MAAMnF,EAAuB,IAAIptB,IAC3BuR,EAAa,GACbihB,EAAgBrlC,EAAII,KAAKkC,OAAOkZ,cACtC,GAAI6pB,EAAe,CACjB,IAAK,MAAMxmC,KAASwmC,EAAe,CACjC,MAAM/H,EAAc+H,EAAcxmC,GAC9BymC,GAAWH,EAAiB7H,EAAY59B,QAC1CugC,EAAK/2B,IAAIo0B,EAAY59B,MACjB49B,EAAYC,UACdnS,EAAW7mB,KACTg6B,GAAkBj9B,MAAMsiB,oBAAoB,MAAO,CACjD2a,GAAkBj9B,MAAMuiB,mBAAmB4Y,GAAqBa,OAGpElZ,EAAW7f,KACT0P,GACEqpB,EAAY59B,KACZ+8B,GAAqBa,MAK/B,CACA,MAAMV,EAAY58B,EAAII,KAAKE,KAAKkb,cAAgBxb,EAAI7B,IAAI,QAAQA,IAAI,QAAU6B,EAAI7B,IAAI,iBACtF,IAAK,IAAI8W,EAAI,EAAGA,EAAI2nB,EAAUr8B,OAAQ0U,IAAK,CACzC,MAAM2d,EAAQgK,EAAU3nB,GACxB,GAAI2d,EAAM7c,aACR,IAAI,EAAIyoB,GAAqB1hB,gBAAgB8V,GAAQ,CACnD,MAAM0K,EAAc+H,EAAcxvB,GAAW+c,IAC7C,GAAI0K,EAAYC,QACdtoB,EAAIswB,GACF3I,EACA3nB,EACAowB,EACAja,EACA+Z,EACAC,OAEG,CACL,MAAMI,EAAoBN,GACxBtS,EACAuS,IAAkB7H,EAAY59B,OAAO42B,MACrClL,EACAga,GAEF,GAAI9H,EAAYE,SAAU,CACxB,MAAMiI,EAAWC,GAAmBpI,EAAY59B,KAAM0kB,GAClDqhB,EACFA,EAAShnC,MAAQoW,GACf,WACA4wB,EAAShnC,MACTwjC,GAAkBuD,EAAkBphB,aAGtCA,EAAW7f,KACT0P,GACEqpB,EAAY59B,KACZmV,GACE,UACAotB,GAAkBuD,EAAkBphB,cAK9C,MACEA,EAAW7f,KACT0P,GACEqpB,EAAY59B,KACZmV,GACE,UACAotB,GAAkBuD,EAAkBphB,cAK9C,CACF,MACEnP,EAAIswB,GACF3I,EACA3nB,EACAowB,EACAja,EACA+Z,EACAC,EAIR,CACF,CACA,IAAKnF,EAAKttB,IAAIyyB,IAAeE,GAAWH,EAAiBC,GAAa,CACpEnF,EAAK/2B,IAAIk8B,GACT,MAAMO,EAkNV,SAAsBrlC,GACpB,MAAMw6B,EAAcx6B,EAAKF,KAAKkC,OAAOiV,QACrC,GAAIujB,EACF,OAAIz1B,IACKwP,GACL,WACAA,GACE,iBACA0pB,GAAkBj9B,MAAM6nB,wBACtB7oB,EAAKF,KAAK4a,OACVujB,GAAkBj9B,MAAMslB,eAAetmB,EAAKF,KAAKE,QAGrDi+B,GAAkBj9B,MAAME,cAAcgqB,GAAoBsP,EAAa,aACvElf,GACEF,GAYV,SAAkC1b,GAChC,IAAI6W,EAAM7W,EACV,MAAO,EAAIw+B,GAAqB1hB,gBAAgBjG,KAAQ,EAAI2nB,GAAqBoH,kBAAkB/uB,IACjGA,EAAM0lB,GAAa1lB,GAErB,OAAOA,CACT,CAjBYgvB,CAAyBvlC,EAAKga,eAK7BikB,GAAkBj9B,MAAMmD,eAAe85B,GAAkBj9B,MAAMI,WAAWo5B,EAAYp7B,MAAO,CAClGomB,IAIR,CA5O8BggB,CAAa9lC,EAAI7B,IAAI,SAC/C,GAAIwnC,EAAmB,CACrB,MAAMI,EAAcxH,GAAkBj9B,MAAM4S,eAC1CqqB,GAAkBj9B,MAAMI,WAAW0jC,GACnCO,GAEFV,GAAa/7B,IAAI68B,GACjB3hB,EAAW7f,KAAKwhC,EAClB,CACF,CACA,MAAM,WAAElkC,GAAe7B,EAAII,KAC3B,IAAK,IAAI6U,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,IACnB,MAAExW,GAAUwB,EACds+B,GAAkBj9B,MAAMpB,uBAAuBD,GACjDmkB,EAAW7f,KAAKg6B,GAAkBj9B,MAAMwgC,cAAcrjC,KAC5CwhC,EAAKttB,IAAI1S,EAAMP,OAAS4lC,GAAWH,EAAiBllC,EAAMP,QACpEugC,EAAK/2B,IAAIjJ,EAAMP,MACf0kB,EAAW7f,KAAK0P,GAAiBhU,EAAMP,KAAMjB,IAEjD,CAEA,OADA2lB,EAAW4d,UACJ,CAAE5d,aAAYgH,aACvB,CACA,SAAS4a,GAAiC1P,GACxC,IAAK,MAAMhiB,KAAQgiB,EACjB,GAAI2O,GAAatyB,IAAI2B,GACnB,OAAOA,CAGb,CACA,SAASixB,GAA4B3I,EAAWqJ,EAAOZ,EAAeja,EAAY+Z,EAAiBC,EAAa,WAC9G,MAAMplC,EAAM48B,EAAUqJ,GACtB,GAAIjmC,EAAI+V,aACN,IAAI,EAAIyoB,GAAqB1hB,gBAAgB9c,GAAM,CACjD,MAAMs9B,EAAc+H,EAAcxvB,GAAW7V,IAC7C,GAAIslC,GAAWH,EAAiB7H,EAAY59B,OAAS49B,EAAYC,QAAS,CACxE,MAAMiI,EAAoBN,GACxBllC,EACAmlC,IAAkB7H,EAAY59B,OAAO42B,MACrClL,EACAga,GAEE9H,EAAYE,SACdpS,EAAW7mB,KACTg6B,GAAkBj9B,MAAMkD,oBACtB+5B,GAAkBj9B,MAAMmuB,qBACtB,IACAgN,GAAqBa,GACrBzoB,GACE,WACA4nB,GAAqBa,GACrB2E,GAAkBuD,EAAkBphB,gBAM5CgH,EAAW7mB,KACTg6B,GAAkBj9B,MAAMkD,oBACtB+5B,GAAkBj9B,MAAMmuB,qBACtB,IACAgN,GAAqBa,GACrBzoB,GACE,UACAotB,GAAkBuD,EAAkBphB,eAMhD,CACF,MACE,OAAQvO,GAAW7V,IACjB,IAAK,KACH,OA8CV,SAA4B48B,EAAWqJ,EAAOZ,EAAeja,EAAY+Z,EAAiBC,GACxF,MAAMc,EAAQtJ,EAAUqJ,GAClBE,EAAuB,GAC7B,IAAI3D,EAAcjE,GAAkBj9B,MAAMkhC,YACxC4D,GAAsBF,GACtB3H,GAAkBj9B,MAAMslB,eAAeuf,IAEzC/a,EAAW7mB,KAAKi+B,GAChB6D,GACEH,EACAb,EACAc,EACAhB,EACAC,GAEF,IAAIlmB,EAAY+mB,EAAQ,EACxB,KAAO/mB,EAAY0d,EAAUr8B,QAAQ,CACnC,MAAM+lC,EAAU1J,EAAU1d,GAC1B,GAAIonB,EAAQvwB,aACV,OAAQF,GAAWywB,IACjB,IAAK,UACL,IAAK,OAAQ,CACX,MAAMC,EAAYH,GAAsBE,GAClCE,EAAsB,GAQ5B,GAPAH,GACEC,EACAjB,EACAmB,EACArB,EACAC,GAEEmB,EAAW,CACb/D,EAAYhqB,UAAYgqB,EAAcjE,GAAkBj9B,MAAMkhC,YAC5D+D,EACAhI,GAAkBj9B,MAAMslB,eAAe4f,IAEzCtnB,IACA,QACF,CACEsjB,EAAYhqB,UAAY+lB,GAAkBj9B,MAAMslB,eAAe4f,GAC/D,KAEJ,EAGJ,KACF,CACA,OAAOtnB,EAAY,CACrB,CA9FiBunB,CACL7J,EACAqJ,EACAZ,EACAja,EACA+Z,EACAC,GAEJ,IAAK,MACH,OAiBV,SAA6BxI,EAAWqJ,EAAOZ,EAAeja,EAAY+Z,EAAiBC,GACzF,MAAMsB,EAAS9J,EAAUqJ,GACnB3C,EAAiB,GAgBvB,OAfA+C,GACEK,EACArB,EACA/B,EACA6B,EACAC,GAEFha,EAAW7mB,KA/Sb,SAA6BpD,EAAM4c,EAAQ/C,EAAQoQ,GACjD,OAAOqT,GAAkBn9B,MAAMkD,oBAC7BqQ,GACE6vB,GAAiBvjC,MACdojC,GAAoBpjC,EAAM4c,GAC7B0gB,GAAkBn9B,MAAM6nB,wBAAwBnO,EAAQyjB,GAAkBn9B,MAAMslB,eAAewE,KAGrG,CAwSIub,CACE3D,GAAW0D,EAAOtmC,MAClB0d,GAAmB4oB,EAAOtmC,MAC1BsmC,EAAOtmC,KAAKE,KAAK0a,OACjBsoB,IAGG2C,CACT,CApCiBW,CACLhK,EACAqJ,EACAZ,EACAja,EACA+Z,EACAC,GAMV,OAAOa,CACT,CACA,SAAShE,GAAkB3L,GACzB,OAAwB,IAAjBA,EAAM/1B,QAAgBg+B,GAAkBj9B,MAAMu5B,gBAAgBvE,EAAM,IAAMA,EAAM,GAAGhS,SAAWia,GAAkBj9B,MAAM8sB,iBAAiBkI,EAChJ,CAsEA,SAAS+P,GAAwBrmC,EAAKqlC,EAAeja,EAAY+Z,EAAiBC,GAChF,MAAMxI,EAAY58B,EAAII,KAAKE,KAAKkb,cAAgBxb,EAAI7B,IAAI,QAAQA,IAAI,QAAU6B,EAAI7B,IAAI,iBACtF,IAAK,IAAI8W,EAAI,EAAGA,EAAI2nB,EAAUr8B,OAAQ0U,IACpCA,EAAIswB,GACF3I,EACA3nB,EACAowB,EACAja,EACA+Z,EACAC,EAGN,CACA,SAASE,GAAWH,EAAiBtmC,GACnC,OAAQsmC,KAAqBA,EAAgBtmC,EAC/C,CACA,SAAS6mC,GAAmB7mC,EAAOy3B,GACjC,IAAK,MAAMhiB,KAAQgiB,EACjB,GAAkB,mBAAdhiB,EAAKnT,KACP,OAAQmT,EAAKrW,IAAIkD,MACf,IAAK,gBACH,GAAImT,EAAKrW,IAAIQ,QAAUI,EACrB,OAAOyV,EAET,MACF,IAAK,aACH,GAAIA,EAAKrW,IAAIyB,OAASb,EACpB,OAAOyV,EAMjB,OAAO,CACT,CACA,SAAS8xB,IACPhmC,MAAM,WAAEyB,KAER,OAA6B,IAAtBA,EAAWtB,OAAesB,EAAW,GAAGpD,WAAQ,CACzD,CAqCA,IAAIooC,GAAiB,CACnB/nC,OAAAA,CAAQkB,GAEN,IADA,EAAIo8B,GAAqB17B,cAAcV,IAClCA,EAAII,KAAKc,IACZ,MAAMlB,EAAI7B,IAAI,QAAQgC,oBAAoB,6CAE5C,MAAM46B,EAAU/6B,EAAI7B,IAAI,QACxBic,GAAa2gB,GACb1D,GAAmBr3B,EAAK,GACxB6zB,GAAsBkH,EAAS,GAC/B4B,GAAqB38B,GACrB64B,GACEte,GAAmBva,GACnBA,EAAII,KACJ45B,GAAwBh6B,EAAII,MAEhC,EACAd,UAAW,CACT2e,KAAAA,CAAMje,GACAqF,KACFid,GAAYtiB,EAEhB,EACAue,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,EACX8mC,EAAkB5B,GAAellC,GACvC,GAAIqF,IACFqd,GAAU1iB,GACVwtB,GAA0BxtB,EAAI7B,IAAI,SAClC6B,EAAIwiB,aAAaskB,EAAgB1b,YACjCuQ,GAAa37B,EAAKiiC,GAAkB6E,EAAgB1iB,iBAC/C,CACL,MAAM7M,EAAUmE,GAAW1b,GACrBkd,EAAqB9c,EAAKkC,OAAO4a,mBACjC6e,EAAa1S,GAAUrpB,EAAI7B,IAAI,OAAOiC,KAAKkC,MAAMS,SACnD+jC,EAAgB1b,WAAW7qB,QAC7B6oB,GACE,SACA7R,EACA2F,EACA4pB,EAAgB1b,YAGpBtH,GACEvM,EACA2F,EACA6e,EACAkG,GAAkB6E,EAAgB1iB,YAEtC,CACApkB,EAAIoB,QACN,GAEFS,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,gEACbkiB,mBAAoB,+CAGxB5iB,MAAO7B,EAAqBC,KAAO,6BAIjCqnC,GAAoBpnC,EAAQ,yCAC5BqnC,GAAuBrnC,EAAQ,+CAC/BsnC,GAAiB,CACnBxmC,QAAS,CACNT,KACC,EAAIgnC,GAAqBtmC,cAAcV,IACvC,EAAIgnC,GAAqBrmC,gBAAgBX,GACzCK,EAAoBL,IACpB,EAAIgnC,GAAqBnmC,uBAAuBb,GAChDD,EAAoBC,IACpB,EAAIgnC,GAAqBxjB,yBAAyBxjB,EAAK,CAAC,WACxD,EAAIgnC,GAAqBlmC,qBAAqBd,EAAK,CACjDe,MAAO,0DACPC,GAAAA,GACE,MAAM,KAAEZ,GAASJ,EACjBA,EAAI4B,YACFmlC,GAAkBzlC,MAAMC,SACtBq1B,GAAqBmQ,GAAkBzlC,MAAME,cAAc,UAAWpB,EAAKV,MAC3EU,EAAKyB,WACLzB,EAAKE,KACLF,EAAKmsB,UACLnsB,EAAKc,IACLd,EAAKob,eAGX,GACA,GAGN3Z,WAAY,CAAC,EACbP,MAAO7B,EAAqBC,KAAO,6BAIjCwnC,GAAuBvnC,EAAQ,+CAC/BwnC,GAAiB,CACnBx7B,KAAAA,CAAM3L,GACJ,MAAM,KAAEI,GAASJ,EACjBA,EAAI4B,aACF,EAAIslC,GAAqB7L,iBAAiBr7B,EAAI0F,IAAIf,KAAMvE,EAAK+6B,SAAU/6B,EAAKyH,MAAOzH,EAAK22B,KAAK,GAEjG,EACA/S,aAAc,CACZkH,WAAW,EACXqQ,YAAY,GAEdz5B,aAAc,CACZ,CACEC,YAAa,oBAMfqlC,GAAoBznC,EAAQ,yCAC5B0nC,GAAuB1nC,EAAQ,+CAC/B2nC,GAAqB7jC,OAAO,uBAC5B8jC,GAAa9jC,OAAO,kBACpB+jC,GAAuB,CACzB1oC,OAAAA,CAAQkB,IACN,EAAIqnC,GAAqB3mC,cAAcV,IACvC,EAAIqnC,GAAqB1mC,gBAAgBX,IACzC,EAAIqnC,GAAqBzmC,oBAAoBZ,GAC7C,MAAMiB,EAASjB,EAAII,KAAKc,IACxB,IAAIumC,GAAe,EACfC,GAAc,EAClB,GAAIzmC,EAAQ,CACV,IAAKmmC,GAAkB9lC,MAAMyX,aAAa9X,GACxC,MAAMjB,EAAI7B,IAAI,OAAOgC,oBACnB,2DAGJsnC,GAAe,EACf,IAAK,MAAMriB,KAAOplB,EAAIgZ,MAAMC,WAAWhY,EAAOvB,MAAMq4B,eAClD,IAAK3S,EAAI9K,YAAYgS,mBAAoB,CACvCob,GAAc,EACd,KACF,CAEJ,CACA,MAAMzN,EAAiB,GACvB,IAAK,MAAMrH,KAAS5yB,EAAI7B,IAAI,QAAQA,IAAI,QACtC,GAAIy0B,EAAM+U,qBACR1N,EAAe11B,KAAKquB,EAAMxyB,KAAK3B,OAC/BgpC,GAAe,OACV,IAAK7U,EAAMgV,cAChB,MAAMhV,EAAMzyB,oBACV,+DAIN,GAAIsnC,EAAc,CAChB,MAAMlwB,EAAUgD,GAAmBva,GAC7B0gC,EAAW1gC,EAAII,KAAKkC,QAAU,CAAC,EACjColC,IACFhH,EAAS6G,IAAc5b,GAAepU,EAAS,YAEjDmpB,EAAS4G,IAAsBpQ,GAC7B,WACA,EACA3f,GAEFshB,GAAgBthB,EAASvX,EAAII,KAAM65B,EACrC,CACAj6B,EAAIyiB,MACN,EACAnjB,SAAAA,CAAUU,GACR,MAAM0gC,EAAW1gC,EAAII,KAAKkC,MACpBulC,EAAiBnH,EAAS4G,IAEhC,GADiBtnC,EAAII,KAAKc,IACd,CACV,MAAM8/B,EAAWN,EAAS6G,IAC1B,GAAIliC,IACFs2B,GACE37B,EACA6U,GACE,UACAmsB,GAAYplB,GAAqBF,GAAW1b,IAC5CghC,GAAYoG,GAAkB9lC,MAAME,cAAcw/B,SAGjD,CACL,MAAMC,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAIoJ,EACAH,IACFG,EAAqB17B,GAAmBuT,MAAM6C,sBAC5C,OAAOolB,KAETx7B,GAAmBkd,cACjB,OACAykB,GAAkB9lC,MAAMsiB,oBAAoB,QAAS,CACnDwjB,GAAkB9lC,MAAMuiB,mBACtBsd,EACAtsB,GACE,UACAuyB,GAAkB9lC,MAAME,cAAcw/B,GACtC9d,GAAwB2kB,SAMlC,IAAK,MAAM5hB,KAAaib,EAAY,CAClC,MAAME,EAAmB1lB,GAAWuK,GAChCA,EAAU3L,YAAYgS,mBACxBrG,EAAU3L,WAAW1Y,YACnBwlC,GAAkB9lC,MAAMkD,oBACtBwhB,GAA0Bob,EAAkByG,KAGvC1G,GACTlb,EAAUrkB,YACRwlC,GAAkB9lC,MAAMmD,eAAe08B,EAAoB,CACzDvb,GAAmBwb,EAAkB1lB,GAAW1b,MAIxD,CACF,CACF,CACI0gC,EAAS4G,KACX5iC,GAAM1E,EAAK,IAEb,MAAM+gC,EAAS9f,GAAQjhB,GAGvB,GAFAmgB,GAAOngB,GACP+gC,CAAM,OACF17B,IACF,IAAK,MAAMutB,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5B8mC,GAAkB9lC,MAAMsmC,YAAYhV,GACtCmO,CAAM,GAAGnO,EAAMn0B,QACN2oC,GAAkB9lC,MAAMqmC,mBAAmB/U,IACpDmO,CAAM,GAAGlsB,GAAY,YAAa+d,EAAMn0B,aAGvC,CACL,MAAMqpC,EAAiB,GACjBC,EAAsB,GAC5B,IAAIC,EAAe,GACnB,IAAK,MAAMpV,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5B8mC,GAAkB9lC,MAAMsmC,YAAYhV,GACtCoV,GAAgBpV,EAAMn0B,MACb2oC,GAAkB9lC,MAAMqmC,mBAAmB/U,KACpDkV,EAAevjC,KAAK6iC,GAAkB9lC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnED,EAAoBxjC,KAAKquB,EAAMn0B,OAC/BupC,EAAe,IAGgB,IAA/BD,EAAoBxnC,OACtBwgC,CAAM,GAAGiH,KAETF,EAAevjC,KAAK6iC,GAAkB9lC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnE5e,GACE,SACA1N,GAAW1b,GACX0gC,EAASxjB,mBACTkqB,GAAkB9lC,MAAMkD,oBACtBqQ,GACE,OACAuyB,GAAkB9lC,MAAMkT,iBACtBsR,GACA5C,GAAwB2kB,IACxB,GAEFT,GAAkB9lC,MAAMke,gBAAgBsoB,EAAgBC,MAKlE,CACA3nB,GAAMpgB,GACN+gC,CAAM,MACF8G,GACF5kB,GAASjjB,EAAK6nC,GAEhB7nC,EAAIoB,QACN,EACA4iB,aAAc,CACZikB,MAAM,GAERpmC,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,sEACbkiB,mBAAoB,sDAMtBgkB,GAAoBvoC,EAAQ,yCAC5BwoC,GAAuBxoC,EAAQ,+CAC/ByoC,GAAa3kC,OAAO,kBACpB4kC,GAAsB,CACxBvpC,OAAAA,CAAQkB,IACN,EAAImoC,GAAqBznC,cAAcV,IACvC,EAAImoC,GAAqBxnC,gBAAgBX,GACzC,MAAM,KAAEI,GAASJ,EACjB,GAAII,EAAKc,MAAQgnC,GAAkB5mC,MAAMyX,aAAa3Y,EAAKc,KACzD,MAAMlB,EAAI7B,IAAI,OAAOgC,oBACnB,4DAGJ,MAAMoX,EAAUgD,GAAmBva,GACnC,IAAI+/B,GAAmB,EACnBC,GAAuB,EAC3B,MAAMC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EAAII,KAC3B,IAAI+/B,EACJ,IAAK,IAAIlrB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAIizB,GAAkB5mC,MAAMs5B,iBAAiB36B,GAAQ,CACnD,GAAIggC,EAAKhgC,EAAMP,MAAO,CACpBq6B,GAAe95B,EAAMxB,OACrB,QACF,CACAwhC,EAAKhgC,EAAMP,MAAQO,EACf2G,EAAe3G,EAAMP,QACtBO,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,EACtCuL,GAAmB,GACT19B,EAASpC,EAAMxB,OAAO8D,YAChCy9B,GAAuB,EAE3B,MAAWkI,GAAkB5mC,MAAMpB,uBAAuBD,KACxD8/B,GAAmB,EACnBC,GAAuB,GACtB//B,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,GAEpC2L,EACFA,EAAqB57B,KAAKtE,EAAMxB,OACvBypC,GAAkB5mC,MAAMpB,uBAAuBD,KACxDkgC,EAAuB,CAAClgC,EAAMxB,OAElC,CACI0hC,GACFtH,GAAgBthB,EAASvX,EAAII,KAAM+/B,GAErC,MAAMmI,EAAuB,GAC7B,IAAIC,GAAsB,EAC1B,IAAK,MAAM3V,KAAS5yB,EAAII,KAAKE,KAAKA,KAChC,GAAI4nC,GAAkB5mC,MAAMqmC,mBAAmB/U,GAC7C0V,EAAqB/jC,KAAKquB,EAAMn0B,OAChC8pC,GAAsB,OACjB,IAAKL,GAAkB5mC,MAAMsmC,YAAYhV,GAC9C,MAAM5yB,EAAI0F,IAAIm6B,WACZjN,EACA,8DAWN,GAPI0V,EAAqB/nC,OAAS,GAChCs4B,GACEthB,EACA+wB,EAAqB,GACrBA,EAAqBxhC,MAAM,IAG3B1G,EAAKc,KAAO6+B,GAAoBC,GAAwBuI,EAAqB,CAC/E9iC,GAAmBrF,KAAKkC,MAAM8C,gBAAkB26B,EAChD,MAAMW,EAAWtgC,EAAKkC,QAAU,CAAC,EAC3Bq+B,EAAc,UAOpB,GANAD,EAAS5B,IAAoBiB,KAAsB3/B,EAAKc,IACxDw/B,EAAS7B,IAAqB3H,GAC5ByJ,EACA,EACAppB,GAEEnX,EAAKc,IACP,IAAK,MAAMkkB,KAAOplB,EAAIgZ,MAAMC,WAAW7Y,EAAKc,IAAIxB,MAAMq4B,eACpD,IAAK3S,EAAI9K,YAAYgS,mBAAoB,CACvCoU,EAAS0H,IAAczc,GAAepU,EAASopB,GAC/C,KACF,CAGN,CACF,EACArhC,SAAAA,CAAUU,GACR,MAAM0gC,EAAW1gC,EAAII,KAAKkC,MACpBu+B,EAAWH,EAAS7B,IACpBiC,EAASz7B,IACT07B,EAAS9f,GAAQjhB,GACjBuX,EAAUmE,GAAW1b,GAE3B,GADiBA,EAAII,KAAKc,IACd,CACV,MAAM8/B,EAAWN,EAAS0H,IAC1B,GAAItH,EAAQ,CACV,MAAMG,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAK,MAAM9R,KAAaib,EAAY,CAClC,IAAItT,EAAiBlS,GAAWuK,GAChC,KAAO2H,IAAmBrW,GAAWqW,EAAexU,QAClDsK,GAA6BkK,GAAgBhlB,IAC3Cs/B,GAAkB5mC,MAAME,cAAc,KACtCqT,GACE,oBACA+G,GAAqBgS,EAAiBA,EAAexU,SAI7D,CACAuiB,GACE37B,EACA6U,GACE,UACAmsB,GAAYplB,GAAqBrE,GACjCypB,GAAYkH,GAAkB5mC,MAAME,cAAcw/B,IAGxD,KAAO,CACL,MAAMC,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAIoJ,EACAH,IACFG,EAAqB17B,GAAmBuT,MAAM6C,sBAC5C,OAAOolB,KAETx7B,GAAmBkd,cACjB,OACAulB,GAAkB5mC,MAAMsiB,oBAAoB,QAAS,CACnDskB,GAAkB5mC,MAAMuiB,mBACtBsd,EACAtsB,GACE,UACAqzB,GAAkB5mC,MAAME,cAAcw/B,GACtC9d,GAAwB2d,SAMlC,IAAK,MAAM5a,KAAaib,EAAY,CAClC,MAAME,EAAmB1lB,GAAWuK,GAChCA,EAAU3L,YAAYgS,mBACxBrG,EAAU3L,WAAW1Y,YACnBsmC,GAAkB5mC,MAAMkD,oBACtBwhB,GAA0Bob,EAAkBP,KAGvCM,GACTlb,EAAUrkB,YACRsmC,GAAkB5mC,MAAMmD,eAAe08B,EAAoB,CACzDvb,GAAmBwb,EAAkB1lB,GAAW1b,MAIxD,CACF,CACF,CACA,IAAIqhC,EACAR,IACFQ,EAAgBne,GAAwB2d,GACxCn8B,GAAM1E,EAAK,KAEb+gC,CAAM,UACN,MAAMO,EA0LV,SAAuBthC,GACrB,MAAMigC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EACjBuhC,EAAmC,IAAI1uB,IAC7C,IAAI2uB,EACAC,EACAC,EACAC,EACJ,IAAK,IAAI1sB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,IACnB,MAAExW,GAAUwB,EACdioC,GAAkB5mC,MAAMpB,uBAAuBD,IAC5CyhC,IACHA,EAAc,IAEhBA,EAAYn9B,KAAK2jC,GAAkB5mC,MAAMwgC,cAAcrjC,KAC7CwhC,EAAKhgC,EAAMP,QACrBugC,EAAKhgC,EAAMP,MAAQO,EACfyhC,EACFA,EAAYn9B,KAAK0P,GAAiBhU,EAAMP,KAAMO,EAAMxB,QAEpD8iC,EAAiBr4B,IAAIjJ,GAG3B,CACA,MAAM8hC,EAAc,IAAIR,GAAkBS,UAC1C,GAAIN,EAAa,CACfA,EAAYM,UACZ,IAAK,MAAQtiC,KAAMb,KAAWkjC,GAC3BJ,IAAc,IAAIp9B,KAAK0P,GAAiBpV,EAAOqpC,GAAkB5mC,MAAM0S,eAAe,KAErF2tB,IACFF,EAAiByG,GAAkB5mC,MAAM8sB,iBAAiBuT,IAE5DH,EAAmBS,GAAkBP,EACvC,CACA,MAAO,CACLK,cACAP,mBACAC,iBAEJ,CAnOsB+G,CAAcxoC,EAAII,OAC9B,YAAE2hC,EAAW,eAAEN,EAAc,iBAAED,GAAqBF,EAC1D,IAAK,MAAMrhC,KAAS8hC,EAAa,CAC/B,MAAQriC,KAAMb,EAAK,MAAEJ,GAAUwB,GACzB,UAAEsC,EAAS,SAAEC,GAAa/D,EAAM6D,OAAS,CAAC,EAC1CggC,EAAkB7jC,EAAM6D,OAAO4a,mBACrC,OAAQre,GACN,IAAK,QACL,IAAK,QAAS,CACZ,MAAMwgC,EAAS,GAAGxgC,QACd0D,EACFw+B,CAAM,GAAGxrB,KAAiB8pB,GAAQ78B,KACzBs+B,EACTC,CAAM,GAAGlsB,GAAYwqB,EAAQ5gC,KAE7B2qB,GACE,SACA7R,EACA+qB,EACA4F,GAAkB5mC,MAAMkD,oBACtBqQ,GACEwqB,EACA6I,GAAkB5mC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE5iC,KAKR,KACF,CACA,QACM8D,EACFw+B,CAAM,GAAGxrB,KAAiBtN,KAAKpJ,EAAO2D,KAC7Bs+B,EACLl6B,EAAe/H,GACjB0uB,GAAkBhW,EAAS+qB,GAE3BvB,CAAM,GAAGlsB,GAAY,OAAQqzB,GAAkB5mC,MAAME,cAAc3C,GAAQJ,KAEpEmI,EAAe/H,GACxBuqB,GACE,SACA7R,EACA+qB,EACA4F,GAAkB5mC,MAAMkD,oBACtBqQ,GACE,KACAqzB,GAAkB5mC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE6G,GAAkB5mC,MAAME,cAAcqF,EAAoBhI,IAC1DJ,KAKN2qB,GACE,SACA7R,EACA+qB,EACA4F,GAAkB5mC,MAAMkD,oBACtBqQ,GACE,OACAqzB,GAAkB5mC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE6G,GAAkB5mC,MAAME,cAAc3C,GACtCJ,KAOd,CAqDA,GApDI+iC,IACEV,GACFvT,GAAkBhW,EAASmpB,EAASxjB,oBAChCukB,EACFV,CAAM,GAAGlsB,GAAY,eAAgB2sB,EAAkBC,EAAgBJ,EAAezlB,GAAqBrE,GAAU2wB,GAAkB5mC,MAAME,cAAc,aAE3Ju/B,CAAM,GAAGlsB,GAAY,QAAS2sB,EAAkBH,EAAezlB,GAAqBrE,GAAU2wB,GAAkB5mC,MAAME,cAAc,eAIpI4nB,GACE,SACA7R,EACAmpB,EAASxjB,mBAJTukB,EAKAyG,GAAkB5mC,MAAMkD,oBACtBqQ,GACE,eACAiR,GACAub,EACAG,EACAC,IASJyG,GAAkB5mC,MAAMkD,oBACtBqQ,GACE,QACAiR,GACAub,EACAG,KAKRpY,GACE,SACA7R,EACAmpB,EAASxjB,mBACTgrB,GAAkB5mC,MAAMkD,oBACtBqQ,GAAY,cAAeiR,GAAiBub,KAE9C,KAINN,CAAM,IACN5gB,GAAOngB,GACHqF,IACF,IAAK,MAAMutB,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5B4nC,GAAkB5mC,MAAMsmC,YAAYhV,GACtCmO,CAAM,GAAGnO,EAAMn0B,QACNypC,GAAkB5mC,MAAMqmC,mBAAmB/U,IACpDmO,CAAM,GAAGlsB,GAAY,eAAgB+d,EAAMn0B,aAG1C,CACL,MAAMqpC,EAAiB,GACjBC,EAAsB,GAC5B,IACIU,EADAT,EAAe,GAEnB,IAAK,MAAMpV,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5B4nC,GAAkB5mC,MAAMsmC,YAAYhV,GACtCoV,GAAgBpV,EAAMn0B,MACbypC,GAAkB5mC,MAAMqmC,mBAAmB/U,KACpD6V,IAAyB7V,EACzBkV,EAAevjC,KAAK2jC,GAAkB5mC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnED,EAAoBxjC,KAAKquB,EAAMn0B,OAC/BupC,EAAe,IAGdS,GAGHX,EAAevjC,KAAK2jC,GAAkB5mC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnE5e,GACE,SACA1N,GAAW1b,GACXyoC,EAAqBhqC,MAAM6D,OAAO4a,mBAClCgrB,GAAkB5mC,MAAMkD,oBACtBqQ,GACE,cACAqzB,GAAkB5mC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE6G,GAAkB5mC,MAAMke,gBAAgBsoB,EAAgBC,OAX9DhH,CAAM,GAAGiH,GAgBb,CACAjH,CAAM,YACFF,GACF5d,GAASjjB,EAAK6gC,GAEhBzgB,GAAMpgB,GACNA,EAAIoB,QACN,EACA,SAAU,cACV,eAAgB,oBAChB,SAAU,cACV,aAAc,kBACd,YAAa,iBACb,SAAU,cACV,kBAAmB,uBACnB,OAAQ,YACR,QAAS,aACT,mBAAoB,CAAC,mBACrB4iB,aAAc,CACZikB,MAAM,EACNS,oBAAoB,IA+CpBC,GAAoBhpC,EAAQ,yCAC5BipC,GAAuBjpC,EAAQ,+CAC/BkpC,GAAaplC,OAAO,kBACpBqlC,GAAqB,CACvBhqC,OAAAA,CAAQkB,IACN,EAAI4oC,GAAqBloC,cAAcV,IACvC,EAAI4oC,GAAqBjoC,gBAAgBX,GACzC,MAAM,KAAEI,GAASJ,EACjB,GAAII,EAAKc,MAAQynC,GAAkBrnC,MAAMyX,aAAa3Y,EAAKc,KACzD,MAAMlB,EAAI7B,IAAI,OAAOgC,oBACnB,4DAGJ,MAAMoX,EAAUgD,GAAmBva,GACnC,IAAI+/B,GAAmB,EACnBC,GAAuB,EAC3B,MAAMC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EAAII,KAC3B,IAAI+/B,EACJ,IAAK,IAAIlrB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAI0zB,GAAkBrnC,MAAMs5B,iBAAiB36B,GAAQ,CACnD,GAAIggC,EAAKhgC,EAAMP,MAAO,CACpBq6B,GAAe95B,EAAMxB,OACrB,QACF,CACAwhC,EAAKhgC,EAAMP,MAAQO,EACf2G,EAAe3G,EAAMP,QACtBO,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,EACtCuL,GAAmB,GACT19B,EAASpC,EAAMxB,OAAO8D,YAChCy9B,GAAuB,EAE3B,MAAW2I,GAAkBrnC,MAAMpB,uBAAuBD,KACxD8/B,GAAmB,EACnBC,GAAuB,GACtB//B,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,GAEpC2L,EACFA,EAAqB57B,KAAKtE,EAAMxB,OACvBkqC,GAAkBrnC,MAAMpB,uBAAuBD,KACxDkgC,EAAuB,CAAClgC,EAAMxB,OAElC,CACI0hC,GACFtH,GAAgBthB,EAASvX,EAAII,KAAM+/B,GAErC,MAAMmI,EAAuB,GAC7B,IAAIC,GAAsB,EAC1B,IAAK,MAAM3V,KAAS5yB,EAAII,KAAKE,KAAKA,KAChC,GAAIqoC,GAAkBrnC,MAAMqmC,mBAAmB/U,GAC7C0V,EAAqB/jC,KAAKquB,EAAMn0B,OAChC8pC,GAAsB,OACjB,IAAKI,GAAkBrnC,MAAMsmC,YAAYhV,GAC9C,MAAM5yB,EAAI0F,IAAIm6B,WACZjN,EACA,6DAWN,GAPI0V,EAAqB/nC,OAAS,GAChCs4B,GACEthB,EACA+wB,EAAqB,GACrBA,EAAqBxhC,MAAM,IAG3B1G,EAAKc,KAAO6+B,GAAoBC,GAAwBuI,EAAqB,CAC/E9iC,GAAmBrF,KAAKkC,MAAM8C,gBAAkB26B,EAChD,MAAMW,EAAWtgC,EAAKkC,QAAU,CAAC,EAC3Bq+B,EAAc,SAOpB,GANAD,EAAS5B,IAAoBiB,KAAsB3/B,EAAKc,IACxDw/B,EAAS7B,IAAqB3H,GAC5ByJ,EACA,EACAppB,GAEEnX,EAAKc,IACP,IAAK,MAAMkkB,KAAOplB,EAAIgZ,MAAMC,WAAW7Y,EAAKc,IAAIxB,MAAMq4B,eACpD,IAAK3S,EAAI9K,YAAYgS,mBAAoB,CACvCoU,EAASmI,IAAcld,GAAepU,EAASopB,GAC/C,KACF,CAGN,CACF,EACArhC,SAAAA,CAAUU,GACR,MAAM0gC,EAAW1gC,EAAII,KAAKkC,MACpBu+B,EAAWH,EAAS7B,IACpBiC,EAASz7B,IACT07B,EAAS9f,GAAQjhB,GACjBuX,EAAUmE,GAAW1b,GAE3B,GADiBA,EAAII,KAAKc,IACd,CACV,MAAM8/B,EAAWN,EAASmI,IAC1B,GAAI/H,EAAQ,CACV,MAAMG,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAK,MAAM9R,KAAaib,EAAY,CAClC,IAAItT,EAAiBlS,GAAWuK,GAChC,KAAO2H,IAAmBrW,GAAWqW,EAAexU,QAClDsK,GAA6BkK,GAAgBhlB,IAC3C+/B,GAAkBrnC,MAAME,cAAc,KACtCqT,GACE,oBACA+G,GAAqBgS,EAAiBA,EAAexU,SAI7D,CACAuiB,GACE37B,EACA6U,GACE,UACAmsB,GAAYplB,GAAqBrE,GACjCypB,GAAY2H,GAAkBrnC,MAAME,cAAcw/B,IAGxD,KAAO,CACL,MAAMC,EAAUjhC,EAAII,KAAKc,IAAIxB,KACvBwhC,EAAalhC,EAAIgZ,MAAMC,WAAWgoB,GAASlJ,eACjD,IAAIoJ,EACAH,IACFG,EAAqB17B,GAAmBuT,MAAM6C,sBAC5C,OAAOolB,KAETx7B,GAAmBkd,cACjB,OACAgmB,GAAkBrnC,MAAMsiB,oBAAoB,QAAS,CACnD+kB,GAAkBrnC,MAAMuiB,mBACtBsd,EACAtsB,GACE,UACA8zB,GAAkBrnC,MAAME,cAAcw/B,GACtC9d,GAAwB2d,SAMlC,IAAK,MAAM5a,KAAaib,EAAY,CAClC,MAAME,EAAmB1lB,GAAWuK,GAChCA,EAAU3L,YAAYgS,mBACxBrG,EAAU3L,WAAW1Y,YACnB+mC,GAAkBrnC,MAAMkD,oBACtBwhB,GAA0Bob,EAAkBP,KAGvCM,GACTlb,EAAUrkB,YACR+mC,GAAkBrnC,MAAMmD,eAAe08B,EAAoB,CACzDvb,GAAmBwb,EAAkB1lB,GAAW1b,MAIxD,CACF,CACF,CACA,IAAIqhC,EACAR,IACFQ,EAAgBne,GAAwB2d,GACxCn8B,GAAM1E,EAAK,KAEb+gC,CAAM,SACN,MAAMO,EAqLV,SAAuBthC,GACrB,MAAMigC,EAAO,CAAC,GACR,WAAEp+B,GAAe7B,EACjBuhC,EAAmC,IAAI1uB,IAC7C,IAAI2uB,EACAC,EACAC,EACAC,EACJ,IAAK,IAAI1sB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,IACnB,MAAExW,GAAUwB,EACd0oC,GAAkBrnC,MAAMpB,uBAAuBD,IAC5CyhC,IACHA,EAAc,IAEhBA,EAAYn9B,KAAKokC,GAAkBrnC,MAAMwgC,cAAcrjC,KAC7CwhC,EAAKhgC,EAAMP,QACrBugC,EAAKhgC,EAAMP,MAAQO,EACfyhC,EACFA,EAAYn9B,KAAK0P,GAAiBhU,EAAMP,KAAMO,EAAMxB,QAEpD8iC,EAAiBr4B,IAAIjJ,GAG3B,CACA,MAAM8hC,EAAc,IAAIR,GAAkBS,UAC1C,GAAIN,EAAa,CACfA,EAAYM,UACZ,IAAK,MAAQtiC,KAAMb,KAAWkjC,GAC3BJ,IAAc,IAAIp9B,KAAK0P,GAAiBpV,EAAO8pC,GAAkBrnC,MAAM0S,eAAe,KAErF2tB,IACFF,EAAiBkH,GAAkBrnC,MAAM8sB,iBAAiBuT,IAE5DH,EAAmBS,GAAkBP,EACvC,CACA,MAAO,CACLK,cACAP,mBACAC,iBAEJ,CA9NsBsH,CAAc/oC,EAAII,OAC9B,YAAE2hC,EAAW,eAAEN,EAAc,iBAAED,GAAqBF,EAC1D,IAAK,MAAMrhC,KAAS8hC,EAAa,CAC/B,MAAQriC,KAAMb,EAAK,MAAEJ,GAAUwB,GACzB,UAAEsC,EAAS,SAAEC,GAAa/D,EAAM6D,OAAS,CAAC,EAC1CggC,EAAkB7jC,EAAM6D,OAAO4a,mBACrC,OAAQre,GACN,IAAK,QACL,IAAK,QAAS,CACZ,MAAMwgC,EAAS,GAAGxgC,QACd0D,EACFw+B,CAAM,GAAGxrB,KAAiB8pB,GAAQ78B,KACzBs+B,EACTC,CAAM,GAAGlsB,GAAYwqB,EAAQ5gC,KAE7B2qB,GACE,SACA7R,EACA+qB,EACAqG,GAAkBrnC,MAAMkD,oBACtBqQ,GACEwqB,EACAsJ,GAAkBrnC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzE5iC,KAKR,KACF,CACA,QACM8D,EACFw+B,CAAM,GAAGxrB,KAAiBtN,KAAKpJ,EAAO2D,KAC7Bs+B,EACLl6B,EAAe/H,GACjB0uB,GAAkBhW,EAAS+qB,GAE3BvB,CAAM,GAAGlsB,GAAY,OAAQ8zB,GAAkBrnC,MAAME,cAAc3C,GAAQJ,KAEpEmI,EAAe/H,GACxBuqB,GACE,SACA7R,EACA+qB,EACAqG,GAAkBrnC,MAAMkD,oBACtBqQ,GACE,KACA8zB,GAAkBrnC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzEsH,GAAkBrnC,MAAME,cAAcqF,EAAoBhI,IAC1DJ,KAKN2qB,GACE,SACA7R,EACA+qB,EACAqG,GAAkBrnC,MAAMkD,oBACtBqQ,GACE,OACA8zB,GAAkBrnC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzEsH,GAAkBrnC,MAAME,cAAc3C,GACtCJ,KAOd,CAqDA,GApDI+iC,IACEV,GACFvT,GAAkBhW,EAASmpB,EAASxjB,oBAChCukB,EACFV,CAAM,GAAGlsB,GAAY,eAAgB2sB,EAAkBC,EAAgBJ,EAAezlB,GAAqBrE,GAAUoxB,GAAkBrnC,MAAME,cAAc,YAE3Ju/B,CAAM,GAAGlsB,GAAY,QAAS2sB,EAAkBH,EAAezlB,GAAqBrE,GAAUoxB,GAAkBrnC,MAAME,cAAc,cAIpI4nB,GACE,SACA7R,EACAmpB,EAASxjB,mBAJTukB,EAKAkH,GAAkBrnC,MAAMkD,oBACtBqQ,GACE,eACAiR,GACAub,EACAG,EACAC,IASJkH,GAAkBrnC,MAAMkD,oBACtBqQ,GACE,QACAiR,GACAub,EACAG,KAKRpY,GACE,SACA7R,EACAmpB,EAASxjB,mBACTyrB,GAAkBrnC,MAAMkD,oBACtBqQ,GAAY,cAAeiR,GAAiBub,KAE9C,KAINN,CAAM,IACN5gB,GAAOngB,GACHqF,IACF,IAAK,MAAMutB,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5BqoC,GAAkBrnC,MAAMsmC,YAAYhV,GACtCmO,CAAM,GAAGnO,EAAMn0B,QACNkqC,GAAkBrnC,MAAMqmC,mBAAmB/U,IACpDmO,CAAM,GAAGlsB,GAAY,cAAe+d,EAAMn0B,aAGzC,CACL,MAAMqpC,EAAiB,GACjBC,EAAsB,GAC5B,IACIU,EADAT,EAAe,GAEnB,IAAK,MAAMpV,KAAS5yB,EAAII,KAAKE,KAAKA,KAC5BqoC,GAAkBrnC,MAAMsmC,YAAYhV,GACtCoV,GAAgBpV,EAAMn0B,MACbkqC,GAAkBrnC,MAAMqmC,mBAAmB/U,KACpD6V,IAAyB7V,EACzBkV,EAAevjC,KAAKokC,GAAkBrnC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnED,EAAoBxjC,KAAKquB,EAAMn0B,OAC/BupC,EAAe,IAGdS,GAGHX,EAAevjC,KAAKokC,GAAkBrnC,MAAMme,gBAAgB,CAAExM,IAAK+0B,KACnE5e,GACE,SACA1N,GAAW1b,GACXyoC,EAAqBhqC,MAAM6D,OAAO4a,mBAClCyrB,GAAkBrnC,MAAMkD,oBACtBqQ,GACE,cACA8zB,GAAkBrnC,MAAMkT,iBAAiBsR,GAAiBub,GAAe,GACzEsH,GAAkBrnC,MAAMke,gBAAgBsoB,EAAgBC,OAX9DhH,CAAM,GAAGiH,GAgBb,CACAjH,CAAM,WACFF,GACF5d,GAASjjB,EAAK6gC,GAEhBzgB,GAAMpgB,GACNA,EAAIoB,QACN,EACA,YAAa,iBACb,SAAU,cACV,SAAU,cACV,QAAS,aACT,mBAAoB,CAAC,mBACrB4iB,aAAc,CACZikB,MAAM,EACNS,oBAAoB,IA+CpBM,GAAoBrpC,EAAQ,yCAC5BspC,GAAuBtpC,EAAQ,+CAC/BupC,GAAa,CACfpqC,OAAAA,CAAQkB,IACN,EAAIipC,GAAqBvoC,cAAcV,IACvC,EAAIipC,GAAqBtoC,gBAAgBX,IACzC,EAAIipC,GAAqBroC,oBAAoBZ,GAC7CK,EAAoBL,IACpB,EAAIipC,GAAqBpoC,uBAAuBb,GAChD,MAAM,KAAEI,GAASJ,EACjB,IAAKI,EAAKc,IACR,MAAMlB,EAAI7B,IAAI,QAAQgC,oBAAoB,yCAE5C,IAAK6oC,GAAkB1nC,MAAMyX,aAAa3Y,EAAKc,KAC7C,MAAMlB,EAAI7B,IAAI,OAAOgC,oBAAoB,uCAE3Ck3B,GAAmBr3B,EAAK,EAC1B,EACAV,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,EACXyX,EAAKpS,IAAiBwP,GAAY,aAAeA,GAAY,YAAaiR,IAChF,GAAIzgB,IACFrF,EAAI4B,YACFonC,GAAkB1nC,MAAMsiB,oBAAoB,QAAS,CAAColB,GAAkB1nC,MAAMuiB,mBAAmBzjB,EAAKc,IAAKuW,UAExG,CACL,MAAMrP,EAASihB,GAAUjpB,EAAKc,IAAIoB,MAAMS,SACxC+gB,GAASpI,GAAW1b,QAAM,EAAQoI,EAAQqP,GAC1CzX,EAAIoB,QACN,CACF,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEC,YAAa,YACbC,YAAa,qCACbC,QAAS,eACTiiB,mBAAoB,2CAGxB5iB,MAAO7B,EAAqBC,KAAO,yBAIjCypC,GAAoBxpC,EAAQ,yCAC5BypC,GAAuBzpC,EAAQ,+CAG/B0pC,GAAoB1pC,EAAQ,yCAY5B2pC,GAAW7lC,OAAO,mBAClB8lC,GAAkC,IAAI71B,QACtC81B,GAAQ,CACV1qC,OAAAA,CAAQkB,GAEN,GAoQJ,SAA8BA,GAM5B,QALA,EAAIopC,GAAqB7lB,aAAavjB,IACtC,EAAIopC,GAAqB1oC,cAAcV,IACvC,EAAIopC,GAAqBzoC,gBAAgBX,GA0B3C,SAAuBA,GACrB,IAAMA,EAAII,KAAKE,KAAKA,KAAKC,SAAUP,EAAII,KAAKob,cAAcjb,OACxD,MAAMP,EAAI7B,IAAI,QAAQgC,oBACpB,SAAS0V,GAAW7V,kCAG1B,CA/BEypC,CAAczpC,GACdD,EAAoBC,GACZ6V,GAAW7V,IACjB,IAAK,KACH0pC,GAAwB1pC,GACxB,MACF,IAAK,UACH0pC,GAAwB1pC,GACxB2pC,GAA4B3pC,GAC5B,MACF,IAAK,QA2CT,SAAmCA,GACjC,MAAM,KAAEI,GAASJ,GACV4pC,GAAUxpC,EAAKyB,WACtB,GAAIzB,EAAKyB,WAAWtB,OAAS,GAAKqpC,GAA0B,OAAhBA,EAAOlqC,KAAe,CAChE,MAAMmI,EAAQzH,EAAKyB,WAAW,GAAGiZ,KAAKjT,MAChCkvB,EAAM32B,EAAKyB,WAAWzB,EAAKyB,WAAWtB,OAAS,GAAGua,KAAKic,IACvD8S,EAAM,SAASh0B,GAAW7V,+CAChC,MAAa,MAAT6H,GAAwB,MAAPkvB,EACb/2B,EAAI7B,IAAI,QAAQgC,oBAAoB0pC,GAEpC7pC,EAAI0F,IAAIm6B,WACZ,CAAE/kB,IAAK,CAAEjT,QAAOkvB,QAChB8S,EACA59B,MAGN,CACF,CA3DM69B,CAA0B9pC,GAC1B2pC,GAA4B3pC,GAGlC,CAxRI+pC,CAAqB/pC,GACjBA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MAAOwuB,EAAQC,GAAYC,GAAYlqC,EAAKoa,GAAapa,EAAI7B,IAAI,UACjE,GAAI6rC,EAAQ,CACV,MAAOG,GAAWF,EAAS,GACrBG,EAAYD,EAAQ/pC,KAAKkC,QAAU,CAAC,EACpC+nC,EAAsB,GAC5B,IAAI7G,GAAyB,EAC7B,IAAK,MAAO8G,EAAWC,KAAsBN,EACvCM,IACFA,EAAkBhvB,UAAW,EAC7BgvB,EAAkBlvB,mBAAqB+uB,EACH,OAA9BG,EAAkBpvB,SAAoBovB,EAAkBpvB,SAASsB,cACrE+mB,GAAyB,IAGzB8G,EAAUlqC,KAAKyB,WAAWtB,QAC5B8pC,EAAoB9lC,KAAK+lC,EAAUlqC,KAAKyB,WAAW,GAAGpD,OAG1D,MAAM8Y,EAAUgD,GAAmBva,GACnCoqC,EAAUd,IAAYpS,GACpB,QACA,EACA3f,OACA,EACA6yB,GAEFA,EAAU5G,uBAAyBA,EACnC3K,GAAgBthB,EAAS4yB,EAAQ/pC,KAAMiqC,EACzC,CACF,EACA/qC,UAAWkf,GAAkB,CAC3BC,KAAM,CACJR,KAAAA,CAAMje,GACJ,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MACMsf,EAAcrf,GADJzb,EAAI7B,IAAI,SAEpBqsC,GAAOxqC,IACT0E,GAAM1E,EAAK,IAEbqgB,GAAargB,GACbsiB,GAAYtiB,GACR86B,GACF/e,GAAwB+e,GAAa,EAEzC,EACAvc,IAAAA,CAAKve,GACH,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MAAMuf,EAAU/6B,EAAI7B,IAAI,QAClBoZ,EAAUmE,GAAW1b,GACrB86B,EAAcrf,GAAkBsf,IAC/BiP,EAAQC,GAAYC,GAAYlqC,EAAK86B,GACtCsP,EAAYH,EAAS,GAAG,GAAG7pC,KAAKkC,MAChCu+B,EAAWuJ,EAAUd,IACrBnG,EAAalmB,GAAqBmtB,EAAUltB,oBAC5CsmB,EAAyB4G,EAAU5G,uBACnCD,EAAsBzI,GAAe3d,GAAsB2d,GAAa,GAU9E,GATIA,KACEqI,GAAcI,IAChB1b,GAAoBiT,GAEtBpY,GAAU1iB,GACVynB,GAAwBznB,GAAK,SAE7BwtB,GAA0BuN,IAExBiP,EAAQ,CACV,MAAM1D,EAAUtmC,EAAIyqC,iBACdC,EAAsB1qC,EAAIgZ,MAAM6C,sBAAsB,aACtD8uB,EAAuB3qC,EAAIgZ,MAAM6C,sBAAsB,cAC7D,IAAIqP,EACJ,IAAK,IAAIjW,EAAIg1B,EAAS1pC,OAAQ0U,KAAO,CACnC,MAAOq1B,EAAWC,GAAqBN,EAASh1B,GAC1CquB,EAAiBgH,EAAUlqC,KAAKE,KAAKA,KAC3C,GAAIiqC,EAAmB,CACrB,MAAMK,EAA4BztB,GAChCotB,GACA,GAEEpH,GACFG,EAAe/+B,KACb4kC,GAAkB7nC,MAAMkD,oBACtBqQ,GACE,WACAs0B,GAAkB7nC,MAAMmuB,qBACtB,IACAkb,EACA91B,GACE,iBACAs0B,GAAkB7nC,MAAM6nB,wBAAwB,GAAIggB,GAAkB7nC,MAAMslB,eAAe,OAG/FuiB,GAAkB7nC,MAAME,cACtBgqB,GAAoB+e,EAAmB,iBAM7CpH,GAAcyH,IAChBtH,EAAe/+B,KACb4kC,GAAkB7nC,MAAMkD,oBACtB2kC,GAAkB7nC,MAAMmuB,qBACtB,IACAib,EACA9uB,GAAqB2uB,KAK/B,CACA,MAAOM,GAAYP,EAAUlqC,KAAKyB,WAC5BipC,GAhIexqC,EAgIwBgjC,EA/HnD98B,MAAMC,QAAQnG,GACI,IAAhBA,EAAKC,OACAD,EAAK,GAEP+oC,GAAkB/nC,MAAMslB,eAAetmB,GAEzCA,GA2HK4qB,EADE2f,EACU1B,GAAkB7nC,MAAMkhC,YAClCqI,EAASpsC,MACTqsC,EACA5f,GAGU4f,EAEdR,EAAUlpC,QACZ,CACA,GAAM+hC,GAAcI,EAEb,CACL,GAAIJ,EAAY,CACdzf,GAA6BnM,GAAS3O,IACpCugC,GAAkB7nC,MAAME,cACtB0hB,GAAwB2d,GAAUpiC,MAAQ,KAE5CksC,GAEF,MAAMI,EAAS5B,GAAkB7nC,MAAM6nB,wBACrC,GACAggB,GAAkB7nC,MAAMslB,eAAe,CAACsE,KAE1CA,EAAYie,GAAkB7nC,MAAMkD,oBACTqQ,GAAzB2uB,EACE,8BAKA,oBAJAuH,EACAnvB,GAAqBrE,GACrB2L,GAAwB2d,IAQ9B,CACAyF,EAAQ9jB,aAAa,CACnB2mB,GAAkB7nC,MAAMsiB,oBACtB,MACA,CACEulB,GAAkB7nC,MAAMuiB,mBAAmB6mB,GAC3CvH,GAAcgG,GAAkB7nC,MAAMuiB,mBAAmB8mB,IACzD/U,OAAO1rB,UAEXghB,IAEFxH,GAA6BnM,GAAS3O,IACpCugC,GAAkB7nC,MAAME,cACtB0hB,GAAwB2d,GAAUpiC,MAAQ,KAE5CoW,GAAY,eAAgB61B,GAEhC,MA3CEpE,EAAQ9jB,aAAa0I,EA4CzB,CAzLR,IAAiC5qB,CA0L3B,GAEFoe,IAAK,CACHT,KAAAA,CAAMje,GACJ,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MACMsf,EAAcrf,GADJzb,EAAI7B,IAAI,SAEpB28B,GACF/e,GAAwB+e,GAAa,GAEnC0P,GAAOxqC,IACT0E,GAAM1E,EAAK,IAEbqgB,GAAargB,EACf,EACAue,IAAAA,CAAKve,GACH,GAAIA,EAAII,KAAKE,KAAKkb,cAAe,OACjC,MAAOwuB,EAAQC,GAAYC,GACzBlqC,EACAyb,GAAkBzb,EAAI7B,IAAI,UAE5B,GAAI6rC,EAAQ,CACV,MAAMzyB,EAAUmE,GAAW1b,GACrBoqC,EAAYH,EAAS,GAAG,GAAG7pC,KAAKkC,MAChCu+B,EAAWuJ,EAAUd,IAC3B,IAAI/mB,EAAO4mB,GAAkB7nC,MAAM0pC,cACnC,IAAK,IAAI/1B,EAAIg1B,EAAS1pC,OAAQ0U,KAAO,CACnC,MAAOq1B,EAAWC,GAAqBN,EAASh1B,IACzC41B,GAAYP,EAAUlqC,KAAKyB,WAC5BopC,EAAaV,EAAoBpB,GAAkB7nC,MAAMI,WAAW6oC,EAAkB7qC,MAAQypC,GAAkB7nC,MAAM0S,eAAe,GAC3IyT,GACE6iB,GACA,CAAC3F,EAAgBpc,EAAQD,IAChBzT,GACL,qBACAqO,GAAwB2d,GACxBsI,GAAkB7nC,MAAM6nB,wBACtB,GACAggB,GAAkB7nC,MAAMI,WAAW6oC,EAAkB7qC,OAEvD6oB,EACAD,KAINgiB,EAAUlpC,SACVmhB,EAAOsoB,EAAW1B,GAAkB7nC,MAAM+iC,sBAAsBwG,EAASpsC,MAAOwsC,EAAY1oB,GAAQ0oB,CACtG,CACA,MAAM/iB,EAASH,GAAUxQ,EAASspB,EAAU,MAC5C3Y,EAAOxkB,MAAQ,IACNmR,GACL,cACAqO,GAAwB2d,GACxBhY,GAAYX,EAAQ,CAACpC,MAGzBoC,EAAOnE,2BAA6B,IAAMkmB,EAAS3wB,MAAK,EAAE,CAAEwhB,KAAiBA,GAAa7f,WAC1F6I,GAASvM,EAAS6yB,EAAUltB,mBAAoBgL,EAAQ3F,EAC1D,CACF,KAGJyB,aAAc,CAAEghB,aAAa,GAC7BljC,aAAc,CACZ,CACEG,QAAS,oBACTD,YAAa,uDACbkiB,mBAAoB,yDAItBgnB,GAAY,IACX1B,GACH1nC,aAAc,CACZ,CACEG,QAAS,yBACTD,YAAa,4GACbkiB,mBAAoB,yDAItBinB,GAAU,IACT3B,GACH1nC,aAAc,CACZ,CACEE,YAAa,0FACbkiB,mBAAoB,yDAwB1B,SAASylB,GAA4B3pC,GACnC,IAAI0lB,EAAO1lB,EAAIs+B,iBACf,KAAO5Y,EAAKtlB,MAAQslB,EAAK0lB,kBAAkB1lB,EAAOA,EAAK4Y,iBACvD,IAAKnoB,GAAeuP,IAA8B,SAArB7P,GAAW6P,KAAqBA,EAAKtlB,KAAKyB,WAAWtB,OAChF,MAAMP,EAAIG,oBACR,UAAU0V,GAAW7V,wFAG3B,CAQA,SAAS0pC,GAAwB1pC,GAC/B,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,WACzB,IAAKsnC,GAAkB7nC,MAAMs5B,iBAAiBD,KAAeA,EAAUtc,QACrE,MAAMre,EAAI7B,IAAI,QAAQgC,oBAAoB,SAAS0V,GAAW7V,8BAEhE,GAAII,EAAKyB,WAAWtB,OAAS,EAAG,CAC9B,MAAMsH,EAAQzH,EAAKyB,WAAW,GAAGiZ,KAAKjT,MAChCkvB,EAAM32B,EAAKyB,WAAWzB,EAAKyB,WAAWtB,OAAS,GAAGua,KAAKic,IACvD8S,EAAM,SAASh0B,GAAW7V,kDAChC,MAAa,MAAT6H,GAAwB,MAAPkvB,EACb/2B,EAAI7B,IAAI,QAAQgC,oBAAoB0pC,GAEpC7pC,EAAI0F,IAAIm6B,WACZ,CAAE/kB,IAAK,CAAEjT,QAAOkvB,QAChB8S,EACA59B,MAGN,CACF,CAmBA,SAASi+B,GAAYlqC,EAAK86B,GACxB,MAAMmP,EAAWV,GAAgBprC,IAAI6B,IAAQ,GAC7C,IAAIsmC,EAAUtmC,EAAIyqC,iBAClB,KAAOnE,EAAQ8E,kBAAkB9E,EAAUA,EAAQmE,iBACnD,MAAMT,IAAW9zB,GAAcowB,EAAS,SAAWpwB,GAAcowB,EAAS,YAK1E,OAJA2D,EAAS1lC,KAAK,CAACvE,EAAK86B,IACfkP,GACHT,GAAgB3gC,IAAI09B,EAAS2D,GAExB,CAACD,EAAQC,EAClB,CACA,SAASO,GAAOxqC,GACd,OAAOkW,GAAclW,EAAK,KAC5B,CAGA,IAAIqrC,GAAuB1rC,EAAQ,+CAC/B2rC,GAAiB,CACnB3/B,KAAAA,CAAM3L,GACJ,MAAM,KAAEI,GAASJ,EACjBA,EAAI4B,aACF,EAAIypC,GAAqBhQ,iBAAiBr7B,EAAI0F,IAAIf,KAAMvE,EAAK+6B,SAAU/6B,EAAKyH,MAAOzH,EAAK22B,KAAK,GAEjG,EACA/S,aAAc,CACZkH,WAAW,EACXqQ,YAAY,GAEdz5B,aAAc,CACZ,CACEC,YAAa,+BACbC,YAAa,iFACbC,QAAS,+BACTiiB,mBAAoB,+DAMtBqnB,GAAoB5rC,EAAQ,yCAC5B6rC,GAAuB7rC,EAAQ,+CAC/B8rC,GAAc,CAChB3sC,OAAAA,CAAQkB,GACN,MAAM,KAAEI,GAASJ,EACXiB,EAASb,EAAKc,IACpB,IAAIy5B,EACA+Q,EACJ,IAAK,MAAMzrC,KAASG,EAAKyB,WACvB,GAAI0pC,GAAkBjqC,MAAMs5B,iBAAiB36B,GAC3C,GAAmB,UAAfA,EAAMP,KACRi7B,EAAY16B,MACP,IAAmB,gBAAfA,EAAMP,KAEV,CACL,MAAMmI,EAAQ5H,EAAM6a,KAAKjT,MACnBkvB,EAAM92B,EAAM6a,KAAKic,IACjB8S,EAAM,4EACZ,MAAa,MAAThiC,GAAwB,MAAPkvB,EACb/2B,EAAI7B,IAAI,QAAQgC,oBAAoB0pC,GAEpC7pC,EAAI0F,IAAIm6B,WACZ,CAAE/kB,IAAK,CAAEjT,QAAOkvB,QAChB8S,EACA59B,MAGN,CAdEy/B,EAAkBzrC,CAcpB,CAOJ,IAJA,EAAIurC,GAAqB9qC,cAAcV,IACvC,EAAIwrC,GAAqB7qC,gBAAgBX,GACzCK,EAAoBL,GACpBD,EAAoBC,IACfiB,EACH,MAAMjB,EAAI7B,IAAI,QAAQgC,oBAAoB,0CAE5C,IAAKorC,GAAkBjqC,MAAMyX,aAAa9X,GACxC,MAAMjB,EAAI7B,IAAI,OAAOgC,oBAAoB,kDAE3C,GAAIurC,IAAmB,EAAIF,GAAqB/oC,aAAaipC,EAAgBjtC,OAC3E,MAAMuB,EAAI7B,IAAI,cAAcqY,MAAMvW,GAAUA,EAAMG,OAASsrC,IAAiBvtC,IAAI,SAASgC,oBACvF,6DAGJ04B,GAAgBte,GAAmBva,GAAMA,EAAII,KAAM,CACjDu6B,GAAWl8B,MACXitC,GAAiBjtC,QAEnB44B,GAAmBr3B,EAAK,OAAa,EAAQA,EAAII,KAAKkC,MACxD,EACAhD,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,EACXiB,EAASb,EAAKc,IACdy5B,EAAYv6B,EAAKyB,WAAW2U,MAC/BvW,GAAUsrC,GAAkBjqC,MAAMs5B,iBAAiB36B,KAAWA,EAAMoe,SAA0B,UAAfpe,EAAMP,SACnF6rC,GAAkBjqC,MAAMG,eAAe,QAAS8pC,GAAkBjqC,MAAMI,WAAW,cAClFgqC,EAAkBtrC,EAAKyB,WAAW2U,MACrCvW,GAAUsrC,GAAkBjqC,MAAMs5B,iBAAiB36B,IAAyB,gBAAfA,EAAMP,OAEhE6X,EAAUmE,GAAW1b,GACrB+C,EAAU9B,EAAOqB,MAAMS,QAC7B,GAAIyC,IAAe,CACjB,MAAM0iB,EAASmB,GAAUtmB,EAAS,SAElC+gB,GAASvM,EADkBvX,EAAII,KAAKkC,MAAM4a,mBACJgL,EAAQyS,EAAUl8B,OACpDitC,IACFxjB,EAAOmC,UAAY,CAACqhB,EAAgBjtC,QAEtCypB,EAAOgH,gBAAkB,CAACyc,EAAcltC,KACtC,MAAMua,EAAQ4M,GAAmB+lB,EAAczjB,EAAO3Q,SACtD,OAAOg0B,GAAkBjqC,MAAMmD,eAAeyjB,EAAOxmB,WAAY,CAACsX,EAAOva,GAAO,CAEpF,MACEk9B,GAAa37B,EAAK26B,EAAUl8B,OACxBitC,GACFhoB,GAA6BnM,GAAS3O,IACpC2iC,GAAkBjqC,MAAME,cACtB0hB,GAAwBngB,GAAStE,MAAQ,KAE3CitC,EAAgBjtC,OAItBuB,EAAIoB,QACN,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,mCACbkiB,mBAAoB,4CAGxB5iB,MAAO7B,EAAqBC,KAAO,0BAIjCksC,GAAoBjsC,EAAQ,yCAC5BksC,GAAuBlsC,EAAQ,+CAC/BmsC,GAAOroC,OAAO,6BACdsoC,GAAoB,CACtBjtC,OAAAA,CAAQkB,IACN,EAAI6rC,GAAqBnrC,cAAcV,IACvC,EAAI6rC,GAAqBtoB,aAAavjB,IACtC,EAAI6rC,GAAqBlrC,gBAAgBX,GACzCK,EAAoBL,GACpB,MAAM,KAAEI,GAASJ,EACX0gC,EAAWtgC,EAAKkC,QAAU,CAAC,EAC3BiV,EAAUgD,GAAmBva,GAQnC,GAPA0gC,EAASoL,IAAQ5U,GACfzxB,GAAmBuT,MAAM2B,YAAY,aACrC,EACApD,OACA,EACAmpB,GAE6B,IAA3BtgC,EAAKyB,WAAWtB,OAClB,MAAMP,EAAI7B,IAAI,QAAQgC,oBACpB,wDAGJ,IAAK,MAAMF,KAASG,EAAKyB,WAAY,CACnC,GAAI+pC,GAAkBtqC,MAAMpB,uBAAuBD,GACjD,MAAMD,EAAI7B,IAAI,QAAQgC,oBACpB,iEAGHF,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,CACxC,EACC/uB,GAAmBrF,KAAKkC,QAAU,CAAC,GAAG8C,eAAgB,EACvDyzB,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,MACjE,EACAd,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,EACXuX,EAAUmE,GAAW1b,GACrB0gC,EAAWtgC,EAAKkC,OAChB,mBAAE4a,GAAuBwjB,EACzBsL,EAAoBtL,EAASoL,IACnC,GAAItmC,IAAe,CACjB,MAAMshC,EAAkB5B,GAAellC,GACvC8mC,EAAgB1b,WAAW7mB,KACzBqnC,GAAkBtqC,MAAMkD,oBACtBqQ,GACE,YACAiR,GACA5C,GAAwB8oB,GACxB/J,GAAkB6E,EAAgB1iB,eAIxCgF,GACE,SACA7R,EACA2F,EACA4pB,EAAgB1b,WAEpB,MACEmC,GAAkBhW,EAAS2F,GAE7Bld,EAAIoB,QACN,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,gCACbkiB,mBAAoB,+CAGxB5iB,MAAO7B,EAAqBC,KAAO,gCAIjCusC,GAAoBtsC,EAAQ,yCAC5BusC,GAAuBvsC,EAAQ,+CAC/BwsC,GAAc,CAChBrtC,OAAAA,CAAQkB,GACN,MAAO26B,GAAa36B,EAAII,KAAKyB,WAK7B,IAJA,EAAIqqC,GAAqBxrC,cAAcV,IACvC,EAAIksC,GAAqB3oB,aAAavjB,IACtC,EAAIksC,GAAqBvrC,gBAAgBX,GACzCK,EAAoBL,IACf26B,EACH,MAAM36B,EAAI7B,IAAI,QAAQgC,oBAAoB,mCAE5C,GAAIH,EAAII,KAAKyB,WAAWtB,OAAS,IAAM0rC,GAAkB3qC,MAAMs5B,iBAAiBD,KAAeA,EAAUtc,SAA8B,UAAnBsc,EAAUj7B,KAC5H,MAAMM,EAAI7B,IAAI,QAAQgC,oBACpB,qDAGN,EACAb,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAMuX,EAAUmE,GAAW1b,IACpB26B,GAAa36B,EAAII,KAAKyB,YACvB,MAAEpD,GAAUk8B,EACZzd,EAAqBze,EAAM6D,OAAO4a,mBAClCgO,EAAY+gB,GAAkB3qC,MAAMkD,oBACxCynC,GAAkB3qC,MAAMmD,eACtBwnC,GAAkB3qC,MAAMkT,iBAAiBy3B,GAAkB3qC,MAAMI,WAAW,WAAYuqC,GAAkB3qC,MAAMI,WAAW,QAC3H,CAACjD,KAGD4G,IACFrF,EAAIwiB,aAAa0I,GAEjB9B,GAAa,SAAU7R,EAAS2F,EAAoBgO,GAEtDlrB,EAAIoB,QACN,GAEF4iB,aAAc,CACZC,aAAa,GAEfpiB,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,qCACbkiB,mBAAoB,4CAGxB5iB,MAAO7B,EAAqBC,KAAO,0BAIjC0sC,GAAoBzsC,EAAQ,yCAC5B0sC,GAAuB1sC,EAAQ,+CAC/B2sC,GAA4B,0EAC5BC,GAAiB,CACnB5gC,KAAAA,CAAM3L,GACJ,MAAM,KAAEI,GAASJ,GACX,KAAEM,GAASF,EAAKE,KACtB,GAAIA,EAAKC,OAAQ,CACf,IAAI+f,EAAO,GACX,IAAK,MAAMsS,KAAStyB,EAAM,CACxB,GAAmB,cAAfsyB,EAAMzxB,KACR,MAAMnB,EAAI0F,IAAIf,KAAKe,IAAIm6B,WACrBjN,EACA,mFAAqF0Z,GACrFn5B,aAGJmN,GAAQsS,EAAMn0B,KAChB,CACA,MAAMoJ,EAAQvH,EAAK,IAAIuH,MACjBkvB,EAAMz2B,EAAKA,EAAKC,OAAS,IAAIw2B,IAC7BuM,GAAiB,EAAI+I,GAAqBhR,iBAAiBr7B,EAAI0F,IAAIf,KAAM2b,EAAMzY,EAAOkvB,GACtFyV,EAAUJ,GAAkB9qC,MAAM6nB,wBACtC,GACAijB,GAAkB9qC,MAAMslB,eAAe0c,GACvClc,GAAiBkc,EAAgBmJ,KAEnCrsC,EAAKyB,WAAW0C,KAAK6nC,GAAkB9qC,MAAMG,eAAe,QAAS+qC,IACrEpsC,EAAKE,KAAKA,KAAO,EACnB,CACF,EACAxB,OAAAA,CAAQkB,GACN,MAAM,KAAEI,GAASJ,EAKjB,IAJA,EAAIqsC,GAAqB3rC,cAAcV,IACvC,EAAIqsC,GAAqB1rC,gBAAgBX,GACzCK,EAAoBL,IACpB,EAAIqsC,GAAqBxrC,uBAAuBb,GAC5CI,EAAKc,IACP,MAAMlB,EAAI0F,IAAIm6B,WACZz/B,EAAKc,IACL,8DAAgEorC,IAGpE,IAAII,GAAgB,EACpB,IAAK,MAAMzsC,KAASG,EAAKyB,WAAY,CACnC,GAAmB,mBAAf5B,EAAMkB,MAA4C,UAAflB,EAAMP,KAQ3C,MAAMM,EAAI0F,IAAIm6B,WACZ5/B,EACA,qDAAuDqsC,IATzD,GAAII,EACF,MAAM1sC,EAAI0F,IAAIm6B,WAAW5/B,EAAO,sCAElCysC,GAAgB,GACfzsC,EAAMxB,MAAM6D,QAAU,CAAC,GAAGkyB,UAAW,GACrC/uB,GAAmBrF,KAAKkC,QAAU,CAAC,GAAG8C,eAAgB,CAO3D,CACKsnC,GACH3S,GAAeC,GAAwB55B,GAE3C,EACAd,UAAW,CACTif,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,GACV26B,GAAav6B,EAAKyB,WACzB,IAAK84B,EAEH,YADA36B,EAAIoB,SAGN,MAAMmW,EAAUmE,GAAW1b,IACrB,MAAEvB,GAAUk8B,EACZzd,EAAqBze,EAAM6D,OAAO4a,mBACxC,GAAI1X,IAAe,CACjB,MAAQ/G,MAAOutB,GAAW2O,EACpBgS,EAAcP,GAAkB9qC,MAAMqrB,qBAAqBX,IAAWogB,GAAkB9qC,MAAM0pB,0BAA0BgB,GAC9H,IAAI4gB,EAAa,KACjB,GAAID,IAAiB3gB,EAAOxjB,QAASwjB,EAAO3F,UAC1C,GAAI+lB,GAAkB9qC,MAAM2pB,iBAAiBe,EAAO1rB,MAAO,CACzD,IAAIusC,GAAiB,EACrB,IAAK,MAAMja,KAAS5G,EAAO1rB,KAAKA,KAC9B,GAAI8rC,GAAkB9qC,MAAMwrC,cAAcla,GAAQ,CAChDia,GAAiB,EACjB,KACF,CAEFD,EAAaC,EAAiB7gB,EAAO1rB,KAAO0rB,EAAO1rB,KAAKA,IAC1D,MACEssC,EAAaR,GAAkB9qC,MAAMkD,oBAAoBwnB,EAAO1rB,MAGpE8oB,GACE,SACA7R,EACA2F,EACA0vB,GAAcR,GAAkB9qC,MAAMkD,oBACpC4nC,GAAkB9qC,MAAMmD,eAAeunB,EAAQ2gB,EAAc,GAAK,CAAC7mB,MAGzE,MACEyH,GAAkBhW,EAAS2F,GAE7Bld,EAAIoB,QACN,GAEFqd,MAAM,EACNuF,aAAc,CACZikB,MAAM,EACNS,oBAAoB,GAEtB7mC,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,gCACbkiB,mBAAoB,+CAGxB5iB,MAAO7B,EAAqBC,KAAO,6BAErC,SAAS+sC,GAAkBrsC,GACzB,OAAQA,EAAKe,MACX,IAAK,sBACL,IAAK,qBACL,IAAK,0BACL,IAAK,cACL,IAAK,eACL,IAAK,qBACH,OAAOshB,GACT,IAAK,kBACH,OAAO,EACT,QACE,OAAO,EAEb,CAGA,IAAIsqB,GAAoBptC,EAAQ,yCAC5BqtC,GAAuBrtC,EAAQ,+CAC/BstC,GAAiB,CACnBthC,KAAAA,CAAM3L,GACJ,MAAM,KACJI,EACAsF,KAAK,KAAEf,IACL3E,EACEm7B,EAAW/6B,EAAK+6B,SAChB7a,EAAO6a,EAAS7zB,QAAQ,aAAc,IAAI8zB,OAC1CvzB,EAAQzH,EAAKV,KAAKmI,OAASszB,EAAS56B,OAAS+f,EAAK/f,QACxD,IAAID,GAAO,EAAI0sC,GAAqB3R,iBAAiB12B,EAAM2b,EAAMzY,EAAOA,EAAQyY,EAAK/f,QACjE,IAAhBD,EAAKC,QAAgBwsC,GAAkBzrC,MAAM2pB,iBAAiB3qB,EAAK,MACrEA,EAAOA,EAAK,GAAGA,MAEjBN,EAAI4B,YAAYmrC,GAAkBzrC,MAAMg6B,eAAeh7B,GAAM,EAAM,UACrE,EACA0jB,aAAc,CACZkH,WAAW,EACXqQ,YAAY,GAEdz5B,aAAc,CACZ,CACEC,YAAa,qBACbC,YAAa,6FACbkiB,mBAAoB,wDAMtBgpB,GAAoBvtC,EAAQ,yCAC5BwtC,GAAuBxtC,EAAQ,+CAC/BytC,GAAiB,CACnBzhC,KAAAA,CAAM3L,GACJ,MAAM,KACJI,EACAsF,KAAK,KAAEf,IACL3E,EACEm7B,EAAW/6B,EAAK+6B,SAChB7a,EAAO6a,EAAS7zB,QAAQ,aAAc,IAAI8zB,OAC1CvzB,EAAQzH,EAAKV,KAAKmI,OAASszB,EAAS56B,OAAS+f,EAAK/f,QACxD,IAAID,GAAO,EAAI6sC,GAAqB9R,iBAAiB12B,EAAM2b,EAAMzY,EAAOA,EAAQyY,EAAK/f,QACjE,IAAhBD,EAAKC,QAAgB2sC,GAAkB5rC,MAAM2pB,iBAAiB3qB,EAAK,MACrEA,EAAOA,EAAK,GAAGA,MAEjBN,EAAI4B,YAAYsrC,GAAkB5rC,MAAMg6B,eAAeh7B,GAAM,GAC/D,EACA0jB,aAAc,CACZkH,WAAW,EACXqQ,YAAY,GAEdz5B,aAAc,CACZ,CACEC,YAAa,qBACbC,YAAa,+EACbkiB,mBAAoB,wDAMtBmpB,GAAoB1tC,EAAQ,yCAC5B2tC,GAAuB3tC,EAAQ,+CAC/B4tC,GAAsBlvC,EAAQsB,EAAQ,6DACtC6tC,GAAenvC,EAAQsB,EAAQ,gDAC/B8tC,GAAgB,kCAChBC,GAA2B,wEAC3BC,GAAgB,CAClB7uC,OAAAA,CAAQkB,IACN,EAAIstC,GAAqB5sC,cAAcV,IACvC,EAAIstC,GAAqB3sC,gBAAgBX,IACzC,EAAIstC,GAAqBzsC,uBAAuBb,GAChD,MAAM,KAAEI,GAASJ,EACX4tC,EAAMH,GAAcI,KAAKztC,EAAK+6B,UAAY,MAAM,IAAIr0B,MAAM,GAChE,IAAK,MAAM7G,KAASG,EAAKyB,WACvB,GAAmB,MAAf5B,EAAM4H,OAAgC,mBAAf5H,EAAMkB,MAA4C,UAAflB,EAAMP,MAAyC,kBAArBO,EAAMxB,MAAM0C,MAA4BlB,EAAMxB,MAAMA,QAAUmvC,EAGtJ,MAAM5tC,EAAI0F,IAAIm6B,WACZ5/B,EAAMxB,MACN,gDAAkDivC,IAGtD,IAAK,MAAM9a,KAASxyB,EAAKE,KAAKA,KAC5B,GAAmB,cAAfsyB,EAAMzxB,KACR,MAAMnB,EAAI0F,IAAIm6B,WACZjN,EACA,0DAA4D8a,IAIlE,GAAIttC,EAAKE,KAAKA,KAAKC,OAAS,EAC1B,MAAMP,EAAI0F,IAAIm6B,WACZz/B,EAAKV,KACL,0DAA4DguC,GAGlE,EACApuC,SAAAA,CAAUU,GACR,MAAM,KACJI,EACAsF,KAAK,KAAEf,IACL3E,GACE,SAAEkF,EAAQ,WAAE4oC,GAAenpC,EAAKM,KACtC,IAAI2oC,EAAMH,GAAcI,KAAKztC,EAAK+6B,UAAY,MAAM,IAAM,OACtD/6B,EAAKc,MAAQ,aAAa+E,KAAK2nC,KACjCA,EAAM,UAAYA,GAEpB,MAAMG,EAAY3tC,EAAKE,KAAKA,KAAK,IAC3B,yBAAE0tC,GAA6B1oC,IAC/BuC,GAAQ,EAAIylC,GAAqBW,UAAUtpC,EAAMopC,GACjDhX,GAAM,EAAIuW,GAAqBY,QAAQvpC,EAAMopC,GACnD,IACIhqC,EADAuc,EAAOytB,EAAUtvC,MAErB,GAAIuvC,GAA4BF,GAAwB,OAAVjmC,GAA0B,OAARkvB,EAAc,CAC5E,MAAMoX,EAAc,IAAIZ,GAAoBlvB,QAAQ1Z,EAAK2b,KAAM,CAAEpb,aACjEipC,EAAY/sC,OAAO,EAAGyG,GACtBsmC,EAAY/sC,OAAO21B,EAAKpyB,EAAK2b,KAAK/f,QAClCwD,EAAMoqC,EAAYC,YAAY,CAC5BhmC,OAAQlD,EACRmpC,gBAAgB,IAEC,WAAfP,GAA0C,SAAfA,IAC7BxtB,GAAQ,0BACOvc,EAAIuqC,YACA,WAAfR,IACF/pC,OAAM,GAGZ,CACA,MAAMwqC,EAAaP,IAA2B9oC,EAAU,CACtDspC,YAAa,KAAKhB,GAAanvB,QAAQowB,SAASvpC,GAAY0oC,IAC5DttB,OACAvc,QAEEwqC,IACGnuC,EAAKc,IAKCmsC,GAAkB/rC,MAAMyX,aAAa3Y,EAAKc,KACnDuE,GAAmBkd,cACjB,OACA0qB,GAAkB/rC,MAAM2C,kBACtB,CAACopC,GAAkB/rC,MAAMotC,uBAAuBtuC,EAAKc,MACrDmsC,GAAkB/rC,MAAME,cAAc+sC,KAI1C9oC,GAAmBkd,cACjB,OACA0qB,GAAkB/rC,MAAMsiB,oBAAoB,QAAS,CACnDypB,GAAkB/rC,MAAMuiB,mBACtBzjB,EAAKc,KACL,EAAIosC,GAAqB7b,eAAe9sB,EAAM4pC,EAAY,aAlBhE9oC,GAAmBkd,cACjB,OACA0qB,GAAkB/rC,MAAM2C,kBAAkB,GAAIopC,GAAkB/rC,MAAME,cAAc+sC,MAsB1FvuC,EAAIoB,QACN,EACA4iB,aAAc,CACZvF,MAAM,EACNwpB,MAAM,EACN1M,YAAY,EACZmN,oBAAoB,GAEtB7mC,WAAY,CAAC,GAIX8sC,GAAoBhvC,EAAQ,yCAC5BivC,GAAuBjvC,EAAQ,+CAC/BkvC,GAAc,CAChB/vC,OAAAA,CAAQkB,IACN,EAAI4uC,GAAqBrrB,aAAavjB,IACtC,EAAI4uC,GAAqBluC,cAAcV,IACvC,EAAI4uC,GAAqBjuC,gBAAgBX,IACzC,EAAI4uC,GAAqBhuC,oBAAoBZ,GAC7CD,EAAoBC,GACpB28B,GAAqB38B,GACrB,MAAM,KAAEI,GAASJ,EACXuX,EAAUgD,GAAmBva,GACnC,IAAKI,EAAKE,KAAKA,KAAKC,OAClB,MAAMP,EAAI7B,IAAI,QAAQgC,oBAAoB,wCAE5C04B,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,MACjE,EACAd,UAAWkf,GAAkB,CAC3BC,KAAM,CACJR,KAAAA,CAAMje,GACCyb,GAAkBzb,EAAI7B,IAAI,UAI/B2wC,GAA4B9uC,GAC5BsiB,GAAYtiB,IAJVA,EAAIoB,QAKR,EACAmd,IAAAA,CAAKve,GACH,MAAM+6B,EAAU/6B,EAAI7B,IAAI,QAClB2oC,EAAkB5B,GAAellC,GACvC0iB,GAAU1iB,GACVwtB,GAA0BuN,GAC1B/6B,EAAIwiB,aAAaskB,EAAgB1b,YACjCprB,EAAI4B,YACF+sC,GAAkBrtC,MAAMkD,oBACtBqQ,GACE,aACAotB,GAAkB6E,EAAgB1iB,eAGtC,GAAG3B,MACP,GAEF/D,IAAK,CACHT,KAAAA,CAAMje,GACJ8uC,GAA4B9uC,EAC9B,EACAue,IAAAA,CAAKve,GACHA,EAAIoB,QACN,KAGJS,WAAY,CAAC,EACbC,aAAc,CACZ,CACEE,YAAa,sEACbkiB,mBAAoB,4CAGxB5iB,MAAO7B,EAAqBC,KAAO,0BAErC,SAASovC,GAA4B9uC,GACnC,IAAK,MAAMk+B,KAAYl+B,EAAI7B,IAAI,iBACzB+/B,EAASnoB,cACX+4B,GAA4B5Q,GAGhC,MAAMpD,EAAcrf,GAAkBzb,EAAI7B,IAAI,SAC1C28B,GACF/e,GAAwB+e,GAAa,EAEzC,CAGA,IAAIiU,GAAe,CACjBnvC,SAAUH,EAAqBG,SAC/B,UAAWY,EACX,UAAWk6B,GACX,WAAYQ,GACZ,UAAWW,GACX,UAAWK,GACX,WAAY2K,GACZ,WAAYI,GACZ,YAAaiE,GACb,SAAUC,GACV,WAAYhE,GACZ,QAAStE,GACT,iBAAkB2E,GAClB,gBAAiBa,GACjB,eAAgBS,GAChB,OAAQI,GACR,OAAQM,GACR,WAAY8B,GACZ,QAASG,GACT,cAAeM,GACf,QAASI,GACT,WAAY7oB,GACZ,WAAYipB,GACZ,WAAYU,GACZ,WAAYG,GACZ,UAAWO,GACX,QAASkB,IAIPG,GAAgB,CAClB1vC,UAAW,CACT2e,KAAAA,CAAMgxB,GACJ,MAAMA,EAAM9uC,oBACV,6CAEJ,IAKA+uC,GAAkB,CACpB5vC,UAAW,CACTif,IAAAA,CAAK4wB,GACHA,EAAQ/tC,QACV,IAKAguC,GAAsB,CACxB9vC,UAAW,CACT2e,KAAAA,CAAM9E,GACJ,MAAMA,EAAKhZ,oBACT,wDAEJ,IAKAkvC,GAAwB,CAC1B/vC,UAAW,CACTif,IAAAA,CAAK+wB,GACCjqC,KACF4b,GAAQquB,EAAa,KAAKA,EAAalvC,KAAK3B,SAE9C6wC,EAAaluC,QACf,IAKAmuC,GAAoB5vC,EAAQ,yCAC5B6vC,GAAuB7vC,EAAQ,+CAC/B8vC,GAAuC,IAAI/7B,QAC3Cg8B,GAAmB,CACrB5wC,OAAAA,CAAQud,GACN,MAAMub,EAASjB,GAAUta,EAAG/B,YACtBq1B,EAzqJV,SAAsBx3B,GACpB,IAAIse,EAAUte,EACd,GACEse,EAAUA,EAAQnc,iBACbmc,IAAYC,GAAQD,IAC3B,OAAOA,CACT,CAmqJsBmZ,CAAahY,GAAUvb,GACnCwzB,GAAaF,GAAaA,EAAU5c,iBAAiB,CAAEC,QAAQ,IACrE,GAAI4E,IAqCR,SAAoBvb,EAAIwzB,GACtB,OAAQxzB,EAAGjc,KAAKe,MACd,IAAK,sBACH,OAAO0uC,IAAcxzB,EAAGjc,KAAK0vC,QAC/B,IAAK,qBACL,IAAK,0BACL,IAAK,eACH,OAAO,EACT,QACE,OAAO,EAEb,CAhDmB9L,CAAW3nB,EAAIwzB,GAAY,OAC1C,GAAIF,IAAcA,EAAUhI,sBAAwBgI,EAAU5c,oBAAgD,WAA1B4c,EAAUvvC,KAAK7B,QACjG,OAEF,MAAM,KAAE6B,GAASic,EACX/Z,EAAQlC,EAAKkC,QAAU,CAAC,EACxBzD,EAAQyD,EAAM5C,KAAO2c,EAAGjc,KAAKqX,IAAI/X,OAASk7B,GAAiB+U,GAAaA,EAAUvvC,KAAKie,QAAUkxB,GAAkBjuC,MAAMm/B,aAC7HkP,EAAUr1B,WAAW3H,IAAI,OAASg9B,EAAUr1B,WAAWnc,IAAI,OAASwxC,EAAUr1B,WAAWnc,IAAI,SAC3FwxC,EAAUvvC,KAAKV,KAAO6vC,GAAkBjuC,MAAMyuC,qBAAqB1zB,EAAGjD,SAAWm2B,GAAkBjuC,MAAMyX,aAAasD,EAAGjD,OAAO3B,IAAM4E,EAAGjD,OAAO3B,GAAG/X,KAAO6vC,GAAkBjuC,MAAM0uC,eAAe5vC,IAASmvC,GAAkBjuC,MAAMyX,aAAa3Y,EAAKnC,KAAOmC,EAAKnC,IAAIyB,KAAO,aAC/Q,GAAIk7B,GAAiB+U,MAAe,EAAIH,GAAqBx3B,aAAa23B,EAAUr1B,aAAe,YAAYrU,KAAK0pC,EAAUvvC,KAAKV,OAASwW,GAAcy5B,EAAUr1B,WAAY,WAAapE,GAAcy5B,EAAUr1B,WAAY,cAAgBpE,GAAcy5B,EAAUr1B,WAAY,QACnR,OAEF,MAAM,UACJjW,EACAY,MAAM,SAAEC,IACNO,GAAmBC,IAAIf,KACrB4S,EAAUmE,GAAWW,GAC3B,IAAI4zB,EAAqBR,GAAqBtxC,IAAIoZ,GAC7C04B,IACHA,EAAqC,IAAIvnC,IACzC+mC,GAAqB7mC,IAAI2O,EAAS04B,IAEpC,MAAMhK,EAAQgK,EAAmB9xC,IAAIU,GACrC,IAAI4Y,EAAK,QACK,IAAVwuB,EACFgK,EAAmBrnC,IAAI/J,EAAO,GAE9B4Y,EAAK,IAAIwuB,IAEX3jC,EAAMiV,QAAUA,EAChBjV,EAAM2tB,YAAa,EAAIuf,GAAqB/jB,eAC1CpnB,EACAa,EACA,GAAGqS,EAAQE,MAAM5Y,EAAQ4Y,IAE7B,GAcF,SAASmjB,GAAiBziB,GACxB,QAAOA,GAAQA,EAAMyiB,kBACvB,CAGA,IAAIsV,GAAuBvwC,EAAQ,+CAC/BwwC,GAA6B,CAC/BrxC,OAAAA,CAAQsxC,GACN,MAAM,KAAEhwC,GAASgwC,GACX,OAAEhoC,GAAWhI,GACb,MAAE3B,GAAU2J,EACZioC,GAAY,EAAIH,GAAqBz2B,kBAAkB22B,EAAY3xC,GACzE,GAAI4xC,EAAW,CACbjwC,EAAKkC,QAAU,CAAC,EAChBlC,EAAKkC,MAAM+tC,UAAYA,EACvB,MAAMC,EAAOF,EAAW1qC,IAAIf,KAAKG,SAASC,MAAMurC,KAC3CA,EAAKj7B,SAASg7B,IACjBC,EAAK/rC,KAAK8rC,EAEd,CACF,EACA/wC,UAAW,CACTif,IAAAA,CAAK6xB,GACH,MAAM,KAAEhwC,GAASgwC,GACX,MAAE9tC,GAAUlC,EACZiwC,EAAY/tC,GAAO+tC,UACrBA,IACFjwC,EAAKgI,OAAO3J,MAAQ4xC,EAExB,IAKAE,GAAoB5wC,EAAQ,yCAC5B6wC,GAAY/sC,OAAO,4BACnBgtC,GAAehtC,OAAO,gCACtBitC,GAAsB,CACxB5xC,OAAAA,CAAQ6xC,GACN,MAAM,KAAEvwC,GAASuwC,GACX,UAAEpuC,EAAS,SAAEC,GAAaH,EAASjC,EAAK3B,OACxC8D,IAAcnC,EAAKw/B,QAAUgR,GAAQpuC,OACxCpC,EAAKkC,QAAU,CAAC,GAAGkuC,IAAatZ,GAC/B,QACA,EACA3c,GAAmBo2B,QACnB,EACAvwC,EAAK3B,MAAM6D,OAsEnB,SAA4BquC,GAC1B,MAAME,EAAmBF,EAAYvwC,KAAKkC,MAC1C,IAAIojB,EAAOirB,EAAYrS,iBACvB,KAAO5Y,EAAKtlB,MAAM,CAChB,MAAM0wC,EAAcn0B,GAClB+I,EACA,WAEF,GAAoB,OAAhBorB,EAEG,IAAoB,IAAhBA,GAAgD,IAAhBA,GAAmD,IAAhBA,EAC5E,OAAOD,EAAiBJ,IAAgB,EAExC,KACF,CALE/qB,EAAOA,EAAK4Y,gBAMhB,CACA,IAAK5Y,EAAKtlB,MAAQmwC,GAAkBjvC,MAAMoZ,UAAUi2B,EAAYr2B,YAC9D,OAAOu2B,EAAiBJ,IAAgB,EAE1C,IAAIx5B,EAAO05B,EAAYlG,iBACvB,KAAOxzB,EAAK7W,MAAM,CAChB,MAAM0wC,EAAcn0B,GAClB1F,EACA,aAEF,GAAoB,OAAhB65B,EAEG,IAAoB,IAAhBA,GAAgD,IAAhBA,GAAmD,IAAhBA,EAC5E,OAAOD,EAAiBJ,IAAgB,EAExC,KACF,CALEx5B,EAAOA,EAAKwzB,gBAMhB,CACA,IAAKxzB,EAAK7W,MAAQmwC,GAAkBjvC,MAAMoZ,UAAUi2B,EAAYr2B,YAC9D,OAAOu2B,EAAiBJ,IAAgB,EAEnCI,EAAiBJ,IAAgB,CAC1C,CAzGMM,CAAmBJ,GAEvB,EACArxC,UAAW,CACTif,IAAAA,CAAKoyB,GACH,MAAM,KAAEvwC,GAASuwC,GACX,MAAElyC,GAAU2B,GACZ,UAAEmC,EAAS,SAAEC,EAAQ,mBAAE0a,GAAuB7a,EAAS5D,GAC7D,GAAI8D,GAAaquC,GAAQpuC,GAEvB,YADAmuC,EAAYvvC,SAGd,MAAM0/B,EAASz7B,IACT07B,EAAS9f,GAAQ0vB,GACjBruC,EAAQlC,EAAKkC,OAAS,CAAC,EACvB0uC,EAAc1uC,EAAMkuC,IACpBS,EAAenQ,GAAUv+B,GAAanC,EAAKw/B,OAC3CsR,EAASD,EAAe7wC,EAAKw/B,OAAS,YAAc,WAAax/B,EAAKw/B,OAAS,OAAS,OACxFuD,EAAalmB,GAAqBC,GAClCi0B,EAAc7uC,EAAMmuC,IACtBluC,GAAa0uC,EACflQ,CAAM,GAAGxrB,KAAiB27B,GAAQ1uC,MAEd,IAAhB2uC,GACErQ,GAAUqC,GACZpC,CAAM,MAERr8B,GAAMisC,EAAa,KACM,IAAhBQ,EACTzsC,GAAMisC,EAAa,KAEd7P,GAAQC,CAAM,IACnBr8B,GAAMisC,EAAa,KAEjB7P,GACFC,CAAM,GAAGlsB,GAAYq8B,EAAQzyC,KACzB0kC,GACFlgB,GAAS0tB,EAAaK,IAGxB5nB,GACE,SACA1N,GAAWi1B,GACXlyC,EAAM6D,OAAO4a,mBACbqzB,GAAkBjvC,MAAMkD,oBACX,SAAX0sC,EAAoBr8B,GAClB,OACA07B,GAAkBjvC,MAAMkT,iBACtBsR,GACA5C,GAAwB8tB,IACxB,GAEFvyC,GACEoW,GACF,OACAiR,GACArnB,EACAykB,GAAwB8tB,OAMlC3wB,GAAaswB,GACbA,EAAYvvC,QACd,IAyCJ,SAASwvC,GAAQnyC,GACf,OAAgB,MAATA,IAA2B,IAAVA,CAC1B,CAGA,IAAI2yC,GAAoBzxC,EAAQ,yCAC5B0xC,GAAiD,IAAI39B,QACrD49B,GAAgC,CAClC7wC,OAAAA,CAAQiB,GACN,MAAQhC,KAAMb,GAAU6C,EAAWtB,KACnC,IAAIsB,EAAWsX,MAAMu4B,WAAW1yC,IAEzB,QADCA,EACN,CACE,IAAIuyC,GAAkB9vC,MAAMmpB,mBAAmB/oB,EAAW0X,UAAWg4B,GAAkB9vC,MAAMyX,aAAarX,EAAW0X,OAAOyL,WAAiD,WAApCnjB,EAAW0X,OAAOyL,SAASnlB,KAGlK,MAAMgC,EAAWvB,oBACf,qDAHFuB,EAAW4Y,WAAW1Y,YAAYwvC,GAAkB9vC,MAAMI,WAAW,WAMlE,CAEX,EACA5C,OAAAA,CAAQ4C,GACN,MAAQhC,KAAMb,GAAU6C,EAAWtB,KAC/BsB,EAAWsX,MAAMu4B,WAAW1yC,KAClB,YAAVA,EACF84B,GAAmBj2B,GACA,YAAV7C,IACO0b,GAAmB7Y,GAC3B4Z,gBAAiB,EACzBqc,GAAmBj2B,IAEvB,EACApC,SAAAA,CAAUoC,GACR,MAAQhC,KAAMb,GAAU6C,EAAWtB,KACnC,IAAIsB,EAAWsX,MAAMu4B,WAAW1yC,GAChC,OAAQA,GACN,IAAK,UACCwG,IACF3D,EAAWE,YACTwvC,GAAkB9vC,MAAMmD,eAAeiQ,GAAc,WAAY,KAGnEhT,EAAWE,YACTwvC,GAAkB9vC,MAAMkT,iBAAiBsR,GAAiBsrB,GAAkB9vC,MAAMI,WAAW,aAGjG,MACF,IAAK,UACH,GAAI2D,IACF3D,EAAWE,YACTwvC,GAAkB9vC,MAAMmD,eACtB2sC,GAAkB9vC,MAAM6nB,wBACtB,GACAioB,GAAkB9vC,MAAMslB,eAAe,CACrCwqB,GAAkB9vC,MAAMkwC,eACtBJ,GAAkB9vC,MAAM8iC,cAAcgN,GAAkB9vC,MAAMI,WAAW,SAAU,CACjF0vC,GAAkB9vC,MAAME,cAAc,gDAK9C,SAGC,CACL,MAAM+V,EAAUmE,GAAWha,GACrBg3B,EAAWlC,GAAY90B,GAC7B,IACI+vC,EADAC,EAAuBL,GAA+BlzC,IAAIoZ,GAE1Dm6B,EACFD,EAASC,EAAqBvzC,IAAIu6B,IAElCgZ,EAAuC,IAAIhpC,IAC3C2oC,GAA+BzoC,IAAI2O,EAASm6B,IAEzCD,IACHA,EAASC,EAAqBzuC,KAC9ByuC,EAAqB9oC,IAAI8vB,EAAU+Y,GACnCroB,GACE,SACA7R,EACAmhB,EAASt4B,KAAKkC,OAAO4a,mBACrBk0B,GAAkB9vC,MAAMkD,oBACtB4sC,GAAkB9vC,MAAMmD,eAAeiQ,GAAc,oBAAqB,CACxEoR,GACAsrB,GAAkB9vC,MAAM0S,eAAey9B,QAK/C/vC,EAAWE,YACTwvC,GAAkB9vC,MAAMmD,eAAeiQ,GAAc,kBAAmB,CACtEoR,GACAsrB,GAAkB9vC,MAAM0S,eAAey9B,KAG7C,EAEN,GAIEE,GAAoB,CACtB7yC,OAAAA,CAAQ8yC,GACN,IAAKA,EAAUxxC,KAAK4yB,OAClB,MAAM4e,EAAUzxC,oBACd,yDAGJ04B,GACEte,GAAmBq3B,GACnBA,EAAUxxC,KACVwxC,EAAUxxC,KAAKE,KAEnB,EACAhB,UAAW,CACTif,IAAAA,CAAKqzB,GACH,MAAM,KAAExxC,GAASwxC,EACX9Q,EAASz7B,IACXjF,EAAK7B,QAAU6B,EAAK7B,UAAYuiC,EAAS,SAAW,UACtD8Q,EAAUxwC,SAGR0/B,IAEF/Z,GAAgB3mB,EAAM,OAAQ2uB,IAC9B6iB,EAAU3e,oBAAoB7yB,EAAKE,MAEvC,IAKAuxC,GAAoBlyC,EAAQ,yCAC5BmyC,GAAuBnyC,EAAQ,+CAI/BoyC,IADoBpyC,EAAQ,yCACLA,EAAQ,gDAC/BqyC,GAAwB,CAC1BlzC,QAAS,CACPmf,KAAAA,CAAMje,IACJ,EAAI+xC,GAAqBxuB,aAAavjB,IACtC,EAAI+xC,GAAqBrxC,cAAcV,GACvC,MAAMM,EAAON,EAAI7B,IAAI,QAGrB,GAFAic,GAAa9Z,GACbuzB,GAAsBvzB,EAAM,KACvB,EAAIyxC,GAAqBE,eAAejyC,GAC3C,MAAMA,EAAI7B,IAAI,QAAQgC,oBAAoB,2CAE9C,GAEFb,UAAW,CACT2e,KAAAA,CAAMje,GACAqF,KACFid,GAAYtiB,EAEhB,EACAue,IAAAA,CAAKve,GACCqF,MACFqd,GAAU1iB,GACVwtB,GAA0BxtB,EAAI7B,IAAI,SAEtC,IAKA+zC,GAAoBvyC,EAAQ,yCAC5BwyC,GAAuBxyC,EAAQ,+CAC/ByyC,GAAe/zC,EAAQsB,EAAQ,gDAC/B0yC,GAAqB5uC,OAAO,0BAC5B6uC,GAAqB,CACvBxzC,QAAS,CACPmf,KAAAA,CAAMje,GAIJ,IAHA,EAAImyC,GAAqBI,6BAA6BvyC,GACtD28B,GAAqB38B,KACA,EAAImyC,GAAqBK,gBAAgBxyC,GAC3C,CACjB,MAAM+9B,EAAUloB,GAAW7V,GAC3B,GAAI+9B,GAAW/9B,EAAIgZ,MAAMu4B,WAAWxT,GAClC,MAAM/9B,EAAI7B,IAAI,QAAQgC,oBACpB,kFAAkF49B,yBAA+BA,EAAQ0U,OAAO,GAAGC,cAAgB3U,EAAQj3B,MAAM,SAGrK,MAAM9G,EAAI7B,IAAI,QAAQgC,oBAAoB,6CAC5C,CACA,MAAMoX,EAAUgD,GAAmBva,GAC7B+6B,EAAU/6B,EAAI7B,IAAI,QAClBuiC,EAAW1gC,EAAII,KAAKkC,QAAU,CAAC,EACrC8X,GAAa2gB,GACb1D,GAAmBr3B,EAAK,GACxB6zB,GAAsBkH,EAAS,GAC/B2F,EAAS2R,IAAsBnb,GAC7B,cACA,EACA3f,OACA,EACAmpB,GAEF,MAAM5mB,GAAY,EAAIq4B,GAAqBp4B,gBAAgB/Z,GAC3D,GAAI8Z,EAAU7U,KAAKC,WAAalF,EAAI0F,IAAIf,KAAKM,KAAKC,SAChD2zB,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,WAC1D,CACL,MAAMuyC,EAAoB74B,EAAUE,IAAIC,QAAQ3X,MAChDswC,GACEr7B,EACAvX,EACA2yC,GAAmBtqB,WAAWrN,QAAQsb,QAAQ,IAEhD7wB,GAAmBrF,KAAKkC,MAAM6C,oBAAsBwtC,GAAmBvtC,eAAiButC,GAAmBxtC,sBAAuB,CACpI,CACF,GAEF7F,UAAW,CACT2e,KAAAA,CAAMje,GACJ0E,GAAM1E,GACFqF,KACFid,GAAYtiB,EAEhB,EACAue,IAAAA,CAAKve,GACCqF,IAQV,SAAuBrF,GACrB,MAAM+6B,EAAU/6B,EAAI7B,IAAI,SAClB,KAAEiC,GAASJ,EACjB,IAAI6yC,EAGJ,GAFAnwB,GAAU1iB,GACVwtB,GAA0BuN,GACtBmX,GAAkB5wC,MAAMyW,gBAAgB3X,EAAKV,MAAO,CACtD,MAAMozC,EAAeC,GAAmB/yC,GACxC6yC,EAAgBG,GAAkBhzC,EAAI0F,IAAIf,KAAMmuC,GAAgB5f,IAAyB,EAAIif,GAAqB1gB,eAAezxB,EAAI0F,IAAIf,KAAMmuC,EAAcj9B,GAAW7V,GAC1K,MACE6yC,EAAgBzyC,EAAKV,KAEvB,MAAMuB,EAASb,EAAKc,IACdqW,EAAUmE,GAAW1b,GACrBizC,EAAoB7yC,EAAKkC,MAAM+vC,IAC/Ba,EAAclzC,EAAIgZ,MAAM6C,sBAAsBo3B,GAAmBvzC,MACvEM,EAAIwiB,aACF0vB,GAAkB5wC,MAAMsiB,oBAAoB,QAAS,CACnDsuB,GAAkB5wC,MAAMuiB,mBAAmBqvB,EAAar+B,GAAY,qBAGxE6O,GAA6BnM,GAAS3O,IACpCsa,GAAwB+vB,GACxBp+B,GAAY,qBAAsBq+B,IAEpC,MAAMC,GAAc,EAAIhB,GAAqBp4B,gBAAgB/Z,IAAMga,IAAIC,QAAQ3X,OAAO+lB,YAAYrN,QAAQsb,QAAQ,IAC5G,WAAElS,EAAU,WAAEgH,GAAe+nB,EAAcjO,GAAellC,EAAKmzC,EAAY7c,OAAS,CACxFlS,WAAY,GACZgH,WAAY,IAEd,GAAIhrB,EAAKkC,MAAM2V,gBAAiB,CAC9B,MAAM8tB,EAAcC,GAAiC5hB,GACrD,IAAIgvB,EACJ,GAAIrN,EAAa,CACf,MAAMJ,EAAoBI,EAAYtnC,MACtCsnC,EAAYtnC,MAAQ20C,EAAYpzC,EAAIgZ,MAAM6C,sBAAsB,WAChE,MAAOw3B,GAAerzC,EAAIwiB,aACxB0vB,GAAkB5wC,MAAMsiB,oBAAoB,QAAS,CACnDsuB,GAAkB5wC,MAAMuiB,mBACtBuvB,EAEAzN,MAIN0N,EAAY5wB,MACd,CACA,IAAI6wB,EAAgB7uC,GAClBouC,EACA5Q,GAAkB7d,IAEhBnjB,IACF06B,GAAa37B,EAAKkyC,GAAkB5wC,MAAM6T,gBAAgB,OAAQ+8B,GAAkB5wC,MAAM0S,eAAe,IAAK,OAC9Gs/B,EAAgBpB,GAAkB5wC,MAAMmuB,qBAAqB,IAAKxuB,EAAQqyC,IAE5EloB,EAAW7mB,KACT2tC,GAAkB5wC,MAAMkhC,YACtBqQ,EACAX,GAAkB5wC,MAAMkD,oBAAoB8uC,GAC5CF,GAAaG,GAAcH,IAGjC,MAAWnyC,GACT06B,GACE37B,EACAyE,GACEouC,EACA5Q,GAAkB7d,GAClBvP,GACE,WACAq9B,GAAkB5wC,MAAM6nB,wBAAwB,GAAI+oB,GAAkB5wC,MAAMslB,eAAe,KAC3FsrB,GAAkB5wC,MAAME,cACtBgqB,GACEjU,EACAnX,EAAKc,IAAIoB,OAAOS,QAEhB,QAGJ6Y,GAAqBrE,MAI3BsQ,GAAoBtQ,IAEpB6T,EAAW7mB,KACTgvC,GAAcV,EAAe5Q,GAAkB7d,KAGnD,IAAK,MAAM+C,KAAennB,EAAIizB,oBAAoB7H,GAChDjE,EAAY1E,MAEhB,CAnGQ+wB,CAAcxzC,GAoGtB,SAAsBA,GACpB,MAAM+c,EAAarB,GAAW1b,IACxB,KAAEI,GAASJ,EAEXizC,EADQ7yC,EAAKkC,MACa+vC,IAC1BtR,EAAS9f,GAAQjhB,IACjB,KAAE2E,GAAS3E,EAAI0F,IACfq4B,EAAUmU,GAAkB5wC,MAAMyX,aAAa3Y,EAAKV,MAAQU,EAAKV,KAAKA,KAAOwyC,GAAkB5wC,MAAMyW,gBAAgB3X,EAAKV,MAAQU,EAAKV,KAAKjB,MAAQ,MACpJq0C,EAAeC,GAAmB/yC,GAClC8Z,GAAY,EAAIq4B,GAAqBp4B,gBAAgB/Z,GACrDyzC,EAAe35B,EAAUE,IAAIC,QAAQ3X,MAAM+lB,WAC3CwqB,EAAgBa,GACpB/uC,EACAmuC,EACAW,EAAa1wB,MACbgb,GAEIoV,EAAcM,EAAaz4B,QAAQsb,QAAQ,GAcjD,GAbI6c,GACFQ,GAAoB3zC,EAAKmzC,EAAa,GAAGt9B,GAAW7V,IAAQ,cAAe,CACzE4zC,SAAU95B,EAAU7U,KAAKC,WAAaP,EAAKM,KAAKC,SAChD6X,aACA+1B,eACAG,sBAGJlS,CAAM,IAAG,EAAIoR,GAAqB0B,aAAalvC,EAAMmuC,EAAcW,EAAarjB,SAAU,GAAG2N,gBAr5N/F,SAAqB5lB,EAAOoK,GAC1B,MAAM/B,EAAQT,GAASrE,GAAWvD,IACd6H,GAAetE,GAAWvD,IAClC5T,KACV,GAAG2b,GAAe,MAClBqC,EAAK7iB,KACLwgB,GAAe,KAEjBR,GAAcc,EAAO1N,OAAOC,aAAa,KACzCyN,EAAMjc,KAAKge,EAAMzP,OAAOC,aAAa,IACvC,CA44NE+gC,CACE9zC,GACA,EAAImyC,GAAqB0B,aAAalvC,EAAMmuC,EAAcW,EAAajzB,MAAO,GAAGud,YAE/E39B,EAAKc,IAAK,CACZ,MAAMkH,EAASihB,GAEbjpB,EAAKc,IAAIoB,MAAMS,SAEjBqF,EAAOokB,UAAW,EAClBpkB,EAAO8mB,gBAAkB,CAACyc,EAAcltC,IAC/ByzC,GAAkB5wC,MAAMmD,eAAeiQ,GAAc,sBAAuB,CACjFsR,GAA0B2lB,EAAcsH,GACxCx0C,IAGJ2qB,GACE,SACArM,OACA,EACAm1B,GAAkB5wC,MAAMkD,oBACtBqQ,GACE,YACAiR,GACA5C,GAAwB+vB,GACxB7qC,EAAO1G,aAIf,CACA0nB,GACE,SACArM,OACA,EACAm1B,GAAkB5wC,MAAMkD,oBACtB0tC,GAAkB5wC,MAAMmD,eAAeouC,EAAe,CACpD7sB,GAA0BjJ,EAAYk2B,OAI5CjzC,EAAIoB,QACN,CAtKQ2yC,CAAa/zC,EAEjB,IAqKJ,SAAS+yC,GAAmB/yC,GAC1B,MAAM,KACJI,EACAsF,KAAK,KAAEf,IACL3E,EACJ,IAAI8yC,EACJ,GAAIZ,GAAkB5wC,MAAMyW,gBAAgB3X,EAAKV,MAAO,CACtD,MAAM0wB,GAAW,EAAI+hB,GAAqBK,gBAAgBxyC,GAC1D8yC,EAAe1iB,IAAY,EAAI+hB,GAAqBntC,qBAAqBL,EAAMyrB,EACjF,MAAWhwB,EAAKkC,OAAO8V,kBACrB06B,EAAe1yC,EAAKkC,MAAM8V,iBAE5B,IAAK06B,EAAc,CACjB,MAAM/U,EAAUloB,GAAW7V,GAC3B,GAAI+9B,GAAW/9B,EAAIgZ,MAAMu4B,WAAWxT,GAClC,MAAM/9B,EAAI7B,IAAI,QAAQgC,oBACpB,kFAAkF49B,yBAA+BA,EAAQ0U,OAAO,GAAGC,cAAgB3U,EAAQj3B,MAAM,SAGrK,MAAM9G,EAAI7B,IAAI,QAAQgC,oBAAoB,6CAC5C,CACA,OAAO2yC,CACT,CACA,SAASF,GAAar7B,EAASvX,EAAKq2B,GAClC,IAAKA,EAEH,YADA0D,GAAeC,GAAwBh6B,EAAII,OAG7C,IAAKi2B,EAAeC,OAASt2B,EAAII,KAAKmsB,WAAWhsB,OAE/C,YADAs4B,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,OAGjE,MAAMilC,EAAgB1I,GAAqB38B,GACrCigC,EAAuB,IAAIptB,IACjC,GAAIwyB,EAAe,CACjB,MAAM2O,EAAwC,IAAItrC,IAC5CurC,EAA2BA,CAACrpC,EAAOgoB,KACvC,MAAMqH,EAAiBD,GAAwBpH,EAAMxyB,MAC/C8zC,EAAkBF,EAAsB71C,IAAIyM,GAC9CspC,EACFA,EAAgBja,eAAiBia,EAAgBja,eAAetF,OAAOsF,GAEvE+Z,EAAsBprC,IAAIgC,EAAO,CAC/BupC,SAAUvhB,EACVqH,kBAEJ,EAEF,IAAK,MAAMma,KAAe/O,EACxBpF,EAAK/2B,IAAIm8B,EAAc+O,GAAa10C,MAEtC,MAAMk9B,EAAY58B,EAAII,KAAKE,KAAKkb,cAAgBxb,EAAI7B,IAAI,QAAQA,IAAI,QAAU6B,EAAI7B,IAAI,iBACtF,IAAK,MAAMy0B,KAASgK,EAClB,GAAIhK,EAAM7c,aACR,IAAI,EAAIo8B,GAAqBr1B,gBAAgB8V,GAAQ,CACnD,MAAM0K,EAAc+H,EAAcxvB,GAAW+c,IACvCyhB,EAAmBhe,EAAeC,MAAMgH,EAAY59B,MACtD20C,EACEA,EAAiB/d,QAAUgH,EAAYC,QACzCqV,GAAar7B,EAASqb,EAAOyhB,GAE7BJ,EAAyB3W,EAAY1yB,MAAOgoB,GAG9CmH,GAAeC,GAAwBpH,EAAMxyB,MAEjD,KAAO,CACL,MAAMwK,EAAQgoB,EAAMxyB,KAAKkC,MAAMq7B,kBAC/B,IAAI2W,GAAqB,EACzB,IAAK,MAAMz1C,KAAS+L,EAClB,GAAIyrB,EAAeC,MAAM+O,EAAcxmC,GAAOa,MAAO,CACnD40C,GAAqB,EACrB,KACF,CAEEA,EACFL,EAAyBrpC,EAAOgoB,GAEhCmH,GAAeC,GAAwBpH,EAAMxyB,MAEjD,CAGJ,IAAK,MAAM,SAAE+zC,EAAQ,eAAEla,KAAoB+Z,EAAsB3wC,SAC/Dw1B,GAAgBthB,EAAS48B,EAAS/zC,KAAM65B,EAE5C,CACA,MAAM,WAAEp4B,GAAe7B,EAAII,KAC3B,IAAI+/B,EACJ,IAAK,IAAIlrB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAIi9B,GAAkB5wC,MAAMs5B,iBAAiB36B,GAAQ,CACnD,GAAIggC,EAAKttB,IAAI1S,EAAMP,QAAU22B,EAAeC,MAAMr2B,EAAMP,MAAO,CAC7Dq6B,GAAe95B,EAAMxB,OACrB,QACF,CACAwhC,EAAK/2B,IAAIjJ,EAAMP,KACjB,CACIygC,EACFA,EAAqB57B,KAAKtE,EAAMxB,OACvByzC,GAAkB5wC,MAAMpB,uBAAuBD,KACxDkgC,EAAuB,CAAClgC,EAAMxB,OAElC,CACI0hC,GACFtH,GAAgBthB,EAASvX,EAAII,KAAM+/B,EAEvC,CACA,SAASwT,GAAoB3zC,EAAKq2B,EAAgBke,EAAaxpC,GAC7D,GAAI/K,EAAII,KAAKmsB,WAAWhsB,OAAQ,CAC9B,MAAO2U,GAAOlV,EAAII,KAAKmsB,UACjBioB,EAAqBd,GACzB1zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLzc,EAAe5e,GACf88B,GAgBF,YAdAzwB,GACE/Y,EAAKgS,WAGL/c,EAAII,KAAKkC,OAAO4a,mBAChBu3B,GAAmBD,GACnBtC,GAAkB5wC,MAAMu5B,gBAAgB3lB,GAAOg9B,GAAkB5wC,MAAMkT,iBAAiBU,EAAIoP,SAAU4tB,GAAkB5wC,MAAM0S,eAAe,IAAI,GAAQkB,EACzJ8Q,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAW8yC,EAAmB90C,OAI5D,CACA,IAAK22B,EAAeC,OAASvrB,EAAK6oC,SAAU,CAC1C,MAAM12B,EAAqBld,EAAII,KAAKkC,OAAO4a,mBACrCs3B,EAAqBd,GACzB1zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLzc,EAAe5e,GACf88B,GAEIzN,EAAkB5B,GAAellC,GACnC8mC,EAAgB1b,WAAW7qB,QAC7B6oB,GACE,SACAre,EAAKgS,WACLG,EACA4pB,EAAgB1b,YAGpB,IAAIspB,EAAkBzS,GAAkB6E,EAAgB1iB,YAgBxD,OAfI,EAAI+tB,GAAqBr1B,gBAAgB9c,KAC3C00C,EAAkB7/B,GAAY,UAAW6/B,SAE3C5wB,GACE/Y,EAAKgS,WACLG,EACAu3B,GAAmBD,GACnBE,EACA1uB,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAW8yC,EAAmB90C,OAI5D,CACA,MAAMugC,EAAuB,IAAIptB,IAC3BwyB,EAAgB1I,GAAqB38B,GAC3C,GAAIqlC,EAAe,CACjB,MAAMzI,EAAY58B,EAAI7B,IAAI,iBACpBw2C,EAAoC,IAAIjsC,IACxCksC,EAAsCA,CAAChqC,EAAOq7B,KAClD,MAAMrT,EAAQgK,EAAUqJ,GACxB,IAAI7a,EAAaupB,EAAkBx2C,IAAIyM,IAAQwgB,WAQ/C,OAPKA,IACHA,EAAa,GACbupB,EAAkB/rC,IAAIgC,EAAO,CAC3BsS,mBAAoB0V,EAAMxyB,KAAKkC,OAAO4a,mBACtCkO,gBAGGma,GACL3I,EACAqJ,EACAZ,EACAja,EACAiL,EAAeC,MAChB,EAEH,IAAK,MAAM8d,KAAe/O,EACxBpF,EAAK/2B,IAAIm8B,EAAc+O,GAAa10C,MAEtC,IAAK,IAAIuV,EAAI,EAAGA,EAAI2nB,EAAUr8B,OAAQ0U,IAAK,CACzC,MAAM2d,EAAQgK,EAAU3nB,GACxB,GAAI2d,EAAM7c,aACR,IAAI,EAAIo8B,GAAqBr1B,gBAAgB8V,GAAQ,CACnD,MAAM0K,EAAc+H,EAAcxvB,GAAW+c,IACvCiiB,EAAkBxe,EAAeC,MAAMgH,EAAY59B,MACrDm1C,IACEvX,EAAYC,QACdtoB,EAAI2/B,EAAoCtX,EAAY1yB,MAAOqK,GAE3D0+B,GACE/gB,EACAiiB,EACA,GAAGN,KAAejX,EAAY59B,OAC9BqL,GAIR,MAAW6nB,EAAMxyB,KAAKkC,OAAOq7B,oBAC3B1oB,EAAI2/B,EACFhiB,EAAMxyB,KAAKkC,MAAMq7B,kBACjB1oB,GAIR,CACA,IAAK,MACHrK,GACA,mBAAEsS,EAAkB,WAAEkO,MACnBupB,EAAmB,CACtB,MAAMG,EAAQ,GACd,IAAK,MAAMj2C,KAAS+L,EAAO,CACzB,MAAM0yB,EAAc+H,EAAcxmC,GAC5Bw1C,EAAmBhe,EAAeC,MAAMgH,EAAY59B,MAC1D,IAAK20C,EAAkB,SACvB,MAAMU,EAAuBrB,GAC3B1zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLuB,EAAiB58B,GACjB,GAAG88B,KAAejX,EAAY59B,QAEhCo1C,EAAMvwC,KAAK2tC,GAAkB5wC,MAAMuiB,mBAAmB4Y,GAAqBa,KAC3ExZ,GACE/Y,EAAKgS,WACLG,EACAu3B,GAAmBM,GACnBtY,GAAqBa,GACrBtX,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAWqzC,EAAqBr1C,OAG9D,CACA0pB,GAAa,SAAUre,EAAKgS,WAAYG,EAAoB,CAC1Dg1B,GAAkB5wC,MAAMsiB,oBAAoB,MAAOkxB,MAChD1pB,GAEP,CACF,CACA,MAAM0P,EAAc96B,EAAII,KAAKE,KAAKgC,OAAOiV,QACzC,GAAIujB,IAAgBmF,EAAKttB,IAAI,aAC3BstB,EAAK/2B,IAAI,WACLmtB,EAAeC,MAAMnb,SAAS,CAChC,MAAM65B,GAA0B,EAAI7C,GAAqB0B,aACvD7zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLzc,EAAeC,MAAMnb,QAAQ1D,GAC7B,GAAG88B,aAELzwB,GACE/Y,EAAKgS,gBACL,EAEA03B,GAAmBO,GACnB9C,GAAkB5wC,MAAMmD,eAAeytC,GAAkB5wC,MAAMI,WAAWo5B,EAAYp7B,MAAO,CAAComB,KAC9FE,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAWszC,EAAwBt1C,OAGjE,CAEF,MAAM,WAAEmC,GAAe7B,EAAII,KACrB2hC,EAAc,GACpB,IAAIL,EACJ,IAAK,IAAIzsB,EAAIpT,EAAWtB,OAAQ0U,KAAO,CACrC,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAIi9B,GAAkB5wC,MAAMs5B,iBAAiB36B,GAAQ,CAEnD,IADyBo2B,EAAeC,MAAMr2B,EAAMP,OAC3BugC,EAAKttB,IAAI1S,EAAMP,MAAO,SAE/C,GADAugC,EAAK/2B,IAAIjJ,EAAMP,MACXgiC,EAAa,CACfA,EAAYn9B,KAAK0P,GAAiBhU,EAAMP,KAAMO,EAAMxB,QACpD,QACF,CACAsjC,EAAYx9B,KAAKtE,EACnB,MAAWyhC,EACTA,EAAYn9B,KAAK2tC,GAAkB5wC,MAAMwgC,cAAc7hC,EAAMxB,QAE7DijC,EAAc,CAACwQ,GAAkB5wC,MAAMwgC,cAAc7hC,EAAMxB,OAE/D,CACA,IAAK,MAAMwB,KAAS8hC,EAAYC,UAAW,CACzC,MAAMqS,EAAmBhe,EAAeC,MAAMr2B,EAAMP,MAC9Cq1C,EAAuBrB,GAC3B1zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLuB,EAAiB58B,GACjB,GAAG88B,KAAet0C,EAAMP,QAE1BokB,GACE/Y,EAAKgS,WACL9c,EAAMxB,MAAM6D,OAAO4a,mBACnBu3B,GAAmBM,GACnB90C,EAAMxB,MACNunB,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAWqzC,EAAqBr1C,OAG9D,CACA,MAAMu1C,EAAU,IAAIpiC,IAAI9V,OAAOgV,KAAKskB,EAAeC,QACnD,IAAK,MAAMz3B,KAASohC,EAAMgV,EAAQrgB,OAAO/1B,GACzC,GAAIo2C,EAAQhyC,KAAM,CAChB,MAAMia,EAAqBld,EAAII,KAAKkC,OAAO4a,mBAC3C,IAAIg4B,EAAsBC,GAC1B,GAAIzT,EAAa,CACf,MAAM0T,EAAWp1C,EAAIgZ,MAAM6C,sBAAsB,GAAG04B,YACpD7S,EAAYM,UACZkT,EAAuBr2C,GAAUsV,GAAmBihC,EAAUv2C,GAC9DuqB,GAAa,SAAUre,EAAKgS,WAAYG,EAAoB,CAC1Dg1B,GAAkB5wC,MAAMsiB,oBAAoB,QAAS,CACnDsuB,GAAkB5wC,MAAMuiB,mBAAmBuxB,EAAUnT,GAAkBP,OAG7E,CACA,IAAK,MAAM7iC,KAASo2C,EAAS,CAC3B,MAAMZ,EAAmBhe,EAAeC,MAAMz3B,GACxCk2C,EAAuBrB,GAC3B1zC,EAAI0F,IAAIf,KACRoG,EAAK+nC,aACLuB,EAAiB58B,GACjB,GAAG88B,KAAe11C,KAEpBilB,GACE/Y,EAAKgS,WACLG,EACAu3B,GAAmBM,GACnBG,EAAoBr2C,GACpBmnB,GAA0Bjb,EAAKgS,WAAYhS,EAAKkoC,mBAChDp+B,GACE,UACAqO,GAAwBnY,EAAKkoC,mBAC7Bf,GAAkB5wC,MAAMI,WAAWqzC,EAAqBr1C,OAG9D,CACF,CACF,CACA,SAASg0C,GAA0B/uC,EAAM0wC,EAASx2C,EAAOy2C,GACvD,OAAItC,GAAkBruC,EAAM0wC,GACnBnD,GAAkB5wC,MAAMI,WAAW7C,IAErC,EAAIszC,GAAqB0B,aAAalvC,EAAM0wC,EAASx2C,EAAOy2C,EACrE,CACA,SAAStC,GAAkBruC,EAAM0wC,GAC/B,MAAM,SAAEnwC,GAAaP,EAAKM,KAC1B,OAAOowC,IAAYnwC,GAA2B,MAAfmwC,EAAQ,IAAcjD,GAAa/zB,QAAQk3B,QAAQrwC,EAAU,KAAMmwC,KAAanwC,CACjH,CACA,SAASquC,GAAc97B,KAAO3C,GAC5B,OAAOo9B,GAAkB5wC,MAAMkD,oBAAoBC,GAAegT,KAAO3C,GAC3E,CACA,SAASrQ,GAAegT,KAAO3C,GAC7B,OAAOo9B,GAAkB5wC,MAAMmD,eAAegT,EAAI3C,EAAK8gB,OAAO1rB,SAChE,CACA,SAASuqC,GAAmB/yC,GAC1B,MAAO,CACLA,aACAqiB,2BAA4ByxB,GAEhC,CACA,SAASL,KACP,OAAOjD,GAAkB5wC,MAAM6T,gBAAgB,OAAQ+8B,GAAkB5wC,MAAM0S,eAAe,GAChG,CACA,SAASwhC,KACP,OAAO,CACT,CAGA,IAAIC,GAAoB91C,EAAQ,yCAC5B+1C,GAAuB/1C,EAAQ,+CAC/Bg2C,GAAclyC,OAAO,2BACrBmyC,GAAsB,CACxB92C,QAAS,CACPmf,KAAAA,CAAMje,IACJ,EAAI01C,GAAqBG,wBAAwB71C,GACjD28B,GAAqB38B,GACrB,MAAMuX,EAAUgD,GAAmBva,GAC7B0gC,EAAW1gC,EAAII,KAAKkC,QAAU,CAAC,EAC/By4B,EAAU/6B,EAAI7B,IAAI,QAClB23C,EAAapV,EAASiV,IAAeze,GACzC,QACA,EACA3f,OACA,EACAmpB,GAEFtmB,GAAa2gB,GACb1D,GAAmBr3B,EAAK,GACxB6zB,GAAsBkH,EAAS,GAC/BlC,GAAgBthB,EAASvX,EAAII,KAAM45B,GAAwBh6B,EAAII,OAC/Du4B,GAAoB34B,EAAK81C,EAC3B,GAEFx2C,UAAW,CACT2e,KAAAA,CAAMje,GACJ0E,GAAM1E,EAAK,IACXqgB,GAAargB,GACTqF,KACFid,GAAYtiB,EAEhB,EACAue,IAAAA,CAAKve,GACH,MAAM,KAAEI,GAASJ,EACXsC,EAAQlC,EAAKkC,MACbu+B,EAAWv+B,EAAMqzC,IACjBp+B,EAAUmE,GAAW1b,GACrB+1C,EAAmC,UAAtBzzC,EAAM4X,YACzB,IAAI87B,EAAgB51C,EAAKV,KACrB+1C,GAAkBn0C,MAAMyW,gBAAgBi+B,KAC1CA,GAAgB,EAAIN,GAAqBjkB,eACvCzxB,EAAI0F,IAAIf,KACRouC,GAAmB/yC,GACnBg2C,EAAcv3C,QAGds3C,IACE1wC,IACFI,GAAmBkd,cACjB,OACA8yB,GAAkBn0C,MAAMkD,oBACtBixC,GAAkBn0C,MAAMmD,gBACtB,EAAIixC,GAAqB7B,aAAa7zC,EAAI0F,IAAIf,KAAM6Q,KAAwB,KAC5E,CACEigC,GAAkBn0C,MAAMI,WAAWs0C,EAAct2C,MACjD+1C,GAAkBn0C,MAAME,eAAc,EAAIk0C,GAAqB37B,gBAAgB/Z,GAAK8E,SAASC,MAAM0S,QAM3GhS,GAAmBkd,cACjB,OACA8yB,GAAkBn0C,MAAMkD,oBACtBqQ,GACE,WACA4gC,GAAkBn0C,MAAME,eAAc,EAAIk0C,GAAqB37B,gBAAgB/Z,GAAK8E,SAASC,MAAM0S,IACnGg+B,GAAkBn0C,MAAMI,WAAWs0C,EAAct2C,UAM3D,MAAM,WAAE0kB,EAAU,WAAEgH,GAAe8Z,GACjCllC,OACA,OACA,EACA+1C,EAAa,aAAe,WAExBjhC,EAAO,GACb,IAAImhC,GAAkB,EACtB,GAAI71C,EAAKmsB,WAAWhsB,OAClBuU,EAAKvQ,QAAQnE,EAAKmsB,WACdnI,EAAW7jB,QACb01C,GAAkB,EAClBnhC,EAAKvQ,KAAK09B,GAAkB7d,KAE5B6xB,EAAkB71C,EAAKmsB,UAAUhsB,OAAS,GAAKk1C,GAAkBn0C,MAAMu5B,gBAAgBz6B,EAAKmsB,UAAU,QAEnG,CACL,MAAMwZ,EAAcC,GAAiC5hB,GACjD2hB,GACF3hB,EAAW8xB,OAAO9xB,EAAW2M,QAAQgV,GAAc,GACnDjxB,EAAKvQ,KAAK09B,GAAkB7d,GAAa2hB,EAAYtnC,QAErDqW,EAAKvQ,KAAK09B,GAAkB7d,GAEhC,CACA,GAAI/e,IAAgB,CAClBqd,GAAU1iB,GACVwtB,GAA0BxtB,EAAI7B,IAAI,SAC9BiC,EAAKc,MACF+0C,GAAmC,IAAhBnhC,EAAKvU,QAC3BuU,EAAKvQ,KAAKkxC,GAAkBn0C,MAAM6T,gBAAgB,OAAQsgC,GAAkBn0C,MAAM0S,eAAe,KAEnGc,EAAKvQ,KACHsQ,GACE,WACA4gC,GAAkBn0C,MAAM6nB,wBAAwB,GAAIssB,GAAkBn0C,MAAMslB,eAAe,KAC3F6uB,GAAkBn0C,MAAME,cACtBgqB,GACEjU,EACAnX,EAAKc,IAAIoB,OAAOS,QAEhB,QAGJ6Y,GAAqBrE,MAI3B,MAAM4+B,EAAyB1wC,GAAmBuT,MAAM6C,sBAAsB,gBACxEu6B,EAAiBH,EAAkBphC,GACvC,iBACA+G,GAAqBrE,GACrB2L,GAAwB2d,GACxBmV,EACAP,GAAkBn0C,MAAMopB,gBAAgB5V,IACtCD,GACF,kBACA+G,GAAqBrE,GACrB2L,GAAwB2d,GACxBmV,KACGlhC,GAELsW,EAAW7mB,KACTkxC,GAAkBn0C,MAAMsiB,oBAAoB,QAAS,CACnD6xB,GAAkBn0C,MAAMuiB,mBACtBsyB,EACAthC,GAAY,qBAIlBuW,EAAW7mB,KACTnE,EAAKc,IAAMu0C,GAAkBn0C,MAAMsiB,oBAAoB,QAAS,CAC9D6xB,GAAkBn0C,MAAMuiB,mBAAmBzjB,EAAKc,IAAKk1C,KAClDX,GAAkBn0C,MAAMkD,oBAAoB4xC,IAEnD1yB,GAA6BnM,GAAS3O,IACpC6sC,GAAkBn0C,MAAME,cACtB0hB,GAAwB2d,GAAUpiC,MAAQ,KAE5CoW,GAAY,qBAAsBshC,IAEpCzyB,GAA6BnM,GAAS3O,IACpC6sC,GAAkBn0C,MAAME,cACtB0hB,GAAwB2d,GAAUpiC,MAAQ,KAE5CoW,GACE,2BACA4gC,GAAkBn0C,MAAMyX,aAAai9B,GAAiBP,GAAkBn0C,MAAMI,WAAWs0C,EAAct2C,MAAQs2C,IAGnH,IAAK,MAAM7uB,KAAennB,EAAIizB,oBAAoB7H,GAChDjE,EAAY1E,MAEhB,KAAO,CACL,MAAMwS,EAAWvZ,GAAW1b,GACtB86B,EAAcrf,GAAkBzb,EAAI7B,IAAI,SACxC+pB,EAASH,GAAUkN,EAAU4L,EAAU,kBAsB7C,GArBA3Y,EAAOxkB,MAAQ,IACNmR,GACL,cACAqO,GAAwB2d,GACxBhY,GAAYX,EAAQ,CAACpC,KACrBgD,GAAyBZ,IAG7BA,EAAOnE,2BAA6B,KAAM,EAC1CD,GACEmR,EACA70B,EAAKV,KAAK4C,OAAO4a,mBACjBgL,EACA4S,EAAc2a,GAAkBn0C,MAAM+0C,kBACpC,KACAL,EACAP,GAAkBn0C,MAAMmD,eAAegxC,GAAkBn0C,MAAMI,WAAWo5B,EAAYp7B,MAAO,CAC3FomB,MAEAkwB,GAEFh2C,EAAII,KAAKc,IAAK,CAChB,MAAMo1C,EAAoBb,GAAkBn0C,MAAME,cAChD0hB,GAAwB5gB,EAAMqzC,KAAcl3C,MAAQ,KAEhD2J,EAASihB,GAEbrpB,EAAII,KAAKc,IAAIoB,MAAMS,SAErBqF,EAAOokB,UAAW,EAClBpkB,EAAO8mB,gBAAkB,CAACyc,EAAcltC,IAC/Bg3C,GAAkBn0C,MAAMmD,eAAeiQ,GAAc,sBAAuB,CACjF+gC,GAAkBn0C,MAAMkT,iBACtBoR,GAAmBxd,EAAOmP,QAASo0B,GACnC2K,GACA,GAEF73C,IAGJ2qB,GACE,SACA6L,EACA4L,EACA4U,GAAkBn0C,MAAMkD,oBACtBqQ,GACE,YACAiR,GACAwwB,EACAluC,EAAO1G,aAIf,CACA,GAAIoT,EAAKvU,OAAQ,CACf,MAAMg2C,EAAcN,EAAkBR,GAAkBn0C,MAAMopB,gBAAgB5V,GAAQA,EAAK,GACrF0hC,EAAcf,GAAkBn0C,MAAM6nB,wBAC1C,GACAiC,EAAW7qB,OAASk1C,GAAkBn0C,MAAMslB,eAC1CwE,EAAWuJ,OAAO8gB,GAAkBn0C,MAAM2rB,gBAAgBspB,KACxDA,GAEA9+B,EAAKhS,GAAmBuT,MAAM6C,sBAClC7b,EAAI7B,IAAI,QAAQ6I,WAAa,UAE/B,IAAIyvC,GAAQ,EACZ3yB,GACEmR,EACA70B,EAAKkC,OAAO4a,mBACZ,CACE,cAAIxb,GAkBF,OAjBK+0C,IACHhxC,GAAmBkd,cACjB,OACA8yB,GAAkBn0C,MAAMsiB,oBAAoB,QAAS,CACnD6xB,GAAkBn0C,MAAMuiB,mBACtBpM,EACA5C,GACE,kBACAqO,GAAwB2d,GACxB/F,GAAe2a,GAAkBn0C,MAAMI,WAAWo5B,EAAYp7B,MAC9Du2C,GAAmBR,GAAkBn0C,MAAM0S,eAAe,QAKlEyiC,GAAQ,GAEHh/B,CACT,EACAsM,2BAA4BA,KAAM,GAEpCyyB,EAEJ,CACAx2C,EAAIoB,QACN,CACF,IAKAs1C,GAA0B,wBAC1BC,GAAc,CAChBt3C,UAAW,CACT4e,KAAAA,CAAMje,GACJ,MAAM,KAAEI,GAASJ,GACTN,KAAMb,EAAK,WAAEgD,GAAe7B,EAAII,KACxC,IAAIwzB,GAAQ,EACZ,GAAIie,GAAkBvwC,MAAMyW,gBAAgBlZ,GAAQ,CAClD,MAAMk/B,EAAUl/B,EAAMJ,MAClBuB,EAAIgZ,MAAMC,WAAW8kB,IAAY2Y,GAAwBzwC,KAAK83B,KAChE39B,EAAKV,KAAOk3B,GAAqBib,GAAkBvwC,MAAMI,WAAWq8B,GAAUl/B,GAC9E+0B,GAAQ,EAEZ,CACA,IAAK,IAAI3e,EAAI,EAAGA,EAAIpT,EAAWtB,OAAQ0U,IAAK,CAC1C,MAAMhV,EAAQ4B,EAAWoT,GACzB,GAAI48B,GAAkBvwC,MAAMs5B,iBAAiB36B,IAAUA,EAAM22C,MAAO,CAClE32C,EAAM22C,OAAQ,EACd,MAAMC,EAAcC,GAAiB92C,EAAKC,GAC1C,GAAoB,OAAhB42C,EACF,MAAM72C,EAAI0F,IAAIm6B,WACZ5/B,EACA,qEAGJ4B,EAAWq0C,SACPjhC,EACF,EACA48B,GAAkBvwC,MAAMG,eAAexB,EAAMP,KAAO,SAAUm3C,IAEhEjjB,GAAQ,CACV,CACF,CACIA,GACF5zB,EAAIgZ,MAAM4a,OAEd,GAEF90B,QAAS,CACPmf,KAAAA,CAAMje,GACJ,MAAMgW,GAAS,EAAI87B,GAAqB77B,WAAWjW,GAC7CmB,EAAO0W,GAAmB7X,GAC1B+2C,EAAO/gC,GAAQghC,UAAUD,KAC/B,GAAIA,EACF94B,GAAM84B,EAAM/2C,QAGd,GAAa,IAATmB,EAIJ,OAAQA,GACN,KAAK,EACHmxC,GAAmBxzC,QAAQmf,MAAMje,GACjC,MACF,KAAK,EACHgyC,GAAsBlzC,QAAQmf,MAAMje,GACpC,MACF,KAAK,EACH41C,GAAoB92C,QAAQmf,MAAMje,QAXpC2/B,GAAmB7gC,QAAQmf,MAAMje,EAcrC,EACAue,IAAAA,CAAKve,GACH,MAAM+2C,GAAO,EAAIjF,GAAqB77B,WAAWjW,IAAMg3C,UAAUD,KAC7DA,GACFx4B,GAAKw4B,EAAM/2C,EAGf,GAEFV,UAAW,CACT2e,KAAAA,CAAMje,GACJ,MAAMgW,GAAS,EAAI87B,GAAqB77B,WAAWjW,GAC7CsC,EAAQtC,EAAII,KAAKkC,MACvB,GAAI0T,GAAQihC,WAKV,OAJIjhC,EAAOihC,WAAWpzC,MACpB7D,EAAI0F,IAAIf,KAAKG,SAASC,MAAMmyC,WAAW3yC,KAAKyR,EAAOihC,WAAWpzC,WAEhEoa,GAAMjI,EAAOihC,WAAWF,KAAM/2C,GAGhC,IAAK,MAAMC,KAASD,EAAI7B,IAAI,cAC1B,GAAI8B,EAAM26B,mBAAoB,CAC5B,GAAI36B,EAAMG,KAAKmsB,UACb,MAAMtsB,EAAME,oBACV,kCAAkCF,EAAMG,KAAKV,qBAGjD,GAAIO,EAAMG,KAAK+2C,SAAU,CACvB,KAAI,EAAIrF,GAAqB95B,aAAa/X,EAAMqa,YAG9C,MAAMra,EAAME,oBACV,0BAA0BF,EAAMG,KAAK+2C,eAHvCl3C,EAAMG,KAAKV,MAAQ,IAAIO,EAAMG,KAAK+2C,UAMtC,CACF,CAEF,GAAI70C,EAAMsX,gBAAkBtX,EAAM2V,kBAAoBjY,EAAI7B,IAAI,QAAQ4a,gBAAkB1T,IAAgB,CACtG,MAAM+xC,EAAYp3C,EAAIgZ,MAAM6C,sBAAsB,YAC3Cw7B,GAAkBr3C,EAAIwiB,aAC3BqvB,GAAkBvwC,MAAMsiB,oBAAoB,QAAS,CACnDiuB,GAAkBvwC,MAAMuiB,mBAAmBuzB,EAAWp3C,EAAII,KAAKV,SAGnE23C,EAAe50B,OACfziB,EAAI4I,IAAI,OAAQwuC,EAClB,CACA,OAAQ90C,EAAMwV,aACZ,KAAK,EACH6nB,GAAmBrgC,UAAU2e,MAAMje,GACnC,MACF,KAAK,EACHsyC,GAAmBhzC,UAAU2e,MAAMje,GACnC,MACF,KAAK,EACH41C,GAAoBt2C,UAAU2e,MAAMje,GACpC,MACF,KAAK,EACHgyC,GAAsB1yC,UAAU2e,MAAMje,GAG5C,EACAue,IAAAA,CAAKve,GACH,MAAMi3C,GAAa,EAAInF,GAAqB77B,WAAWjW,IAAMi3C,WAC7D,GAAIA,EACF14B,GAAK04B,EAAWF,KAAM/2C,QAGxB,OAAQA,EAAII,KAAKkC,MAAMwV,aACrB,KAAK,EACH6nB,GAAmBrgC,UAAUif,KAAKve,GAClC,MACF,KAAK,EACHsyC,GAAmBhzC,UAAUif,KAAKve,GAClC,MACF,KAAK,EACH41C,GAAoBt2C,UAAUif,KAAKve,GACnC,MACF,KAAK,EACHgyC,GAAsB1yC,UAAUif,KAAKve,GAG3C,IAGJ,SAAS82C,GAAiB92C,EAAKC,GAC7B,GAAI4xC,GAAkBvwC,MAAMyX,aAAa9Y,EAAMxB,OAAQ,CACrD,MAAM64C,EAAUt3C,EAAIgZ,MAAM6C,sBAAsB,OAAS5b,EAAMxB,MAAMiB,MACrE,OAAOmyC,GAAkBvwC,MAAM6nB,wBAC7B,CAACmuB,GACDzF,GAAkBvwC,MAAMslB,eAAe,CACrCirB,GAAkBvwC,MAAMkD,oBACtBqtC,GAAkBvwC,MAAMmuB,qBAAqB,IAAKoiB,GAAkBvwC,MAAMi2C,UAAUt3C,EAAMxB,OAAQ64C,MAI1G,CAAO,GAAIzF,GAAkBvwC,MAAMmpB,mBAAmBxqB,EAAMxB,OAAQ,CAClE,MAAM6V,EAAOrU,EAAMxB,MAAMomB,SACzB,OAAIgtB,GAAkBvwC,MAAMk2C,cAAcljC,GAAc,KACpDu9B,GAAkBvwC,MAAMyX,aAAazE,GAChCu9B,GAAkBvwC,MAAMkT,iBAC7Bq9B,GAAkBvwC,MAAMi2C,UAAUt3C,EAAMxB,MAAM2V,QAC9Cy9B,GAAkBvwC,MAAMI,WAAW4S,EAAK5U,KAAO,WAG1CmyC,GAAkBvwC,MAAMkT,iBAC7Bq9B,GAAkBvwC,MAAMi2C,UAAUt3C,EAAMxB,MAAM2V,QAC9Cy9B,GAAkBvwC,MAAM8tB,iBAAiB,IAAKyiB,GAAkBvwC,MAAMi2C,UAAUjjC,GAAOu9B,GAAkBvwC,MAAME,cAAc,YAC7H,EAGN,CACA,OAAO,IACT,CAGwB7B,EAAQ,yCAAhC,IAYI83C,GA94PJ,SAAyBC,GACvB,MAAMpxC,EAAS,CACb7F,QAAS,CAAC,EACVpB,UAAW,CAAC,EACZP,QAAS,CAAC,EACVQ,UAAW,CAAC,GAEd,IAAK,MAAMq4C,KAASD,EAAW,CAC7B,MAAM74C,EAAQ84C,EACRl5C,EAAQi5C,EAAU74C,GACpBJ,EAAMgC,UAAS6F,EAAO7F,QAAQ5B,GAASJ,EAAMgC,SAC7ChC,EAAMY,YAAWiH,EAAOjH,UAAUR,GAASJ,EAAMY,WACjDZ,EAAMK,UAASwH,EAAOxH,QAAQD,GAASJ,EAAMK,SAC7CL,EAAMa,YAAWgH,EAAOhH,UAAUT,GAASJ,EAAMa,UACvD,CACA,OAAOgH,CACT,CA83PesxC,CAAgB,CAC7BC,QAASlkB,GACTtnB,SAAUqjC,GACVoI,qBAAsBxG,GACtByG,kBAAmB5H,GACnB6H,kBAAmB3I,GACnB4I,iBAAkB7I,GAClB8I,WAAYlJ,GACZmJ,UAnBiB,CACjB74C,UAAW,CACTif,IAAAA,CAAK0pB,GACHhnB,GAAQgnB,EAAK,GAAGA,EAAK7nC,KAAK3B,QAC1B4hB,GAAa4nB,GACbA,EAAK7mC,QACP,IAcFg3C,SAAUzB,GACV0B,iBAAkB3H,GAClB4H,eAAgB3G,GAChB4G,aAAcrJ,KAEZ/vC,GAAmB,CAAC,QACpBD,GAAY,QACZ,UAAEG,GAAS,QAAEP,GAAO,UAAEQ,IAAcm4C,GACpCr4C,GAAU,CACZ,C,yDAEE,IACK2vC,GACHtuC,QAASg3C,GAASh3C,WAIxB,SAAS1B,GAAqBwG,EAAQjB,GACpC,MAAO,CACL,GAAG7E,EAAqBC,OAAO4E,EAAW,GAAK,YAAuB,SAAXiB,EAAoB,OAAS,QAE5F,C","sources":["webpack:///../../node_modules/@marko/runtime-tags/dist/translator/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name2 in all)\n    __defProp(target, name2, { get: all[name2], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/translator/index.ts\nvar translator_exports = {};\n__export(translator_exports, {\n  analyze: () => analyze,\n  getRuntimeEntryFiles: () => getRuntimeEntryFiles,\n  internalEntryBuilder: () => entry_builder_default,\n  preferAPI: () => preferAPI,\n  tagDiscoveryDirs: () => tagDiscoveryDirs,\n  taglibs: () => taglibs,\n  transform: () => transform,\n  translate: () => translate\n});\nmodule.exports = __toCommonJS(translator_exports);\n\n// src/translator/util/runtime-info.ts\nvar import_package = require(\"../../package.json\");\nvar runtime_info_default = {\n  name: import_package.name,\n  taglibId: \"marko-core\"\n};\n\n// src/translator/core/attrs.ts\nvar import_compiler = require(\"@marko/compiler\");\nvar import_babel_utils = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(\n        `The \\`${tag.get(\"name\").node.value}\\` tag does not support \\`...spread\\` attributes.`\n      );\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${tag.get(\"name\").node.value}\\` tag does not support body content.`\n    );\n  }\n}\n\n// src/translator/core/attrs.ts\nvar attrs_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils.assertNoArgs)(tag);\n      (0, import_babel_utils.assertNoParams)(tag);\n      (0, import_babel_utils.assertNoAttributes)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils.assertNoAttributeTags)(tag);\n      (0, import_babel_utils.diagnosticDeprecate)(tag, {\n        label: \"The `attrs` tag is deprecated, prefer destructuring `input` via the `const` tag.\",\n        fix() {\n          const tagVar = tag.node.var;\n          if (tagVar && !(tagVar.type === \"Identifier\" && tagVar.name === \"input\")) {\n            const constTag = import_compiler.types.markoTag(\n              import_compiler.types.stringLiteral(\"const\"),\n              [import_compiler.types.markoAttribute(\"value\", import_compiler.types.identifier(\"input\"))],\n              import_compiler.types.markoTagBody([])\n            );\n            constTag.var = tagVar;\n            tag.replaceWith(constTag);\n          } else {\n            tag.remove();\n          }\n        }\n      });\n    }\n  ],\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/translator/core/await.ts\nvar import_compiler22 = require(\"@marko/compiler\");\nvar import_babel_utils12 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/evaluate.ts\nvar import_babel_utils2 = require(\"@marko/compiler/babel-utils\");\nfunction evaluate(value) {\n  let { extra } = value;\n  if (!extra) {\n    extra = value.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const computed = (0, import_babel_utils2.computeNode)(value);\n    if (computed) {\n      extra.computed = computed.value;\n      extra.confident = true;\n    } else {\n      extra.computed = void 0;\n      extra.confident = false;\n    }\n  }\n  return extra;\n}\n\n// src/translator/util/references.ts\nvar import_compiler21 = require(\"@marko/compiler\");\n\n// src/translator/visitors/program/index.ts\nvar import_compiler20 = require(\"@marko/compiler\");\nvar import_babel_utils11 = require(\"@marko/compiler/babel-utils\");\nvar import_path2 = __toESM(require(\"path\"));\n\n// src/translator/util/binding-has-downstream-expressions.ts\nfunction bindingHasDownstreamExpressions(binding) {\n  if (binding.downstreamExpressions.size) return true;\n  for (const alias of binding.aliases) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  return false;\n}\n\n// src/translator/util/entry-builder.ts\nvar import_compiler2 = require(\"@marko/compiler\");\nvar import_babel_utils3 = require(\"@marko/compiler/babel-utils\");\nvar kState = Symbol();\nvar entry_builder_default = {\n  build(entryFile) {\n    const state = entryFile[kState];\n    if (!state) {\n      throw entryFile.path.buildCodeFrameError(\n        \"Unable to build hydrate code, no files were visited before finalizing the build\"\n      );\n    }\n    const body = state.imports.map(\n      (it) => import_compiler2.types.importDeclaration([], import_compiler2.types.stringLiteral(it))\n    );\n    if (state.init) {\n      body.unshift(\n        import_compiler2.types.importDeclaration(\n          [import_compiler2.types.importSpecifier(import_compiler2.types.identifier(\"init\"), import_compiler2.types.identifier(\"init\"))],\n          import_compiler2.types.stringLiteral(\n            `${runtime_info_default.name}/${entryFile.markoOpts.optimize ? \"\" : \"debug/\"}dom`\n          )\n        )\n      );\n      body.push(\n        import_compiler2.types.expressionStatement(import_compiler2.types.callExpression(import_compiler2.types.identifier(\"init\"), []))\n      );\n    }\n    return body;\n  },\n  visit(file, entryFile, visitChild) {\n    const state = entryFile[kState] ||= {\n      imports: [],\n      init: false\n    };\n    const { analyzedTags } = file.metadata.marko;\n    state.imports.push(\n      (0, import_babel_utils3.resolveRelativePath)(entryFile, file.opts.filename)\n    );\n    state.init ||= file.path.node.extra.hasInteractiveChild || file.path.node.extra.isInteractive || false;\n    for (const tag of analyzedTags || []) {\n      visitChild(tag);\n    }\n  }\n};\n\n// src/translator/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/translator/util/runtime.ts\nvar import_compiler4 = require(\"@marko/compiler\");\nvar import_babel_utils4 = require(\"@marko/compiler/babel-utils\");\n\n// src/common/attr-tag.ts\nvar rest = false ? Symbol(\"Attribute Tag\") : Symbol();\n\n// src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name2, value) {\n  return value ? name2 : \"\";\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name2, value) {\n  return value || value === 0 ? `${name2}:${typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name2) ? value + \"px\" : value}` : \"\";\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name2 in val) {\n            const v = val[name2];\n            const part = stringify(name2, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isEventHandler(name2) {\n  return /^on[A-Z-]/.test(name2);\n}\nfunction getEventHandlerName(name2) {\n  return name2[2] === \"-\" ? name2.slice(3) : name2.slice(2).toLowerCase();\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// src/html/content.ts\nfunction toString(val) {\n  return val ? val + \"\" : val === 0 ? \"0\" : \"\";\n}\nvar unsafeXMLReg = /[<&]/g;\nvar replaceUnsafeXML = (c) => c === \"&\" ? \"&amp;\" : \"&lt;\";\nvar escapeXMLStr = (str) => unsafeXMLReg.test(str) ? str.replace(unsafeXMLReg, replaceUnsafeXML) : str;\nfunction escapeXML(val) {\n  return val ? escapeXMLStr(val + \"\") : val === 0 ? \"0\" : \"&zwj;\";\n}\nvar unsafeScriptReg = /<\\/script/g;\nvar escapeScriptStr = (str) => unsafeScriptReg.test(str) ? str.replace(unsafeScriptReg, \"\\\\x3C/script\") : str;\nfunction escapeScript(val) {\n  return val ? escapeScriptStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\nvar unsafeStyleReg = /<\\/style/g;\nvar escapeStyleStr = (str) => unsafeStyleReg.test(str) ? str.replace(unsafeStyleReg, \"\\\\3C/style\") : str;\nfunction escapeStyle(val) {\n  return val ? escapeStyleStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\n\n// src/html/serializer.ts\nvar { hasOwnProperty } = {};\nvar Generator = function* () {\n}().constructor;\nvar AsyncGenerator = async function* () {\n}().constructor;\nvar KNOWN_SYMBOLS = (() => {\n  const KNOWN_SYMBOLS2 = /* @__PURE__ */ new Map();\n  for (const name2 of Object.getOwnPropertyNames(Symbol)) {\n    const symbol = Symbol[name2];\n    if (typeof symbol === \"symbol\") {\n      KNOWN_SYMBOLS2.set(symbol, \"Symbol.\" + name2);\n    }\n  }\n  return KNOWN_SYMBOLS2;\n})();\nvar KNOWN_FUNCTIONS = /* @__PURE__ */ new Map([\n  // This is by no means an exhaustive list,\n  // but it should cover most of the built-in functions.\n  [AggregateError, \"AggregateError\"],\n  [Array, \"Array\"],\n  [Array.from, \"Array.from\"],\n  [Array.isArray, \"Array.isArray\"],\n  [Array.of, \"Array.of\"],\n  [ArrayBuffer, \"ArrayBuffer\"],\n  [ArrayBuffer.isView, \"ArrayBuffer.isView\"],\n  [Atomics.add, \"Atomics.add\"],\n  [Atomics.and, \"Atomics.and\"],\n  [Atomics.compareExchange, \"Atomics.compareExchange\"],\n  [Atomics.exchange, \"Atomics.exchange\"],\n  [Atomics.isLockFree, \"Atomics.isLockFree\"],\n  [Atomics.load, \"Atomics.load\"],\n  [Atomics.notify, \"Atomics.notify\"],\n  [Atomics.or, \"Atomics.or\"],\n  [Atomics.store, \"Atomics.store\"],\n  [Atomics.sub, \"Atomics.sub\"],\n  [Atomics.wait, \"Atomics.wait\"],\n  [BigInt, \"BigInt\"],\n  [BigInt.asIntN, \"BigInt.asIntN\"],\n  [BigInt.asUintN, \"BigInt.asUintN\"],\n  [BigInt64Array, \"BigInt64Array\"],\n  [BigInt64Array.from, \"BigInt64Array.from\"],\n  [BigInt64Array.of, \"BigInt64Array.of\"],\n  [BigUint64Array, \"BigUint64Array\"],\n  [BigUint64Array.from, \"BigUint64Array.from\"],\n  [BigUint64Array.of, \"BigUint64Array.of\"],\n  [Boolean, \"Boolean\"],\n  [console.assert, \"console.assert\"],\n  [console.clear, \"console.clear\"],\n  [console.count, \"console.count\"],\n  [console.countReset, \"console.countReset\"],\n  [console.debug, \"console.debug\"],\n  [console.dir, \"console.dir\"],\n  [console.dirxml, \"console.dirxml\"],\n  [console.error, \"console.error\"],\n  [console.group, \"console.group\"],\n  [console.groupCollapsed, \"console.groupCollapsed\"],\n  [console.groupEnd, \"console.groupEnd\"],\n  [console.info, \"console.info\"],\n  [console.log, \"console.log\"],\n  [console.table, \"console.table\"],\n  [console.time, \"console.time\"],\n  [console.timeEnd, \"console.timeEnd\"],\n  [console.timeLog, \"console.timeLog\"],\n  [console.timeStamp, \"console.timeStamp\"],\n  [console.trace, \"console.trace\"],\n  [console.warn, \"console.warn\"],\n  [DataView, \"DataView\"],\n  [Date, \"Date\"],\n  [Date.now, \"Date.now\"],\n  [Date.parse, \"Date.parse\"],\n  [Date.UTC, \"Date.UTC\"],\n  [decodeURI, \"decodeURI\"],\n  [decodeURIComponent, \"decodeURIComponent\"],\n  [encodeURI, \"encodeURI\"],\n  [encodeURIComponent, \"encodeURIComponent\"],\n  [Error, \"Error\"],\n  [EvalError, \"EvalError\"],\n  [Float32Array, \"Float32Array\"],\n  [Float32Array.from, \"Float32Array.from\"],\n  [Float32Array.of, \"Float32Array.of\"],\n  [Float64Array, \"Float64Array\"],\n  [Float64Array.from, \"Float64Array.from\"],\n  [Float64Array.of, \"Float64Array.of\"],\n  [Function, \"Function\"],\n  [globalThis.atob, \"atob\"],\n  [globalThis.btoa, \"btoa\"],\n  [globalThis.clearImmediate, \"clearImmediate\"],\n  [globalThis.clearInterval, \"clearInterval\"],\n  [globalThis.clearTimeout, \"clearTimeout\"],\n  [globalThis.crypto?.getRandomValues, \"crypto.getRandomValues\"],\n  [globalThis.crypto?.randomUUID, \"crypto.randomUUID\"],\n  [globalThis.fetch, \"fetch\"],\n  [globalThis.performance?.now, \"performance.now\"],\n  [globalThis.queueMicrotask, \"queueMicrotask\"],\n  [globalThis.setImmediate, \"setImmediate\"],\n  [globalThis.setInterval, \"setInterval\"],\n  [globalThis.setTimeout, \"setTimeout\"],\n  [globalThis.structuredClone, \"structuredClone\"],\n  [globalThis.URL, \"URL\"],\n  [globalThis.URLSearchParams, \"URLSearchParams\"],\n  [globalThis.WritableStream, \"WritableStream\"],\n  [Int16Array, \"Int16Array\"],\n  [Int16Array.from, \"Int16Array.from\"],\n  [Int16Array.of, \"Int16Array.of\"],\n  [Int32Array, \"Int32Array\"],\n  [Int32Array.from, \"Int32Array.from\"],\n  [Int32Array.of, \"Int32Array.of\"],\n  [Int8Array, \"Int8Array\"],\n  [Int8Array.from, \"Int8Array.from\"],\n  [Int8Array.of, \"Int8Array.of\"],\n  [Intl.Collator, \"Intl.Collator\"],\n  [Intl.DateTimeFormat, \"Intl.DateTimeFormat\"],\n  [Intl.DisplayNames, \"Intl.DisplayNames\"],\n  [Intl.getCanonicalLocales, \"Intl.getCanonicalLocales\"],\n  [Intl.ListFormat, \"Intl.ListFormat\"],\n  [Intl.Locale, \"Intl.Locale\"],\n  [Intl.NumberFormat, \"Intl.NumberFormat\"],\n  [Intl.PluralRules, \"Intl.PluralRules\"],\n  [Intl.RelativeTimeFormat, \"Intl.RelativeTimeFormat\"],\n  [Intl.Segmenter, \"Intl.Segmenter\"],\n  [Intl.supportedValuesOf, \"Intl.supportedValuesOf\"],\n  [isFinite, \"isFinite\"],\n  [isNaN, \"isNaN\"],\n  [JSON.parse, \"JSON.parse\"],\n  [JSON.stringify, \"JSON.stringify\"],\n  [Map, \"Map\"],\n  [Map.groupBy, \"Map.groupBy\"],\n  [Math.abs, \"Math.abs\"],\n  [Math.acos, \"Math.acos\"],\n  [Math.acosh, \"Math.acosh\"],\n  [Math.asin, \"Math.asin\"],\n  [Math.asinh, \"Math.asinh\"],\n  [Math.atan, \"Math.atan\"],\n  [Math.atan2, \"Math.atan2\"],\n  [Math.atanh, \"Math.atanh\"],\n  [Math.cbrt, \"Math.cbrt\"],\n  [Math.ceil, \"Math.ceil\"],\n  [Math.clz32, \"Math.clz32\"],\n  [Math.cos, \"Math.cos\"],\n  [Math.cosh, \"Math.cosh\"],\n  [Math.exp, \"Math.exp\"],\n  [Math.expm1, \"Math.expm1\"],\n  [Math.floor, \"Math.floor\"],\n  [Math.fround, \"Math.fround\"],\n  [Math.hypot, \"Math.hypot\"],\n  [Math.imul, \"Math.imul\"],\n  [Math.log, \"Math.log\"],\n  [Math.log10, \"Math.log10\"],\n  [Math.log1p, \"Math.log1p\"],\n  [Math.log2, \"Math.log2\"],\n  [Math.max, \"Math.max\"],\n  [Math.min, \"Math.min\"],\n  [Math.pow, \"Math.pow\"],\n  [Math.random, \"Math.random\"],\n  [Math.round, \"Math.round\"],\n  [Math.sign, \"Math.sign\"],\n  [Math.sin, \"Math.sin\"],\n  [Math.sinh, \"Math.sinh\"],\n  [Math.sqrt, \"Math.sqrt\"],\n  [Math.tan, \"Math.tan\"],\n  [Math.tanh, \"Math.tanh\"],\n  [Math.trunc, \"Math.trunc\"],\n  [Number, \"Number\"],\n  [Number.isFinite, \"Number.isFinite\"],\n  [Number.isInteger, \"Number.isInteger\"],\n  [Number.isNaN, \"Number.isNaN\"],\n  [Number.isSafeInteger, \"Number.isSafeInteger\"],\n  [Number.parseFloat, \"Number.parseFloat\"],\n  [Number.parseInt, \"Number.parseInt\"],\n  [Object, \"Object\"],\n  [Object.assign, \"Object.assign\"],\n  [Object.create, \"Object.create\"],\n  [Object.defineProperties, \"Object.defineProperties\"],\n  [Object.defineProperty, \"Object.defineProperty\"],\n  [Object.entries, \"Object.entries\"],\n  [Object.freeze, \"Object.freeze\"],\n  [Object.fromEntries, \"Object.fromEntries\"],\n  [Object.getOwnPropertyDescriptor, \"Object.getOwnPropertyDescriptor\"],\n  [Object.getOwnPropertyDescriptors, \"Object.getOwnPropertyDescriptors\"],\n  [Object.getOwnPropertyNames, \"Object.getOwnPropertyNames\"],\n  [Object.getOwnPropertySymbols, \"Object.getOwnPropertySymbols\"],\n  [Object.getPrototypeOf, \"Object.getPrototypeOf\"],\n  [Object.is, \"Object.is\"],\n  [Object.isExtensible, \"Object.isExtensible\"],\n  [Object.isFrozen, \"Object.isFrozen\"],\n  [Object.isSealed, \"Object.isSealed\"],\n  [Object.keys, \"Object.keys\"],\n  [Object.preventExtensions, \"Object.preventExtensions\"],\n  [Object.seal, \"Object.seal\"],\n  [Object.setPrototypeOf, \"Object.setPrototypeOf\"],\n  [Object.values, \"Object.values\"],\n  [parseFloat, \"parseFloat\"],\n  [parseInt, \"parseInt\"],\n  [Promise, \"Promise\"],\n  [Proxy, \"Proxy\"],\n  [RangeError, \"RangeError\"],\n  [ReferenceError, \"ReferenceError\"],\n  [Reflect.apply, \"Reflect.apply\"],\n  [Reflect.construct, \"Reflect.construct\"],\n  [Reflect.defineProperty, \"Reflect.defineProperty\"],\n  [Reflect.deleteProperty, \"Reflect.deleteProperty\"],\n  [Reflect.get, \"Reflect.get\"],\n  [Reflect.getOwnPropertyDescriptor, \"Reflect.getOwnPropertyDescriptor\"],\n  [Reflect.getPrototypeOf, \"Reflect.getPrototypeOf\"],\n  [Reflect.has, \"Reflect.has\"],\n  [Reflect.isExtensible, \"Reflect.isExtensible\"],\n  [Reflect.ownKeys, \"Reflect.ownKeys\"],\n  [Reflect.preventExtensions, \"Reflect.preventExtensions\"],\n  [Reflect.set, \"Reflect.set\"],\n  [Reflect.setPrototypeOf, \"Reflect.setPrototypeOf\"],\n  [RegExp, \"RegExp\"],\n  [Set, \"Set\"],\n  [String, \"String\"],\n  [String.fromCharCode, \"String.fromCharCode\"],\n  [String.fromCodePoint, \"String.fromCodePoint\"],\n  [String.raw, \"String.raw\"],\n  [Symbol, \"Symbol\"],\n  [Symbol.for, \"Symbol.for\"],\n  [SyntaxError, \"SyntaxError\"],\n  [TypeError, \"TypeError\"],\n  [Uint16Array, \"Uint16Array\"],\n  [Uint16Array.from, \"Uint16Array.from\"],\n  [Uint16Array.of, \"Uint16Array.of\"],\n  [Uint32Array, \"Uint32Array\"],\n  [Uint32Array.from, \"Uint32Array.from\"],\n  [Uint32Array.of, \"Uint32Array.of\"],\n  [Uint8Array, \"Uint8Array\"],\n  [Uint8Array.from, \"Uint8Array.from\"],\n  [Uint8Array.of, \"Uint8Array.of\"],\n  [Uint8ClampedArray, \"Uint8ClampedArray\"],\n  [Uint8ClampedArray.from, \"Uint8ClampedArray.from\"],\n  [Uint8ClampedArray.of, \"Uint8ClampedArray.of\"],\n  [URIError, \"URIError\"],\n  [WeakMap, \"WeakMap\"],\n  [WeakSet, \"WeakSet\"]\n]);\nvar KNOWN_OBJECTS = /* @__PURE__ */ new Map([\n  [Atomics, \"Atomics\"],\n  [console, \"console\"],\n  [globalThis, \"globalThis\"],\n  [globalThis.crypto, \"crypto\"],\n  [Intl, \"Intl\"],\n  [JSON, \"JSON\"],\n  [Math, \"Math\"],\n  [Reflect, \"Reflect\"]\n]);\nfunction toAccess(accessor) {\n  const start = accessor[0];\n  return start === '\"' || start >= \"0\" && start <= \"9\" ? \"[\" + accessor + \"]\" : \".\" + accessor;\n}\n\n// src/html/writer.ts\nvar K_SCOPE_ID = Symbol(\"Scope ID\");\nvar kPendingContexts = Symbol(\"Pending Contexts\");\nvar branchIdKey = Symbol();\nvar tick = globalThis.setImmediate || globalThis.setTimeout || globalThis.queueMicrotask || ((cb) => Promise.resolve().then(cb));\n\n// src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nvar kSelectedValue = Symbol(\"selectedValue\");\nfunction attr(name2, val) {\n  return isVoid(val) ? \"\" : nonVoidAttr(name2, val);\n}\nfunction stringAttr(name2, val) {\n  return val && ` ${name2}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidAttr(name2, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name2 + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name2}`;\n    case \"number\":\n      return ` ${name2}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name2 + attrAssignment(val.source)}`;\n      }\n      break;\n  }\n  return ` ${name2 + attrAssignment(val + \"\")}`;\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\nvar unsafeAttrChars = /[\"'>\\s]/g;\nfunction escapeAttrValue(str) {\n  if (unsafeAttrChars.test(str)) {\n    const c = str[unsafeAttrChars.lastIndex - 1];\n    unsafeAttrChars.lastIndex = 0;\n    return c === '\"' ? `'${str.replace(/'/g, \"&#39;\")}'` : `\"${str.replace(/\"/g, \"&#34;\")}\"`;\n  }\n  return str;\n}\n\n// src/common/compat-meta.ts\nvar prefix = false ? \"$compat_\" : \"$C_\";\nvar RENDERER_REGISTER_ID = prefix + (false ? \"renderer\" : \"r\");\nvar SET_SCOPE_REGISTER_ID = prefix + (false ? \"setScope\" : \"s\");\nvar RENDER_BODY_ID = prefix + (false ? \"renderBody\" : \"b\");\n\n// src/html/compat.ts\nvar K_TAGS_API_STATE = Symbol();\n\n// src/translator/util/to-property-name.ts\nvar import_compiler3 = require(\"@marko/compiler\");\nfunction toPropertyName(name2) {\n  if (/^[a-z_$][a-z0-9_$]*$/i.test(name2)) {\n    return import_compiler3.types.identifier(name2);\n  } else if (/^(?:0|[1-9][0-9]*)$/.test(name2)) {\n    return import_compiler3.types.numericLiteral(parseInt(name2, 10));\n  }\n  return import_compiler3.types.stringLiteral(name2);\n}\nfunction toObjectProperty(name2, value) {\n  return import_compiler3.types.objectProperty(toPropertyName(name2), value);\n}\nfunction toMemberExpression(object, key, optional) {\n  const prop = toPropertyName(key);\n  const computed = prop.type !== \"Identifier\";\n  return optional ? import_compiler3.types.optionalMemberExpression(object, prop, computed, true) : import_compiler3.types.memberExpression(object, prop, computed);\n}\n\n// src/translator/util/runtime.ts\nvar pureFunctions = [\n  \"createTemplate\",\n  \"createRenderer\",\n  \"createRendererWithOwner\",\n  \"value\",\n  \"state\",\n  \"intersection\",\n  \"loopClosure\",\n  \"conditionalClosure\",\n  \"dynamicClosure\",\n  \"loopOf\",\n  \"loopIn\",\n  \"loopTo\",\n  \"conditional\"\n];\nfunction importRuntime(name2) {\n  const { output } = getMarkoOpts();\n  return toMemberExpression(\n    (0, import_babel_utils4.importStar)(currentProgramPath.hub.file, getRuntimePath(output), \"$\"),\n    name2\n  );\n}\nfunction callRuntime(name2, ...args) {\n  const callExpression2 = import_compiler4.types.callExpression(\n    importRuntime(name2),\n    filterArguments(args)\n  );\n  if (pureFunctions.includes(name2)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `${runtime_info_default.name}/${optimize ? \"\" : \"debug/\"}${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || import_compiler4.types.unaryExpression(\"void\", import_compiler4.types.numericLiteral(0));\n    }\n  }\n  return filteredArgs;\n}\nfunction getCompatRuntimeFile() {\n  const markoOpts = getMarkoOpts();\n  return `marko/src/runtime/helpers/tags-compat/${isOutputHTML() ? \"html\" : \"dom\"}${markoOpts.optimize ? \"\" : \"-debug\"}.${markoOpts.modules === \"esm\" ? \"mjs\" : \"js\"}`;\n}\n\n// src/translator/util/sections.ts\nvar import_compiler6 = require(\"@marko/compiler\");\nvar import_babel_utils7 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-core-tag.ts\nvar import_babel_utils5 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-tag-name.ts\nfunction getTagName(tag) {\n  return tag.node.name.value;\n}\n\n// src/translator/util/is-core-tag.ts\nvar { taglibId } = runtime_info_default;\nvar htmlTaglibId = \"marko-html\";\nvar interopTaglibId = \"@marko/translator-interop-class-tags\";\nfunction isCoreTag(tag) {\n  if (tag.isMarkoTag()) {\n    const tagDef = (0, import_babel_utils5.getTagDef)(tag);\n    if (tagDef) {\n      switch (tagDef.taglibId) {\n        case taglibId:\n        case interopTaglibId:\n          return true;\n        case htmlTaglibId:\n          switch (tagDef.name) {\n            case \"script\":\n            case \"style\":\n              return true;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction isCoreTagName(tag, name2) {\n  return isCoreTag(tag) && getTagName(tag) === name2;\n}\nfunction isConditionTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n        return true;\n    }\n  }\n  return false;\n}\n\n// src/translator/util/optional.ts\nvar Sorted = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? addSorted(this.compare, data, item) : joinRepeatable(this.compare, data, item) : item;\n  }\n  union(a, b) {\n    if (a) {\n      if (Array.isArray(a)) {\n        if (b) {\n          if (Array.isArray(b)) {\n            return unionSortedRepeatable(this.compare, a, b);\n          } else {\n            return addSorted(this.compare, a, b);\n          }\n        }\n        return a;\n      }\n      if (b) {\n        if (Array.isArray(b)) {\n          return addSorted(this.compare, [...b], a);\n        }\n        return joinRepeatable(this.compare, b, a);\n      }\n      return a;\n    }\n    return b;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return findSorted(this.compare, data, item);\n      } else if (this.compare(data, item) === 0) {\n        return data;\n      }\n    }\n  }\n};\nfunction push(data, item) {\n  if (data) {\n    if (Array.isArray(data)) {\n      data.push(item);\n      return data;\n    }\n    return [data, item];\n  }\n  return item;\n}\nfunction concat(a, b) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        return a.concat(b);\n      } else if (Array.isArray(b)) {\n        return [a, ...b];\n      } else {\n        return [a, b];\n      }\n    }\n    return a;\n  }\n  return b;\n}\nfunction filter(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      const len = data.length;\n      let result;\n      let i = 0;\n      while (i < len) {\n        let item = data[i++];\n        if (cb(item)) {\n          result = item;\n          while (i < len) {\n            item = data[i++];\n            if (cb(item)) {\n              result = [result, item];\n              while (i < len) {\n                item = data[i++];\n                if (cb(item)) {\n                  result.push(item);\n                }\n              }\n              return result;\n            }\n          }\n          return result;\n        }\n      }\n      return result;\n    }\n    if (cb(data)) {\n      return data;\n    }\n  }\n  return void 0;\n}\nfunction forEach(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      let i = 0;\n      for (const item of data) {\n        cb(item, i++);\n      }\n    } else {\n      cb(data, 0);\n    }\n  }\n}\nfunction find(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      return data.find(cb);\n    }\n    if (cb(data, 0)) {\n      return data;\n    }\n  }\n}\nfunction findSorted(compare, data, item) {\n  let max = data.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const cur = data[mid];\n    const compareResult = compare(cur, item);\n    if (compareResult === 0) return cur;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n}\nfunction addSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0) return data;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n  const result = new Array(len + 1);\n  for (let i = 0; i < pos; i++) {\n    result[i] = data[i];\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    result[pos++] = next;\n  }\n  result[len] = cur;\n  return result;\n}\nfunction unionSortedRepeatable(compare, a, b) {\n  const aLen = a.length;\n  const bLen = b.length;\n  let aIndex = 0;\n  let bIndex = 0;\n  const result = [];\n  while (aIndex < aLen && bIndex < bLen) {\n    const aValue = a[aIndex];\n    const bValue = b[bIndex];\n    const delta = compare(aValue, bValue);\n    if (delta === 0) {\n      aIndex++;\n      bIndex++;\n      result.push(aValue);\n    } else if (delta < 0) {\n      aIndex++;\n      result.push(aValue);\n    } else {\n      bIndex++;\n      result.push(bValue);\n    }\n  }\n  if (aLen === bLen && aIndex === aLen) {\n    return a;\n  }\n  while (aIndex < aLen) {\n    result.push(a[aIndex++]);\n  }\n  while (bIndex < bLen) {\n    result.push(b[bIndex++]);\n  }\n  return result;\n}\nfunction joinRepeatable(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\n\n// src/translator/util/state.ts\nvar createProgramState = (init) => {\n  const map = /* @__PURE__ */ new WeakMap();\n  return [\n    () => {\n      let state = map.get(currentProgramPath);\n      if (!state) {\n        map.set(currentProgramPath, state = init());\n      }\n      return state;\n    },\n    (value) => {\n      map.set(currentProgramPath, value);\n    }\n  ];\n};\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\n\n// src/translator/util/tag-name-type.ts\nvar import_compiler5 = require(\"@marko/compiler\");\nvar import_babel_utils6 = require(\"@marko/compiler/babel-utils\");\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name2 = tag.get(\"name\");\n    if (name2.isStringLiteral()) {\n      extra.tagNameType = name2.node.value[0] === \"@\" ? 3 /* AttributeTag */ : (0, import_babel_utils6.isNativeTag)(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      analyzeExpressionTagName(name2, extra);\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === 1 /* CustomTag */) {\n      const childFile = (0, import_babel_utils6.loadFileForTag)(tag);\n      if (!childFile) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      } else if (childFile.ast.program.extra.featureType === \"class\") {\n        extra.tagNameType = 2 /* DynamicTag */;\n        extra.featureType = \"class\";\n        (currentProgramPath.node.extra ??= {}).needsCompat = true;\n      }\n    }\n  }\n  return extra.tagNameType;\n}\nfunction analyzeExpressionTagName(name2, extra) {\n  const pending = [name2];\n  let path5;\n  let type;\n  let nullable = false;\n  let tagNameImported;\n  while ((path5 = pending.pop()) && type !== 2 /* DynamicTag */) {\n    if (path5.isConditionalExpression()) {\n      pending.push(path5.get(\"consequent\"));\n      if (path5.node.alternate) {\n        pending.push(path5.get(\"alternate\"));\n      }\n    } else if (path5.isLogicalExpression()) {\n      if (path5.node.operator === \"||\") {\n        pending.push(path5.get(\"left\"));\n      } else {\n        nullable = true;\n      }\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isAssignmentExpression()) {\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isBinaryExpression()) {\n      type = path5.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isStringLiteral() || path5.isTemplateLiteral()) {\n      type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isNullLiteral()) {\n      nullable = true;\n    } else if (path5.isIdentifier()) {\n      if (path5.node.name === \"undefined\") {\n        nullable = true;\n        continue;\n      }\n      const binding = path5.scope.getBinding(path5.node.name);\n      if (!binding) {\n        type = 2 /* DynamicTag */;\n        continue;\n      }\n      if (binding.kind === \"module\") {\n        const decl = binding.path.parent;\n        if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => import_compiler5.types.isImportDefaultSpecifier(it))) {\n          const resolvedImport = (0, import_babel_utils6.resolveTagImport)(name2, decl.source.value) || decl.source.value;\n          if (type === 0 /* NativeTag */ || tagNameImported && tagNameImported !== resolvedImport) {\n            type = 2 /* DynamicTag */;\n            tagNameImported = void 0;\n          } else {\n            type = 1 /* CustomTag */;\n            tagNameImported = resolvedImport;\n          }\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n        continue;\n      }\n      const bindingTag = binding.path;\n      if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n        const bindingTagName = bindingTag.get(\"name\").node.value;\n        if (bindingTagName === \"const\") {\n          pending.push(\n            bindingTag.get(\"attributes\")[0].get(\"value\")\n          );\n          continue;\n        }\n        if (bindingTagName === \"let\") {\n          type = 2 /* DynamicTag */;\n          continue;\n        }\n        continue;\n      }\n      type = 2 /* DynamicTag */;\n    } else {\n      type = 2 /* DynamicTag */;\n    }\n  }\n  extra.tagNameType = type;\n  extra.tagNameNullable = nullable;\n  extra.tagNameDynamic = true;\n  if (type === 1 /* CustomTag */ && tagNameImported) {\n    extra.tagNameImported = tagNameImported;\n  }\n}\n\n// src/translator/util/sections.ts\nfunction startSection(path5) {\n  const extra = path5.node.extra ??= {};\n  let section = extra.section;\n  if (!section && (path5.type === \"Program\" || path5.get(\"body\").length)) {\n    const parentSection = path5.parentPath ? getOrCreateSection(path5.parentPath) : void 0;\n    const sectionNamePath = path5.parentPath?.get(\n      \"name\"\n    );\n    const sectionName = path5.isProgram() ? \"\" : currentProgramPath.scope.generateUid(\n      sectionNamePath.toString() + \"_content\"\n    );\n    const programExtra = path5.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      loc: sectionNamePath?.node.loc || void 0,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection,\n      params: void 0,\n      closures: void 0,\n      bindings: void 0,\n      content: getContentInfo(path5),\n      upstreamExpression: void 0,\n      hasAbortSignal: false,\n      isBranch: false\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path5) {\n  let cur = path5;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && !cur.node.attributeTags && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */ && cur.parent.name.value !== \"html-comment\") {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionForBody(body) {\n  return body.node.extra?.section;\n}\nfunction getSection(path5) {\n  let section;\n  let currentPath = path5;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nvar [getScopeIdIdentifier] = createSectionState(\n  \"scopeIdIdentifier\",\n  (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`)\n);\nvar [getSectionParentIsOwner, setSectionParentIsOwner] = createSectionState(\"parentIsOwner\", () => false);\nvar [_getScopeIdentifier] = createSectionState(\n  \"scopeIdentifier\",\n  () => import_compiler6.types.identifier(\"undefined\")\n);\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\nfunction getContentInfo(path5) {\n  const body = path5.get(\"body\");\n  const contentInfo = {\n    startType: null,\n    endType: null,\n    singleChild: true\n  };\n  for (let endIndex = body.length; endIndex--; ) {\n    const endType = getNodeContentType(body[endIndex], \"endType\", contentInfo);\n    if (endType !== null) {\n      contentInfo.endType = endType;\n      for (let startIndex = 0; startIndex < endIndex; startIndex++) {\n        const startType = getNodeContentType(body[startIndex], \"startType\");\n        if (startType !== null) {\n          contentInfo.startType = startType;\n          contentInfo.singleChild = false;\n          return contentInfo;\n        }\n      }\n      contentInfo.startType = getNodeContentType(body[endIndex], \"startType\");\n      return contentInfo;\n    }\n  }\n  return null;\n}\nfunction getNodeContentType(path5, extraMember, contentInfo) {\n  switch (path5.type) {\n    case \"MarkoText\":\n      return 4 /* Text */;\n    case \"MarkoPlaceholder\":\n      return 2 /* Placeholder */;\n    case \"MarkoScriptlet\":\n    case \"MarkoComment\":\n    case \"ImportDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportNamedDeclaration\":\n      return null;\n    case \"MarkoTag\": {\n      const tag = path5;\n      if (isCoreTag(tag)) {\n        switch (tag.node.name.value) {\n          case \"html-comment\":\n            return 0 /* Comment */;\n          case \"html-script\":\n          case \"html-style\":\n            return 3 /* Tag */;\n          case \"for\":\n          case \"if\":\n            return 1 /* Dynamic */;\n          default:\n            return null;\n        }\n      } else if ((0, import_babel_utils7.isNativeTag)(tag)) {\n        return 3 /* Tag */;\n      } else if ((0, import_babel_utils7.isAttributeTag)(tag)) {\n        return null;\n      } else if (import_compiler6.types.isStringLiteral(tag.node.name)) {\n        const tagSection = (0, import_babel_utils7.loadFileForTag)(tag)?.ast.program.extra.section;\n        if (tagSection) {\n          if (tagSection.content) {\n            if (contentInfo && !tagSection.content.singleChild) {\n              if (extraMember === \"endType\") {\n                contentInfo.startType = tagSection.content.startType;\n                contentInfo.singleChild = false;\n              }\n            }\n            return tagSection.content[extraMember];\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  return 1 /* Dynamic */;\n}\nvar isStatefulSection = (section) => {\n  const upstreamExpression = section.upstreamExpression;\n  return !upstreamExpression || isStatefulReferences(upstreamExpression.referencedBindings);\n};\nvar checkStatefulClosures = (section, immediateOnly) => {\n  return !!find(\n    section.closures,\n    (closure) => (!immediateOnly || section.parent === closure.section) && isStatefulReferences(closure)\n  );\n};\n\n// src/translator/visitors/program/dom.ts\nvar import_compiler18 = require(\"@marko/compiler\");\nvar import_babel_utils10 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-style-file.ts\nvar import_path = __toESM(require(\"path\"));\nfunction getStyleFile(file) {\n  const { filename } = file.opts;\n  const fs = file.markoOpts.fileSystem;\n  const base = getBase(filename);\n  const styleMatch = new RegExp(\n    `^(${escapeRegExp(base)}\\\\.${\"index\" === base ? \"|\" : \"\"})style\\\\.\\\\w+$`\n  );\n  for (const file2 of fs.readdirSync(import_path.default.dirname(filename)).sort()) {\n    if (styleMatch.test(file2)) {\n      return `./${file2}`;\n    }\n  }\n}\nfunction getBase(filename) {\n  const start = filename.lastIndexOf(import_path.default.sep) + 1;\n  const leftDot = filename.indexOf(\".\", start);\n  if (leftDot === -1) {\n    return filename.slice(start);\n  }\n  const rightDot = filename.lastIndexOf(\".\");\n  const closeBracket = leftDot - 1;\n  if (filename[closeBracket] === \"]\") {\n    const openBracket = filename.lastIndexOf(\"[\", closeBracket);\n    if (openBracket > start) {\n      return filename.slice(start, openBracket) + filename.slice(leftDot, rightDot);\n    }\n  }\n  return filename.slice(start, rightDot);\n}\nvar regexpCharsReg = /[\\\\^$.*+?()[\\]{}|]/g;\nfunction escapeRegExp(str) {\n  return str.replace(regexpCharsReg, \"\\\\$&\");\n}\n\n// src/translator/util/signals.ts\nvar import_compiler17 = require(\"@marko/compiler\");\nvar import_babel_utils9 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/return.ts\nvar import_compiler11 = require(\"@marko/compiler\");\nvar import_babel_utils8 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-known-attr-values.ts\nfunction getKnownAttrValues(tag) {\n  const attrs2 = {};\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      attrs2[attr2.name] = attr2.value;\n    }\n  }\n  return attrs2;\n}\n\n// src/translator/util/plugin-hooks.ts\nvar import_compiler7 = require(\"@marko/compiler\");\nfunction enter(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path5, import_compiler7.types);\n  } else if (plugin.enter) {\n    plugin.enter(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction exit(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/translator/util/visitors.ts\nfunction extractVisitors(visitors2) {\n  const result = {\n    migrate: {},\n    transform: {},\n    analyze: {},\n    translate: {}\n  };\n  for (const _name in visitors2) {\n    const name2 = _name;\n    const value = visitors2[name2];\n    if (value.migrate) result.migrate[name2] = value.migrate;\n    if (value.transform) result.transform[name2] = value.transform;\n    if (value.analyze) result.analyze[name2] = value.analyze;\n    if (value.translate) result.translate[name2] = value.translate;\n  }\n  return result;\n}\nfunction translateByTarget({\n  html,\n  dom\n}) {\n  return {\n    enter(path5) {\n      enter(isOutputHTML() ? html : dom, path5);\n    },\n    exit(path5) {\n      exit(isOutputHTML() ? html : dom, path5);\n    }\n  };\n}\n\n// src/translator/util/writer.ts\nvar import_compiler10 = require(\"@marko/compiler\");\n\n// src/translator/util/normalize-string-expression.ts\nvar import_compiler8 = require(\"@marko/compiler\");\nfunction normalizeStringExpression(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (import_compiler8.types.isStringLiteral(content)) {\n        content = content.value;\n      } else if (import_compiler8.types.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    if (exprs.length === 1 && !curStr && !strs[0]) {\n      return exprs[0];\n    }\n    strs.push(curStr);\n    return import_compiler8.types.templateLiteral(\n      strs.map((raw) => import_compiler8.types.templateElement({ raw })),\n      exprs\n    );\n  } else if (curStr) {\n    return import_compiler8.types.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/translator/util/walks.ts\nvar import_compiler9 = require(\"@marko/compiler\");\nvar [getWalks] = createSectionState(\n  \"walks\",\n  () => [\"\"]\n);\nvar [getWalkComment] = createSectionState(\n  \"walkComment\",\n  () => []\n);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter2(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */);\n}\nfunction exit2(path5) {\n  getSteps(getSection(path5)).push(1 /* Exit */);\n}\nfunction enterShallow(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */, 1 /* Exit */);\n}\nfunction injectWalks(path5, expr) {\n  const walks = getWalks(getSection(path5));\n  const walkComment = getWalkComment(getSection(path5));\n  walkComment.push(\n    `${walkCodeToName[47 /* BeginChild */]}`,\n    expr.name,\n    walkCodeToName[38 /* EndChild */]\n  );\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path5, code) {\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path5);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walkCodes = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* Enter */) {\n        depth++;\n        walkCodes.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walkCodes.length = walkCodes.lastIndexOf(67 /* Next */);\n          walkCodes.push(97 /* Over */);\n        } else {\n          walkCodes.length = walkCodes.lastIndexOf(107 /* Out */) + 1;\n          walkCodes.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walkCodes[0];\n    let count = 0;\n    for (const walk of walkCodes) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path5)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(\n      multiplier,\n      117 /* Multiplier */,\n      10 /* Multiplier */\n    );\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const prefix2 = section.content?.startType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const postfix = section.content?.endType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const walks = getWalks(section);\n  const walkLiteral = normalizeStringExpression([prefix2, ...walks, postfix]) || import_compiler9.types.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/translator/util/writer.ts\nvar [getWrites] = createSectionState(\n  \"writes\",\n  () => [\"\"]\n);\nvar [getTrailerWrites] = createSectionState(\n  \"trailerWrites\",\n  () => [\"\"]\n);\nfunction writeTo(path5, trailer) {\n  const section = getSection(path5);\n  const get = trailer ? getTrailerWrites : getWrites;\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = get(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path5) {\n  const section = getSection(path5);\n  const writes = getWrites(section);\n  const trailers = getTrailerWrites(section);\n  const writeResult = normalizeStringExpression(writes);\n  const trailerResult = normalizeStringExpression(trailers);\n  writes.length = 0;\n  writes[0] = \"\";\n  trailers.length = 0;\n  trailers[0] = \"\";\n  if (writeResult && trailerResult) {\n    return import_compiler10.types.expressionStatement(\n      import_compiler10.types.sequenceExpression([\n        callRuntime(\"write\", writeResult),\n        callRuntime(\"writeTrailers\", trailerResult)\n      ])\n    );\n  } else if (writeResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"write\", writeResult));\n  } else if (trailerResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"writeTrailers\", trailerResult));\n  }\n}\nfunction flushBefore(path5) {\n  const expr = consumeHTML(path5);\n  if (expr) {\n    path5.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path5) {\n  const target = path5.isProgram() ? path5 : path5.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writePrefix = section.content?.startType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writePostfix = section.content?.endType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: normalizeStringExpression([writePrefix, ...writes, writePostfix]) || import_compiler10.types.stringLiteral(\"\")\n  };\n}\nfunction markNode(path5, binding) {\n  const section = getSection(path5);\n  if (binding.type !== 0 /* dom */) {\n    throw path5.buildCodeFrameError(\n      \"Tried to mark a node that was not determined to need a mark during analyze.\"\n    );\n  }\n  if (isOutputHTML()) {\n    writeTo(path5)`${callRuntime(\n      \"markResumeNode\",\n      getScopeIdIdentifier(section),\n      getScopeAccessorLiteral(binding)\n    )}`;\n  }\n}\n\n// src/translator/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\n  \"returnId\"\n);\nvar usedTag = /* @__PURE__ */ new WeakSet();\nvar return_default = {\n  analyze(tag) {\n    (0, import_babel_utils8.assertNoArgs)(tag);\n    (0, import_babel_utils8.assertNoVar)(tag);\n    (0, import_babel_utils8.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils8.assertAllowedAttributes)(tag, [\"value\", \"valueChange\"]);\n    if (usedTag.has(tag.hub)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `return` tag can only be used once per template.\"\n      );\n    }\n    usedTag.add(tag.hub);\n    if (!getKnownAttrValues(tag.node).value) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `return` tag requires a value.\");\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        flushBefore(tag);\n        if (attrs2.valueChange) {\n          getSerializedScopeProperties(section).set(\n            import_compiler11.types.stringLiteral(\"@\" /* TagVariableChange */),\n            attrs2.valueChange\n          );\n        }\n        if (attrs2.value) {\n          const returnId2 = currentProgramPath.scope.generateUidIdentifier(\"return\");\n          _setReturnId(section, returnId2);\n          tag.replaceWith(\n            import_compiler11.types.variableDeclaration(\"const\", [\n              import_compiler11.types.variableDeclarator(returnId2, attrs2.value)\n            ])\n          )[0].skip();\n        }\n      }\n    },\n    dom: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        if (attrs2.value) {\n          addValue(\n            section,\n            attrs2.value.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"tagVarSignal\"),\n              hasDownstreamIntersections: () => true\n            },\n            attrs2.value\n          );\n        }\n        if (attrs2.valueChange) {\n          addValue(\n            section,\n            attrs2.valueChange.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"setTagVarChange\"),\n              hasDownstreamIntersections: () => false\n            },\n            attrs2.valueChange\n          );\n        }\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: {\n    openTagOnly: true\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/translator/util/for-each-identifier.ts\nfunction forEachIdentifier(node, cb) {\n  switch (node.type) {\n    case \"ObjectPattern\":\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case \"ObjectProperty\":\n            if (prop.value.type === \"AssignmentPattern\") {\n              forEachIdentifier(prop.value.left, cb);\n            } else {\n              forEachIdentifier(prop.value, cb);\n            }\n            break;\n          case \"RestElement\":\n            forEachIdentifier(prop.argument, cb);\n            break;\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      for (const el of node.elements) {\n        if (el != null) {\n          switch (el.type) {\n            case \"RestElement\":\n              forEachIdentifier(el.argument, cb);\n              break;\n            case \"AssignmentPattern\":\n              forEachIdentifier(el.left, cb);\n              break;\n            default:\n              forEachIdentifier(el, cb);\n              break;\n          }\n        }\n      }\n      break;\n    case \"Identifier\":\n      cb(node);\n      break;\n  }\n}\n\n// src/translator/util/get-defined-binding-expression.ts\nvar import_compiler12 = require(\"@marko/compiler\");\nfunction getDeclaredBindingExpression(binding) {\n  if (binding.declared || !binding.upstreamAlias) {\n    return import_compiler12.types.identifier(binding.name);\n  } else if (binding.property !== void 0) {\n    return toMemberExpression(\n      getDeclaredBindingExpression(binding.upstreamAlias),\n      binding.property,\n      binding.upstreamAlias.nullable\n    );\n  } else {\n    return getDeclaredBindingExpression(binding.upstreamAlias);\n  }\n}\n\n// src/translator/util/scope-read.ts\nvar import_compiler13 = require(\"@marko/compiler\");\nfunction createScopeReadPattern(section, referencedBindings) {\n  const rootDepth = section.depth;\n  const rootPattern = import_compiler13.types.objectPattern([]);\n  let nestedPatterns;\n  forEach(referencedBindings, (ref) => {\n    if (ref.name.includes(\"#\")) return;\n    const propertyKey = getScopeAccessorLiteral(ref);\n    const propertyValue = import_compiler13.types.identifier(ref.name);\n    const isShorthand = propertyKey.value === propertyValue.name;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns) nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = import_compiler13.types.objectPattern([]);\n        prev.properties.push(\n          import_compiler13.types.objectProperty(import_compiler13.types.identifier(\"_\"), nestedPattern)\n        );\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(\n      import_compiler13.types.objectProperty(\n        isShorthand ? propertyValue : propertyKey,\n        propertyValue,\n        false,\n        isShorthand\n      )\n    );\n  });\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier ?? import_compiler13.types.identifier(\"undefined\");\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = import_compiler13.types.memberExpression(scope, import_compiler13.types.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  return import_compiler13.types.memberExpression(\n    getScopeExpression(section, reference.section),\n    getScopeAccessorLiteral(reference),\n    true\n  );\n}\n\n// src/translator/util/simplify-fn.ts\nvar import_compiler14 = require(\"@marko/compiler\");\nfunction simplifyFunction(fn) {\n  switch (fn.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return fn;\n    default:\n      return import_compiler14.types.functionExpression(\n        null,\n        fn.params,\n        fn.body,\n        fn.async,\n        fn.generator\n      );\n  }\n}\n\n// src/translator/util/to-first-expression-or-block.ts\nvar import_compiler15 = require(\"@marko/compiler\");\nfunction toFirstExpressionOrBlock(stmts) {\n  if (stmts.length === 1 && import_compiler15.types.isExpressionStatement(stmts[0])) {\n    const { expression } = stmts[0];\n    switch (expression.type) {\n      case \"ObjectExpression\":\n      case \"AssignmentExpression\":\n        return toParenthesizedExpressionIfNeeded(expression);\n      default:\n        return expression;\n    }\n  }\n  return import_compiler15.types.blockStatement(stmts);\n}\nfunction toParenthesizedExpressionIfNeeded(expr) {\n  switch (expr.type) {\n    case \"ObjectExpression\":\n    case \"AssignmentExpression\":\n      return import_compiler15.types.parenthesizedExpression(expr);\n    default:\n      return expr;\n  }\n}\n\n// src/translator/util/traverse.ts\nvar import_compiler16 = require(\"@marko/compiler\");\nvar skip = Symbol(\"skip\");\nfunction traverseReplace(container, key, enter3) {\n  const node = container[key];\n  if (node) {\n    if (Array.isArray(node)) {\n      for (let i = node.length; i--; ) {\n        traverseReplace(node, i, enter3);\n      }\n    } else {\n      const keys = import_compiler16.types.VISITOR_KEYS[node.type];\n      for (let i = keys.length; i--; ) {\n        traverseReplace(node, keys[i], enter3);\n      }\n      const replacement = enter3(node, container, key);\n      if (replacement) container[key] = replacement;\n    }\n  }\n}\nfunction traverseContains(node, check) {\n  if (node) {\n    if (Array.isArray(node)) {\n      for (const item of node) {\n        if (traverseContains(item, check)) {\n          return true;\n        }\n      }\n    } else {\n      switch (check(node)) {\n        case true:\n          return true;\n        case skip:\n          return false;\n      }\n      for (const key of import_compiler16.types.VISITOR_KEYS[node.type]) {\n        if (traverseContains(node[key], check)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// src/translator/util/signals.ts\nvar [getSignals] = createSectionState(\n  \"signals\",\n  () => /* @__PURE__ */ new Map()\n);\nvar [getClosureSignalBuilder, _setClosureSignalBuilder] = createSectionState(\"queue\");\nfunction setClosureSignalBuilder(tag, builder) {\n  _setClosureSignalBuilder(getSectionForBody(tag.get(\"body\")), builder);\n}\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar unimplementedBuild = () => {\n  return import_compiler17.types.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, referencedBindings, name2 = generateSignalName(referencedBindings)) {\n  const signals = getSignals(section);\n  let signal = signals.get(referencedBindings);\n  if (!signal) {\n    const exportName = referencedBindings ? !Array.isArray(referencedBindings) && referencedBindings.section === section && referencedBindings.export : !section.parent && currentProgramPath.node.extra.domExports?.setup;\n    signals.set(\n      referencedBindings,\n      signal = {\n        identifier: exportName ? import_compiler17.types.identifier(exportName) : currentProgramPath.scope.generateUidIdentifier(\n          name2 + section.name.replace(\"_\", \"$\")\n        ),\n        referencedBindings,\n        section,\n        values: [],\n        intersection: void 0,\n        render: [],\n        renderReferencedBindings: void 0,\n        effect: [],\n        effectReferencedBindings: void 0,\n        subscribers: [],\n        closures: /* @__PURE__ */ new Map(),\n        hasDownstreamIntersections: () => {\n          let hasDownstreamIntersections = !!signal.intersection;\n          if (!hasDownstreamIntersections) {\n            for (const value of signal.values) {\n              if (value.signal.hasDownstreamIntersections()) {\n                hasDownstreamIntersections = true;\n                break;\n              }\n            }\n          }\n          if (!hasDownstreamIntersections) {\n            if (!Array.isArray(referencedBindings) && referencedBindings) {\n              for (const alias of referencedBindings.aliases) {\n                if (getSignal(section, alias).hasDownstreamIntersections()) {\n                  hasDownstreamIntersections = true;\n                  break;\n                }\n              }\n              if (!hasDownstreamIntersections) {\n                for (const [, alias] of referencedBindings.propertyAliases) {\n                  if (getSignal(section, alias).hasDownstreamIntersections()) {\n                    hasDownstreamIntersections = true;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n          signal.hasDownstreamIntersections = () => hasDownstreamIntersections;\n          return hasDownstreamIntersections;\n        },\n        build: unimplementedBuild,\n        export: !!exportName\n      }\n    );\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!referencedBindings) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(referencedBindings)) {\n      subscribe(referencedBindings, signal);\n      signal.build = () => {\n        return callRuntime(\n          \"intersection\",\n          import_compiler17.types.numericLiteral(referencedBindings.length),\n          getSignalFn(signal, [scopeIdentifier], referencedBindings),\n          buildSignalIntersections(signal)\n        );\n      };\n    } else if (referencedBindings.section !== section && bindingUtil.find(section.closures, referencedBindings)) {\n      getSignal(referencedBindings.section, referencedBindings).closures.set(\n        section,\n        signal\n      );\n      signal.build = () => {\n        const builder = getClosureSignalBuilder(section);\n        const ownerScope = getScopeExpression(\n          section,\n          referencedBindings.section\n        );\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        const isDynamicClosure = !isImmediateOwner || !builder;\n        const render = getSignalFn(signal, [\n          scopeIdentifier,\n          import_compiler17.types.identifier(referencedBindings.name)\n        ]);\n        signal.isDynamicClosure = isDynamicClosure;\n        const intersection = buildSignalIntersections(signal);\n        return isDynamicClosure ? callRuntime(\n          \"dynamicClosure\",\n          render,\n          isImmediateOwner ? null : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope),\n          intersection\n        ) : builder(signal, render, intersection);\n      };\n      addStatement(\n        \"render\",\n        section,\n        void 0,\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(\n            import_compiler17.types.memberExpression(signal.identifier, import_compiler17.types.identifier(\"_\")),\n            [\n              scopeIdentifier,\n              createScopeReadExpression(section, referencedBindings)\n            ]\n          )\n        )\n      );\n    }\n  }\n  return signal;\n}\nfunction initValue(binding, runtimeHelper = \"value\") {\n  const valueAccessor = getScopeAccessorLiteral(binding);\n  const section = binding.section;\n  const signal = getSignal(section, binding);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      import_compiler17.types.identifier(binding.name)\n    ]);\n    const intersections = buildSignalIntersections(signal);\n    const isParamBinding = !binding.upstreamAlias && (binding.type === 3 /* param */ || binding.type === 2 /* input */);\n    const isNakedAlias = binding.upstreamAlias && !binding.property;\n    const needsGuard = !isNakedAlias && (binding.downstreamExpressions.size || fn.body.body.length > 0);\n    const needsCache = needsGuard || intersections;\n    const needsMarks = isParamBinding || intersections;\n    if (needsCache || needsMarks) {\n      return callRuntime(runtimeHelper, valueAccessor, fn, intersections);\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = valueAccessor;\n  for (const alias of binding.aliases) {\n    initValue(alias);\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    initValue(alias);\n  }\n  return signal;\n}\nfunction getSignalFn(signal, params, referencedBindings) {\n  const section = signal.section;\n  const binding = signal.referencedBindings;\n  const [scopeIdentifier2, valueIdentifier] = params;\n  const isValueSignal = binding && !Array.isArray(binding) && binding.section === section;\n  if (isValueSignal) {\n    for (const alias of binding.aliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            valueIdentifier,\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n    for (const [key, alias] of binding.propertyAliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            toMemberExpression(valueIdentifier, key, binding.nullable),\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n  }\n  for (const value of signal.values) {\n    signal.render.push(\n      import_compiler17.types.expressionStatement(\n        import_compiler17.types.callExpression(value.signal.identifier, [\n          value.scope,\n          value.value,\n          ...getTranslatedExtraArgs(value.signal)\n        ])\n      )\n    );\n  }\n  if (isValueSignal) {\n    const closureEntries = Array.from(signal.closures.entries()).sort(\n      ([a], [b]) => a.id - b.id\n    );\n    for (const [_closureSection, closureSignal] of closureEntries) {\n      if (isStatefulReferences(closureSignal.referencedBindings)) {\n        signal.render.push(\n          import_compiler17.types.expressionStatement(\n            import_compiler17.types.callExpression(closureSignal.identifier, [\n              scopeIdentifier2,\n              valueIdentifier\n            ])\n          )\n        );\n      }\n    }\n  }\n  if (referencedBindings) {\n    signal.render.unshift(\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(\n          createScopeReadPattern(section, referencedBindings),\n          scopeIdentifier2\n        )\n      ])\n    );\n  }\n  return import_compiler17.types.arrowFunctionExpression(params, import_compiler17.types.blockStatement(signal.render));\n}\nvar hasTranslatedExtraArgs = /* @__PURE__ */ new WeakSet();\nvar emptyExtraArgs = [];\nfunction getTranslatedExtraArgs(signal) {\n  if (signal.extraArgs) {\n    if (!hasTranslatedExtraArgs.has(signal)) {\n      hasTranslatedExtraArgs.add(signal);\n      traverseReplace(signal, \"extraArgs\", replaceRenderNode);\n    }\n    return signal.extraArgs;\n  }\n  return emptyExtraArgs;\n}\nfunction buildSignalIntersections(signal) {\n  let intersections = signal.intersection;\n  const binding = signal.referencedBindings;\n  if (binding && !Array.isArray(binding) && binding.section === signal.section) {\n    for (const alias of binding.aliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n    for (const [, alias] of binding.propertyAliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n  }\n  for (const value of signal.values) {\n    if (value.signal.hasDownstreamIntersections()) {\n      intersections = push(\n        intersections,\n        value.intersectionExpression ?? (import_compiler17.types.isMemberExpression(value.signal.identifier) ? value.signal.identifier : import_compiler17.types.identifier(value.signal.identifier.name))\n      );\n    }\n  }\n  return intersections && import_compiler17.types.arrowFunctionExpression(\n    [],\n    Array.isArray(intersections) ? callRuntime(\"intersections\", import_compiler17.types.arrayExpression(intersections)) : intersections\n  );\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = push(\n    providerSignal.intersection,\n    subscriber.identifier\n  );\n}\nfunction generateSignalName(referencedBindings) {\n  let name2;\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      name2 = \"expr\";\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 = referencedBindings.name;\n    }\n  } else {\n    name2 = \"setup\";\n  }\n  return name2;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (import_compiler17.types.isArrowFunctionExpression(arg) && import_compiler17.types.isBlockStatement(arg.body)) {\n      const body = arg.body.body;\n      if (body.length === 0) {\n        args[i] = import_compiler17.types.numericLiteral(0);\n      } else if (body.length === 1 && import_compiler17.types.isExpressionStatement(body[0])) {\n        arg.body = toParenthesizedExpressionIfNeeded(body[0].expression);\n      }\n    }\n  }\n  for (let i = args.length - 1; import_compiler17.types.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSection, referencedBindings, statement, usedReferences) {\n  const signal = getSignal(targetSection, referencedBindings);\n  const statements = signal[type] ??= [];\n  const add = type === \"effect\" ? addEffectReferences : addRenderReferences;\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (usedReferences !== false) {\n    if (usedReferences) {\n      for (const ref of usedReferences) {\n        add(signal, ref);\n      }\n    } else {\n      add(signal, referencedBindings);\n    }\n  }\n}\nfunction addEffectReferences(signal, referencedBindings) {\n  signal.effectReferencedBindings = bindingUtil.union(\n    signal.effectReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addRenderReferences(signal, referencedBindings) {\n  signal.renderReferencedBindings = bindingUtil.union(\n    signal.renderReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addValue(targetSection, referencedBindings, signal, value, scope = scopeIdentifier, intersectionExpression) {\n  getSignal(targetSection, referencedBindings).values.push({\n    signal,\n    value,\n    scope,\n    intersectionExpression\n  });\n}\nfunction getResumeRegisterId(section, referencedBindings, type) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name2 = \"\";\n  if (referencedBindings) {\n    if (typeof referencedBindings === \"string\") {\n      name2 += `_${referencedBindings}`;\n    } else if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 += `_${referencedBindings.name}`;\n    }\n  }\n  return (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}${name2}${type ? \"/\" + type : \"\"}`\n  );\n}\nvar usedRegisterIdsBySection = /* @__PURE__ */ new WeakMap();\nfunction getRegisterUID(section, name2) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let used = usedRegisterIdsBySection.get(section);\n  if (!used) usedRegisterIdsBySection.set(section, used = /* @__PURE__ */ new Set());\n  const baseId = (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}/${name2}`\n  );\n  let count = 0;\n  let id = baseId;\n  while (used.has(id)) {\n    id = baseId + \"_\" + ++count;\n  }\n  used.add(id);\n  return id;\n}\nfunction writeSignals(section) {\n  const signals = [...getSignals(section).values()].sort(sortSignals);\n  for (const signal of signals) {\n    traverseReplace(signal, \"render\", replaceRenderNode);\n    for (const value2 of signal.values) {\n      traverseReplace(value2, \"value\", replaceRenderNode);\n    }\n    let effectDeclarator;\n    if (signal.effect.length) {\n      traverseReplace(signal, \"effect\", replaceEffectNode);\n      const effectIdentifier = import_compiler17.types.identifier(`${signal.identifier.name}_effect`);\n      const referencedBindings = signal.effectReferencedBindings;\n      const referencesScope = traverseContains(\n        signal.effect,\n        isScopeIdentifier\n      );\n      effectDeclarator = import_compiler17.types.variableDeclarator(\n        effectIdentifier,\n        callRuntime(\n          \"effect\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(section, signal.referencedBindings)\n          ),\n          import_compiler17.types.arrowFunctionExpression(\n            referencedBindings ? referencesScope ? [\n              scopeIdentifier,\n              createScopeReadPattern(section, referencedBindings)\n            ] : [createScopeReadPattern(section, referencedBindings)] : referencesScope ? [scopeIdentifier] : [],\n            toFirstExpressionOrBlock(signal.effect)\n          )\n        )\n      );\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(effectIdentifier, [scopeIdentifier])\n        )\n      );\n    }\n    let value = signal.build();\n    if (import_compiler17.types.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    if (signal.register) {\n      value = callRuntime(\n        \"registerBoundSignal\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"var\")\n        ),\n        value\n      );\n    }\n    if (signal.isDynamicClosure && isStatefulReferences(signal.referencedBindings)) {\n      value = callRuntime(\n        \"registerSubscriber\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"subscriber\")\n        ),\n        value\n      );\n    }\n    const signalDeclarator = import_compiler17.types.variableDeclarator(signal.identifier, value);\n    let signalDeclaration = !section.parent && !signal.referencedBindings && (import_compiler17.types.isFunctionExpression(value) || import_compiler17.types.isArrowFunctionExpression(value)) ? import_compiler17.types.functionDeclaration(\n      signal.identifier,\n      value.params,\n      import_compiler17.types.isExpression(value.body) ? import_compiler17.types.blockStatement([import_compiler17.types.expressionStatement(value.body)]) : value.body\n    ) : import_compiler17.types.variableDeclaration(\"const\", [signalDeclarator]);\n    if (signal.export) {\n      signalDeclaration = import_compiler17.types.exportNamedDeclaration(signalDeclaration);\n    }\n    currentProgramPath.pushContainer(\n      \"body\",\n      effectDeclarator ? [\n        import_compiler17.types.variableDeclaration(\"const\", [effectDeclarator]),\n        signalDeclaration\n      ] : signalDeclaration\n    );\n  }\n}\nfunction writeRegisteredFns() {\n  const registeredFns = registeredFnsForProgram.get(currentProgramPath.node);\n  const statements = [];\n  if (registeredFns) {\n    for (const registeredFn of registeredFns) {\n      let fn;\n      const params = registeredFn.referencedBindings ? registeredFn.referencesScope ? [\n        scopeIdentifier,\n        import_compiler17.types.assignmentPattern(\n          createScopeReadPattern(\n            registeredFn.section,\n            registeredFn.referencedBindings\n          ),\n          scopeIdentifier\n        )\n      ] : [\n        createScopeReadPattern(\n          registeredFn.section,\n          registeredFn.referencedBindings\n        )\n      ] : registeredFn.referencesScope ? [scopeIdentifier] : void 0;\n      if (params) {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          params,\n          import_compiler17.types.blockStatement(toReturnedFunction(registeredFn.node))\n        );\n      } else if (registeredFn.node.type === \"FunctionDeclaration\" && registeredFn.node.id?.name === registeredFn.id) {\n        fn = registeredFn.node;\n      } else {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          registeredFn.node.params,\n          registeredFn.node.body.type === \"BlockStatement\" ? registeredFn.node.body : import_compiler17.types.blockStatement([import_compiler17.types.returnStatement(registeredFn.node.body)]),\n          registeredFn.node.generator,\n          registeredFn.node.async\n        );\n      }\n      statements.push(fn);\n    }\n    for (const registeredFn of registeredFns) {\n      statements.push(\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler17.types.stringLiteral(registeredFn.registerId),\n            import_compiler17.types.identifier(registeredFn.id)\n          )\n        )\n      );\n    }\n    for (const stmt of currentProgramPath.pushContainer(\"body\", statements)) {\n      stmt.skip();\n    }\n  }\n}\nfunction toReturnedFunction(rawFn) {\n  const fn = simplifyFunction(rawFn);\n  return fn.type === \"FunctionDeclaration\" ? [fn, import_compiler17.types.returnStatement(fn.id)] : [import_compiler17.types.returnStatement(fn)];\n}\nfunction sortSignals(a, b) {\n  const aReferencedBindings = getReferencedBindings(a);\n  const bReferencedBindings = getReferencedBindings(b);\n  for (let i = Math.max(aReferencedBindings.length, bReferencedBindings.length) - 1; i >= 0; i--) {\n    const diff = (bReferencedBindings[i] ?? -1) - (aReferencedBindings[i] ?? -1);\n    if (diff !== 0) return diff;\n  }\n  return 0;\n}\nfunction getReferencedBindings({ referencedBindings: reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reference) {\n  return (reference.type === 0 /* dom */ ? 1 : 0) * 1e4 + reference.id;\n}\nfunction addHTMLEffectCall(section, referencedBindings) {\n  addStatement(\"effect\", section, referencedBindings, void 0, false);\n}\nfunction writeHTMLResumeStatements(path5, tagVarIdentifier) {\n  const section = getSectionForBody(path5);\n  if (!section) return;\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  forEach(section.closures, (closure) => {\n    if (isStatefulReferences(closure)) {\n      let currentSection = section;\n      while (currentSection !== closure.section) {\n        getSerializedScopeProperties(currentSection).set(\n          import_compiler17.types.stringLiteral(\"_\"),\n          callRuntime(\n            \"ensureScopeWithId\",\n            getScopeIdIdentifier(currentSection = currentSection.parent)\n          )\n        );\n      }\n      setForceResumeScope(closure.section);\n      const isImmediateOwner = section.parent?.id === closure.section.id;\n      const isDynamicClosure = !getClosureSignalBuilder(section) || !isImmediateOwner;\n      if (isDynamicClosure) {\n        path5.pushContainer(\n          \"body\",\n          import_compiler17.types.expressionStatement(\n            callRuntime(\n              \"writeEffect\",\n              scopeIdIdentifier,\n              import_compiler17.types.stringLiteral(\n                getResumeRegisterId(section, closure, \"subscriber\")\n              )\n            )\n          )\n        );\n      }\n    }\n  });\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].referencedBindings;\n      path5.pushContainer(\n        \"body\",\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"writeEffect\",\n            scopeIdIdentifier,\n            import_compiler17.types.stringLiteral(getResumeRegisterId(section, signalRefs))\n          )\n        )\n      );\n    }\n  }\n  const accessors = /* @__PURE__ */ new Set();\n  const additionalProperties = getSerializedScopeProperties(section);\n  const serializedProperties = [];\n  forEach(section.bindings, (binding) => {\n    if (binding.serialize && binding.type !== 0 /* dom */) {\n      const accessor = getScopeAccessorLiteral(binding);\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(accessor, getDeclaredBindingExpression(binding))\n      );\n      accessors.add(accessor.value);\n    }\n  });\n  if (tagVarIdentifier && returnId(section) !== void 0) {\n    serializedProperties.push(\n      import_compiler17.types.objectProperty(\n        import_compiler17.types.stringLiteral(\"/\" /* TagVariable */),\n        tagVarIdentifier\n      )\n    );\n  }\n  for (const [key, value] of additionalProperties) {\n    if (!accessors.has(key.value)) {\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(key, value, !import_compiler17.types.isLiteral(key))\n      );\n      accessors.add(key.value);\n    }\n  }\n  if (serializedProperties.length || forceResumeScope(section)) {\n    let writeScope2 = callRuntime(\n      \"writeScope\",\n      scopeIdIdentifier,\n      import_compiler17.types.objectExpression(serializedProperties)\n    );\n    if (!isOptimize()) {\n      let debugVars;\n      forEach(section.bindings, (binding) => {\n        let root = binding;\n        let access = \"\";\n        while (!root.loc && root.upstreamAlias) {\n          if (root.property !== void 0) {\n            access = toAccess(root.property) + access;\n          }\n          root = root.upstreamAlias;\n        }\n        if (root.loc) {\n          const locStr = import_compiler17.types.stringLiteral(\n            `${root.loc.start.line}:${root.loc.start.column + 1}`\n          );\n          (debugVars ||= []).push(\n            import_compiler17.types.objectProperty(\n              getScopeAccessorLiteral(binding),\n              root !== binding ? import_compiler17.types.arrayExpression([\n                import_compiler17.types.stringLiteral(root.name + access),\n                locStr\n              ]) : locStr\n            )\n          );\n        }\n      });\n      writeScope2 = callRuntime(\n        \"debug\",\n        writeScope2,\n        import_compiler17.types.stringLiteral(path5.hub.file.opts.filenameRelative),\n        section.loc && section.loc.start.line != null ? import_compiler17.types.stringLiteral(\n          `${section.loc.start.line}:${section.loc.start.column + 1}`\n        ) : import_compiler17.types.numericLiteral(0),\n        debugVars && import_compiler17.types.objectExpression(debugVars)\n      );\n    }\n    path5.pushContainer(\"body\", import_compiler17.types.expressionStatement(writeScope2));\n  }\n  const resumeClosestBranch2 = !section.isBranch && (section.hasAbortSignal || !!section.closures || !!find(section.bindings, (binding) => binding.type === 1 /* let */));\n  if (resumeClosestBranch2) {\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        callRuntime(\"resumeClosestBranch\", scopeIdIdentifier)\n      )\n    );\n  }\n  if (path5.get(\"body\").length) {\n    path5.unshiftContainer(\n      \"body\",\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n      ])\n    );\n  }\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\nfunction replaceRenderNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node) || replaceRegisteredFunctionNode(node);\n}\nfunction replaceEffectNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node);\n}\nfunction replaceBindingReadNode(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      return getReadReplacement(node);\n    }\n  }\n}\nfunction replaceAssignedNode(node) {\n  switch (node.type) {\n    case \"UpdateExpression\": {\n      const { extra } = node.argument;\n      if (isAssignedBindingExtra(extra)) {\n        const { buildAssignment } = getSignal(\n          extra.assignment.section,\n          extra.assignment\n        );\n        if (buildAssignment) {\n          const replacement = buildAssignment(\n            extra.section,\n            import_compiler17.types.binaryExpression(\n              node.operator === \"++\" ? \"+\" : \"-\",\n              node.argument,\n              import_compiler17.types.numericLiteral(1)\n            )\n          );\n          if (!node.prefix) {\n            return import_compiler17.types.sequenceExpression([replacement, node.argument]);\n          }\n          return replacement;\n        }\n      }\n      break;\n    }\n    case \"AssignmentExpression\":\n      switch (node.left.type) {\n        case \"Identifier\": {\n          const { extra } = node.left;\n          if (isAssignedBindingExtra(extra)) {\n            const { buildAssignment } = getSignal(\n              extra.assignment.section,\n              extra.assignment\n            );\n            if (buildAssignment) {\n              return buildAssignment(\n                extra.section,\n                node.operator === \"=\" ? node.right : import_compiler17.types.binaryExpression(\n                  node.operator.slice(\n                    0,\n                    -1\n                  ),\n                  node.left,\n                  node.right\n                )\n              );\n            }\n          }\n          break;\n        }\n        case \"ArrayPattern\":\n        case \"ObjectPattern\": {\n          let params;\n          let assignments;\n          forEachIdentifier(node.left, (id) => {\n            const { extra } = id;\n            if (isAssignedBindingExtra(extra)) {\n              const signal = getSignal(\n                extra.assignment.section,\n                extra.assignment\n              );\n              if (signal?.buildAssignment) {\n                id.name = currentProgramPath.scope.generateUid(id.name);\n                (params ||= []).push(import_compiler17.types.identifier(id.name));\n                (assignments ||= []).push(\n                  signal.buildAssignment(extra.section, import_compiler17.types.identifier(id.name))\n                );\n              }\n            }\n          });\n          if (params && assignments) {\n            const resultId = currentProgramPath.scope.generateUid(\"result\");\n            return import_compiler17.types.callExpression(\n              import_compiler17.types.arrowFunctionExpression(\n                [import_compiler17.types.identifier(resultId), ...params],\n                import_compiler17.types.sequenceExpression([\n                  import_compiler17.types.assignmentExpression(\n                    \"=\",\n                    node.left,\n                    import_compiler17.types.identifier(resultId)\n                  ),\n                  ...assignments,\n                  import_compiler17.types.identifier(resultId)\n                ])\n              ),\n              [node.right]\n            );\n          }\n          break;\n        }\n      }\n      break;\n  }\n}\nvar registeredFnsForProgram = /* @__PURE__ */ new WeakMap();\nfunction replaceRegisteredFunctionNode(node) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.objectProperty(node.key, replacement);\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression(node);\n    }\n    case \"FunctionDeclaration\": {\n      const replacement = getRegisteredFnExpression(node);\n      if (replacement) {\n        return import_compiler17.types.variableDeclaration(\"const\", [\n          import_compiler17.types.variableDeclarator(node.id, replacement)\n        ]);\n      }\n      break;\n    }\n  }\n}\nfunction getRegisteredFnExpression(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    const id = currentProgramPath.scope.generateUid(extra.name);\n    const referencesScope = extra.referencesScope;\n    const referencedBindings = extra.referencedBindingsInFunction;\n    let registedFns = registeredFnsForProgram.get(currentProgramPath.node);\n    if (!registedFns) {\n      registeredFnsForProgram.set(currentProgramPath.node, registedFns = []);\n    }\n    registedFns.push({\n      id,\n      node,\n      registerId: extra.registerId,\n      section: extra.section,\n      referencesScope,\n      referencedBindings\n    });\n    if (referencesScope || referencedBindings) {\n      return import_compiler17.types.callExpression(import_compiler17.types.identifier(id), [scopeIdentifier]);\n    } else {\n      return import_compiler17.types.identifier(id);\n    }\n  }\n}\n\n// src/translator/visitors/program/dom.ts\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSectionForBody(program);\n      const { walks, writes, setup } = getSectionMeta(section);\n      const domExports = program.node.extra.domExports;\n      const templateIdentifier = import_compiler18.types.identifier(domExports.template);\n      const walksIdentifier = import_compiler18.types.identifier(domExports.walks);\n      const setupIdentifier = import_compiler18.types.identifier(domExports.setup);\n      const paramsBinding = program.node.extra.binding;\n      const programParamsSignal = paramsBinding && bindingHasDownstreamExpressions(paramsBinding) ? initValue(paramsBinding) : void 0;\n      const styleFile = getStyleFile(program.hub.file);\n      if (styleFile) {\n        (0, import_babel_utils10.importDefault)(program.hub.file, styleFile);\n      }\n      forEachSectionReverse((childSection) => {\n        if (childSection !== section) {\n          const tagParamsSignal = childSection.params && initValue(childSection.params);\n          const { walks: walks2, writes: writes2, setup: setup2 } = getSectionMeta(childSection);\n          const identifier = import_compiler18.types.identifier(childSection.name);\n          const renderer = callRuntime(\n            getSectionParentIsOwner(childSection) ? \"createRenderer\" : \"createRendererWithOwner\",\n            writes2,\n            walks2,\n            setup2,\n            tagParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], tagParamsSignal.identifier)\n          );\n          writeSignals(childSection);\n          program.node.body.push(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                identifier,\n                isStatefulSection(childSection) ? callRuntime(\n                  \"register\",\n                  import_compiler18.types.stringLiteral(\n                    getResumeRegisterId(childSection, \"renderer\")\n                  ),\n                  renderer\n                ) : renderer\n              )\n            ])\n          );\n        }\n      });\n      writeSignals(section);\n      writeRegisteredFns();\n      if (!setup) {\n        program.node.body.unshift(\n          import_compiler18.types.exportNamedDeclaration(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                setupIdentifier,\n                import_compiler18.types.arrowFunctionExpression([], import_compiler18.types.blockStatement([]))\n              )\n            ])\n          )\n        );\n      }\n      program.node.body.unshift(\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(\n              templateIdentifier,\n              writes || import_compiler18.types.stringLiteral(\"\")\n            )\n          ])\n        ),\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(walksIdentifier, walks || import_compiler18.types.stringLiteral(\"\"))\n          ])\n        )\n      );\n      program.node.body.push(\n        import_compiler18.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler18.types.stringLiteral(program.hub.file.metadata.marko.id),\n            templateIdentifier,\n            walksIdentifier,\n            setupIdentifier,\n            programParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], programParamsSignal.identifier)\n          )\n        )\n      );\n    }\n  }\n};\n\n// src/translator/visitors/program/html.ts\nvar import_compiler19 = require(\"@marko/compiler\");\n\n// src/translator/util/is-static.ts\nfunction isStatic(path5) {\n  return path5.isImportDeclaration() || path5.isExportDeclaration() || path5.isMarkoScriptlet({ static: true });\n}\n\n// src/translator/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      const section = getSectionForBody(program);\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLResumeStatements(program, tagVarIdentifier);\n      traverseReplace(program.node, \"body\", replaceNode);\n      const returnIdentifier = returnId(section);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", import_compiler19.types.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          if (child.node.target && child.node.target !== \"server\") {\n            child.remove();\n          } else {\n            child.replaceWithMultiple(child.node.body);\n          }\n        }\n      }\n      program.pushContainer(\"body\", [\n        import_compiler19.types.variableDeclaration(\"const\", [\n          import_compiler19.types.variableDeclarator(\n            htmlRendererIdentifier,\n            callRuntime(\n              \"createRenderer\",\n              import_compiler19.types.arrowFunctionExpression(\n                [import_compiler19.types.identifier(\"input\"), tagVarIdentifier],\n                import_compiler19.types.blockStatement(renderContent)\n              )\n            )\n          )\n        ]),\n        import_compiler19.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler19.types.stringLiteral(program.hub.file.metadata.marko.id),\n            htmlRendererIdentifier\n          )\n        )\n      ]);\n    }\n  }\n};\nfunction replaceNode(node, container) {\n  return replaceBindingReadNode2(node) || replaceRegisteredFunctionNode2(node, container);\n}\nfunction replaceBindingReadNode2(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      const { extra } = node;\n      if (extra && !(extra.read && !extra.read.binding.declared || extra.binding && !extra.binding.declared)) {\n        return getReadReplacement(node);\n      }\n    }\n  }\n}\nfunction replaceRegisteredFunctionNode2(node, container) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.objectProperty(node.key, replacement);\n    }\n    case \"FunctionDeclaration\": {\n      const { extra } = node;\n      if (isRegisteredFnExtra(extra)) {\n        let registeredFnDeclarations = registeredFnDeclarationsByBody.get(\n          container\n        );\n        if (!registeredFnDeclarations) {\n          registeredFnDeclarationsByBody.set(\n            container,\n            registeredFnDeclarations = []\n          );\n        }\n        registeredFnDeclarations.push({\n          id: node.id.name,\n          registerId: extra.registerId\n        });\n      }\n      break;\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression2(node);\n    }\n    case \"BlockStatement\":\n    case \"MarkoScriptlet\":\n      addRegisteredDeclarations(node.body);\n      break;\n  }\n}\nvar registeredFnDeclarationsByBody = /* @__PURE__ */ new WeakMap();\nfunction addRegisteredDeclarations(body) {\n  const registeredFnDeclarations = registeredFnDeclarationsByBody.get(body);\n  if (registeredFnDeclarations) {\n    for (const { id, registerId } of registeredFnDeclarations) {\n      body.push(\n        import_compiler19.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler19.types.identifier(id),\n            import_compiler19.types.stringLiteral(registerId)\n          )\n        )\n      );\n    }\n  }\n}\nfunction getRegisteredFnExpression2(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    return callRuntime(\n      \"register\",\n      simplifyFunction(node),\n      import_compiler19.types.stringLiteral(extra.registerId),\n      (extra.referencedBindingsInFunction || extra.referencesScope) && getScopeIdIdentifier(extra.section)\n    );\n  }\n}\n\n// src/translator/visitors/program/index.ts\nvar currentProgramPath;\nvar cleanIdentifier;\nvar htmlRendererIdentifier;\nvar scopeIdentifier;\nfunction isScopeIdentifier(node) {\n  return node === scopeIdentifier;\n}\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      program.node.params = [import_compiler20.types.identifier(\"input\")];\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n      trackParamsReferences(program, 2 /* input */);\n      program.node.params[0].extra.binding.nullable = false;\n      const { scope } = program;\n      (program.node.extra ??= {}).domExports = {\n        template: scope.generateUid(\"template_\"),\n        walks: scope.generateUid(\"walks_\"),\n        setup: scope.generateUid(\"setup_\"),\n        params: void 0,\n        // TODO look into recursive components with fine grained params.\n        closures: scope.generateUid(\"closures_\")\n      };\n    },\n    exit(program) {\n      finalizeReferences();\n      const {\n        scope,\n        node: { extra }\n      } = program;\n      if (extra.binding && bindingHasDownstreamExpressions(extra.binding)) {\n        extra.domExports.params = buildTemplateExports(extra.binding, scope);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      htmlRendererIdentifier = isOutputHTML() ? program.scope.generateUidIdentifier(\"renderer\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        const entryFile = program.hub.file;\n        const visitedFiles = /* @__PURE__ */ new Set([\n          (0, import_babel_utils11.resolveRelativePath)(entryFile, entryFile.opts.filename)\n        ]);\n        entry_builder_default.visit(entryFile, entryFile, function visitChild(resolved) {\n          if (!visitedFiles.has(resolved)) {\n            visitedFiles.add(resolved);\n            const file = (0, import_babel_utils11.loadFileForImport)(entryFile, resolved);\n            if (file) {\n              entry_builder_default.visit(\n                file,\n                entryFile,\n                (id) => visitChild(resolveRelativeToEntry(entryFile, file, id))\n              );\n            }\n          }\n        });\n        program.node.body = entry_builder_default.build(entryFile);\n        program.skip();\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      if (program.node.extra?.needsCompat) {\n        const compatFile = getCompatRuntimeFile();\n        const body = [void 0];\n        for (const child of program.node.body) {\n          if (child.type === \"ImportDeclaration\" && child.source.value === compatFile) {\n            body[0] = child;\n          } else {\n            body.push(child);\n          }\n        }\n        body[0] ??= import_compiler20.types.importDeclaration([], import_compiler20.types.stringLiteral(compatFile));\n        program.node.body = body;\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\nfunction resolveRelativeToEntry(entryFile, file, req) {\n  return file === entryFile ? (0, import_babel_utils11.resolveRelativePath)(file, req) : (0, import_babel_utils11.resolveRelativePath)(\n    entryFile,\n    req[0] === \".\" ? import_path2.default.join(file.opts.filename, \"..\", req) : req\n  );\n}\nfunction buildTemplateExports(binding, scope) {\n  const templateExport = {\n    id: binding.export ??= scope.generateUid(binding.name + \"_\"),\n    props: void 0\n  };\n  const { aliases, propertyAliases, downstreamExpressions } = binding;\n  if (!downstreamExpressions.size) {\n    templateExport.props = {};\n    for (const [property, alias] of propertyAliases) {\n      templateExport.props[property] = buildTemplateExports(alias, scope);\n    }\n    for (const alias of aliases) {\n      const exports2 = buildTemplateExports(alias, scope);\n      if (exports2.props) {\n        templateExport.props = { ...templateExport.props, ...exports2.props };\n      } else {\n        templateExport.props = void 0;\n        return templateExport;\n      }\n    }\n  }\n  return templateExport;\n}\n\n// src/translator/util/get-root.ts\nfunction getMarkoRoot(path5) {\n  let curPath = path5;\n  do\n    curPath = curPath.parentPath;\n  while (curPath && !isMarko(curPath));\n  return curPath;\n}\nfunction getExprRoot(path5) {\n  let curPath = path5;\n  while (!isMarko(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path5) {\n  let curPath = path5;\n  if (curPath.isProgram()) return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarko(curPath)) return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarko(path5) {\n  switch (path5.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path5) {\n  switch (path5.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/util/with-previous-location.ts\nfunction withPreviousLocation(newNode, originalNode) {\n  newNode.start = originalNode.start;\n  newNode.loc = originalNode.loc;\n  newNode.end = originalNode.end;\n  return newNode;\n}\n\n// src/translator/util/references.ts\nvar [getBindings] = createProgramState(() => /* @__PURE__ */ new Set());\nvar [getNextBindingId, setNextBindingId] = createProgramState(() => 0);\nfunction createBinding(name2, type, section, upstreamAlias, upstreamExpression, property, loc = null, declared = false) {\n  const id = getNextBindingId();\n  const binding = {\n    id,\n    name: name2,\n    type,\n    loc,\n    section,\n    property,\n    declared,\n    excludeProperties: void 0,\n    serialize: false,\n    aliases: /* @__PURE__ */ new Set(),\n    propertyAliases: /* @__PURE__ */ new Map(),\n    upstreamAlias,\n    upstreamExpression,\n    downstreamExpressions: /* @__PURE__ */ new Set(),\n    export: void 0,\n    nullable: !upstreamExpression?.confident || upstreamExpression.computed == null\n  };\n  if (property) {\n    if (declared) upstreamAlias.nullable = false;\n    const propBinding = upstreamAlias.propertyAliases.get(property);\n    if (propBinding) {\n      binding.property = void 0;\n      binding.upstreamAlias = propBinding;\n      propBinding.aliases.add(binding);\n    } else {\n      upstreamAlias.propertyAliases.set(property, binding);\n    }\n  } else if (upstreamAlias) {\n    upstreamAlias.aliases.add(binding);\n  }\n  setNextBindingId(id + 1);\n  getBindings().add(binding);\n  return binding;\n}\nfunction trackVarReferences(tag, type, upstreamAlias, upstreamExpression) {\n  const tagVar = tag.node.var;\n  if (tagVar) {\n    const section = getOrCreateSection(tag);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    createBindingsAndTrackReferences(\n      tagVar,\n      type,\n      tag.scope,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    );\n  }\n}\nfunction trackParamsReferences(body, type, upstreamAlias, upstreamExpression) {\n  const params = body.node.params;\n  if (body.node.body.length && params.length) {\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    const section = getOrCreateSection(body);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    const paramsBinding = canonicalUpstreamAlias || ((body.node.extra ??= {}).binding = createBinding(\n      currentProgramPath.scope.generateUid(\"params_\"),\n      type,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    ));\n    section.params = paramsBinding;\n    for (let i = 0; i < params.length; i++) {\n      createBindingsAndTrackReferences(\n        params[i],\n        type,\n        body.scope,\n        section,\n        paramsBinding,\n        upstreamExpression,\n        i + \"\"\n      );\n    }\n  }\n}\nfunction trackReferencesForBinding(babelBinding) {\n  const { identifier, referencePaths, constantViolations } = babelBinding;\n  const binding = identifier.extra.binding;\n  for (const referencePath of referencePaths) {\n    trackReference(referencePath, binding);\n  }\n  for (const ref of constantViolations) {\n    if (ref.isUpdateExpression()) {\n      trackAssignment(ref.get(\"argument\"), binding);\n    } else if (ref.isAssignmentExpression()) {\n      trackAssignment(ref.get(\"left\"), binding);\n      if (ref.node.operator !== \"=\") {\n        const left = ref.get(\"left\");\n        if (left.isIdentifier()) {\n          trackReference(left, binding);\n        }\n      }\n    }\n  }\n}\nfunction trackAssignment(assignment, binding) {\n  const section = getOrCreateSection(assignment);\n  setReferencesScope(assignment);\n  forEachIdentifier(assignment.node, (id) => {\n    if (id.name === binding.name) {\n      const extra = id.extra ??= {};\n      extra.assignment = binding;\n      extra.section = section;\n    }\n  });\n}\nfunction setReferencesScope(path5) {\n  let fnRoot = getFnRoot(path5);\n  while (fnRoot) {\n    (fnRoot.node.extra ??= {}).referencesScope = true;\n    fnRoot = getFnRoot(fnRoot.parentPath);\n  }\n}\nfunction createBindingsAndTrackReferences(lVal, type, scope, section, upstreamAlias, upstreamExpression, property) {\n  switch (lVal.type) {\n    case \"Identifier\":\n      (lVal.extra ??= {}).binding = createBinding(\n        lVal.name,\n        type,\n        section,\n        upstreamAlias,\n        upstreamExpression,\n        property,\n        lVal.loc,\n        true\n      );\n      trackReferencesForBinding(scope.getBinding(lVal.name));\n      break;\n    case \"ObjectPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      for (const prop of lVal.properties) {\n        if (prop.type === \"RestElement\") {\n          createBindingsAndTrackReferences(\n            prop.argument,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            property\n          );\n        } else {\n          let key;\n          if (prop.key.type === \"Identifier\") {\n            key = prop.key.name;\n          } else if (prop.key.type === \"StringLiteral\") {\n            key = prop.key.value;\n          } else {\n            throw new Error(\"computed keys not supported in object pattern\");\n          }\n          createBindingsAndTrackReferences(\n            prop.value,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            key\n          );\n        }\n      }\n      break;\n    }\n    case \"ArrayPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      let i = -1;\n      for (const element of lVal.elements) {\n        i++;\n        if (element) {\n          if (element.type === \"RestElement\") {\n            createBindingsAndTrackReferences(\n              element.argument,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              property\n            );\n          } else {\n            createBindingsAndTrackReferences(\n              element,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              `${i}`\n            );\n          }\n        }\n      }\n      break;\n    }\n    case \"AssignmentPattern\":\n      createBindingsAndTrackReferences(\n        lVal.left,\n        type,\n        scope,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      );\n      break;\n  }\n}\nfunction trackReference(referencePath, binding) {\n  let root = referencePath;\n  let reference = binding;\n  let propPath = binding.name;\n  while (true) {\n    const { parent } = root;\n    if (!import_compiler21.types.isMemberExpression(parent)) break;\n    const prop = getMemberExpressionPropString(parent);\n    if (prop === void 0) break;\n    if (reference.propertyAliases.has(prop)) {\n      root = root.parentPath;\n      reference = reference.propertyAliases.get(prop);\n      propPath = reference.name;\n      continue;\n    }\n    if (root.parentPath.parentPath.isCallExpression() && !isEventOrChangeHandler(prop)) {\n      break;\n    }\n    root = root.parentPath;\n    reference = createBinding(\n      propPath += `_${prop.replace(/[^a-zA-Z0-9_$]/g, \"_\")}`,\n      reference.type,\n      reference.section,\n      reference,\n      void 0,\n      prop\n    );\n  }\n  const fnRoot = getFnRoot(root);\n  const exprRoot = getExprRoot(fnRoot || root);\n  const { section } = addReadToExpression(exprRoot, reference, root.node);\n  if (fnRoot) {\n    const readsByFn = getReadsByFunction();\n    const fnExtra = fnRoot.node.extra ??= {};\n    fnExtra.section = section;\n    readsByFn.set(\n      fnExtra,\n      push(readsByFn.get(fnExtra), {\n        binding: reference,\n        node: root.node\n      })\n    );\n  }\n}\nvar [getMergedReferences] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction mergeReferences(section, target, nodes) {\n  (target.extra ??= {}).section = section;\n  getMergedReferences().set(target, nodes);\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = bindingUtil.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeReferences() {\n  const bindings = getBindings();\n  const readsByExpression = getReadsByExpression();\n  const readsByFn = getReadsByFunction();\n  const mergedReferences = getMergedReferences();\n  if (mergedReferences.size) {\n    for (const [target, nodes] of mergedReferences) {\n      const targetExtra = target.extra;\n      let reads = readsByExpression.get(targetExtra);\n      let { isEffect } = targetExtra;\n      for (const node of nodes) {\n        const extra = node?.extra;\n        if (isReferencedExtra(extra)) {\n          isEffect ||= extra.isEffect;\n          const additionalReads = readsByExpression.get(extra);\n          if (additionalReads) {\n            reads = concat(reads, additionalReads);\n            readsByExpression.delete(extra);\n          }\n        }\n      }\n      readsByExpression.set(targetExtra, reads);\n      targetExtra.isEffect = isEffect;\n    }\n  }\n  const intersectionsBySection = /* @__PURE__ */ new Map();\n  for (const [expr, reads] of readsByExpression) {\n    if (isReferencedExtra(expr)) {\n      expr.referencedBindings = resolveReferencedBindings(\n        expr,\n        reads,\n        intersectionsBySection\n      );\n      forEach(expr.referencedBindings, (binding) => {\n        binding.downstreamExpressions.add(expr);\n      });\n    }\n  }\n  for (const [fn, reads] of readsByFn) {\n    fn.referencedBindingsInFunction = resolveReferencedBindings(\n      fn,\n      reads,\n      intersectionsBySection\n    );\n    forEach(fn.referencedBindingsInFunction, (binding) => {\n      binding.serialize = true;\n    });\n  }\n  for (const binding of bindings) {\n    if (binding.type !== 0 /* dom */ && !binding.upstreamAlias) {\n      pruneBinding(bindings, binding);\n    }\n  }\n  for (const binding of bindings) {\n    const { name: name2, section } = binding;\n    if (binding.type !== 0 /* dom */) {\n      if (find(section.bindings, ({ name: name3 }) => name3 === binding.name)) {\n        binding.name = currentProgramPath.scope.generateUid(name2);\n      }\n    }\n    section.bindings = bindingUtil.add(section.bindings, binding);\n    for (const {\n      referencedBindings,\n      isEffect,\n      section: section2\n    } of binding.downstreamExpressions) {\n      if (section2 !== binding.section) {\n        section2.closures = bindingUtil.add(section2.closures, binding);\n      }\n      if (isEffect) {\n        forEach(referencedBindings, (bindingReference) => {\n          bindingReference.serialize = true;\n        });\n      }\n    }\n  }\n  forEachSection((section) => {\n    const intersections = intersectionsBySection.get(section);\n    if (intersections) {\n      for (const intersection of intersections) {\n        const numReferences = intersection.length;\n        for (let i = 0; i < numReferences - 1; i++) {\n          for (let j = i + 1; j < numReferences; j++) {\n            const binding1 = intersection[i];\n            const binding2 = intersection[j];\n            const sources1 = getSourceBindings(binding1);\n            const sources2 = getSourceBindings(binding2);\n            if (!binding1.serialize && !isSuperset(sources1, sources2)) {\n              binding1.serialize = true;\n            }\n            if (!binding2.serialize && !isSuperset(sources2, sources1)) {\n              binding2.serialize = true;\n            }\n          }\n        }\n      }\n    }\n    forEach(section.closures, (binding) => {\n      if (!binding.serialize) {\n        let serialize = false;\n        const sourceSection = binding.section;\n        let currentSection = section;\n        while (currentSection !== sourceSection && !(serialize = !currentSection.upstreamExpression || isStatefulReferences(\n          currentSection.upstreamExpression.referencedBindings\n        ))) {\n          currentSection = currentSection.parent;\n        }\n        binding.serialize = serialize;\n      }\n    });\n  });\n  forEachSection(({ id, bindings: bindings2 }) => {\n    forEach(\n      filter(bindings2, ({ section }) => section.id === id),\n      (binding, i) => {\n        binding.id = i;\n      }\n    );\n  });\n  mergedReferences.clear();\n  readsByExpression.clear();\n  readsByFn.clear();\n}\nfunction isSuperset(set, subset) {\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getSourceBindings(binding) {\n  const derived = /* @__PURE__ */ new Set();\n  const sources = /* @__PURE__ */ new Set();\n  crawl(binding);\n  return sources;\n  function crawl(binding2) {\n    if (binding2.type === 4 /* derived */ || binding2.type === 3 /* param */) {\n      let alias;\n      let curBinding = binding2;\n      while (alias = curBinding.upstreamAlias) {\n        curBinding = alias;\n      }\n      if (curBinding.upstreamExpression) {\n        if (derived.has(curBinding)) return;\n        derived.add(curBinding);\n        forEach(curBinding.upstreamExpression.referencedBindings, crawl);\n      } else {\n        sources.add(curBinding);\n      }\n    } else {\n      sources.add(binding2);\n    }\n  }\n}\nvar bindingUtil = new Sorted(function compareBindings(a, b) {\n  return a.section.id - b.section.id || a.type !== b.type && (a.type === 0 /* dom */ || b.type === 0 /* dom */) ? a.type - b.type || a.id - b.id : a.id - b.id;\n});\nvar [getReadsByExpression] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nvar [getReadsByFunction] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction addReadToExpression(path5, binding, node) {\n  const exprExtra = path5.node.extra ??= {};\n  const readsByExpression = getReadsByExpression();\n  exprExtra.section = getOrCreateSection(path5);\n  readsByExpression.set(\n    exprExtra,\n    push(readsByExpression.get(exprExtra), { binding, node })\n  );\n  return exprExtra;\n}\nfunction dropReferences(node) {\n  if (Array.isArray(node)) {\n    for (const item of node) {\n      (item.extra ??= {}).pruned = true;\n    }\n  } else {\n    (node.extra ??= {}).pruned = true;\n  }\n}\nfunction getCanonicalBinding(binding) {\n  return binding && (binding.property ? binding : binding.upstreamAlias || binding);\n}\nfunction getAllTagReferenceNodes(tag, referenceNodes = []) {\n  if (tag.arguments) {\n    for (const arg of tag.arguments) {\n      referenceNodes.push(arg);\n    }\n  }\n  for (const attr2 of tag.attributes) {\n    referenceNodes.push(attr2.value);\n  }\n  for (const child of tag.body.attributeTags ? tag.body.body : tag.attributeTags) {\n    switch (child.type) {\n      case \"MarkoTag\":\n        getAllTagReferenceNodes(child, referenceNodes);\n        break;\n      case \"MarkoScriptlet\":\n        for (const statement of child.body) {\n          referenceNodes.push(statement);\n        }\n        break;\n    }\n  }\n  return referenceNodes;\n}\nfunction getScopeAccessorLiteral(binding) {\n  if (isOptimize()) {\n    return import_compiler21.types.numericLiteral(binding.id);\n  }\n  return import_compiler21.types.stringLiteral(\n    binding.name + (binding.type === 0 /* dom */ ? `/${binding.id}` : \"\")\n  );\n}\nfunction getReadReplacement(node) {\n  const { extra } = node;\n  if (!extra) return;\n  let { binding, read } = extra;\n  let replacement;\n  if (read) {\n    if (read.props === void 0) {\n      binding = read.binding;\n      read = void 0;\n    } else {\n      binding = void 0;\n    }\n  }\n  if (binding) {\n    if (node.type === \"Identifier\") {\n      if (binding.name !== node.name) {\n        node.name = binding.name;\n      }\n    } else {\n      replacement = import_compiler21.types.identifier(binding.name);\n    }\n  } else if (read) {\n    replacement = toMemberExpression(\n      import_compiler21.types.identifier(read.binding.name),\n      Array.isArray(read.props) ? read.props[0] : read.props\n    );\n    if (Array.isArray(read.props)) {\n      for (let i = 1; i < read.props.length; i++) {\n        replacement = toMemberExpression(replacement, read.props[i]);\n      }\n    }\n  }\n  return replacement && withPreviousLocation(replacement, node);\n}\nfunction pruneBinding(bindings, binding) {\n  let shouldPrune = !binding.downstreamExpressions.size;\n  for (const alias of binding.aliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.aliases.delete(alias);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  for (const [key, alias] of binding.propertyAliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.propertyAliases.delete(key);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  if (shouldPrune) {\n    bindings.delete(binding);\n  }\n  return shouldPrune;\n}\nfunction resolveReferencedBindings(expr, reads, intersectionsBySection) {\n  let referencedBindings;\n  if (Array.isArray(reads)) {\n    for (const read of reads) {\n      let { binding } = read;\n      if (read.node) {\n        const exprReference = (read.node.extra ??= {}).read ??= resolveExpressionReference(reads, binding, void 0);\n        ({ binding } = (read.node.extra ??= {}).read = exprReference);\n      }\n      referencedBindings = bindingUtil.add(referencedBindings, binding);\n    }\n  } else if (reads) {\n    if (reads.node) {\n      (reads.node.extra ??= {}).read = createRead(reads.binding, void 0);\n    }\n    referencedBindings = reads.binding;\n  }\n  if (Array.isArray(referencedBindings)) {\n    const intersections = intersectionsBySection.get(expr.section) || [];\n    const intersection = findSorted(\n      compareIntersections,\n      intersections,\n      referencedBindings\n    );\n    if (intersection) {\n      referencedBindings = intersection;\n    } else {\n      intersectionsBySection.set(\n        expr.section,\n        addSorted(compareIntersections, intersections, referencedBindings)\n      );\n    }\n  }\n  return referencedBindings;\n}\nfunction resolveExpressionReference(reads, readBinding, readProps) {\n  const { upstreamAlias } = readBinding;\n  if (upstreamAlias && Array.isArray(reads)) {\n    const prop = getCanonicalProperty(readBinding);\n    const aliasProps = prop === void 0 ? readProps : push(readProps, prop);\n    for (const { binding } of reads) {\n      if (binding !== readBinding) {\n        let alias = upstreamAlias;\n        while (alias) {\n          if (binding === alias) {\n            return resolveExpressionReference(reads, alias, aliasProps);\n          }\n          alias = alias.upstreamAlias;\n        }\n      }\n    }\n  }\n  return createRead(readBinding, readProps);\n}\nfunction getCanonicalProperty(binding) {\n  return binding.property ?? binding.upstreamAlias?.property;\n}\nfunction createRead(binding, props) {\n  return { binding, props };\n}\nfunction getMemberExpressionPropString(expr) {\n  switch (expr.property.type) {\n    case \"StringLiteral\":\n      return expr.property.value;\n    case \"NumericLiteral\":\n      return \"\" + expr.property.value;\n    case \"Identifier\":\n      if (expr.computed) return;\n      return expr.property.name;\n  }\n}\nfunction isEventOrChangeHandler(prop) {\n  return /^on[-A-Z][a-zA-Z0-9_$]|[a-zA-Z_$][a-zA-Z0-9_$]*Change$/.test(prop);\n}\nfunction isReferencedExtra(extra) {\n  return !!(extra && !extra.pruned && extra.section);\n}\nfunction isAssignedBindingExtra(extra) {\n  return isReferencedExtra(extra) && extra.assignment !== void 0;\n}\nfunction isRegisteredFnExtra(extra) {\n  return isReferencedExtra(extra) && extra.registerId !== void 0;\n}\n\n// src/translator/util/is-stateful.ts\nfunction isStatefulReferences(referencedBindings) {\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        if (isStatefulBinding(ref)) {\n          return true;\n        }\n      }\n    } else {\n      return isStatefulBinding(referencedBindings);\n    }\n  }\n  return false;\n}\nfunction isStatefulBinding(binding) {\n  switch (binding.type) {\n    case 1 /* let */:\n    case 2 /* input */:\n      return true;\n    default:\n      return !binding.upstreamExpression || isStatefulReferences(binding.upstreamExpression.referencedBindings);\n  }\n}\n\n// src/translator/core/await.ts\nvar await_default = {\n  analyze(tag) {\n    (0, import_babel_utils12.assertNoVar)(tag);\n    (0, import_babel_utils12.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    (0, import_babel_utils12.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler22.types.isMarkoAttribute(valueAttr) || valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports the `value` attribute.\"\n      );\n    }\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires body content.\");\n    }\n    if (node.body.params.length && (node.body.params.length > 1 || import_compiler22.types.isSpreadElement(node.body.params[0]))) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports a single parameter.\"\n      );\n    }\n    getOrCreateSection(tag);\n    trackParamsReferences(\n      tag.get(\"body\"),\n      4 /* derived */,\n      void 0,\n      evaluate(valueAttr.value)\n    );\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const { node } = tag;\n        const [valueAttr] = node.attributes;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isStatefulReferences(valueAttr.extra?.referencedBindings) || checkStatefulClosures(bodySection, true)) {\n          setForceResumeScope(bodySection);\n        }\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.replaceWith(\n          import_compiler22.types.expressionStatement(\n            callRuntime(\n              \"fork\",\n              valueAttr.value,\n              import_compiler22.types.arrowFunctionExpression(\n                node.body.params,\n                toFirstExpressionOrBlock(node.body.body)\n              )\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to consume asynchronous an data.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#await\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/await.d.marko\"\n};\n\n// src/translator/core/client.ts\nvar import_compiler23 = require(\"@marko/compiler\");\nvar import_babel_utils13 = require(\"@marko/compiler/babel-utils\");\nvar client_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^client\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils13.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler23.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler23.types.markoScriptlet(body, true, \"client\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"client <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the client.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#client-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/const.ts\nvar import_compiler25 = require(\"@marko/compiler\");\nvar import_babel_utils14 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/translate-var.ts\nvar import_compiler24 = require(\"@marko/compiler\");\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.insertBefore(\n    import_compiler24.types.variableDeclaration(kind, [import_compiler24.types.variableDeclarator(tagVar, initialValue)])\n  );\n}\n\n// src/translator/core/const.ts\nvar const_default = {\n  analyze(tag) {\n    (0, import_babel_utils14.assertNoArgs)(tag);\n    (0, import_babel_utils14.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a tag variable.\");\n    }\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler25.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `const` tag only supports the `value` attribute.\"\n      );\n    }\n    const upstreamAlias = import_compiler25.types.isIdentifier(valueAttr.value) ? tag.scope.getBinding(valueAttr.value.name)?.identifier.extra?.binding : void 0;\n    trackVarReferences(\n      tag,\n      4 /* derived */,\n      upstreamAlias,\n      evaluate(valueAttr.value)\n      // TODO could perform a more extensive \"nullable\" check.\n    );\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      const { value } = valueAttr;\n      if (isOutputDOM()) {\n        const section = getSection(tag);\n        const varBinding = node.var.extra?.binding;\n        if (varBinding && !varBinding.upstreamAlias) {\n          const derivation = initValue(varBinding);\n          addValue(section, value.extra?.referencedBindings, derivation, value);\n        }\n      } else {\n        translateVar(tag, value);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/const.d.marko\"\n};\n\n// src/translator/core/debug.ts\nvar import_compiler26 = require(\"@marko/compiler\");\nvar import_babel_utils15 = require(\"@marko/compiler/babel-utils\");\nvar debug_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils15.assertNoVar)(tag);\n    (0, import_babel_utils15.assertNoArgs)(tag);\n    (0, import_babel_utils15.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (tag.node.attributes.length > 1 || tag.node.attributes.length === 1 && (!import_compiler26.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\")) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `debug` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const referencedBindings = valueAttr?.value.extra?.referencedBindings;\n      const statement = withPreviousLocation(import_compiler26.types.debuggerStatement(), tag.node);\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Debug on value change.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#debug\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/debug.d.marko\"\n};\n\n// src/translator/core/define.ts\nvar import_compiler31 = require(\"@marko/compiler\");\nvar import_babel_utils20 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/nested-attribute-tags.ts\nvar import_compiler27 = require(\"@marko/compiler\");\nvar import_babel_utils16 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-parent-tag.ts\nfunction getParentTag(tag) {\n  const parent = tag.parent.type === \"MarkoTagBody\" ? tag.parentPath.parentPath : tag.parentPath;\n  if (parent.type === \"MarkoTag\") {\n    return parent;\n  }\n}\n\n// src/translator/util/nested-attribute-tags.ts\nvar attrTagToIdentifierLookup = /* @__PURE__ */ new WeakMap();\nfunction getAttrTagIdentifier(meta) {\n  let name2 = attrTagToIdentifierLookup.get(meta);\n  if (!name2) {\n    name2 = currentProgramPath.scope.generateUid(meta.name);\n    attrTagToIdentifierLookup.set(meta, name2);\n  }\n  return import_compiler27.types.identifier(name2);\n}\nfunction analyzeAttributeTags(tag) {\n  if (tag.node.extra?.attributeTags) return tag.node.extra.attributeTags;\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  if (!attrTags2.length) return;\n  const tagExtra = tag.node.extra ??= {};\n  const lookup = tagExtra.attributeTags = {};\n  const attrTagNodesByName = {};\n  const sampleAttrTagsForControlFlow = /* @__PURE__ */ new Map();\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const name2 = getTagName(child);\n        lookup[name2] ||= createAttrTagMeta(name2, [name2]);\n        analyzeAttributeTags(child);\n      } else {\n        const isRepeated = (0, import_babel_utils16.isLoopTag)(child);\n        let curGroup;\n        for (const name2 of crawlAttrTags(child, attrTagNodesByName)) {\n          const oldMeta = lookup[name2];\n          if (oldMeta) {\n            if (!curGroup) {\n              curGroup = oldMeta.group;\n            } else if (curGroup !== oldMeta.group) {\n              for (const name3 of oldMeta.group) {\n                lookup[name3].group = curGroup;\n                curGroup.push(name3);\n              }\n            }\n          }\n          let attrTagMeta = lookup[name2];\n          if (!attrTagMeta) {\n            attrTagMeta = lookup[name2] = createAttrTagMeta(name2, []);\n            curGroup = attrTagMeta.group;\n            curGroup.push(name2);\n          }\n          attrTagMeta.dynamic = true;\n          if (isRepeated) {\n            attrTagMeta.repeated = true;\n          }\n          sampleAttrTagsForControlFlow.set(child, name2);\n        }\n      }\n    }\n  }\n  for (const [controlFlowTag, sampleAttrName] of sampleAttrTagsForControlFlow) {\n    (controlFlowTag.node.extra ??= {}).attributeTagGroup = lookup[sampleAttrName].group;\n  }\n  for (const name2 in attrTagNodesByName) {\n    const attrTagMeta = lookup[name2];\n    if (!attrTagMeta.repeated) {\n      const attrTagNodes = attrTagNodesByName[name2];\n      if (attrTagNodes.length > 1) {\n        attrTagMeta.repeated = !attrTagMeta.dynamic || hasRepeatedDynamicAttrTags(attrTagNodes);\n      }\n    }\n  }\n  return lookup;\n}\nfunction createAttrTagMeta(name2, group) {\n  return {\n    name: name2.slice(1),\n    dynamic: false,\n    repeated: false,\n    group\n  };\n}\nfunction crawlAttrTags(tag, attrTagNodesByName, attrTagNames = /* @__PURE__ */ new Set()) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const tagName = getTagName(child);\n        attrTagNames.add(tagName);\n        (attrTagNodesByName[tagName] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        crawlAttrTags(child, attrTagNodesByName, attrTagNames);\n      }\n    }\n  }\n  return attrTagNames;\n}\nfunction hasRepeatedDynamicAttrTags(attrTags2) {\n  let conditionRoot;\n  const seenBranches = /* @__PURE__ */ new Set();\n  for (const attrTag2 of attrTags2) {\n    const parentTag = getParentTag(attrTag2);\n    if (seenBranches.has(parentTag) || !isConditionTag(parentTag)) {\n      return true;\n    }\n    const curConditionRoot = getConditionRoot(parentTag);\n    if (curConditionRoot && curConditionRoot !== (conditionRoot ||= curConditionRoot)) {\n      return true;\n    }\n    seenBranches.add(parentTag);\n  }\n  return false;\n}\nfunction getConditionRoot(tag) {\n  if (getTagName(tag) === \"if\") return tag;\n  let prev = tag.getPrevSibling();\n  while (prev.node) {\n    if (prev.isMarkoTag() && getTagName(prev) === \"if\") {\n      return prev;\n    }\n    prev = prev.getPrevSibling();\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar import_compiler30 = require(\"@marko/compiler\");\nvar import_babel_utils19 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/for.ts\nvar import_compiler29 = require(\"@marko/compiler\");\nvar import_babel_utils18 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/native-tag.ts\nvar import_compiler28 = require(\"@marko/compiler\");\nvar import_babel_utils17 = require(\"@marko/compiler/babel-utils\");\nvar kNativeTagBinding = Symbol(\"native tag binding\");\nvar kSerializeMarker = Symbol(\"serialize marker\");\nvar kGetterId = Symbol(\"node getter id\");\nvar htmlSelectArgs = /* @__PURE__ */ new WeakMap();\nfunction assertExclusiveControllableGroups(tag, attrs2) {\n  const exclusiveGroups = [\n    attrs2.open || attrs2.openChange,\n    attrs2.checked || attrs2.checkedChange,\n    attrs2.checkedValue || attrs2.checkedValueChange,\n    attrs2.valueChange\n  ].filter(Boolean);\n  if (exclusiveGroups.length > 1) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The attributes ${exclusiveGroups.map((attr2) => `\"${attr2.name}\"`).join(\", \")} are mutually exclusive.`\n    );\n  }\n}\nfunction getRelatedControllable(tagName, attrs2) {\n  switch (tagName) {\n    case \"input\":\n      if (attrs2.checked || attrs2.checkedChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_checked\",\n          attrs: [attrs2.checked, attrs2.checkedChange]\n        };\n      }\n      if (attrs2.checkedValue || attrs2.checkedValueChange) {\n        return {\n          special: true,\n          helper: \"controllable_input_checkedValue\",\n          attrs: [attrs2.checkedValue, attrs2.checkedValueChange, attrs2.value]\n        };\n      }\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"select\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_select_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"textarea\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_textarea_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"details\":\n    case \"dialog\":\n      if (attrs2.open || attrs2.openChange) {\n        return {\n          special: false,\n          helper: \"controllable_detailsOrDialog_open\",\n          attrs: [attrs2.open, attrs2.openChange]\n        };\n      }\n      break;\n  }\n}\nvar native_tag_default = {\n  transform: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      if (tagName === \"textarea\" && tag.node.body.body.length) {\n        const parts = [];\n        for (const child of tag.node.body.body) {\n          if (child.type === \"MarkoText\" || child.type === \"MarkoPlaceholder\" && child.escape) {\n            parts.push(child.value);\n          } else {\n            throw tag.hub.file.hub.buildError(\n              child,\n              \"Unexpected content in textarea, only text and placeholders are supported.\",\n              SyntaxError\n            );\n          }\n        }\n        tag.node.attributes.push(\n          import_compiler28.types.markoAttribute(\n            \"value\",\n            normalizeStringExpression(parts) || buildUndefined()\n          )\n        );\n        tag.node.body.body = [];\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils17.assertNoArgs)(tag);\n      (0, import_babel_utils17.assertNoParams)(tag);\n      (0, import_babel_utils17.assertNoAttributeTags)(tag);\n      const { node } = tag;\n      if (node.var && !import_compiler28.types.isIdentifier(node.var)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"Tag variables on native elements cannot be destructured.\"\n        );\n      }\n      const tagName = getTagName(tag);\n      const section = getOrCreateSection(tag);\n      let hasEventHandlers = false;\n      let hasDynamicAttributes = false;\n      const seen = {};\n      const { attributes } = tag.node;\n      let relatedControllable;\n      let spreadReferenceNodes;\n      for (let i = attributes.length; i--; ) {\n        const attr2 = attributes[i];\n        if (import_compiler28.types.isMarkoAttribute(attr2)) {\n          if (seen[attr2.name]) {\n            dropReferences(attr2.value);\n            continue;\n          }\n          seen[attr2.name] = attr2;\n          if (isEventHandler(attr2.name) || isChangeHandler(attr2.name)) {\n            (attr2.value.extra ??= {}).isEffect = true;\n            hasEventHandlers = true;\n          } else if (!evaluate(attr2.value).confident) {\n            hasDynamicAttributes = true;\n          }\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          hasEventHandlers = true;\n          hasDynamicAttributes = true;\n          (attr2.value.extra ??= {}).isEffect = true;\n        }\n        if (spreadReferenceNodes) {\n          spreadReferenceNodes.push(attr2.value);\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          spreadReferenceNodes = [attr2.value];\n          relatedControllable = getRelatedControllable(tagName, seen);\n        }\n      }\n      assertExclusiveControllableGroups(tag, seen);\n      if (spreadReferenceNodes) {\n        if (relatedControllable && !relatedControllable.attrs.every(Boolean)) {\n          for (const attr2 of relatedControllable.attrs) {\n            if (attr2) {\n              spreadReferenceNodes.push(attr2.value);\n            }\n          }\n          relatedControllable = void 0;\n        }\n        mergeReferences(section, tag.node, spreadReferenceNodes);\n      } else {\n        relatedControllable = getRelatedControllable(tagName, seen);\n      }\n      if (relatedControllable) {\n        mergeReferences(\n          section,\n          relatedControllable.attrs.find(Boolean).value,\n          relatedControllable.attrs.map((it) => it?.value)\n        );\n      }\n      if (node.var || hasEventHandlers || hasDynamicAttributes) {\n        currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n        const tagName2 = node.name.type === \"StringLiteral\" ? node.name.value : import_compiler28.types.toIdentifier(tag.get(\"name\"));\n        const tagExtra = node.extra ??= {};\n        const bindingName = \"#\" + tagName2;\n        tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n        tagExtra[kNativeTagBinding] = createBinding(\n          bindingName,\n          0 /* dom */,\n          section\n        );\n        if (node.var) {\n          for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n            setReferencesScope(ref);\n            if (!isInvokedFunction(ref)) {\n              tagExtra[kGetterId] = getRegisterUID(section, bindingName);\n              break;\n            }\n          }\n        }\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const name2 = tag.get(\"name\");\n      const tagDef = (0, import_babel_utils17.getTagDef)(tag);\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        const getterId = extra[kGetterId];\n        if (isHTML) {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          for (const reference of references) {\n            let currentSection = getSection(reference);\n            while (currentSection !== section && currentSection.parent) {\n              getSerializedScopeProperties(currentSection).set(\n                import_compiler28.types.stringLiteral(\"_\"),\n                callRuntime(\n                  \"ensureScopeWithId\",\n                  getScopeIdIdentifier(\n                    currentSection = currentSection.parent\n                  )\n                )\n              );\n            }\n          }\n          translateVar(\n            tag,\n            callRuntime(\n              \"nodeRef\",\n              getterId && getScopeIdIdentifier(section),\n              getterId && import_compiler28.types.stringLiteral(getterId)\n            )\n          );\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let getterFnIdentifier;\n          if (getterId) {\n            getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n              `get_${varName}`\n            );\n            currentProgramPath.pushContainer(\n              \"body\",\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(\n                  getterFnIdentifier,\n                  callRuntime(\n                    \"nodeRef\",\n                    import_compiler28.types.stringLiteral(getterId),\n                    getScopeAccessorLiteral(nodeRef2)\n                  )\n                )\n              ])\n            );\n          }\n          for (const reference of references) {\n            const referenceSection = getSection(reference);\n            if (isInvokedFunction(reference)) {\n              reference.parentPath.replaceWith(\n                import_compiler28.types.expressionStatement(\n                  createScopeReadExpression(referenceSection, nodeRef2)\n                )\n              );\n            } else if (getterFnIdentifier) {\n              reference.replaceWith(\n                import_compiler28.types.callExpression(getterFnIdentifier, [\n                  getScopeExpression(referenceSection, getSection(tag))\n                ])\n              );\n            }\n          }\n        }\n      }\n      let visitAccessor;\n      if (nodeRef2) {\n        visitAccessor = getScopeAccessorLiteral(nodeRef2);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name2.node}`;\n      const usedAttrs = getUsedAttrs(tagName, tag.node);\n      const { staticAttrs, staticControllable, skipExpression } = usedAttrs;\n      let { spreadExpression } = usedAttrs;\n      if (staticControllable) {\n        const { helper, attrs: attrs2 } = staticControllable;\n        const firstAttr = attrs2.find(Boolean);\n        const referencedBindings = firstAttr.value.extra?.referencedBindings;\n        const values = attrs2.map((attr2) => attr2?.value);\n        if (isHTML) {\n          if (tagName !== \"select\" && tagName !== \"textarea\") {\n            write2`${callRuntime(helper, getScopeIdIdentifier(section), visitAccessor, ...values)}`;\n          }\n          addHTMLEffectCall(section, void 0);\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(helper, scopeIdentifier, visitAccessor, ...values)\n            )\n          );\n          addStatement(\n            \"effect\",\n            section,\n            void 0,\n            import_compiler28.types.expressionStatement(\n              callRuntime(`${helper}_effect`, scopeIdentifier, visitAccessor)\n            )\n          );\n        }\n      }\n      let writeAtStartOfBody;\n      if (isHTML) {\n        if (tagName === \"select\") {\n          if (staticControllable) {\n            htmlSelectArgs.set(tag.node, {\n              value: staticControllable.attrs[0]?.value || buildUndefined(),\n              valueChange: staticControllable.attrs[1]?.value || buildUndefined()\n            });\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"select_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            htmlSelectArgs.set(tag.node, {\n              value: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"value\")\n              ),\n              valueChange: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"valueChange\")\n              )\n            });\n            spreadExpression = spreadIdentifier;\n          }\n        } else if (tagName === \"textarea\") {\n          let value;\n          let valueChange;\n          if (staticControllable) {\n            value = staticControllable.attrs[0]?.value;\n            valueChange = staticControllable.attrs[1]?.value;\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"textarea_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            value = import_compiler28.types.memberExpression(spreadIdentifier, import_compiler28.types.identifier(\"value\"));\n            valueChange = import_compiler28.types.memberExpression(\n              spreadIdentifier,\n              import_compiler28.types.identifier(\"valueChange\")\n            );\n            spreadExpression = spreadIdentifier;\n          }\n          if (value || valueChange) {\n            writeAtStartOfBody = callRuntime(\n              \"controllable_textarea_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              value,\n              valueChange\n            );\n          }\n        }\n      }\n      for (const attr2 of staticAttrs) {\n        const { name: name3, value } = attr2;\n        const { confident, computed } = value.extra || {};\n        const valueReferences = value.extra?.referencedBindings;\n        if (isHTML && tagName === \"option\" && name3 === \"value\") {\n          write2`${callRuntime(\"optionValueAttr\", value)}`;\n          continue;\n        }\n        switch (name3) {\n          case \"class\":\n          case \"style\": {\n            const helper = `${name3}Attr`;\n            if (confident) {\n              write2`${getHTMLRuntime()[helper](computed)}`;\n            } else if (isHTML) {\n              write2`${callRuntime(helper, value)}`;\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    helper,\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n          }\n          default:\n            if (confident) {\n              write2`${getHTMLRuntime().attr(name3, computed)}`;\n            } else if (isHTML) {\n              if (isEventHandler(name3)) {\n                addHTMLEffectCall(section, valueReferences);\n              } else {\n                write2`${callRuntime(\"attr\", import_compiler28.types.stringLiteral(name3), value)}`;\n              }\n            } else if (isEventHandler(name3)) {\n              addStatement(\n                \"effect\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"on\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(getEventHandlerName(name3)),\n                    value\n                  )\n                )\n              );\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"attr\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(name3),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n        }\n      }\n      if (spreadExpression) {\n        if (isHTML) {\n          addHTMLEffectCall(section, extra.referencedBindings);\n          if (skipExpression) {\n            write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          } else {\n            write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          }\n        } else {\n          if (skipExpression) {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"partialAttrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression,\n                  skipExpression\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"attrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression\n                )\n              )\n            );\n          }\n          addStatement(\n            \"effect\",\n            section,\n            extra.referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n            ),\n            false\n          );\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(import_compiler28.types.ifStatement(name2.node, consumeHTML(tag)))[0].skip();\n      }\n      if (writeAtStartOfBody) {\n        write2`${writeAtStartOfBody}`;\n      }\n      enter2(tag);\n    },\n    exit(tag) {\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const openTagOnly = (0, import_babel_utils17.getTagDef)(tag)?.parseOptions?.openTagOnly;\n      const selectArgs = isHTML && htmlSelectArgs.get(tag.node);\n      const tagName = getTagName(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      if (selectArgs) {\n        writeTo(tag)`</${tag.node.name}>`;\n        flushInto(tag);\n        tag.insertBefore(\n          import_compiler28.types.expressionStatement(\n            callRuntime(\n              \"controllable_select_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              selectArgs.value,\n              selectArgs.valueChange,\n              import_compiler28.types.arrowFunctionExpression(\n                [],\n                import_compiler28.types.blockStatement(tag.node.body.body)\n              )\n            )\n          )\n        );\n      } else {\n        tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      }\n      if (!openTagOnly && !selectArgs) {\n        writeTo(\n          tag,\n          isHTML && (tagName === \"html\" || tagName === \"body\")\n        )`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(\n          import_compiler28.types.ifStatement(tag.node.name, consumeHTML(tag))\n        )[0].skip();\n      }\n      if (nodeRef2 && (extra[kSerializeMarker] || isStatefulReferences(extra.referencedBindings) || tag.node.attributes.some(\n        (attr2) => isStatefulReferences(attr2.value.extra?.referencedBindings)\n      ))) {\n        markNode(tag, nodeRef2);\n      }\n      exit2(tag);\n      tag.remove();\n    }\n  }\n};\nfunction getUsedAttrs(tagName, tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  let staticControllable;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n        staticControllable = getRelatedControllable(tagName, seen);\n        if (staticControllable && !staticControllable.attrs.every(Boolean)) {\n          for (const attr3 of staticControllable.attrs) {\n            if (attr3) {\n              spreadProps.push(toObjectProperty(attr3.name, attr3.value));\n              maybeStaticAttrs.delete(attr3);\n            }\n          }\n          staticControllable = void 0;\n        }\n      }\n      spreadProps.push(import_compiler28.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  if (!spreadProps) {\n    staticControllable = getRelatedControllable(tagName, seen);\n    if (staticControllable?.special === false && !staticControllable.attrs[1]) {\n      staticControllable = void 0;\n    }\n  }\n  if (staticControllable) {\n    for (const attr2 of staticControllable.attrs) {\n      if (attr2) {\n        maybeStaticAttrs.delete(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    if (staticControllable) {\n      for (const attr2 of staticControllable.attrs) {\n        if (attr2) {\n          (skipProps ||= []).push(\n            toObjectProperty(attr2.name, import_compiler28.types.numericLiteral(1))\n          );\n        }\n      }\n    }\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler28.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler28.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    staticControllable,\n    spreadExpression,\n    skipExpression\n  };\n}\nfunction isChangeHandler(propName) {\n  return /^(?:value|checked(?:Value)?|open)Change/.test(propName);\n}\nfunction buildUndefined() {\n  return import_compiler28.types.unaryExpression(\"void\", import_compiler28.types.numericLiteral(0));\n}\nfunction isInvokedFunction(expr) {\n  const { parent, node } = expr;\n  return parent.type === \"CallExpression\" && parent.callee === node;\n}\n\n// src/translator/core/for.ts\nvar kForMarkerBinding = Symbol(\"for marker binding\");\nvar kOnlyChildInParent = Symbol(\"only child in parent\");\nvar for_default = {\n  analyze(tag) {\n    const tagExtra = tag.node.extra ??= {};\n    const isAttrTag = tag.node.body.attributeTags;\n    let allowAttrs;\n    (0, import_babel_utils18.assertNoVar)(tag);\n    (0, import_babel_utils18.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    switch (getForType(tag.node)) {\n      case \"of\":\n        allowAttrs = [\"of\"];\n        break;\n      case \"in\":\n        allowAttrs = [\"in\"];\n        break;\n      case \"to\":\n        allowAttrs = [\"to\", \"from\", \"step\"];\n        break;\n      default:\n        throw tag.buildCodeFrameError(\n          \"Invalid `for` tag, missing an `of=`, `in=`, `to=` attribute.\"\n        );\n    }\n    if (!isAttrTag) {\n      allowAttrs.push(\"by\");\n    }\n    (0, import_babel_utils18.assertAllowedAttributes)(tag, allowAttrs);\n    if (isAttrTag) return;\n    const tagBody = tag.get(\"body\");\n    const bodySection = startSection(tagBody);\n    if (!bodySection) {\n      dropReferences(getAllTagReferenceNodes(tag.node));\n      return;\n    }\n    bodySection.isBranch = true;\n    const section = getOrCreateSection(tag);\n    if (isOnlyChildInParent(tag)) {\n      const parentTag = getParentTag(tag).node;\n      const parentTagName = parentTag.name?.value;\n      (parentTag.extra ??= {})[kNativeTagBinding] ??= createBinding(\n        \"#\" + parentTagName,\n        0 /* dom */,\n        section\n      );\n    } else {\n      tagExtra[kForMarkerBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section\n      );\n    }\n    trackParamsReferences(tagBody, 3 /* param */, void 0, tagExtra);\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    bodySection.upstreamExpression = tagExtra;\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const isStateful = isStatefulReferences(tagExtra.referencedBindings);\n        const parentTag = getParentTag(tag);\n        const nodeRef2 = isOnlyChildInParent(tag) ? parentTag.node.extra[kNativeTagBinding] : tag.node.extra[kForMarkerBinding];\n        const forAttrs = getKnownAttrValues(node);\n        const forType = getForType(node);\n        const params = node.body.params;\n        const statements = [];\n        const bodyStatements = node.body.body;\n        const hasStatefulClosures = checkStatefulClosures(bodySection, true);\n        const singleNodeOptimization = bodySection.content === null || bodySection.content.singleChild;\n        let keyExpression;\n        if (isStateful && isOnlyChildInParent(tag)) {\n          parentTag.node.extra[kSerializeMarker] = true;\n        }\n        if (isStateful || hasStatefulClosures) {\n          const defaultParamNames = {\n            of: [\"list\", \"index\"],\n            in: [\"key\", \"value\"],\n            to: [\"value\"]\n          }[forType];\n          const defaultByParamIndex = forType === \"of\" ? 1 : 0;\n          const requiredParamsIndex = forAttrs.by ? defaultParamNames.length - 1 : defaultByParamIndex;\n          setForceResumeScope(bodySection);\n          for (let i = 0; i <= requiredParamsIndex; i++) {\n            const existingParam = params[i];\n            if (!existingParam || !import_compiler29.types.isIdentifier(existingParam)) {\n              const id = params[i] = currentProgramPath.scope.generateUidIdentifier(\n                defaultParamNames[i]\n              );\n              if (existingParam) {\n                bodyStatements.unshift(\n                  import_compiler29.types.variableDeclaration(\"let\", [\n                    import_compiler29.types.variableDeclarator(existingParam, id)\n                  ])\n                );\n              }\n            }\n          }\n          if (forAttrs.by) {\n            if (import_compiler29.types.isStringLiteral(forAttrs.by)) {\n              keyExpression = toMemberExpression(\n                params[0],\n                forAttrs.by.value\n              );\n            } else if (import_compiler29.types.isFunction(forAttrs.by)) {\n              const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n              statements.push(\n                import_compiler29.types.variableDeclaration(\"const\", [\n                  import_compiler29.types.variableDeclarator(byIdentifier, forAttrs.by)\n                ])\n              );\n              keyExpression = import_compiler29.types.callExpression(\n                byIdentifier,\n                params\n              );\n            } else {\n              keyExpression = callRuntime(\n                forTypeToHTMLByRuntime(forType),\n                forAttrs.by,\n                ...params\n              );\n            }\n          } else {\n            keyExpression = params[defaultByParamIndex];\n          }\n          const forScopesIdentifier = getScopeIdentifier(bodySection);\n          statements.push(\n            import_compiler29.types.variableDeclaration(\"const\", [\n              import_compiler29.types.variableDeclarator(\n                forScopesIdentifier,\n                import_compiler29.types.newExpression(import_compiler29.types.identifier(\"Map\"), [])\n              )\n            ])\n          );\n          if (keyExpression && (isStateful || hasStatefulClosures)) {\n            bodyStatements.push(\n              import_compiler29.types.expressionStatement(\n                import_compiler29.types.callExpression(\n                  import_compiler29.types.memberExpression(\n                    getScopeIdentifier(bodySection),\n                    import_compiler29.types.identifier(\"set\")\n                  ),\n                  [\n                    keyExpression,\n                    callRuntime(\n                      \"ensureScopeWithId\",\n                      getScopeIdIdentifier(bodySection)\n                    )\n                  ]\n                )\n              )\n            );\n          }\n          getSerializedScopeProperties(tagSection).set(\n            import_compiler29.types.stringLiteral(\n              getScopeAccessorLiteral(nodeRef2).value + \"(\" /* LoopScopeMap */\n            ),\n            import_compiler29.types.conditionalExpression(\n              import_compiler29.types.memberExpression(forScopesIdentifier, import_compiler29.types.identifier(\"size\")),\n              forScopesIdentifier,\n              import_compiler29.types.identifier(\"undefined\")\n            )\n          );\n        }\n        flushInto(tag);\n        setClosureSignalBuilder(tag, () => {\n        });\n        writeHTMLResumeStatements(tagBody);\n        const forTagArgs = getBaseArgsInForTag(forType, forAttrs);\n        const forTagHTMLRuntime = isStateful ? forTypeToHTMLResumeRuntime(forType, singleNodeOptimization) : forTypeToRuntime(forType);\n        forTagArgs.push(\n          import_compiler29.types.arrowFunctionExpression(params, import_compiler29.types.blockStatement(bodyStatements))\n        );\n        if (isStateful) {\n          forTagArgs.push(\n            getScopeIdIdentifier(tagSection),\n            getScopeAccessorLiteral(nodeRef2)\n          );\n        }\n        statements.push(\n          import_compiler29.types.expressionStatement(callRuntime(forTagHTMLRuntime, ...forTagArgs))\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const { referencedBindings } = tagExtra;\n        const nodeRef2 = isOnlyChildInParent(tag) ? getParentTag(tag).node.extra[kNativeTagBinding] : tag.node.extra[kForMarkerBinding];\n        setClosureSignalBuilder(tag, (_closureSignal, render, intersection) => {\n          return callRuntime(\n            \"loopClosure\",\n            getScopeAccessorLiteral(nodeRef2),\n            render,\n            intersection\n          );\n        });\n        const forType = getForType(node);\n        const signal = getSignal(tagSection, nodeRef2, \"for\");\n        signal.build = () => {\n          return callRuntime(\n            forTypeToDOMRuntime(forType),\n            getScopeAccessorLiteral(nodeRef2),\n            import_compiler29.types.identifier(bodySection.name)\n          );\n        };\n        const params = node.body.params;\n        signal.hasDownstreamIntersections = () => {\n          if (bodySection.closures) {\n            return true;\n          }\n          for (const param of params) {\n            const binding = param.extra?.binding;\n            if (binding) {\n              for (const {\n                referencedBindings: referencedBindings2\n              } of binding.downstreamExpressions) {\n                if (getSignal(\n                  bodySection,\n                  referencedBindings2\n                ).hasDownstreamIntersections()) {\n                  return true;\n                }\n              }\n            }\n          }\n          return false;\n        };\n        const forAttrs = getKnownAttrValues(node);\n        const loopArgs = getBaseArgsInForTag(forType, forAttrs);\n        if (forAttrs.by) {\n          loopArgs.push(forAttrs.by);\n        }\n        addValue(\n          tagSection,\n          referencedBindings,\n          signal,\n          import_compiler29.types.arrayExpression(loopArgs)\n        );\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| to=${2:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nfunction buildForRuntimeCall(type, attrs2, params, statements) {\n  return import_compiler29.types.expressionStatement(\n    callRuntime(\n      forTypeToRuntime(type),\n      ...getBaseArgsInForTag(type, attrs2),\n      import_compiler29.types.arrowFunctionExpression(params, import_compiler29.types.blockStatement(statements))\n    )\n  );\n}\nfunction getForType(tag) {\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      switch (attr2.name) {\n        case \"of\":\n        case \"in\":\n        case \"to\":\n          return attr2.name;\n      }\n    }\n  }\n}\nfunction forTypeToRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOf\";\n    case \"in\":\n      return \"forIn\";\n    case \"to\":\n      return \"forTo\";\n  }\n}\nfunction forTypeToHTMLResumeRuntime(type, singleNodeOptimization) {\n  if (singleNodeOptimization) {\n    switch (type) {\n      case \"of\":\n        return \"resumeSingleNodeForOf\";\n      case \"in\":\n        return \"resumeSingleNodeForIn\";\n      case \"to\":\n        return \"resumeSingleNodeForTo\";\n    }\n  } else {\n    switch (type) {\n      case \"of\":\n        return \"resumeForOf\";\n      case \"in\":\n        return \"resumeForIn\";\n      case \"to\":\n        return \"resumeForTo\";\n    }\n  }\n}\nfunction forTypeToDOMRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"loopOf\";\n    case \"in\":\n      return \"loopIn\";\n    case \"to\":\n      return \"loopTo\";\n  }\n}\nfunction forTypeToHTMLByRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOfBy\";\n    case \"in\":\n      return \"forInBy\";\n    case \"to\":\n      return \"forToBy\";\n  }\n}\nfunction getBaseArgsInForTag(type, attrs2) {\n  switch (type) {\n    case \"in\":\n      return [attrs2.in];\n    case \"of\":\n      return [attrs2.of];\n    case \"to\":\n      return [\n        attrs2.to,\n        attrs2.from || import_compiler29.types.numericLiteral(0),\n        attrs2.step || import_compiler29.types.numericLiteral(1)\n      ];\n  }\n}\nfunction isOnlyChildInParent(tag) {\n  const extra = tag.node.extra;\n  if (extra[kOnlyChildInParent] !== void 0) {\n    return extra[kOnlyChildInParent];\n  }\n  const parentTag = getParentTag(tag);\n  if (parentTag && (0, import_babel_utils18.getTagDef)(parentTag)?.html) {\n    return extra[kOnlyChildInParent] = tag.parent.body.length === 1;\n  }\n  return extra[kOnlyChildInParent] = false;\n}\n\n// src/translator/util/translate-attrs.ts\nvar contentProps = /* @__PURE__ */ new WeakSet();\nfunction translateAttrs(tag, templateExports, statements = [], contentKey = \"content\") {\n  const seen = /* @__PURE__ */ new Set();\n  const properties = [];\n  const attrTagLookup = tag.node.extra?.attributeTags;\n  if (attrTagLookup) {\n    for (const name2 in attrTagLookup) {\n      const attrTagMeta = attrTagLookup[name2];\n      if (usesExport(templateExports, attrTagMeta.name)) {\n        seen.add(attrTagMeta.name);\n        if (attrTagMeta.dynamic) {\n          statements.push(\n            import_compiler30.types.variableDeclaration(\"let\", [\n              import_compiler30.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta))\n            ])\n          );\n          properties.push(\n            toObjectProperty(\n              attrTagMeta.name,\n              getAttrTagIdentifier(attrTagMeta)\n            )\n          );\n        }\n      }\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils19.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          if (attrTagMeta.dynamic) {\n            i = addDynamicAttrTagStatements(\n              attrTags2,\n              i,\n              attrTagLookup,\n              statements,\n              templateExports,\n              contentKey\n            );\n          } else {\n            const translatedAttrTag = translateAttrs(\n              child,\n              templateExports?.[attrTagMeta.name]?.props,\n              statements,\n              contentKey\n            );\n            if (attrTagMeta.repeated) {\n              const prevProp = findObjectProperty(attrTagMeta.name, properties);\n              if (prevProp) {\n                prevProp.value = callRuntime(\n                  \"attrTags\",\n                  prevProp.value,\n                  propsToExpression(translatedAttrTag.properties)\n                );\n              } else {\n                properties.push(\n                  toObjectProperty(\n                    attrTagMeta.name,\n                    callRuntime(\n                      \"attrTag\",\n                      propsToExpression(translatedAttrTag.properties)\n                    )\n                  )\n                );\n              }\n            } else {\n              properties.push(\n                toObjectProperty(\n                  attrTagMeta.name,\n                  callRuntime(\n                    \"attrTag\",\n                    propsToExpression(translatedAttrTag.properties)\n                  )\n                )\n              );\n            }\n          }\n        } else {\n          i = addDynamicAttrTagStatements(\n            attrTags2,\n            i,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  if (!seen.has(contentKey) && usesExport(templateExports, contentKey)) {\n    seen.add(contentKey);\n    const contentExpression = buildContent(tag.get(\"body\"));\n    if (contentExpression) {\n      const contentProp = import_compiler30.types.objectProperty(\n        import_compiler30.types.identifier(contentKey),\n        contentExpression\n      );\n      contentProps.add(contentProp);\n      properties.push(contentProp);\n    }\n  }\n  const { attributes } = tag.node;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler30.types.isMarkoSpreadAttribute(attr2)) {\n      properties.push(import_compiler30.types.spreadElement(value));\n    } else if (!seen.has(attr2.name) && usesExport(templateExports, attr2.name)) {\n      seen.add(attr2.name);\n      properties.push(toObjectProperty(attr2.name, value));\n    }\n  }\n  properties.reverse();\n  return { properties, statements };\n}\nfunction getTranslatedBodyContentProperty(props) {\n  for (const prop of props) {\n    if (contentProps.has(prop)) {\n      return prop;\n    }\n  }\n}\nfunction addDynamicAttrTagStatements(attrTags2, index, attrTagLookup, statements, templateExports, contentKey = \"content\") {\n  const tag = attrTags2[index];\n  if (tag.isMarkoTag()) {\n    if ((0, import_babel_utils19.isAttributeTag)(tag)) {\n      const attrTagMeta = attrTagLookup[getTagName(tag)];\n      if (usesExport(templateExports, attrTagMeta.name) && attrTagMeta.dynamic) {\n        const translatedAttrTag = translateAttrs(\n          tag,\n          templateExports?.[attrTagMeta.name]?.props,\n          statements,\n          contentKey\n        );\n        if (attrTagMeta.repeated) {\n          statements.push(\n            import_compiler30.types.expressionStatement(\n              import_compiler30.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTags\",\n                  getAttrTagIdentifier(attrTagMeta),\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        } else {\n          statements.push(\n            import_compiler30.types.expressionStatement(\n              import_compiler30.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTag\",\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        }\n      }\n    } else {\n      switch (getTagName(tag)) {\n        case \"if\":\n          return translateIfAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        case \"for\": {\n          return translateForAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  return index;\n}\nfunction propsToExpression(props) {\n  return props.length === 1 && import_compiler30.types.isSpreadElement(props[0]) ? props[0].argument : import_compiler30.types.objectExpression(props);\n}\nfunction translateForAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const forTag = attrTags2[index];\n  const bodyStatements = [];\n  addAllAttrTagsAsDynamic(\n    forTag,\n    attrTagLookup,\n    bodyStatements,\n    templateExports,\n    contentKey\n  );\n  statements.push(\n    buildForRuntimeCall(\n      getForType(forTag.node),\n      getKnownAttrValues(forTag.node),\n      forTag.node.body.params,\n      bodyStatements\n    )\n  );\n  return index;\n}\nfunction translateIfAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const ifTag = attrTags2[index];\n  const consequentStatements = [];\n  let ifStatement = import_compiler30.types.ifStatement(\n    getConditionTestValue(ifTag),\n    import_compiler30.types.blockStatement(consequentStatements)\n  );\n  statements.push(ifStatement);\n  addAllAttrTagsAsDynamic(\n    ifTag,\n    attrTagLookup,\n    consequentStatements,\n    templateExports,\n    contentKey\n  );\n  let nextIndex = index + 1;\n  while (nextIndex < attrTags2.length) {\n    const nextTag = attrTags2[nextIndex];\n    if (nextTag.isMarkoTag()) {\n      switch (getTagName(nextTag)) {\n        case \"else-if\":\n        case \"else\": {\n          const testValue = getConditionTestValue(nextTag);\n          const alternateStatements = [];\n          addAllAttrTagsAsDynamic(\n            nextTag,\n            attrTagLookup,\n            alternateStatements,\n            templateExports,\n            contentKey\n          );\n          if (testValue) {\n            ifStatement.alternate = ifStatement = import_compiler30.types.ifStatement(\n              testValue,\n              import_compiler30.types.blockStatement(alternateStatements)\n            );\n            nextIndex++;\n            continue;\n          } else {\n            ifStatement.alternate = import_compiler30.types.blockStatement(alternateStatements);\n            break;\n          }\n        }\n      }\n    }\n    break;\n  }\n  return nextIndex - 1;\n}\nfunction addAllAttrTagsAsDynamic(tag, attrTagLookup, statements, templateExports, contentKey) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (let i = 0; i < attrTags2.length; i++) {\n    i = addDynamicAttrTagStatements(\n      attrTags2,\n      i,\n      attrTagLookup,\n      statements,\n      templateExports,\n      contentKey\n    );\n  }\n}\nfunction usesExport(templateExports, name2) {\n  return !templateExports || !!templateExports[name2];\n}\nfunction findObjectProperty(name2, props) {\n  for (const prop of props) {\n    if (prop.type === \"ObjectProperty\") {\n      switch (prop.key.type) {\n        case \"StringLiteral\":\n          if (prop.key.value === name2) {\n            return prop;\n          }\n          break;\n        case \"Identifier\":\n          if (prop.key.name === name2) {\n            return prop;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction getConditionTestValue({\n  node: { attributes }\n}) {\n  return attributes.length === 1 ? attributes[0].value : void 0;\n}\nfunction buildContent(body) {\n  const bodySection = body.node.extra?.section;\n  if (bodySection) {\n    if (isOutputHTML()) {\n      return callRuntime(\n        \"register\",\n        callRuntime(\n          \"createRenderer\",\n          import_compiler30.types.arrowFunctionExpression(\n            body.node.params,\n            import_compiler30.types.blockStatement(body.node.body)\n          )\n        ),\n        import_compiler30.types.stringLiteral(getResumeRegisterId(bodySection, \"renderer\")),\n        getScopeIdIdentifier(\n          getSection(\n            getNonAttributeTagParent(body.parentPath)\n          )\n        )\n      );\n    } else {\n      return import_compiler30.types.callExpression(import_compiler30.types.identifier(bodySection.name), [\n        scopeIdentifier\n      ]);\n    }\n  }\n}\nfunction getNonAttributeTagParent(tag) {\n  let cur = tag;\n  while ((0, import_babel_utils19.isAttributeTag)(cur) || (0, import_babel_utils19.isTransparentTag)(cur)) {\n    cur = getParentTag(cur);\n  }\n  return cur;\n}\n\n// src/translator/core/define.ts\nvar define_default = {\n  analyze(tag) {\n    (0, import_babel_utils20.assertNoArgs)(tag);\n    if (!tag.node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `define` tag requires a tag variable.\");\n    }\n    const tagBody = tag.get(\"body\");\n    startSection(tagBody);\n    trackVarReferences(tag, 4 /* derived */);\n    trackParamsReferences(tagBody, 3 /* param */);\n    analyzeAttributeTags(tag);\n    mergeReferences(\n      getOrCreateSection(tag),\n      tag.node,\n      getAllTagReferenceNodes(tag.node)\n    );\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const translatedAttrs = translateAttrs(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertBefore(translatedAttrs.statements);\n        translateVar(tag, propsToExpression(translatedAttrs.properties));\n      } else {\n        const section = getSection(tag);\n        const referencedBindings = node.extra?.referencedBindings;\n        const derivation = initValue(tag.get(\"var\").node.extra.binding);\n        if (translatedAttrs.statements.length) {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            translatedAttrs.statements\n          );\n        }\n        addValue(\n          section,\n          referencedBindings,\n          derivation,\n          propsToExpression(translatedAttrs.properties)\n        );\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a constant object binding that can be rendered.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#define\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/define.d.marko\"\n};\n\n// src/translator/core/effect.ts\nvar import_compiler32 = require(\"@marko/compiler\");\nvar import_babel_utils21 = require(\"@marko/compiler/babel-utils\");\nvar effect_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils21.assertNoArgs)(tag);\n      (0, import_babel_utils21.assertNoParams)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils21.assertNoAttributeTags)(tag);\n      assertNoSpreadAttrs(tag);\n      (0, import_babel_utils21.assertAllowedAttributes)(tag, [\"value\"]);\n      (0, import_babel_utils21.diagnosticDeprecate)(tag, {\n        label: \"The 'effect' tag has been replaced by the 'script' tag.\",\n        fix() {\n          const { node } = tag;\n          tag.replaceWith(\n            import_compiler32.types.markoTag(\n              withPreviousLocation(import_compiler32.types.stringLiteral(\"script\"), node.name),\n              node.attributes,\n              node.body,\n              node.arguments,\n              node.var,\n              node.attributeTags\n            )\n          );\n        }\n      });\n    }\n  ],\n  attributes: {},\n  types: runtime_info_default.name + \"/tag-types/effect.d.marko\"\n};\n\n// src/translator/core/export.ts\nvar import_babel_utils22 = require(\"@marko/compiler/babel-utils\");\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils22.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/translator/core/html-comment.ts\nvar import_compiler33 = require(\"@marko/compiler\");\nvar import_babel_utils23 = require(\"@marko/compiler/babel-utils\");\nvar kCommentTagBinding = Symbol(\"comment tag binding\");\nvar kGetterId2 = Symbol(\"node getter id\");\nvar html_comment_default = {\n  analyze(tag) {\n    (0, import_babel_utils23.assertNoArgs)(tag);\n    (0, import_babel_utils23.assertNoParams)(tag);\n    (0, import_babel_utils23.assertNoAttributes)(tag);\n    const tagVar = tag.node.var;\n    let needsBinding = false;\n    let needsGetter = false;\n    if (tagVar) {\n      if (!import_compiler33.types.isIdentifier(tagVar)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"The `html-comment` tag variable cannot be destructured.\"\n        );\n      }\n      needsBinding = true;\n      for (const ref of tag.scope.getBinding(tagVar.name).referencePaths) {\n        if (!ref.parentPath?.isCallExpression()) {\n          needsGetter = true;\n          break;\n        }\n      }\n    }\n    const referenceNodes = [];\n    for (const child of tag.get(\"body\").get(\"body\")) {\n      if (child.isMarkoPlaceholder()) {\n        referenceNodes.push(child.node.value);\n        needsBinding = true;\n      } else if (!child.isMarkoText()) {\n        throw child.buildCodeFrameError(\n          \"Invalid child. Only text is allowed inside an html comment.\"\n        );\n      }\n    }\n    if (needsBinding) {\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      if (needsGetter) {\n        tagExtra[kGetterId2] = getRegisterUID(section, \"comment\");\n      }\n      tagExtra[kCommentTagBinding] = createBinding(\n        \"#comment\",\n        0 /* dom */,\n        section\n      );\n      mergeReferences(section, tag.node, referenceNodes);\n    }\n    tag.skip();\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const commentBinding = tagExtra[kCommentTagBinding];\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId2];\n      if (isOutputHTML()) {\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(getSection(tag)),\n            getterId && import_compiler33.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler33.types.variableDeclaration(\"const\", [\n              import_compiler33.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler33.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(commentBinding)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler33.types.expressionStatement(\n                createScopeReadExpression(referenceSection, commentBinding)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler33.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    if (tagExtra[kCommentTagBinding]) {\n      visit(tag, 32 /* Get */);\n    }\n    const write2 = writeTo(tag);\n    enter2(tag);\n    write2`<!--`;\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler33.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler33.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeXML\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      for (const child of tag.node.body.body) {\n        if (import_compiler33.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler33.types.isMarkoPlaceholder(child)) {\n          templateQuasis.push(import_compiler33.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (templateExpressions.length === 0) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler33.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          tagExtra.referencedBindings,\n          import_compiler33.types.expressionStatement(\n            callRuntime(\n              \"data\",\n              import_compiler33.types.memberExpression(\n                scopeIdentifier,\n                getScopeAccessorLiteral(commentBinding),\n                true\n              ),\n              import_compiler33.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    exit2(tag);\n    write2`-->`;\n    if (commentBinding) {\n      markNode(tag, commentBinding);\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/translator/core/html-script.ts\nvar import_compiler34 = require(\"@marko/compiler\");\nvar import_babel_utils24 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId3 = Symbol(\"node getter id\");\nvar html_script_default = {\n  analyze(tag) {\n    (0, import_babel_utils24.assertNoArgs)(tag);\n    (0, import_babel_utils24.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler34.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler34.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler34.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler34.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-script.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#script\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId3] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId3];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler34.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler34.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler34.types.variableDeclaration(\"const\", [\n              import_compiler34.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler34.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler34.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler34.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<script`;\n    const usedAttrs = getUsedAttrs2(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler34.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler34.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler34.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler34.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler34.types.stringLiteral(\"script\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler34.types.stringLiteral(\"script\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler34.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler34.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler34.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeScript\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler34.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler34.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler34.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</script>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@async\": \"#html-async\",\n  \"@crossorigin\": \"#html-crossorigin\",\n  \"@defer\": \"#html-defer\",\n  \"@integrity\": \"#html-integrity\",\n  \"@nomodule\": \"#html-nomodule\",\n  \"@nonce\": \"#html-nonce\",\n  \"@referrerpolicy\": \"#html-referrerpolicy\",\n  \"@src\": \"#html-src\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs2(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler34.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler34.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler34.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler34.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/html-style.ts\nvar import_compiler35 = require(\"@marko/compiler\");\nvar import_babel_utils25 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId4 = Symbol(\"node getter id\");\nvar html_style_default = {\n  analyze(tag) {\n    (0, import_babel_utils25.assertNoArgs)(tag);\n    (0, import_babel_utils25.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler35.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler35.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler35.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler35.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-style.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#style\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId4] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId4];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler35.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler35.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler35.types.variableDeclaration(\"const\", [\n              import_compiler35.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler35.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler35.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler35.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<style`;\n    const usedAttrs = getUsedAttrs3(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler35.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"style\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"style\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeStyle\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler35.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</style>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@disabled\": \"#html-disabled\",\n  \"@media\": \"#html-media\",\n  \"@nonce\": \"#html-nonce\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs3(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler35.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler35.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler35.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/id.ts\nvar import_compiler36 = require(\"@marko/compiler\");\nvar import_babel_utils26 = require(\"@marko/compiler/babel-utils\");\nvar id_default = {\n  analyze(tag) {\n    (0, import_babel_utils26.assertNoArgs)(tag);\n    (0, import_babel_utils26.assertNoParams)(tag);\n    (0, import_babel_utils26.assertNoAttributes)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils26.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `id` tag requires a tag variable.\");\n    }\n    if (!import_compiler36.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `id` tag cannot be destructured\");\n    }\n    trackVarReferences(tag, 4 /* derived */);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const id = isOutputHTML() ? callRuntime(\"nextTagId\") : callRuntime(\"nextTagId\", scopeIdentifier);\n      if (isOutputHTML()) {\n        tag.replaceWith(\n          import_compiler36.types.variableDeclaration(\"const\", [import_compiler36.types.variableDeclarator(node.var, id)])\n        );\n      } else {\n        const source = initValue(node.var.extra.binding);\n        addValue(getSection(tag), void 0, source, id);\n        tag.remove();\n      }\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/id.d.marko\"\n};\n\n// src/translator/core/if.ts\nvar import_compiler38 = require(\"@marko/compiler\");\nvar import_babel_utils27 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/to-first-statement-or-block.ts\nvar import_compiler37 = require(\"@marko/compiler\");\nfunction toFirstStatementOrBlock(body) {\n  if (Array.isArray(body)) {\n    if (body.length === 1) {\n      return body[0];\n    }\n    return import_compiler37.types.blockStatement(body);\n  }\n  return body;\n}\n\n// src/translator/core/if.ts\nvar kBinding = Symbol(\"if node binding\");\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nvar IfTag = {\n  analyze(tag) {\n    assertValidCondition(tag);\n    if (tag.node.body.attributeTags) return;\n    const [isLast, branches] = getBranches(tag, startSection(tag.get(\"body\")));\n    if (isLast) {\n      const [rootTag] = branches[0];\n      const rootExtra = rootTag.node.extra ??= {};\n      const mergeReferenceNodes = [];\n      let singleNodeOptimization = true;\n      for (const [branchTag, branchBodySection] of branches) {\n        if (branchBodySection) {\n          branchBodySection.isBranch = true;\n          branchBodySection.upstreamExpression = rootExtra;\n          if (!(branchBodySection.content === null || branchBodySection.content?.singleChild)) {\n            singleNodeOptimization = false;\n          }\n        }\n        if (branchTag.node.attributes.length) {\n          mergeReferenceNodes.push(branchTag.node.attributes[0].value);\n        }\n      }\n      const section = getOrCreateSection(tag);\n      rootExtra[kBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        rootExtra\n      );\n      rootExtra.singleNodeOptimization = singleNodeOptimization;\n      mergeReferences(section, rootTag.node, mergeReferenceNodes);\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isRoot(tag)) {\n          visit(tag, 37 /* Replace */);\n        }\n        enterShallow(tag);\n        flushBefore(tag);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const section = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const [isLast, branches] = getBranches(tag, bodySection);\n        const rootExtra = branches[0][0].node.extra;\n        const nodeRef2 = rootExtra[kBinding];\n        const isStateful = isStatefulReferences(rootExtra.referencedBindings);\n        const singleNodeOptimization = rootExtra.singleNodeOptimization;\n        const hasStatefulClosures = bodySection && checkStatefulClosures(bodySection, true);\n        if (bodySection) {\n          if (isStateful || hasStatefulClosures) {\n            setForceResumeScope(bodySection);\n          }\n          flushInto(tag);\n          setClosureSignalBuilder(tag, () => {\n          });\n          writeHTMLResumeStatements(tagBody);\n        }\n        if (isLast) {\n          const nextTag = tag.getNextSibling();\n          const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n          const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n          let statement;\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const bodyStatements = branchTag.node.body.body;\n            if (branchBodySection) {\n              const branchHasStatefulClosures = checkStatefulClosures(\n                branchBodySection,\n                true\n              );\n              if (isStateful) {\n                bodyStatements.push(\n                  import_compiler38.types.expressionStatement(\n                    callRuntime(\n                      \"register\",\n                      import_compiler38.types.assignmentExpression(\n                        \"=\",\n                        ifRendererIdentifier,\n                        callRuntime(\n                          \"createRenderer\",\n                          import_compiler38.types.arrowFunctionExpression([], import_compiler38.types.blockStatement([]))\n                        )\n                      ),\n                      import_compiler38.types.stringLiteral(\n                        getResumeRegisterId(branchBodySection, \"renderer\")\n                      )\n                    )\n                  )\n                );\n              }\n              if (isStateful || branchHasStatefulClosures) {\n                bodyStatements.push(\n                  import_compiler38.types.expressionStatement(\n                    import_compiler38.types.assignmentExpression(\n                      \"=\",\n                      ifScopeIdIdentifier,\n                      getScopeIdIdentifier(branchBodySection)\n                    )\n                  )\n                );\n              }\n            }\n            const [testAttr] = branchTag.node.attributes;\n            const curStatement = toFirstStatementOrBlock(bodyStatements);\n            if (testAttr) {\n              statement = import_compiler38.types.ifStatement(\n                testAttr.value,\n                curStatement,\n                statement\n              );\n            } else {\n              statement = curStatement;\n            }\n            branchTag.remove();\n          }\n          if (!(isStateful || hasStatefulClosures)) {\n            nextTag.insertBefore(statement);\n          } else {\n            if (isStateful) {\n              getSerializedScopeProperties(section).set(\n                import_compiler38.types.stringLiteral(\n                  getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n                ),\n                ifRendererIdentifier\n              );\n              const cbNode = import_compiler38.types.arrowFunctionExpression(\n                [],\n                import_compiler38.types.blockStatement([statement])\n              );\n              statement = import_compiler38.types.expressionStatement(\n                singleNodeOptimization ? callRuntime(\n                  \"resumeSingleNodeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                ) : callRuntime(\n                  \"resumeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              );\n            }\n            nextTag.insertBefore([\n              import_compiler38.types.variableDeclaration(\n                \"let\",\n                [\n                  import_compiler38.types.variableDeclarator(ifScopeIdIdentifier),\n                  isStateful && import_compiler38.types.variableDeclarator(ifRendererIdentifier)\n                ].filter(Boolean)\n              ),\n              statement\n            ]);\n            getSerializedScopeProperties(section).set(\n              import_compiler38.types.stringLiteral(\n                getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n              ),\n              callRuntime(\"getScopeById\", ifScopeIdIdentifier)\n            );\n          }\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n        if (isRoot(tag)) {\n          visit(tag, 37 /* Replace */);\n        }\n        enterShallow(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const [isLast, branches] = getBranches(\n          tag,\n          getSectionForBody(tag.get(\"body\"))\n        );\n        if (isLast) {\n          const section = getSection(tag);\n          const rootExtra = branches[0][0].node.extra;\n          const nodeRef2 = rootExtra[kBinding];\n          let expr = import_compiler38.types.nullLiteral();\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const [testAttr] = branchTag.node.attributes;\n            const consequent = branchBodySection ? import_compiler38.types.identifier(branchBodySection.name) : import_compiler38.types.numericLiteral(0);\n            setClosureSignalBuilder(\n              branchTag,\n              (_closureSignal, render, intersection) => {\n                return callRuntime(\n                  \"conditionalClosure\",\n                  getScopeAccessorLiteral(nodeRef2),\n                  import_compiler38.types.arrowFunctionExpression(\n                    [],\n                    import_compiler38.types.identifier(branchBodySection.name)\n                  ),\n                  render,\n                  intersection\n                );\n              }\n            );\n            branchTag.remove();\n            expr = testAttr ? import_compiler38.types.conditionalExpression(testAttr.value, consequent, expr) : consequent;\n          }\n          const signal = getSignal(section, nodeRef2, \"if\");\n          signal.build = () => {\n            return callRuntime(\n              \"conditional\",\n              getScopeAccessorLiteral(nodeRef2),\n              getSignalFn(signal, [scopeIdentifier])\n            );\n          };\n          signal.hasDownstreamIntersections = () => branches.some(([, bodySection]) => bodySection?.closures);\n          addValue(section, rootExtra.referencedBindings, signal, expr);\n        }\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseIfTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nfunction assertValidCondition(tag) {\n  (0, import_babel_utils27.assertNoVar)(tag);\n  (0, import_babel_utils27.assertNoArgs)(tag);\n  (0, import_babel_utils27.assertNoParams)(tag);\n  assertHasBody(tag);\n  assertNoSpreadAttrs(tag);\n  switch (getTagName(tag)) {\n    case \"if\":\n      assertHasValueAttribute(tag);\n      break;\n    case \"else-if\":\n      assertHasValueAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n    case \"else\":\n      assertOptionalIfAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n  }\n}\nfunction assertHasPrecedingCondition(tag) {\n  let prev = tag.getPrevSibling();\n  while (prev.node && prev.isMarkoComment()) prev = prev.getPrevSibling();\n  if (!isConditionTag(prev) || getTagName(prev) !== \"else\" && !prev.node.attributes.length) {\n    throw tag.buildCodeFrameError(\n      `The \\`<${getTagName(tag)}>\\` must have a preceding \\`<if=cond>\\`, \\`<else-if=cond>\\`, or \\`<else if=cond>\\`.`\n    );\n  }\n}\nfunction assertHasBody(tag) {\n  if (!(tag.node.body.body.length || tag.node.attributeTags.length)) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${getTagName(tag)}\\` tag requires body content.`\n    );\n  }\n}\nfunction assertHasValueAttribute(tag) {\n  const { node } = tag;\n  const [valueAttr] = node.attributes;\n  if (!import_compiler38.types.isMarkoAttribute(valueAttr) || !valueAttr.default) {\n    throw tag.get(\"name\").buildCodeFrameError(`The \\`${getTagName(tag)}\\` tag requires a value.`);\n  }\n  if (node.attributes.length > 1) {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports the \\`value\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction assertOptionalIfAttribute(tag) {\n  const { node } = tag;\n  const [ifAttr] = node.attributes;\n  if (node.attributes.length > 1 || ifAttr && ifAttr.name !== \"if\") {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports an \\`if=\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  let nextTag = tag.getNextSibling();\n  while (nextTag.isMarkoComment()) nextTag = nextTag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push([tag, bodySection]);\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction isRoot(tag) {\n  return isCoreTagName(tag, \"if\");\n}\n\n// src/translator/core/import.ts\nvar import_babel_utils28 = require(\"@marko/compiler/babel-utils\");\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils28.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/translator/core/let.ts\nvar import_compiler39 = require(\"@marko/compiler\");\nvar import_babel_utils29 = require(\"@marko/compiler/babel-utils\");\nvar let_default = {\n  analyze(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    let valueAttr;\n    let valueChangeAttr;\n    for (const attr2 of node.attributes) {\n      if (import_compiler39.types.isMarkoAttribute(attr2)) {\n        if (attr2.name === \"value\") {\n          valueAttr = attr2;\n        } else if (attr2.name === \"valueChange\") {\n          valueChangeAttr = attr2;\n        } else {\n          const start = attr2.loc?.start;\n          const end = attr2.loc?.end;\n          const msg = \"The `let` tag only supports the `value` attribute and its change handler.\";\n          if (start == null || end == null) {\n            throw tag.get(\"name\").buildCodeFrameError(msg);\n          } else {\n            throw tag.hub.buildError(\n              { loc: { start, end } },\n              msg,\n              Error\n            );\n          }\n        }\n      }\n    }\n    (0, import_babel_utils29.assertNoArgs)(tag);\n    (0, import_babel_utils29.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `let` tag requires a tag variable.\");\n    }\n    if (!import_compiler39.types.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `let` tag variable cannot be destructured.\");\n    }\n    if (valueChangeAttr && (0, import_babel_utils29.computeNode)(valueChangeAttr.value)) {\n      throw tag.get(\"attributes\").find((attr2) => attr2.node === valueChangeAttr).get(\"value\").buildCodeFrameError(\n        \"The `let` tag `valueChange` attribute must be a function.\"\n      );\n    }\n    mergeReferences(getOrCreateSection(tag), tag.node, [\n      valueAttr?.value,\n      valueChangeAttr?.value\n    ]);\n    trackVarReferences(tag, 1 /* let */, void 0, tag.node.extra);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const tagVar = node.var;\n      const valueAttr = node.attributes.find(\n        (attr2) => import_compiler39.types.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")\n      ) ?? import_compiler39.types.markoAttribute(\"value\", import_compiler39.types.identifier(\"undefined\"));\n      const valueChangeAttr = node.attributes.find(\n        (attr2) => import_compiler39.types.isMarkoAttribute(attr2) && attr2.name === \"valueChange\"\n      );\n      const section = getSection(tag);\n      const binding = tagVar.extra.binding;\n      if (isOutputDOM()) {\n        const signal = initValue(binding, \"state\");\n        const referencedBindings = tag.node.extra.referencedBindings;\n        addValue(section, referencedBindings, signal, valueAttr.value);\n        if (valueChangeAttr) {\n          signal.extraArgs = [valueChangeAttr.value];\n        }\n        signal.buildAssignment = (valueSection, value) => {\n          const scope = getScopeExpression(valueSection, signal.section);\n          return import_compiler39.types.callExpression(signal.identifier, [scope, value]);\n        };\n      } else {\n        translateVar(tag, valueAttr.value);\n        if (valueChangeAttr) {\n          getSerializedScopeProperties(section).set(\n            import_compiler39.types.stringLiteral(\n              getScopeAccessorLiteral(binding).value + \"@\" /* TagVariableChange */\n            ),\n            valueChangeAttr.value\n          );\n        }\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/let.d.marko\"\n};\n\n// src/translator/core/lifecycle.ts\nvar import_compiler40 = require(\"@marko/compiler\");\nvar import_babel_utils30 = require(\"@marko/compiler/babel-utils\");\nvar kRef = Symbol(\"lifecycle attrs reference\");\nvar lifecycle_default = {\n  analyze(tag) {\n    (0, import_babel_utils30.assertNoArgs)(tag);\n    (0, import_babel_utils30.assertNoVar)(tag);\n    (0, import_babel_utils30.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const tagExtra = node.extra ??= {};\n    const section = getOrCreateSection(tag);\n    tagExtra[kRef] = createBinding(\n      currentProgramPath.scope.generateUid(\"lifecycle\"),\n      4 /* derived */,\n      section,\n      void 0,\n      tagExtra\n    );\n    if (node.attributes.length === 0) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `lifecycle` tag requires at least one attribute.\"\n      );\n    }\n    for (const attr2 of node.attributes) {\n      if (import_compiler40.types.isMarkoSpreadAttribute(attr2)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `lifecycle` tag does not support `...spread` attributes.\"\n        );\n      }\n      (attr2.value.extra ??= {}).isEffect = true;\n    }\n    (currentProgramPath.node.extra ??= {}).isInteractive = true;\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const section = getSection(tag);\n      const tagExtra = node.extra;\n      const { referencedBindings } = tagExtra;\n      const lifecycleAttrsRef = tagExtra[kRef];\n      if (isOutputDOM()) {\n        const translatedAttrs = translateAttrs(tag);\n        translatedAttrs.statements.push(\n          import_compiler40.types.expressionStatement(\n            callRuntime(\n              \"lifecycle\",\n              scopeIdentifier,\n              getScopeAccessorLiteral(lifecycleAttrsRef),\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        );\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          translatedAttrs.statements\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/lifecycle.d.marko\"\n};\n\n// src/translator/core/log.ts\nvar import_compiler41 = require(\"@marko/compiler\");\nvar import_babel_utils31 = require(\"@marko/compiler/babel-utils\");\nvar log_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils31.assertNoArgs)(tag);\n    (0, import_babel_utils31.assertNoVar)(tag);\n    (0, import_babel_utils31.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `log` tag requires a value.\");\n    }\n    if (tag.node.attributes.length > 1 || !import_compiler41.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `log` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      const statement = import_compiler41.types.expressionStatement(\n        import_compiler41.types.callExpression(\n          import_compiler41.types.memberExpression(import_compiler41.types.identifier(\"console\"), import_compiler41.types.identifier(\"log\")),\n          [value]\n        )\n      );\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to log a value to the console.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#log\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/log.d.marko\"\n};\n\n// src/translator/core/script.ts\nvar import_compiler42 = require(\"@marko/compiler\");\nvar import_babel_utils32 = require(\"@marko/compiler/babel-utils\");\nvar htmlScriptTagAlternateMsg = \" For a native html `script` tag use the `html-script` core tag instead.\";\nvar script_default = {\n  parse(tag) {\n    const { node } = tag;\n    const { body } = node.body;\n    if (body.length) {\n      let code = \"\";\n      for (const child of body) {\n        if (child.type !== \"MarkoText\") {\n          throw tag.hub.file.hub.buildError(\n            child,\n            \"Unexpected content in `script` tag. Only javascript and typescript is supported.\" + htmlScriptTagAlternateMsg,\n            SyntaxError\n          );\n        }\n        code += child.value;\n      }\n      const start = body[0]?.start;\n      const end = body[body.length - 1]?.end;\n      const bodyStatements = (0, import_babel_utils32.parseStatements)(tag.hub.file, code, start, end);\n      const valueFn = import_compiler42.types.arrowFunctionExpression(\n        [],\n        import_compiler42.types.blockStatement(bodyStatements),\n        traverseContains(bodyStatements, isAwaitExpression)\n      );\n      node.attributes.push(import_compiler42.types.markoAttribute(\"value\", valueFn));\n      node.body.body = [];\n    }\n  },\n  analyze(tag) {\n    const { node } = tag;\n    (0, import_babel_utils32.assertNoArgs)(tag);\n    (0, import_babel_utils32.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils32.assertNoAttributeTags)(tag);\n    if (node.var) {\n      throw tag.hub.buildError(\n        node.var,\n        \"The `script` tag does not support a tag variable reference.\" + htmlScriptTagAlternateMsg\n      );\n    }\n    let seenValueAttr = false;\n    for (const attr2 of node.attributes) {\n      if (attr2.type === \"MarkoAttribute\" && attr2.name === \"value\") {\n        if (seenValueAttr) {\n          throw tag.hub.buildError(attr2, \"Invalid duplicate value attribute.\");\n        }\n        seenValueAttr = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n        (currentProgramPath.node.extra ??= {}).isInteractive = true;\n      } else {\n        throw tag.hub.buildError(\n          attr2,\n          \"The `script` tag does not support html attributes.\" + htmlScriptTagAlternateMsg\n        );\n      }\n    }\n    if (!seenValueAttr) {\n      dropReferences(getAllTagReferenceNodes(node));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      if (!valueAttr) {\n        tag.remove();\n        return;\n      }\n      const section = getSection(tag);\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      if (isOutputDOM()) {\n        const { value: value2 } = valueAttr;\n        const isFunction2 = import_compiler42.types.isFunctionExpression(value2) || import_compiler42.types.isArrowFunctionExpression(value2);\n        let inlineBody = null;\n        if (isFunction2 && !(value2.async || value2.generator)) {\n          if (import_compiler42.types.isBlockStatement(value2.body)) {\n            let hasDeclaration = false;\n            for (const child of value2.body.body) {\n              if (import_compiler42.types.isDeclaration(child)) {\n                hasDeclaration = true;\n                break;\n              }\n            }\n            inlineBody = hasDeclaration ? value2.body : value2.body.body;\n          } else {\n            inlineBody = import_compiler42.types.expressionStatement(value2.body);\n          }\n        }\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          inlineBody || import_compiler42.types.expressionStatement(\n            import_compiler42.types.callExpression(value2, isFunction2 ? [] : [scopeIdentifier])\n          )\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  html: false,\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#script\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/script.d.marko\"\n};\nfunction isAwaitExpression(node) {\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ObjectMethod\":\n    case \"ClassPrivateMethod\":\n      return skip;\n    case \"AwaitExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/core/server.ts\nvar import_compiler43 = require(\"@marko/compiler\");\nvar import_babel_utils33 = require(\"@marko/compiler/babel-utils\");\nvar server_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^server\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils33.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler43.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler43.types.markoScriptlet(body, true, \"server\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"server <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the server.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#server-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/static.ts\nvar import_compiler44 = require(\"@marko/compiler\");\nvar import_babel_utils34 = require(\"@marko/compiler/babel-utils\");\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils34.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler44.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler44.types.markoScriptlet(body, true));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/style.ts\nvar import_compiler45 = require(\"@marko/compiler\");\nvar import_babel_utils35 = require(\"@marko/compiler/babel-utils\");\nvar import_magic_string = __toESM(require(\"magic-string\"));\nvar import_path3 = __toESM(require(\"path\"));\nvar STYLE_EXT_REG = /^style((?:\\.[a-zA-Z0-9$_-]+)+)?/;\nvar htmlStyleTagAlternateMsg = \" For a native html `style` tag use the `html-style` core tag instead.\";\nvar style_default = {\n  analyze(tag) {\n    (0, import_babel_utils35.assertNoArgs)(tag);\n    (0, import_babel_utils35.assertNoParams)(tag);\n    (0, import_babel_utils35.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1]?.slice(1);\n    for (const attr2 of node.attributes) {\n      if (attr2.start == null && attr2.type === \"MarkoAttribute\" && attr2.name === \"class\" && attr2.value.type === \"StringLiteral\" && attr2.value.value === ext) {\n        continue;\n      }\n      throw tag.hub.buildError(\n        attr2.value,\n        \"The `style` does not support html attributes.\" + htmlStyleTagAlternateMsg\n      );\n    }\n    for (const child of node.body.body) {\n      if (child.type !== \"MarkoText\") {\n        throw tag.hub.buildError(\n          child,\n          \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n        );\n      }\n    }\n    if (node.body.body.length > 1) {\n      throw tag.hub.buildError(\n        node.name,\n        \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n      );\n    }\n  },\n  translate(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const { filename, sourceMaps } = file.opts;\n    let ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1] || \".css\";\n    if (node.var && !/\\.module\\./.test(ext)) {\n      ext = \".module\" + ext;\n    }\n    const markoText = node.body.body[0];\n    const { resolveVirtualDependency } = getMarkoOpts();\n    const start = (0, import_babel_utils35.getStart)(file, markoText);\n    const end = (0, import_babel_utils35.getEnd)(file, markoText);\n    let code = markoText.value;\n    let map;\n    if (resolveVirtualDependency && sourceMaps && start !== null && end !== null) {\n      const magicString = new import_magic_string.default(file.code, { filename });\n      magicString.remove(0, start);\n      magicString.remove(end, file.code.length);\n      map = magicString.generateMap({\n        source: filename,\n        includeContent: true\n      });\n      if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n        code += `\n/*# sourceMappingURL=${map.toUrl()}*/`;\n        if (sourceMaps === \"inline\") {\n          map = void 0;\n        }\n      }\n    }\n    const importPath = resolveVirtualDependency?.(filename, {\n      virtualPath: `./${import_path3.default.basename(filename) + ext}`,\n      code,\n      map\n    });\n    if (importPath) {\n      if (!node.var) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.importDeclaration([], import_compiler45.types.stringLiteral(importPath))\n        );\n      } else if (import_compiler45.types.isIdentifier(node.var)) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.importDeclaration(\n            [import_compiler45.types.importDefaultSpecifier(node.var)],\n            import_compiler45.types.stringLiteral(importPath)\n          )\n        );\n      } else {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler45.types.variableDeclaration(\"const\", [\n            import_compiler45.types.variableDeclarator(\n              node.var,\n              (0, import_babel_utils35.importDefault)(file, importPath, \"style\")\n            )\n          ])\n        );\n      }\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    html: false,\n    text: true,\n    rawOpenTag: true,\n    preserveWhitespace: true\n  },\n  attributes: {}\n};\n\n// src/translator/core/try.ts\nvar import_compiler46 = require(\"@marko/compiler\");\nvar import_babel_utils36 = require(\"@marko/compiler/babel-utils\");\nvar try_default = {\n  analyze(tag) {\n    (0, import_babel_utils36.assertNoVar)(tag);\n    (0, import_babel_utils36.assertNoArgs)(tag);\n    (0, import_babel_utils36.assertNoParams)(tag);\n    (0, import_babel_utils36.assertNoAttributes)(tag);\n    assertNoSpreadAttrs(tag);\n    analyzeAttributeTags(tag);\n    const { node } = tag;\n    const section = getOrCreateSection(tag);\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `try` tag requires body content.\");\n    }\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (!getSectionForBody(tag.get(\"body\"))) {\n          tag.remove();\n          return;\n        }\n        setAllSectionsParentIsOwner(tag);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const tagBody = tag.get(\"body\");\n        const translatedAttrs = translateAttrs(tag);\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.insertBefore(translatedAttrs.statements);\n        tag.replaceWith(\n          import_compiler46.types.expressionStatement(\n            callRuntime(\n              \"tryContent\",\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        setAllSectionsParentIsOwner(tag);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Used to capture errors and display placeholders for nested content.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#try\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/try.d.marko\"\n};\nfunction setAllSectionsParentIsOwner(tag) {\n  for (const attrTag2 of tag.get(\"attributeTags\")) {\n    if (attrTag2.isMarkoTag()) {\n      setAllSectionsParentIsOwner(attrTag2);\n    }\n  }\n  const bodySection = getSectionForBody(tag.get(\"body\"));\n  if (bodySection) {\n    setSectionParentIsOwner(bodySection, true);\n  }\n}\n\n// src/translator/core/index.ts\nvar core_default = {\n  taglibId: runtime_info_default.taglibId,\n  \"<attrs>\": attrs_default,\n  \"<await>\": await_default,\n  \"<client>\": client_default,\n  \"<const>\": const_default,\n  \"<debug>\": debug_default,\n  \"<define>\": define_default,\n  \"<effect>\": effect_default,\n  \"<else-if>\": ElseIfTag,\n  \"<else>\": ElseTag,\n  \"<export>\": export_default,\n  \"<for>\": for_default,\n  \"<html-comment>\": html_comment_default,\n  \"<html-script>\": html_script_default,\n  \"<html-style>\": html_style_default,\n  \"<id>\": id_default,\n  \"<if>\": IfTag,\n  \"<import>\": import_default,\n  \"<let>\": let_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<log>\": log_default,\n  \"<return>\": return_default,\n  \"<script>\": script_default,\n  \"<server>\": server_default,\n  \"<static>\": static_default,\n  \"<style>\": style_default,\n  \"<try>\": try_default\n};\n\n// src/translator/visitors/cdata.ts\nvar cdata_default = {\n  translate: {\n    enter(cdata) {\n      throw cdata.buildCodeFrameError(\n        \"CDATA sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/comment.ts\nvar comment_default = {\n  translate: {\n    exit(comment) {\n      comment.remove();\n    }\n  }\n};\n\n// src/translator/visitors/declaration.ts\nvar declaration_default = {\n  translate: {\n    enter(decl) {\n      throw decl.buildCodeFrameError(\n        \"XML declarations sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/document-type.ts\nvar document_type_default = {\n  translate: {\n    exit(documentType) {\n      if (isOutputHTML()) {\n        writeTo(documentType)`<!${documentType.node.value}>`;\n      }\n      documentType.remove();\n    }\n  }\n};\n\n// src/translator/visitors/function.ts\nvar import_compiler47 = require(\"@marko/compiler\");\nvar import_babel_utils37 = require(\"@marko/compiler/babel-utils\");\nvar functionIdsBySection = /* @__PURE__ */ new WeakMap();\nvar function_default = {\n  analyze(fn) {\n    const fnRoot = getFnRoot(fn.parentPath);\n    const markoRoot = getMarkoRoot(fnRoot || fn);\n    const isStatic2 = !markoRoot || markoRoot.isMarkoScriptlet({ static: true });\n    if (fnRoot || !isFunction(fn, isStatic2)) return;\n    if (markoRoot && (markoRoot.isMarkoPlaceholder() || markoRoot.isMarkoScriptlet() && markoRoot.node.target === \"server\")) {\n      return;\n    }\n    const { node } = fn;\n    const extra = node.extra ??= {};\n    const name2 = extra.name = fn.node.id?.name || (isMarkoAttribute(markoRoot) ? markoRoot.node.default ? import_compiler47.types.toIdentifier(\n      markoRoot.parentPath.has(\"var\") ? markoRoot.parentPath.get(\"var\") : markoRoot.parentPath.get(\"name\")\n    ) : markoRoot.node.name : import_compiler47.types.isVariableDeclarator(fn.parent) && import_compiler47.types.isIdentifier(fn.parent.id) ? fn.parent.id.name : import_compiler47.types.isObjectMethod(node) && import_compiler47.types.isIdentifier(node.key) ? node.key.name : \"anonymous\");\n    if (isMarkoAttribute(markoRoot) && ((0, import_babel_utils37.isNativeTag)(markoRoot.parentPath) && /^on[A-Z-]/.test(markoRoot.node.name) || isCoreTagName(markoRoot.parentPath, \"script\") || isCoreTagName(markoRoot.parentPath, \"lifecycle\") || isCoreTagName(markoRoot.parentPath, \"for\"))) {\n      return;\n    }\n    const {\n      markoOpts,\n      opts: { filename }\n    } = currentProgramPath.hub.file;\n    const section = getSection(fn);\n    let functionNameCounts = functionIdsBySection.get(section);\n    if (!functionNameCounts) {\n      functionNameCounts = /* @__PURE__ */ new Map();\n      functionIdsBySection.set(section, functionNameCounts);\n    }\n    const index = functionNameCounts.get(name2);\n    let id = \"\";\n    if (index === void 0) {\n      functionNameCounts.set(name2, 0);\n    } else {\n      id = `_${index}`;\n    }\n    extra.section = section;\n    extra.registerId = (0, import_babel_utils37.getTemplateId)(\n      markoOpts,\n      filename,\n      `${section.id}/${name2 + id}`\n    );\n  }\n};\nfunction isFunction(fn, isStatic2) {\n  switch (fn.node.type) {\n    case \"FunctionDeclaration\":\n      return isStatic2 && !fn.node.declare;\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ObjectMethod\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isMarkoAttribute(path5) {\n  return path5 ? path5.isMarkoAttribute() : false;\n}\n\n// src/translator/visitors/import-declaration.ts\nvar import_babel_utils38 = require(\"@marko/compiler/babel-utils\");\nvar import_declaration_default = {\n  analyze(importDecl) {\n    const { node } = importDecl;\n    const { source } = node;\n    const { value } = source;\n    const tagImport = (0, import_babel_utils38.resolveTagImport)(importDecl, value);\n    if (tagImport) {\n      node.extra ??= {};\n      node.extra.tagImport = tagImport;\n      const tags = importDecl.hub.file.metadata.marko.tags;\n      if (!tags.includes(tagImport)) {\n        tags.push(tagImport);\n      }\n    }\n  },\n  translate: {\n    exit(importDecl) {\n      const { node } = importDecl;\n      const { extra } = node;\n      const tagImport = extra?.tagImport;\n      if (tagImport) {\n        node.source.value = tagImport;\n      }\n    }\n  }\n};\n\n// src/translator/visitors/placeholder.ts\nvar import_compiler48 = require(\"@marko/compiler\");\nvar kBinding2 = Symbol(\"placeholder node binding\");\nvar kSiblingText = Symbol(\"placeholder has sibling text\");\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(node.value);\n    if (!(confident && (node.escape || isVoid2(computed)))) {\n      (node.extra ??= {})[kBinding2] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        getOrCreateSection(placeholder),\n        void 0,\n        node.value.extra\n      );\n      analyzeSiblingText(placeholder);\n    }\n  },\n  translate: {\n    exit(placeholder) {\n      const { node } = placeholder;\n      const { value } = node;\n      const { confident, computed, referencedBindings } = evaluate(value);\n      if (confident && isVoid2(computed)) {\n        placeholder.remove();\n        return;\n      }\n      const isHTML = isOutputHTML();\n      const write2 = writeTo(placeholder);\n      const extra = node.extra || {};\n      const nodeBinding = extra[kBinding2];\n      const canWriteHTML = isHTML || confident && node.escape;\n      const method = canWriteHTML ? node.escape ? \"escapeXML\" : \"toString\" : node.escape ? \"data\" : \"html\";\n      const isStateful = isStatefulReferences(referencedBindings);\n      const siblingText = extra[kSiblingText];\n      if (confident && canWriteHTML) {\n        write2`${getHTMLRuntime()[method](computed)}`;\n      } else {\n        if (siblingText === 1 /* Before */) {\n          if (isHTML && isStateful) {\n            write2`<!>`;\n          }\n          visit(placeholder, 37 /* Replace */);\n        } else if (siblingText === 2 /* After */) {\n          visit(placeholder, 37 /* Replace */);\n        } else {\n          if (!isHTML) write2` `;\n          visit(placeholder, 32 /* Get */);\n        }\n        if (isHTML) {\n          write2`${callRuntime(method, value)}`;\n          if (isStateful) {\n            markNode(placeholder, nodeBinding);\n          }\n        } else {\n          addStatement(\n            \"render\",\n            getSection(placeholder),\n            value.extra?.referencedBindings,\n            import_compiler48.types.expressionStatement(\n              method === \"data\" ? callRuntime(\n                \"data\",\n                import_compiler48.types.memberExpression(\n                  scopeIdentifier,\n                  getScopeAccessorLiteral(nodeBinding),\n                  true\n                ),\n                value\n              ) : callRuntime(\n                \"html\",\n                scopeIdentifier,\n                value,\n                getScopeAccessorLiteral(nodeBinding)\n              )\n            )\n          );\n        }\n      }\n      enterShallow(placeholder);\n      placeholder.remove();\n    }\n  }\n};\nfunction analyzeSiblingText(placeholder) {\n  const placeholderExtra = placeholder.node.extra;\n  let prev = placeholder.getPrevSibling();\n  while (prev.node) {\n    const contentType = getNodeContentType(\n      prev,\n      \"endType\"\n    );\n    if (contentType === null) {\n      prev = prev.getPrevSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 1 /* Before */;\n    } else {\n      break;\n    }\n  }\n  if (!prev.node && import_compiler48.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 1 /* Before */;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node) {\n    const contentType = getNodeContentType(\n      next,\n      \"startType\"\n    );\n    if (contentType === null) {\n      next = next.getNextSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 2 /* After */;\n    } else {\n      break;\n    }\n  }\n  if (!next.node && import_compiler48.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 2 /* After */;\n  }\n  return placeholderExtra[kSiblingText] = 0 /* None */;\n}\nfunction isVoid2(value) {\n  return value == null || value === false;\n}\n\n// src/translator/visitors/referenced-identifier.ts\nvar import_compiler49 = require(\"@marko/compiler\");\nvar abortIdsByExpressionForSection = /* @__PURE__ */ new WeakMap();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"out\":\n        if (import_compiler49.types.isMemberExpression(identifier.parent) && import_compiler49.types.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          identifier.parentPath.replaceWith(import_compiler49.types.identifier(\"$global\"));\n        } else {\n          throw identifier.buildCodeFrameError(\n            \"Only `out.global` is supported for compatibility.\"\n          );\n        }\n        break;\n    }\n  },\n  analyze(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    if (name2 === \"$global\") {\n      setReferencesScope(identifier);\n    } else if (name2 === \"$signal\") {\n      const section = getOrCreateSection(identifier);\n      section.hasAbortSignal = true;\n      setReferencesScope(identifier);\n    }\n  },\n  translate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"$global\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(importRuntime(\"$global\"), [])\n          );\n        } else {\n          identifier.replaceWith(\n            import_compiler49.types.memberExpression(scopeIdentifier, import_compiler49.types.identifier(\"$global\"))\n          );\n        }\n        break;\n      case \"$signal\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(\n              import_compiler49.types.arrowFunctionExpression(\n                [],\n                import_compiler49.types.blockStatement([\n                  import_compiler49.types.throwStatement(\n                    import_compiler49.types.newExpression(import_compiler49.types.identifier(\"Error\"), [\n                      import_compiler49.types.stringLiteral(\"Cannot use $signal in a server render.\")\n                    ])\n                  )\n                ])\n              ),\n              []\n            )\n          );\n        } else {\n          const section = getSection(identifier);\n          const exprRoot = getExprRoot(identifier);\n          let abortIdsByExpression = abortIdsByExpressionForSection.get(section);\n          let exprId;\n          if (abortIdsByExpression) {\n            exprId = abortIdsByExpression.get(exprRoot);\n          } else {\n            abortIdsByExpression = /* @__PURE__ */ new Map();\n            abortIdsByExpressionForSection.set(section, abortIdsByExpression);\n          }\n          if (!exprId) {\n            exprId = abortIdsByExpression.size;\n            abortIdsByExpression.set(exprRoot, exprId);\n            addStatement(\n              \"render\",\n              section,\n              exprRoot.node.extra?.referencedBindings,\n              import_compiler49.types.expressionStatement(\n                import_compiler49.types.callExpression(importRuntime(\"resetAbortSignal\"), [\n                  scopeIdentifier,\n                  import_compiler49.types.numericLiteral(exprId)\n                ])\n              )\n            );\n          }\n          identifier.replaceWith(\n            import_compiler49.types.callExpression(importRuntime(\"getAbortSignal\"), [\n              scopeIdentifier,\n              import_compiler49.types.numericLiteral(exprId)\n            ])\n          );\n        }\n    }\n  }\n};\n\n// src/translator/visitors/scriptlet.ts\nvar scriptlet_default = {\n  analyze(scriptlet) {\n    if (!scriptlet.node.static) {\n      throw scriptlet.buildCodeFrameError(\n        \"Scriptlets are not supported when using the tags api.\"\n      );\n    }\n    mergeReferences(\n      getOrCreateSection(scriptlet),\n      scriptlet.node,\n      scriptlet.node.body\n    );\n  },\n  translate: {\n    exit(scriptlet) {\n      const { node } = scriptlet;\n      const isHTML = isOutputHTML();\n      if (node.target && node.target !== (isHTML ? \"server\" : \"client\")) {\n        scriptlet.remove();\n        return;\n      }\n      if (isHTML) {\n      } else {\n        traverseReplace(node, \"body\", replaceRegisteredFunctionNode);\n        scriptlet.replaceWithMultiple(node.body);\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar import_compiler53 = require(\"@marko/compiler\");\nvar import_babel_utils42 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/attribute-tag.ts\nvar import_compiler50 = require(\"@marko/compiler\");\nvar import_babel_utils39 = require(\"@marko/compiler/babel-utils\");\nvar attribute_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils39.assertNoVar)(tag);\n      (0, import_babel_utils39.assertNoArgs)(tag);\n      const body = tag.get(\"body\");\n      startSection(body);\n      trackParamsReferences(body, 3 /* param */);\n      if (!(0, import_babel_utils39.findParentTag)(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/custom-tag.ts\nvar import_compiler51 = require(\"@marko/compiler\");\nvar import_babel_utils40 = require(\"@marko/compiler/babel-utils\");\nvar import_path4 = __toESM(require(\"path\"));\nvar kChildScopeBinding = Symbol(\"custom tag child scope\");\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils40.assertAttributesOrSingleArg)(tag);\n      analyzeAttributeTags(tag);\n      const templateFile = (0, import_babel_utils40.getTagTemplate)(tag);\n      if (!templateFile) {\n        const tagName = getTagName(tag);\n        if (tagName && tag.scope.hasBinding(tagName)) {\n          throw tag.get(\"name\").buildCodeFrameError(\n            `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n          );\n        }\n        throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n      }\n      const section = getOrCreateSection(tag);\n      const tagBody = tag.get(\"body\");\n      const tagExtra = tag.node.extra ??= {};\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      tagExtra[kChildScopeBinding] = createBinding(\n        \"#childScope\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      const childFile = (0, import_babel_utils40.loadFileForTag)(tag);\n      if (childFile.opts.filename === tag.hub.file.opts.filename) {\n        mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      } else {\n        const childProgramExtra = childFile.ast.program.extra;\n        analyzeAttrs(\n          section,\n          tag,\n          childProgramExtra?.domExports.params?.props?.[0]\n        );\n        currentProgramPath.node.extra.hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild || false;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (import_compiler51.types.isStringLiteral(node.name)) {\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = isCircularRequest(tag.hub.file, relativePath) ? htmlRendererIdentifier : (0, import_babel_utils40.importDefault)(tag.hub.file, relativePath, getTagName(tag));\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const section = getSection(tag);\n  const childScopeBinding = node.extra[kChildScopeBinding];\n  const peekScopeId = tag.scope.generateUidIdentifier(childScopeBinding?.name);\n  tag.insertBefore(\n    import_compiler51.types.variableDeclaration(\"const\", [\n      import_compiler51.types.variableDeclarator(peekScopeId, callRuntime(\"peekNextScope\"))\n    ])\n  );\n  getSerializedScopeProperties(section).set(\n    getScopeAccessorLiteral(childScopeBinding),\n    callRuntime(\"writeExistingScope\", peekScopeId)\n  );\n  const inputExport = (0, import_babel_utils40.loadFileForTag)(tag)?.ast.program.extra?.domExports?.params?.props?.[0];\n  const { properties, statements } = inputExport ? translateAttrs(tag, inputExport.props) : {\n    properties: [],\n    statements: []\n  };\n  if (node.extra.tagNameNullable) {\n    const contentProp = getTranslatedBodyContentProperty(properties);\n    let contentId = void 0;\n    if (contentProp) {\n      const contentExpression = contentProp.value;\n      contentProp.value = contentId = tag.scope.generateUidIdentifier(\"content\");\n      const [contentPath] = tag.insertBefore(\n        import_compiler51.types.variableDeclaration(\"const\", [\n          import_compiler51.types.variableDeclarator(\n            contentId,\n            // TODO: only register if needed (child template analysis)\n            contentExpression\n          )\n        ])\n      );\n      contentPath.skip();\n    }\n    let renderTagExpr = callExpression(\n      tagIdentifier,\n      propsToExpression(properties)\n    );\n    if (tagVar) {\n      translateVar(tag, import_compiler51.types.unaryExpression(\"void\", import_compiler51.types.numericLiteral(0)), \"let\");\n      renderTagExpr = import_compiler51.types.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    statements.push(\n      import_compiler51.types.ifStatement(\n        tagIdentifier,\n        import_compiler51.types.expressionStatement(renderTagExpr),\n        contentId && callStatement(contentId)\n      )\n    );\n  } else if (tagVar) {\n    translateVar(\n      tag,\n      callExpression(\n        tagIdentifier,\n        propsToExpression(properties),\n        callRuntime(\n          \"register\",\n          import_compiler51.types.arrowFunctionExpression([], import_compiler51.types.blockStatement([])),\n          import_compiler51.types.stringLiteral(\n            getResumeRegisterId(\n              section,\n              node.var.extra?.binding,\n              // TODO: node.var is not always an identifier.\n              \"var\"\n            )\n          ),\n          getScopeIdIdentifier(section)\n        )\n      )\n    );\n    setForceResumeScope(section);\n  } else {\n    statements.push(\n      callStatement(tagIdentifier, propsToExpression(properties))\n    );\n  }\n  for (const replacement of tag.replaceWithMultiple(statements)) {\n    replacement.skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const { node } = tag;\n  const extra = node.extra;\n  const childScopeBinding = extra[kChildScopeBinding];\n  const write2 = writeTo(tag);\n  const { file } = tag.hub;\n  const tagName = import_compiler51.types.isIdentifier(node.name) ? node.name.name : import_compiler51.types.isStringLiteral(node.name) ? node.name.value : \"tag\";\n  const relativePath = getTagRelativePath(tag);\n  const childFile = (0, import_babel_utils40.loadFileForTag)(tag);\n  const childExports = childFile.ast.program.extra.domExports;\n  const tagIdentifier = importOrSelfReferenceName(\n    file,\n    relativePath,\n    childExports.setup,\n    tagName\n  );\n  const inputExport = childExports.params?.props?.[0];\n  if (inputExport) {\n    writeAttrsToExports(tag, inputExport, `${getTagName(tag) || \"tag\"}_input`, {\n      circular: childFile.opts.filename === file.opts.filename,\n      tagSection,\n      relativePath,\n      childScopeBinding\n    });\n  }\n  write2`${(0, import_babel_utils40.importNamed)(file, relativePath, childExports.template, `${tagName}_template`)}`;\n  injectWalks(\n    tag,\n    (0, import_babel_utils40.importNamed)(file, relativePath, childExports.walks, `${tagName}_walks`)\n  );\n  if (node.var) {\n    const source = initValue(\n      // TODO: support destructuring\n      node.var.extra.binding\n    );\n    source.register = true;\n    source.buildAssignment = (valueSection, value) => {\n      return import_compiler51.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n        createScopeReadExpression(valueSection, childScopeBinding),\n        value\n      ]);\n    };\n    addStatement(\n      \"render\",\n      tagSection,\n      void 0,\n      import_compiler51.types.expressionStatement(\n        callRuntime(\n          \"setTagVar\",\n          scopeIdentifier,\n          getScopeAccessorLiteral(childScopeBinding),\n          source.identifier\n        )\n      )\n    );\n  }\n  addStatement(\n    \"render\",\n    tagSection,\n    void 0,\n    import_compiler51.types.expressionStatement(\n      import_compiler51.types.callExpression(tagIdentifier, [\n        createScopeReadExpression(tagSection, childScopeBinding)\n      ])\n    )\n  );\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  let relativePath;\n  if (import_compiler51.types.isStringLiteral(node.name)) {\n    const template = (0, import_babel_utils40.getTagTemplate)(tag);\n    relativePath = template && (0, import_babel_utils40.resolveRelativePath)(file, template);\n  } else if (node.extra?.tagNameImported) {\n    relativePath = node.extra.tagNameImported;\n  }\n  if (!relativePath) {\n    const tagName = getTagName(tag);\n    if (tagName && tag.scope.hasBinding(tagName)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n      );\n    }\n    throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n  }\n  return relativePath;\n}\nfunction analyzeAttrs(section, tag, templateExport) {\n  if (!templateExport) {\n    dropReferences(getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  if (!templateExport.props || tag.node.arguments?.length) {\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  const attrTagLookup = analyzeAttributeTags(tag);\n  const seen = /* @__PURE__ */ new Set();\n  if (attrTagLookup) {\n    const nodeReferencesByGroup = /* @__PURE__ */ new Map();\n    const analyzeDynamicChildGroup = (group, child) => {\n      const referenceNodes = getAllTagReferenceNodes(child.node);\n      const groupReferences = nodeReferencesByGroup.get(group);\n      if (groupReferences) {\n        groupReferences.referenceNodes = groupReferences.referenceNodes.concat(referenceNodes);\n      } else {\n        nodeReferencesByGroup.set(group, {\n          firstTag: child,\n          referenceNodes\n        });\n      }\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (const child of attrTags2) {\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils40.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExports = templateExport.props[attrTagMeta.name];\n          if (childAttrExports) {\n            if (childAttrExports.props && !attrTagMeta.dynamic) {\n              analyzeAttrs(section, child, childAttrExports);\n            } else {\n              analyzeDynamicChildGroup(attrTagMeta.group, child);\n            }\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        } else {\n          const group = child.node.extra.attributeTagGroup;\n          let childUsesGroupProp = false;\n          for (const name2 of group) {\n            if (templateExport.props[attrTagLookup[name2].name]) {\n              childUsesGroupProp = true;\n              break;\n            }\n          }\n          if (childUsesGroupProp) {\n            analyzeDynamicChildGroup(group, child);\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        }\n      }\n    }\n    for (const { firstTag, referenceNodes } of nodeReferencesByGroup.values()) {\n      mergeReferences(section, firstTag.node, referenceNodes);\n    }\n  }\n  const { attributes } = tag.node;\n  let spreadReferenceNodes;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler51.types.isMarkoAttribute(attr2)) {\n      if (seen.has(attr2.name) || !templateExport.props[attr2.name]) {\n        dropReferences(attr2.value);\n        continue;\n      }\n      seen.add(attr2.name);\n    }\n    if (spreadReferenceNodes) {\n      spreadReferenceNodes.push(attr2.value);\n    } else if (import_compiler51.types.isMarkoSpreadAttribute(attr2)) {\n      spreadReferenceNodes = [attr2.value];\n    }\n  }\n  if (spreadReferenceNodes) {\n    mergeReferences(section, tag.node, spreadReferenceNodes);\n  }\n}\nfunction writeAttrsToExports(tag, templateExport, importAlias, info) {\n  if (tag.node.arguments?.length) {\n    const [arg] = tag.node.arguments;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    addValue(\n      info.tagSection,\n      // technically this should be `arg.extra?.referencedBindings`\n      // but we should probably ensure all other references are dropped in this case before we do that.\n      tag.node.extra?.referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      import_compiler51.types.isSpreadElement(arg) ? import_compiler51.types.memberExpression(arg.argument, import_compiler51.types.numericLiteral(0), true) : arg,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  if (!templateExport.props || info.circular) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    const translatedAttrs = translateAttrs(tag);\n    if (translatedAttrs.statements.length) {\n      addStatement(\n        \"render\",\n        info.tagSection,\n        referencedBindings,\n        translatedAttrs.statements\n      );\n    }\n    let translatedProps = propsToExpression(translatedAttrs.properties);\n    if ((0, import_babel_utils40.isAttributeTag)(tag)) {\n      translatedProps = callRuntime(\"attrTag\", translatedProps);\n    }\n    addValue(\n      info.tagSection,\n      referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      translatedProps,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  const seen = /* @__PURE__ */ new Set();\n  const attrTagLookup = analyzeAttributeTags(tag);\n  if (attrTagLookup) {\n    const attrTags2 = tag.get(\"attributeTags\");\n    const statementsByGroup = /* @__PURE__ */ new Map();\n    const translateDynamicAttrTagChildInGroup = (group, index) => {\n      const child = attrTags2[index];\n      let statements = statementsByGroup.get(group)?.statements;\n      if (!statements) {\n        statements = [];\n        statementsByGroup.set(group, {\n          referencedBindings: child.node.extra?.referencedBindings,\n          statements\n        });\n      }\n      return addDynamicAttrTagStatements(\n        attrTags2,\n        index,\n        attrTagLookup,\n        statements,\n        templateExport.props\n      );\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils40.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExport = templateExport.props[attrTagMeta.name];\n          if (childAttrExport) {\n            if (attrTagMeta.dynamic) {\n              i = translateDynamicAttrTagChildInGroup(attrTagMeta.group, i);\n            } else {\n              writeAttrsToExports(\n                child,\n                childAttrExport,\n                `${importAlias}_${attrTagMeta.name}`,\n                info\n              );\n            }\n          }\n        } else if (child.node.extra?.attributeTagGroup) {\n          i = translateDynamicAttrTagChildInGroup(\n            child.node.extra.attributeTagGroup,\n            i\n          );\n        }\n      }\n    }\n    for (const [\n      group,\n      { referencedBindings, statements }\n    ] of statementsByGroup) {\n      const decls = [];\n      for (const name2 of group) {\n        const attrTagMeta = attrTagLookup[name2];\n        const childAttrExports = templateExport.props[attrTagMeta.name];\n        if (!childAttrExports) continue;\n        const attrExportIdentifier = importOrSelfReferenceName(\n          tag.hub.file,\n          info.relativePath,\n          childAttrExports.id,\n          `${importAlias}_${attrTagMeta.name}`\n        );\n        decls.push(import_compiler51.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta)));\n        addValue(\n          info.tagSection,\n          referencedBindings,\n          identifierToSignal(attrExportIdentifier),\n          getAttrTagIdentifier(attrTagMeta),\n          createScopeReadExpression(info.tagSection, info.childScopeBinding),\n          callRuntime(\n            \"inChild\",\n            getScopeAccessorLiteral(info.childScopeBinding),\n            import_compiler51.types.identifier(attrExportIdentifier.name)\n          )\n        );\n      }\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler51.types.variableDeclaration(\"let\", decls),\n        ...statements\n      ]);\n    }\n  }\n  const bodySection = tag.node.body.extra?.section;\n  if (bodySection && !seen.has(\"content\")) {\n    seen.add(\"content\");\n    if (templateExport.props.content) {\n      const contentExportIdentifier = (0, import_babel_utils40.importNamed)(\n        tag.hub.file,\n        info.relativePath,\n        templateExport.props.content.id,\n        `${importAlias}_content`\n      );\n      addValue(\n        info.tagSection,\n        void 0,\n        // TODO: pretty sure content needs to have the reference group of it's param defaults.\n        identifierToSignal(contentExportIdentifier),\n        import_compiler51.types.callExpression(import_compiler51.types.identifier(bodySection.name), [scopeIdentifier]),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler51.types.identifier(contentExportIdentifier.name)\n        )\n      );\n    }\n  }\n  const { attributes } = tag.node;\n  const staticAttrs = [];\n  let spreadProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler51.types.isMarkoAttribute(attr2)) {\n      const childAttrExports = templateExport.props[attr2.name];\n      if (!childAttrExports || seen.has(attr2.name)) continue;\n      seen.add(attr2.name);\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n        continue;\n      }\n      staticAttrs.push(attr2);\n    } else if (spreadProps) {\n      spreadProps.push(import_compiler51.types.spreadElement(attr2.value));\n    } else {\n      spreadProps = [import_compiler51.types.spreadElement(attr2.value)];\n    }\n  }\n  for (const attr2 of staticAttrs.reverse()) {\n    const childAttrExports = templateExport.props[attr2.name];\n    const attrExportIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      childAttrExports.id,\n      `${importAlias}_${attr2.name}`\n    );\n    addValue(\n      info.tagSection,\n      attr2.value.extra?.referencedBindings,\n      identifierToSignal(attrExportIdentifier),\n      attr2.value,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler51.types.identifier(attrExportIdentifier.name)\n      )\n    );\n  }\n  const missing = new Set(Object.keys(templateExport.props));\n  for (const name2 of seen) missing.delete(name2);\n  if (missing.size) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    let getMissingPropValue = buildUndefined2;\n    if (spreadProps) {\n      const spreadId = tag.scope.generateUidIdentifier(`${importAlias}_spread`);\n      spreadProps.reverse();\n      getMissingPropValue = (name2) => toMemberExpression(spreadId, name2);\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler51.types.variableDeclaration(\"const\", [\n          import_compiler51.types.variableDeclarator(spreadId, propsToExpression(spreadProps))\n        ])\n      ]);\n    }\n    for (const name2 of missing) {\n      const childAttrExports = templateExport.props[name2];\n      const attrExportIdentifier = importOrSelfReferenceName(\n        tag.hub.file,\n        info.relativePath,\n        childAttrExports.id,\n        `${importAlias}_${name2}`\n      );\n      addValue(\n        info.tagSection,\n        referencedBindings,\n        identifierToSignal(attrExportIdentifier),\n        getMissingPropValue(name2),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler51.types.identifier(attrExportIdentifier.name)\n        )\n      );\n    }\n  }\n}\nfunction importOrSelfReferenceName(file, request, name2, nameHint) {\n  if (isCircularRequest(file, request)) {\n    return import_compiler51.types.identifier(name2);\n  }\n  return (0, import_babel_utils40.importNamed)(file, request, name2, nameHint);\n}\nfunction isCircularRequest(file, request) {\n  const { filename } = file.opts;\n  return request === filename || request[0] === \".\" && import_path4.default.resolve(filename, \"..\", request) === filename;\n}\nfunction callStatement(id, ...args) {\n  return import_compiler51.types.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return import_compiler51.types.callExpression(id, args.filter(Boolean));\n}\nfunction identifierToSignal(identifier) {\n  return {\n    identifier,\n    hasDownstreamIntersections: always\n  };\n}\nfunction buildUndefined2() {\n  return import_compiler51.types.unaryExpression(\"void\", import_compiler51.types.numericLiteral(0));\n}\nfunction always() {\n  return true;\n}\n\n// src/translator/visitors/tag/dynamic-tag.ts\nvar import_compiler52 = require(\"@marko/compiler\");\nvar import_babel_utils41 = require(\"@marko/compiler/babel-utils\");\nvar kDOMBinding = Symbol(\"dynamic tag dom binding\");\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils41.assertAttributesOrArgs)(tag);\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      const tagBody = tag.get(\"body\");\n      const domBinding = tagExtra[kDOMBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      addReadToExpression(tag, domBinding);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const extra = node.extra;\n      const nodeRef2 = extra[kDOMBinding];\n      const section = getSection(tag);\n      const isClassAPI = extra.featureType === \"class\";\n      let tagExpression = node.name;\n      if (import_compiler52.types.isStringLiteral(tagExpression)) {\n        tagExpression = (0, import_babel_utils41.importDefault)(\n          tag.hub.file,\n          getTagRelativePath(tag),\n          tagExpression.value\n        );\n      }\n      if (isClassAPI) {\n        if (isOutputHTML()) {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler52.types.expressionStatement(\n              import_compiler52.types.callExpression(\n                (0, import_babel_utils41.importNamed)(tag.hub.file, getCompatRuntimeFile(), \"s\"),\n                [\n                  import_compiler52.types.identifier(tagExpression.name),\n                  import_compiler52.types.stringLiteral((0, import_babel_utils41.loadFileForTag)(tag).metadata.marko.id)\n                ]\n              )\n            )\n          );\n        } else {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler52.types.expressionStatement(\n              callRuntime(\n                \"register\",\n                import_compiler52.types.stringLiteral((0, import_babel_utils41.loadFileForTag)(tag).metadata.marko.id),\n                import_compiler52.types.identifier(tagExpression.name)\n              )\n            )\n          );\n        }\n      }\n      const { properties, statements } = translateAttrs(\n        tag,\n        void 0,\n        void 0,\n        isClassAPI ? \"renderBody\" : \"content\"\n      );\n      const args = [];\n      let hasMultipleArgs = false;\n      if (node.arguments?.length) {\n        args.push(...node.arguments);\n        if (properties.length) {\n          hasMultipleArgs = true;\n          args.push(propsToExpression(properties));\n        } else {\n          hasMultipleArgs = node.arguments.length > 1 || import_compiler52.types.isSpreadElement(node.arguments[0]);\n        }\n      } else {\n        const contentProp = getTranslatedBodyContentProperty(properties);\n        if (contentProp) {\n          properties.splice(properties.indexOf(contentProp), 1);\n          args.push(propsToExpression(properties), contentProp.value);\n        } else {\n          args.push(propsToExpression(properties));\n        }\n      }\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        if (node.var) {\n          if (!hasMultipleArgs && args.length === 1) {\n            args.push(import_compiler52.types.unaryExpression(\"void\", import_compiler52.types.numericLiteral(0)));\n          }\n          args.push(\n            callRuntime(\n              \"register\",\n              import_compiler52.types.arrowFunctionExpression([], import_compiler52.types.blockStatement([])),\n              import_compiler52.types.stringLiteral(\n                getResumeRegisterId(\n                  section,\n                  node.var.extra?.binding,\n                  // TODO: node.var is not always an identifier.\n                  \"var\"\n                )\n              ),\n              getScopeIdIdentifier(section)\n            )\n          );\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = hasMultipleArgs ? callRuntime(\n          \"dynamicTagArgs\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          import_compiler52.types.arrayExpression(args)\n        ) : callRuntime(\n          \"dynamicTagInput\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          ...args\n        );\n        statements.push(\n          import_compiler52.types.variableDeclaration(\"const\", [\n            import_compiler52.types.variableDeclarator(\n              dynamicScopeIdentifier,\n              callRuntime(\"peekNextScope\")\n            )\n          ])\n        );\n        statements.push(\n          node.var ? import_compiler52.types.variableDeclaration(\"const\", [\n            import_compiler52.types.variableDeclarator(node.var, dynamicTagExpr)\n          ]) : import_compiler52.types.expressionStatement(dynamicTagExpr)\n        );\n        getSerializedScopeProperties(section).set(\n          import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n          ),\n          callRuntime(\"writeExistingScope\", dynamicScopeIdentifier)\n        );\n        getSerializedScopeProperties(section).set(\n          import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n          ),\n          callRuntime(\n            \"normalizeDynamicRenderer\",\n            import_compiler52.types.isIdentifier(tagExpression) ? import_compiler52.types.identifier(tagExpression.name) : tagExpression\n          )\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      } else {\n        const section2 = getSection(tag);\n        const bodySection = getSectionForBody(tag.get(\"body\"));\n        const signal = getSignal(section2, nodeRef2, \"dynamicTagName\");\n        signal.build = () => {\n          return callRuntime(\n            \"conditional\",\n            getScopeAccessorLiteral(nodeRef2),\n            getSignalFn(signal, [scopeIdentifier]),\n            buildSignalIntersections(signal)\n          );\n        };\n        signal.hasDownstreamIntersections = () => true;\n        addValue(\n          section2,\n          node.name.extra?.referencedBindings,\n          signal,\n          bodySection ? import_compiler52.types.logicalExpression(\n            \"||\",\n            tagExpression,\n            import_compiler52.types.callExpression(import_compiler52.types.identifier(bodySection.name), [\n              scopeIdentifier\n            ])\n          ) : tagExpression\n        );\n        if (tag.node.var) {\n          const childScopeLiteral = import_compiler52.types.stringLiteral(\n            getScopeAccessorLiteral(extra[kDOMBinding]).value + \"!\" /* ConditionalScope */\n          );\n          const source = initValue(\n            // TODO: support destructuring\n            tag.node.var.extra.binding\n          );\n          source.register = true;\n          source.buildAssignment = (valueSection, value) => {\n            return import_compiler52.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n              import_compiler52.types.memberExpression(\n                getScopeExpression(source.section, valueSection),\n                childScopeLiteral,\n                true\n              ),\n              value\n            ]);\n          };\n          addStatement(\n            \"render\",\n            section2,\n            nodeRef2,\n            import_compiler52.types.expressionStatement(\n              callRuntime(\n                \"setTagVar\",\n                scopeIdentifier,\n                childScopeLiteral,\n                source.identifier\n              )\n            )\n          );\n        }\n        if (args.length) {\n          const argsOrInput = hasMultipleArgs ? import_compiler52.types.arrayExpression(args) : args[0];\n          const attrsGetter = import_compiler52.types.arrowFunctionExpression(\n            [],\n            statements.length ? import_compiler52.types.blockStatement(\n              statements.concat(import_compiler52.types.returnStatement(argsOrInput))\n            ) : argsOrInput\n          );\n          const id = currentProgramPath.scope.generateUidIdentifier(\n            tag.get(\"name\").toString() + \"_input\"\n          );\n          let added = false;\n          addValue(\n            section2,\n            node.extra?.referencedBindings,\n            {\n              get identifier() {\n                if (!added) {\n                  currentProgramPath.pushContainer(\n                    \"body\",\n                    import_compiler52.types.variableDeclaration(\"const\", [\n                      import_compiler52.types.variableDeclarator(\n                        id,\n                        callRuntime(\n                          \"dynamicTagAttrs\",\n                          getScopeAccessorLiteral(nodeRef2),\n                          bodySection && import_compiler52.types.identifier(bodySection.name),\n                          hasMultipleArgs && import_compiler52.types.numericLiteral(1)\n                        )\n                      )\n                    ])\n                  );\n                  added = true;\n                }\n                return id;\n              },\n              hasDownstreamIntersections: () => true\n            },\n            attrsGetter\n          );\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar TAG_NAME_IDENTIFIER_REG = /^[A-Z][a-zA-Z0-9_$]*$/;\nvar tag_default = {\n  transform: {\n    enter(tag) {\n      const { node } = tag;\n      const { name: name2, attributes } = tag.node;\n      let crawl = false;\n      if (import_compiler53.types.isStringLiteral(name2)) {\n        const tagName = name2.value;\n        if (tag.scope.getBinding(tagName) && TAG_NAME_IDENTIFIER_REG.test(tagName)) {\n          node.name = withPreviousLocation(import_compiler53.types.identifier(tagName), name2);\n          crawl = true;\n        }\n      }\n      for (let i = 0; i < attributes.length; i++) {\n        const attr2 = attributes[i];\n        if (import_compiler53.types.isMarkoAttribute(attr2) && attr2.bound) {\n          attr2.bound = false;\n          const changeValue = getChangeHandler(tag, attr2);\n          if (changeValue === null) {\n            throw tag.hub.buildError(\n              attr2,\n              \"Attributes may only be bound to identifiers or member expressions\"\n            );\n          }\n          attributes.splice(\n            ++i,\n            0,\n            import_compiler53.types.markoAttribute(attr2.name + \"Change\", changeValue)\n          );\n          crawl = true;\n        }\n      }\n      if (crawl) {\n        tag.scope.crawl();\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils42.getTagDef)(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        native_tag_default.analyze.enter(tag);\n        return;\n      }\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.analyze.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const hook = (0, import_babel_utils42.getTagDef)(tag)?.analyzer?.hook;\n      if (hook) {\n        exit(hook, tag);\n        return;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils42.getTagDef)(tag);\n      const extra = tag.node.extra;\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(\n              `Unsupported arguments on the \\`${attr2.node.name}\\` attribute.`\n            );\n          }\n          if (attr2.node.modifier) {\n            if ((0, import_babel_utils42.isNativeTag)(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(\n                `Unsupported modifier \\`${attr2.node.modifier}\\`.`\n              );\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(\n          import_compiler53.types.variableDeclaration(\"const\", [\n            import_compiler53.types.variableDeclarator(tagNameId, tag.node.name)\n          ])\n        );\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = (0, import_babel_utils42.getTagDef)(tag)?.translator;\n      if (translator) {\n        exit(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\nfunction getChangeHandler(tag, attr2) {\n  if (import_compiler53.types.isIdentifier(attr2.value)) {\n    const valueId = tag.scope.generateUidIdentifier(\"new_\" + attr2.value.name);\n    return import_compiler53.types.arrowFunctionExpression(\n      [valueId],\n      import_compiler53.types.blockStatement([\n        import_compiler53.types.expressionStatement(\n          import_compiler53.types.assignmentExpression(\"=\", import_compiler53.types.cloneNode(attr2.value), valueId)\n        )\n      ])\n    );\n  } else if (import_compiler53.types.isMemberExpression(attr2.value)) {\n    const prop = attr2.value.property;\n    if (import_compiler53.types.isPrivateName(prop)) return null;\n    if (import_compiler53.types.isIdentifier(prop)) {\n      return import_compiler53.types.memberExpression(\n        import_compiler53.types.cloneNode(attr2.value.object),\n        import_compiler53.types.identifier(prop.name + \"Change\")\n      );\n    } else {\n      return import_compiler53.types.memberExpression(\n        import_compiler53.types.cloneNode(attr2.value.object),\n        import_compiler53.types.binaryExpression(\"+\", import_compiler53.types.cloneNode(prop), import_compiler53.types.stringLiteral(\"Change\")),\n        true\n      );\n    }\n  }\n  return null;\n}\n\n// src/translator/visitors/text.ts\nvar import_compiler54 = require(\"@marko/compiler\");\nvar text_default = {\n  translate: {\n    exit(text) {\n      writeTo(text)`${text.node.value}`;\n      enterShallow(text);\n      text.remove();\n    }\n  }\n};\n\n// src/translator/index.ts\nvar visitors = extractVisitors({\n  Program: program_default,\n  Function: function_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n});\nvar tagDiscoveryDirs = [\"tags\"];\nvar preferAPI = \"tags\";\nvar { transform, analyze, translate } = visitors;\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: visitors.migrate\n    }\n  ]\n];\nfunction getRuntimeEntryFiles(output, optimize) {\n  return [\n    `${runtime_info_default.name}${optimize ? \"\" : \"/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`\n  ];\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyze,\n  getRuntimeEntryFiles,\n  internalEntryBuilder,\n  preferAPI,\n  tagDiscoveryDirs,\n  taglibs,\n  transform,\n  translate\n});\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__toESM","isNodeMode","target","__esModule","value","translator_exports","__export","all","name2","analyze","getRuntimeEntryFiles","internalEntryBuilder","entry_builder_default","preferAPI","tagDiscoveryDirs","taglibs","transform","translate","module","exports","runtime_info_default","name","require","taglibId","import_compiler","import_babel_utils","assertNoSpreadAttrs","tag","attr2","isMarkoSpreadAttribute","buildCodeFrameError","node","assertNoBodyContent","body","length","attrs_default","migrate","assertNoArgs","assertNoParams","assertNoAttributes","assertNoAttributeTags","diagnosticDeprecate","label","fix","tagVar","var","type","remove","constTag","types","markoTag","stringLiteral","markoAttribute","identifier","markoTagBody","replaceWith","attributes","autocomplete","displayText","description","snippet","import_compiler22","import_babel_utils12","import_babel_utils2","evaluate","extra","confident","computed","computeNode","import_compiler21","import_compiler20","import_babel_utils11","import_path2","bindingHasDownstreamExpressions","binding","downstreamExpressions","size","alias","aliases","propertyAliases","values","import_compiler2","import_babel_utils3","kState","Symbol","build","entryFile","state","path","imports","map","it","importDeclaration","init","unshift","importSpecifier","markoOpts","optimize","push","expressionStatement","callExpression","visit","file","visitChild","analyzedTags","metadata","marko","resolveRelativePath","opts","filename","hasInteractiveChild","isInteractive","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","isOptimize","import_compiler4","import_babel_utils4","stringifyClassObject","NON_DIMENSIONAL","stringifyStyleObject","test","toDelimitedString","val","delimiter","stringify","result","curDelimiter","Array","isArray","v","part","isEventHandler","getEventHandlerName","slice","toLowerCase","toString","unsafeXMLReg","replaceUnsafeXML","c","escapeXML","str","replace","unsafeScriptReg","escapeScript","unsafeStyleReg","escapeStyle","toAccess","accessor","start","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","source","nonVoidAttr","escapeAttrValue","constructor","async","KNOWN_SYMBOLS2","Map","symbol","set","AggregateError","of","ArrayBuffer","isView","Atomics","add","and","compareExchange","exchange","isLockFree","load","notify","or","store","sub","wait","BigInt","asIntN","asUintN","BigInt64Array","BigUint64Array","Boolean","console","assert","clear","count","countReset","debug","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","table","time","timeEnd","timeLog","timeStamp","trace","warn","DataView","Date","now","parse","UTC","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Function","globalThis","atob","btoa","clearImmediate","clearInterval","clearTimeout","crypto","getRandomValues","randomUUID","fetch","performance","queueMicrotask","setImmediate","setInterval","setTimeout","structuredClone","URL","URLSearchParams","WritableStream","Int16Array","Int32Array","Int8Array","Intl","Collator","DateTimeFormat","DisplayNames","getCanonicalLocales","ListFormat","Locale","NumberFormat","PluralRules","RelativeTimeFormat","Segmenter","supportedValuesOf","isFinite","isNaN","JSON","groupBy","Math","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","Number","isInteger","isSafeInteger","parseFloat","parseInt","assign","defineProperties","entries","freeze","fromEntries","getOwnPropertyDescriptors","getOwnPropertySymbols","is","isExtensible","isFrozen","isSealed","keys","preventExtensions","seal","setPrototypeOf","Promise","Proxy","RangeError","ReferenceError","Reflect","apply","construct","deleteProperty","has","ownKeys","Set","String","fromCharCode","fromCodePoint","raw","for","SyntaxError","TypeError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","URIError","WeakMap","WeakSet","unsafeAttrChars","lastIndex","import_compiler3","toPropertyName","numericLiteral","toObjectProperty","objectProperty","toMemberExpression","object","optional","prop","optionalMemberExpression","memberExpression","pureFunctions","importRuntime","importStar","getRuntimePath","callRuntime","args","callExpression2","filteredArgs","i","arg","unaryExpression","filterArguments","includes","leadingComments","getHTMLRuntime","getCompatRuntimeFile","modules","import_compiler6","import_babel_utils7","import_babel_utils5","getTagName","isCoreTag","isMarkoTag","tagDef","getTagDef","isCoreTagName","isConditionTag","data","item","forEach","cb","find","findSorted","compare","pos","mid","cur","compareResult","addSorted","len","next","joinRepeatable","a","b","createProgramState","createSectionState","section","arrayOfSectionData","id","import_compiler5","import_babel_utils6","MARKO_FILE_REG","analyzeTagNameType","tagNameType","isStringLiteral","isNativeTag","tagNameNullable","pending","path5","tagNameImported","nullable","pop","isConditionalExpression","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","scope","getBinding","kind","decl","parent","specifiers","some","isImportDefaultSpecifier","resolvedImport","resolveTagImport","bindingTag","bindingTagName","tagNameDynamic","analyzeExpressionTagName","childFile","loadFileForTag","ast","program","featureType","needsCompat","startSection","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","programExtra","sections","loc","depth","params","closures","bindings","content","getContentInfo","upstreamExpression","hasAbortSignal","isBranch","attributeTags","getSectionForBody","getSection","currentPath","getScopeIdIdentifier","generateUidIdentifier","getSectionParentIsOwner","setSectionParentIsOwner","_getScopeIdentifier","getScopeIdentifier","ignoreDefault","scopeId","forEachSection","fn","contentInfo","startType","endType","singleChild","endIndex","getNodeContentType","startIndex","extraMember","isAttributeTag","tagSection","isStatefulSection","isStatefulReferences","referencedBindings","checkStatefulClosures","immediateOnly","closure","import_compiler18","import_babel_utils10","import_path","regexpCharsReg","import_compiler17","import_babel_utils9","import_compiler11","import_babel_utils8","getKnownAttrValues","attrs2","import_compiler7","enter","modulePlugin","plugin","isModulePlugin","default","isFunctionPlugin","exit","translateByTarget","html","dom","import_compiler10","import_compiler8","normalizeStringExpression","parts","strs","exprs","curStr","nextIndex","exprLen","expressions","shiftItems","quasis","j","templateLiteral","templateElement","appendLiteral","arr","list","offset","import_compiler9","getWalks","getWalkComment","getSteps","walkCodeToName","enter2","exit2","enterShallow","code","steps","walks","walkComment","walkString","walkCodes","step","lastIndexOf","current","walk","nCodeString","writeTo","number","toCharString","startCode","rangeSize","multiplier","getWalkString","prefix2","postfix","walkLiteral","join","getWrites","getTrailerWrites","trailer","exprsLen","writes","consumeHTML","trailers","writeResult","trailerResult","sequenceExpression","flushBefore","expr","insertBefore","skip","flushInto","pushContainer","getSectionMeta","writePrefix","writePostfix","setup","getSetup","markNode","getScopeAccessorLiteral","returnId","_setReturnId","usedTag","return_default","assertNoVar","assertAllowedAttributes","valueChange","getSerializedScopeProperties","returnId2","variableDeclaration","variableDeclarator","addValue","hasDownstreamIntersections","parseOptions","openTagOnly","descriptionMoreURL","forEachIdentifier","properties","left","argument","el","elements","import_compiler12","getDeclaredBindingExpression","declared","upstreamAlias","property","import_compiler13","createScopeReadPattern","rootDepth","rootPattern","objectPattern","nestedPatterns","ref","propertyKey","propertyValue","isShorthand","pattern","relativeDepth","prev","nestedPattern","getScopeExpression","targetSection","scopeIdentifier","diff","createScopeReadExpression","reference","import_compiler14","simplifyFunction","functionExpression","generator","import_compiler15","toFirstExpressionOrBlock","stmts","isExpressionStatement","expression","toParenthesizedExpressionIfNeeded","blockStatement","parenthesizedExpression","import_compiler16","traverseReplace","container","enter3","VISITOR_KEYS","replacement","traverseContains","check","getSignals","getClosureSignalBuilder","_setClosureSignalBuilder","setClosureSignalBuilder","builder","forceResumeScope","_setForceResumeScope","setForceResumeScope","unimplementedBuild","getSignal","generateSignalName","signals","signal","exportName","export","domExports","intersection","render","renderReferencedBindings","effect","effectReferencedBindings","subscribers","subscribe","getSignalFn","buildSignalIntersections","bindingUtil","ownerScope","isImmediateOwner","isDynamicClosure","arrowFunctionExpression","addStatement","initValue","runtimeHelper","valueAccessor","intersections","isParamBinding","scopeIdentifier2","valueIdentifier","isValueSignal","aliasSignal","getTranslatedExtraArgs","closureEntries","sort","_closureSection","closureSignal","hasTranslatedExtraArgs","emptyExtraArgs","extraArgs","replaceRenderNode","signal2","intersectionExpression","isMemberExpression","arrayExpression","provider","subscriber","p","providerSignal","finalizeSignalArgs","isArrowFunctionExpression","isBlockStatement","statement","usedReferences","statements","addEffectReferences","addRenderReferences","union","getResumeRegisterId","getTemplateId","usedRegisterIdsBySection","getRegisterUID","used","baseId","writeSignals","sortSignals","value2","effectDeclarator","replaceEffectNode","effectIdentifier","referencesScope","isScopeIdentifier","isCallExpression","arguments","register","signalDeclarator","signalDeclaration","isFunctionExpression","functionDeclaration","isExpression","exportNamedDeclaration","toReturnedFunction","rawFn","returnStatement","aReferencedBindings","getReferencedBindings","bReferencedBindings","reserve","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","tagVarIdentifier","allSignals","scopeIdIdentifier","currentSection","signalRefs","accessors","additionalProperties","serializedProperties","serialize","isLiteral","writeScope2","objectExpression","debugVars","root","access","locStr","line","column","filenameRelative","unshiftContainer","replaceAssignedNode","replaceBindingReadNode","replaceRegisteredFunctionNode","getReadReplacement","isAssignedBindingExtra","buildAssignment","assignment","binaryExpression","prefix","right","assignments","resultId","assignmentExpression","registeredFnsForProgram","getRegisteredFnExpression","classProperty","classPrivateProperty","isRegisteredFnExtra","referencedBindingsInFunction","registedFns","registerId","dom_default","templateIdentifier","template","walksIdentifier","setupIdentifier","paramsBinding","programParamsSignal","styleFile","fs","fileSystem","base","sep","leftDot","indexOf","rightDot","closeBracket","openBracket","getBase","styleMatch","file2","readdirSync","dirname","getStyleFile","importDefault","forEachSectionReverse","childSection","tagParamsSignal","walks2","writes2","setup2","renderer","registeredFns","registeredFn","assignmentPattern","stmt","writeRegisteredFns","exportDefaultDeclaration","import_compiler19","html_default","replaceNode","returnIdentifier","renderContent","child","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","replaceWithMultiple","htmlRendererIdentifier","read","replaceBindingReadNode2","getRegisteredFnExpression2","registeredFnDeclarations","registeredFnDeclarationsByBody","addRegisteredDeclarations","replaceRegisteredFunctionNode2","previousProgramPath","program_default","crawl","trackParamsReferences","getBindings","readsByExpression","getReadsByExpression","readsByFn","getReadsByFunction","mergedReferences","getMergedReferences","nodes","targetExtra","reads","isEffect","isReferencedExtra","additionalReads","concat","delete","intersectionsBySection","resolveReferencedBindings","pruneBinding","name3","section2","bindingReference","numReferences","binding1","binding2","sources1","getSourceBindings","sources2","isSuperset","sourceSection","bindings2","filter","finalizeReferences","buildTemplateExports","visitedFiles","resolved","loadFileForImport","req","resolveRelativeToEntry","compatFile","templateExport","props","exports2","getExprRoot","curPath","isMarko","getFnRoot","withPreviousLocation","newNode","originalNode","end","getNextBindingId","setNextBindingId","createBinding","excludeProperties","propBinding","trackVarReferences","canonicalUpstreamAlias","getCanonicalBinding","pruned","createBindingsAndTrackReferences","trackAssignment","setReferencesScope","fnRoot","lVal","babelBinding","referencePaths","constantViolations","referencePath","trackReference","isUpdateExpression","trackReferencesForBinding","patternBinding","element","propPath","getMemberExpressionPropString","isEventOrChangeHandler","exprRoot","addReadToExpression","fnExtra","mergeReferences","compareIntersections","lenDelta","subset","elem","derived","sources","curBinding","this","aLen","bLen","aIndex","bIndex","aValue","bValue","delta","unionSortedRepeatable","exprExtra","dropReferences","getAllTagReferenceNodes","referenceNodes","shouldPrune","exprReference","resolveExpressionReference","createRead","readBinding","readProps","aliasProps","isStatefulBinding","await_default","valueAttr","isMarkoAttribute","isSpreadElement","bodySection","tagBody","import_compiler23","import_babel_utils13","client_default","rawValue","trim","parseStatements","markoScriptlet","rawOpenTag","import_compiler25","import_babel_utils14","import_compiler24","translateVar","initialValue","const_default","varBinding","derivation","import_compiler26","import_babel_utils15","debug_default","debuggerStatement","import_babel_utils20","import_compiler27","import_babel_utils16","getParentTag","attrTagToIdentifierLookup","getAttrTagIdentifier","meta","analyzeAttributeTags","attrTags2","lookup","attrTagNodesByName","sampleAttrTagsForControlFlow","createAttrTagMeta","isRepeated","isLoopTag","curGroup","crawlAttrTags","oldMeta","attrTagMeta","dynamic","repeated","controlFlowTag","sampleAttrName","attributeTagGroup","attrTagNodes","hasRepeatedDynamicAttrTags","attrTagNames","tagName","conditionRoot","seenBranches","attrTag2","parentTag","curConditionRoot","getConditionRoot","getPrevSibling","import_compiler30","import_babel_utils19","import_compiler29","import_babel_utils18","import_compiler28","import_babel_utils17","kNativeTagBinding","kSerializeMarker","kGetterId","htmlSelectArgs","getRelatedControllable","checked","checkedChange","special","helper","attrs","checkedValue","checkedValueChange","open","openChange","native_tag_default","escape","buildError","buildUndefined","hasEventHandlers","hasDynamicAttributes","seen","relatedControllable","spreadReferenceNodes","propName","exclusiveGroups","assertExclusiveControllableGroups","every","tagName2","toIdentifier","tagExtra","bindingName","isInvokedFunction","nodeRef2","isHTML","write2","getterId","varName","references","getterFnIdentifier","referenceSection","visitAccessor","usedAttrs","maybeStaticAttrs","spreadExpression","skipExpression","spreadProps","skipProps","staticControllable","attr3","spreadElement","staticAttrs","reverse","propsToExpression","getUsedAttrs","writeAtStartOfBody","firstAttr","spreadIdentifier","valueReferences","htmlType","ifStatement","selectArgs","callee","kForMarkerBinding","kOnlyChildInParent","for_default","isAttrTag","allowAttrs","getForType","isOnlyChildInParent","parentTagName","isStateful","forAttrs","forType","bodyStatements","hasStatefulClosures","singleNodeOptimization","keyExpression","defaultParamNames","in","defaultByParamIndex","requiredParamsIndex","by","existingParam","isFunction","byIdentifier","forTypeToHTMLByRuntime","forScopesIdentifier","newExpression","conditionalExpression","forTagArgs","getBaseArgsInForTag","forTagHTMLRuntime","forTypeToHTMLResumeRuntime","forTypeToRuntime","_closureSignal","forTypeToDOMRuntime","param","referencedBindings2","loopArgs","controlFlow","contentProps","translateAttrs","templateExports","contentKey","attrTagLookup","usesExport","addDynamicAttrTagStatements","translatedAttrTag","prevProp","findObjectProperty","contentExpression","isTransparentTag","getNonAttributeTagParent","buildContent","contentProp","getTranslatedBodyContentProperty","index","ifTag","consequentStatements","getConditionTestValue","addAllAttrTagsAsDynamic","nextTag","testValue","alternateStatements","translateIfAttrTag","forTag","buildForRuntimeCall","translateForAttrTag","define_default","translatedAttrs","import_compiler32","import_babel_utils21","effect_default","import_babel_utils22","export_default","import_compiler33","import_babel_utils23","kCommentTagBinding","kGetterId2","html_comment_default","needsBinding","needsGetter","isMarkoPlaceholder","isMarkoText","commentBinding","templateQuasis","templateExpressions","currentQuasi","text","import_compiler34","import_babel_utils24","kGetterId3","html_script_default","bodyPlaceholderNodes","hasBodyPlaceholders","getUsedAttrs2","referencePlaceholder","preserveWhitespace","import_compiler35","import_babel_utils25","kGetterId4","html_style_default","getUsedAttrs3","import_compiler36","import_babel_utils26","id_default","import_compiler38","import_babel_utils27","import_compiler37","kBinding","BRANCHES_LOOKUP","IfTag","assertHasBody","assertHasValueAttribute","assertHasPrecedingCondition","ifAttr","msg","assertOptionalIfAttribute","assertValidCondition","isLast","branches","getBranches","rootTag","rootExtra","mergeReferenceNodes","branchTag","branchBodySection","isRoot","getNextSibling","ifScopeIdIdentifier","ifRendererIdentifier","branchHasStatefulClosures","testAttr","curStatement","cbNode","nullLiteral","consequent","ElseIfTag","ElseTag","isMarkoComment","import_babel_utils28","import_default","import_compiler39","import_babel_utils29","let_default","valueChangeAttr","valueSection","import_compiler40","import_babel_utils30","kRef","lifecycle_default","lifecycleAttrsRef","import_compiler41","import_babel_utils31","log_default","import_compiler42","import_babel_utils32","htmlScriptTagAlternateMsg","script_default","valueFn","isAwaitExpression","seenValueAttr","isFunction2","inlineBody","hasDeclaration","isDeclaration","import_compiler43","import_babel_utils33","server_default","import_compiler44","import_babel_utils34","static_default","import_compiler45","import_babel_utils35","import_magic_string","import_path3","STYLE_EXT_REG","htmlStyleTagAlternateMsg","style_default","ext","exec","sourceMaps","markoText","resolveVirtualDependency","getStart","getEnd","magicString","generateMap","includeContent","toUrl","importPath","virtualPath","basename","importDefaultSpecifier","import_compiler46","import_babel_utils36","try_default","setAllSectionsParentIsOwner","core_default","cdata_default","cdata","comment_default","comment","declaration_default","document_type_default","documentType","import_compiler47","import_babel_utils37","functionIdsBySection","function_default","markoRoot","getMarkoRoot","isStatic2","declare","isVariableDeclarator","isObjectMethod","functionNameCounts","import_babel_utils38","import_declaration_default","importDecl","tagImport","tags","import_compiler48","kBinding2","kSiblingText","placeholder_default","placeholder","isVoid2","placeholderExtra","contentType","analyzeSiblingText","nodeBinding","canWriteHTML","method","siblingText","import_compiler49","abortIdsByExpressionForSection","referenced_identifier_default","hasBinding","throwStatement","exprId","abortIdsByExpression","scriptlet_default","scriptlet","import_compiler53","import_babel_utils42","import_babel_utils39","attribute_tag_default","findParentTag","import_compiler51","import_babel_utils40","import_path4","kChildScopeBinding","custom_tag_default","assertAttributesOrSingleArg","getTagTemplate","charAt","toUpperCase","childProgramExtra","analyzeAttrs","tagIdentifier","relativePath","getTagRelativePath","isCircularRequest","childScopeBinding","peekScopeId","inputExport","contentId","contentPath","renderTagExpr","callStatement","translateHTML","childExports","importOrSelfReferenceName","writeAttrsToExports","circular","importNamed","injectWalks","translateDOM","nodeReferencesByGroup","analyzeDynamicChildGroup","groupReferences","firstTag","attrTagName","childAttrExports","childUsesGroupProp","importAlias","tagInputIdentifier","identifierToSignal","translatedProps","statementsByGroup","translateDynamicAttrTagChildInGroup","childAttrExport","decls","attrExportIdentifier","contentExportIdentifier","missing","getMissingPropValue","buildUndefined2","spreadId","request","nameHint","resolve","always","import_compiler52","import_babel_utils41","kDOMBinding","dynamic_tag_default","assertAttributesOrArgs","domBinding","isClassAPI","tagExpression","hasMultipleArgs","splice","dynamicScopeIdentifier","dynamicTagExpr","logicalExpression","childScopeLiteral","argsOrInput","attrsGetter","added","TAG_NAME_IDENTIFIER_REG","tag_default","bound","changeValue","getChangeHandler","hook","analyzer","translator","watchFiles","modifier","tagNameId","tagNameVarPath","valueId","cloneNode","isPrivateName","visitors","visitors2","_name","extractVisitors","Program","ReferencedIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment"],"sourceRoot":""}