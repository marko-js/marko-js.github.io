{"version":3,"file":"420.369077db.js","mappings":"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","sources":["webpack:///../../node_modules/@marko/runtime-tags/dist/translator/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name2 in all)\n    __defProp(target, name2, { get: all[name2], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/translator/index.ts\nvar translator_exports = {};\n__export(translator_exports, {\n  analyze: () => analyze,\n  getRuntimeEntryFiles: () => getRuntimeEntryFiles,\n  internalEntryBuilder: () => entry_builder_default,\n  preferAPI: () => preferAPI,\n  tagDiscoveryDirs: () => tagDiscoveryDirs,\n  taglibs: () => taglibs,\n  transform: () => transform,\n  translate: () => translate\n});\nmodule.exports = __toCommonJS(translator_exports);\n\n// src/translator/util/runtime-info.ts\nvar import_package = require(\"../../package.json\");\nvar runtime_info_default = {\n  name: import_package.name,\n  taglibId: \"marko-core\"\n};\n\n// src/translator/core/attrs.ts\nvar import_compiler = require(\"@marko/compiler\");\nvar import_babel_utils = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(\n        `The \\`${tag.get(\"name\").node.value}\\` tag does not support \\`...spread\\` attributes.`\n      );\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${tag.get(\"name\").node.value}\\` tag does not support body content.`\n    );\n  }\n}\n\n// src/translator/core/attrs.ts\nvar attrs_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils.assertNoArgs)(tag);\n      (0, import_babel_utils.assertNoParams)(tag);\n      (0, import_babel_utils.assertNoAttributes)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils.assertNoAttributeTags)(tag);\n      (0, import_babel_utils.diagnosticDeprecate)(tag, {\n        label: \"The `attrs` tag is deprecated, prefer destructuring `input` via the `const` tag.\",\n        fix() {\n          const tagVar = tag.node.var;\n          if (tagVar && !(tagVar.type === \"Identifier\" && tagVar.name === \"input\")) {\n            const constTag = import_compiler.types.markoTag(\n              import_compiler.types.stringLiteral(\"const\"),\n              [import_compiler.types.markoAttribute(\"value\", import_compiler.types.identifier(\"input\"))],\n              import_compiler.types.markoTagBody([])\n            );\n            constTag.var = tagVar;\n            tag.replaceWith(constTag);\n          } else {\n            tag.remove();\n          }\n        }\n      });\n    }\n  ],\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/translator/core/await.ts\nvar import_compiler23 = require(\"@marko/compiler\");\nvar import_babel_utils12 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/evaluate.ts\nvar import_babel_utils2 = require(\"@marko/compiler/babel-utils\");\nfunction evaluate(value) {\n  let { extra } = value;\n  if (!extra) {\n    extra = value.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const computed = (0, import_babel_utils2.computeNode)(value);\n    if (computed) {\n      extra.computed = computed.value;\n      extra.confident = true;\n    } else {\n      extra.computed = void 0;\n      extra.confident = false;\n    }\n  }\n  return extra;\n}\n\n// src/translator/util/references.ts\nvar import_compiler22 = require(\"@marko/compiler\");\n\n// src/translator/visitors/program/index.ts\nvar import_compiler20 = require(\"@marko/compiler\");\nvar import_babel_utils11 = require(\"@marko/compiler/babel-utils\");\nvar import_path2 = __toESM(require(\"path\"));\n\n// src/translator/util/binding-has-downstream-expressions.ts\nfunction bindingHasDownstreamExpressions(binding) {\n  if (binding.downstreamExpressions.size) return true;\n  for (const alias of binding.aliases) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  return false;\n}\n\n// src/translator/util/entry-builder.ts\nvar import_compiler2 = require(\"@marko/compiler\");\nvar import_babel_utils3 = require(\"@marko/compiler/babel-utils\");\nvar kState = Symbol();\nvar entry_builder_default = {\n  build(entryFile) {\n    const state = entryFile[kState];\n    if (!state) {\n      throw entryFile.path.buildCodeFrameError(\n        \"Unable to build hydrate code, no files were visited before finalizing the build\"\n      );\n    }\n    const body = state.imports.map(\n      (it) => import_compiler2.types.importDeclaration([], import_compiler2.types.stringLiteral(it))\n    );\n    if (state.init) {\n      body.unshift(\n        import_compiler2.types.importDeclaration(\n          [import_compiler2.types.importSpecifier(import_compiler2.types.identifier(\"init\"), import_compiler2.types.identifier(\"init\"))],\n          import_compiler2.types.stringLiteral(\n            `${runtime_info_default.name}/${entryFile.markoOpts.optimize ? \"\" : \"debug/\"}dom`\n          )\n        )\n      );\n      body.push(\n        import_compiler2.types.expressionStatement(import_compiler2.types.callExpression(import_compiler2.types.identifier(\"init\"), []))\n      );\n    }\n    return body;\n  },\n  visit(file, entryFile, visitChild) {\n    const state = entryFile[kState] ||= {\n      imports: [],\n      init: false\n    };\n    const { analyzedTags } = file.metadata.marko;\n    state.imports.push(\n      (0, import_babel_utils3.resolveRelativePath)(entryFile, file.opts.filename)\n    );\n    state.init ||= file.path.node.extra.hasInteractiveChild || file.path.node.extra.isInteractive || false;\n    for (const tag of analyzedTags || []) {\n      visitChild(tag);\n    }\n  }\n};\n\n// src/translator/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/translator/util/runtime.ts\nvar import_compiler4 = require(\"@marko/compiler\");\nvar import_babel_utils4 = require(\"@marko/compiler/babel-utils\");\n\n// src/common/attr-tag.ts\nvar rest = false ? Symbol(\"Attribute Tag\") : Symbol();\n\n// src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name2, value) {\n  return value ? name2 : \"\";\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nfunction stringifyStyleObject(name2, value) {\n  return value || value === 0 ? `${name2}:${typeof value === \"number\" && value && !/^(--|ta|or|li|z)|cou|nk|it|ag|we|do|w$/.test(name2) ? value + \"px\" : value}` : \"\";\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name2 in val) {\n            const v = val[name2];\n            const part = stringify(name2, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isEventHandler(name2) {\n  return /^on[A-Z-]/.test(name2);\n}\nfunction getEventHandlerName(name2) {\n  return name2[2] === \"-\" ? name2.slice(3) : name2.slice(2).toLowerCase();\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// src/html/content.ts\nfunction toString(val) {\n  return val ? val + \"\" : val === 0 ? \"0\" : \"\";\n}\nvar unsafeXMLReg = /[<&]/g;\nvar replaceUnsafeXML = (c) => c === \"&\" ? \"&amp;\" : \"&lt;\";\nvar escapeXMLStr = (str) => unsafeXMLReg.test(str) ? str.replace(unsafeXMLReg, replaceUnsafeXML) : str;\nfunction escapeXML(val) {\n  return val ? escapeXMLStr(val + \"\") : val === 0 ? \"0\" : \"&zwj;\";\n}\nvar unsafeScriptReg = /<\\/script/g;\nvar escapeScriptStr = (str) => unsafeScriptReg.test(str) ? str.replace(unsafeScriptReg, \"\\\\x3C/script\") : str;\nfunction escapeScript(val) {\n  return val ? escapeScriptStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\nvar unsafeStyleReg = /<\\/style/g;\nvar escapeStyleStr = (str) => unsafeStyleReg.test(str) ? str.replace(unsafeStyleReg, \"\\\\3C/style\") : str;\nfunction escapeStyle(val) {\n  return val ? escapeStyleStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\n\n// src/html/serializer.ts\nvar { hasOwnProperty } = {};\nvar Generator = function* () {\n}().constructor;\nvar AsyncGenerator = async function* () {\n}().constructor;\nvar KNOWN_SYMBOLS = (() => {\n  const KNOWN_SYMBOLS2 = /* @__PURE__ */ new Map();\n  for (const name2 of Object.getOwnPropertyNames(Symbol)) {\n    const symbol = Symbol[name2];\n    if (typeof symbol === \"symbol\") {\n      KNOWN_SYMBOLS2.set(symbol, \"Symbol.\" + name2);\n    }\n  }\n  return KNOWN_SYMBOLS2;\n})();\nvar KNOWN_FUNCTIONS = /* @__PURE__ */ new Map([\n  // This is by no means an exhaustive list,\n  // but it should cover most of the built-in functions.\n  [AggregateError, \"AggregateError\"],\n  [Array, \"Array\"],\n  [Array.from, \"Array.from\"],\n  [Array.isArray, \"Array.isArray\"],\n  [Array.of, \"Array.of\"],\n  [ArrayBuffer, \"ArrayBuffer\"],\n  [ArrayBuffer.isView, \"ArrayBuffer.isView\"],\n  [Atomics.add, \"Atomics.add\"],\n  [Atomics.and, \"Atomics.and\"],\n  [Atomics.compareExchange, \"Atomics.compareExchange\"],\n  [Atomics.exchange, \"Atomics.exchange\"],\n  [Atomics.isLockFree, \"Atomics.isLockFree\"],\n  [Atomics.load, \"Atomics.load\"],\n  [Atomics.notify, \"Atomics.notify\"],\n  [Atomics.or, \"Atomics.or\"],\n  [Atomics.store, \"Atomics.store\"],\n  [Atomics.sub, \"Atomics.sub\"],\n  [Atomics.wait, \"Atomics.wait\"],\n  [BigInt, \"BigInt\"],\n  [BigInt.asIntN, \"BigInt.asIntN\"],\n  [BigInt.asUintN, \"BigInt.asUintN\"],\n  [BigInt64Array, \"BigInt64Array\"],\n  [BigInt64Array.from, \"BigInt64Array.from\"],\n  [BigInt64Array.of, \"BigInt64Array.of\"],\n  [BigUint64Array, \"BigUint64Array\"],\n  [BigUint64Array.from, \"BigUint64Array.from\"],\n  [BigUint64Array.of, \"BigUint64Array.of\"],\n  [Boolean, \"Boolean\"],\n  [console.assert, \"console.assert\"],\n  [console.clear, \"console.clear\"],\n  [console.count, \"console.count\"],\n  [console.countReset, \"console.countReset\"],\n  [console.debug, \"console.debug\"],\n  [console.dir, \"console.dir\"],\n  [console.dirxml, \"console.dirxml\"],\n  [console.error, \"console.error\"],\n  [console.group, \"console.group\"],\n  [console.groupCollapsed, \"console.groupCollapsed\"],\n  [console.groupEnd, \"console.groupEnd\"],\n  [console.info, \"console.info\"],\n  [console.log, \"console.log\"],\n  [console.table, \"console.table\"],\n  [console.time, \"console.time\"],\n  [console.timeEnd, \"console.timeEnd\"],\n  [console.timeLog, \"console.timeLog\"],\n  [console.timeStamp, \"console.timeStamp\"],\n  [console.trace, \"console.trace\"],\n  [console.warn, \"console.warn\"],\n  [DataView, \"DataView\"],\n  [Date, \"Date\"],\n  [Date.now, \"Date.now\"],\n  [Date.parse, \"Date.parse\"],\n  [Date.UTC, \"Date.UTC\"],\n  [decodeURI, \"decodeURI\"],\n  [decodeURIComponent, \"decodeURIComponent\"],\n  [encodeURI, \"encodeURI\"],\n  [encodeURIComponent, \"encodeURIComponent\"],\n  [Error, \"Error\"],\n  [EvalError, \"EvalError\"],\n  [Float32Array, \"Float32Array\"],\n  [Float32Array.from, \"Float32Array.from\"],\n  [Float32Array.of, \"Float32Array.of\"],\n  [Float64Array, \"Float64Array\"],\n  [Float64Array.from, \"Float64Array.from\"],\n  [Float64Array.of, \"Float64Array.of\"],\n  [Function, \"Function\"],\n  [globalThis.atob, \"atob\"],\n  [globalThis.btoa, \"btoa\"],\n  [globalThis.clearImmediate, \"clearImmediate\"],\n  [globalThis.clearInterval, \"clearInterval\"],\n  [globalThis.clearTimeout, \"clearTimeout\"],\n  [globalThis.crypto?.getRandomValues, \"crypto.getRandomValues\"],\n  [globalThis.crypto?.randomUUID, \"crypto.randomUUID\"],\n  [globalThis.fetch, \"fetch\"],\n  [globalThis.performance?.now, \"performance.now\"],\n  [globalThis.queueMicrotask, \"queueMicrotask\"],\n  [globalThis.setImmediate, \"setImmediate\"],\n  [globalThis.setInterval, \"setInterval\"],\n  [globalThis.setTimeout, \"setTimeout\"],\n  [globalThis.structuredClone, \"structuredClone\"],\n  [globalThis.URL, \"URL\"],\n  [globalThis.URLSearchParams, \"URLSearchParams\"],\n  [globalThis.WritableStream, \"WritableStream\"],\n  [Int16Array, \"Int16Array\"],\n  [Int16Array.from, \"Int16Array.from\"],\n  [Int16Array.of, \"Int16Array.of\"],\n  [Int32Array, \"Int32Array\"],\n  [Int32Array.from, \"Int32Array.from\"],\n  [Int32Array.of, \"Int32Array.of\"],\n  [Int8Array, \"Int8Array\"],\n  [Int8Array.from, \"Int8Array.from\"],\n  [Int8Array.of, \"Int8Array.of\"],\n  [Intl.Collator, \"Intl.Collator\"],\n  [Intl.DateTimeFormat, \"Intl.DateTimeFormat\"],\n  [Intl.DisplayNames, \"Intl.DisplayNames\"],\n  [Intl.getCanonicalLocales, \"Intl.getCanonicalLocales\"],\n  [Intl.ListFormat, \"Intl.ListFormat\"],\n  [Intl.Locale, \"Intl.Locale\"],\n  [Intl.NumberFormat, \"Intl.NumberFormat\"],\n  [Intl.PluralRules, \"Intl.PluralRules\"],\n  [Intl.RelativeTimeFormat, \"Intl.RelativeTimeFormat\"],\n  [Intl.Segmenter, \"Intl.Segmenter\"],\n  [Intl.supportedValuesOf, \"Intl.supportedValuesOf\"],\n  [isFinite, \"isFinite\"],\n  [isNaN, \"isNaN\"],\n  [JSON.parse, \"JSON.parse\"],\n  [JSON.stringify, \"JSON.stringify\"],\n  [Map, \"Map\"],\n  [Map.groupBy, \"Map.groupBy\"],\n  [Math.abs, \"Math.abs\"],\n  [Math.acos, \"Math.acos\"],\n  [Math.acosh, \"Math.acosh\"],\n  [Math.asin, \"Math.asin\"],\n  [Math.asinh, \"Math.asinh\"],\n  [Math.atan, \"Math.atan\"],\n  [Math.atan2, \"Math.atan2\"],\n  [Math.atanh, \"Math.atanh\"],\n  [Math.cbrt, \"Math.cbrt\"],\n  [Math.ceil, \"Math.ceil\"],\n  [Math.clz32, \"Math.clz32\"],\n  [Math.cos, \"Math.cos\"],\n  [Math.cosh, \"Math.cosh\"],\n  [Math.exp, \"Math.exp\"],\n  [Math.expm1, \"Math.expm1\"],\n  [Math.floor, \"Math.floor\"],\n  [Math.fround, \"Math.fround\"],\n  [Math.hypot, \"Math.hypot\"],\n  [Math.imul, \"Math.imul\"],\n  [Math.log, \"Math.log\"],\n  [Math.log10, \"Math.log10\"],\n  [Math.log1p, \"Math.log1p\"],\n  [Math.log2, \"Math.log2\"],\n  [Math.max, \"Math.max\"],\n  [Math.min, \"Math.min\"],\n  [Math.pow, \"Math.pow\"],\n  [Math.random, \"Math.random\"],\n  [Math.round, \"Math.round\"],\n  [Math.sign, \"Math.sign\"],\n  [Math.sin, \"Math.sin\"],\n  [Math.sinh, \"Math.sinh\"],\n  [Math.sqrt, \"Math.sqrt\"],\n  [Math.tan, \"Math.tan\"],\n  [Math.tanh, \"Math.tanh\"],\n  [Math.trunc, \"Math.trunc\"],\n  [Number, \"Number\"],\n  [Number.isFinite, \"Number.isFinite\"],\n  [Number.isInteger, \"Number.isInteger\"],\n  [Number.isNaN, \"Number.isNaN\"],\n  [Number.isSafeInteger, \"Number.isSafeInteger\"],\n  [Number.parseFloat, \"Number.parseFloat\"],\n  [Number.parseInt, \"Number.parseInt\"],\n  [Object, \"Object\"],\n  [Object.assign, \"Object.assign\"],\n  [Object.create, \"Object.create\"],\n  [Object.defineProperties, \"Object.defineProperties\"],\n  [Object.defineProperty, \"Object.defineProperty\"],\n  [Object.entries, \"Object.entries\"],\n  [Object.freeze, \"Object.freeze\"],\n  [Object.fromEntries, \"Object.fromEntries\"],\n  [Object.getOwnPropertyDescriptor, \"Object.getOwnPropertyDescriptor\"],\n  [Object.getOwnPropertyDescriptors, \"Object.getOwnPropertyDescriptors\"],\n  [Object.getOwnPropertyNames, \"Object.getOwnPropertyNames\"],\n  [Object.getOwnPropertySymbols, \"Object.getOwnPropertySymbols\"],\n  [Object.getPrototypeOf, \"Object.getPrototypeOf\"],\n  [Object.is, \"Object.is\"],\n  [Object.isExtensible, \"Object.isExtensible\"],\n  [Object.isFrozen, \"Object.isFrozen\"],\n  [Object.isSealed, \"Object.isSealed\"],\n  [Object.keys, \"Object.keys\"],\n  [Object.preventExtensions, \"Object.preventExtensions\"],\n  [Object.seal, \"Object.seal\"],\n  [Object.setPrototypeOf, \"Object.setPrototypeOf\"],\n  [Object.values, \"Object.values\"],\n  [parseFloat, \"parseFloat\"],\n  [parseInt, \"parseInt\"],\n  [Promise, \"Promise\"],\n  [Proxy, \"Proxy\"],\n  [RangeError, \"RangeError\"],\n  [ReferenceError, \"ReferenceError\"],\n  [Reflect.apply, \"Reflect.apply\"],\n  [Reflect.construct, \"Reflect.construct\"],\n  [Reflect.defineProperty, \"Reflect.defineProperty\"],\n  [Reflect.deleteProperty, \"Reflect.deleteProperty\"],\n  [Reflect.get, \"Reflect.get\"],\n  [Reflect.getOwnPropertyDescriptor, \"Reflect.getOwnPropertyDescriptor\"],\n  [Reflect.getPrototypeOf, \"Reflect.getPrototypeOf\"],\n  [Reflect.has, \"Reflect.has\"],\n  [Reflect.isExtensible, \"Reflect.isExtensible\"],\n  [Reflect.ownKeys, \"Reflect.ownKeys\"],\n  [Reflect.preventExtensions, \"Reflect.preventExtensions\"],\n  [Reflect.set, \"Reflect.set\"],\n  [Reflect.setPrototypeOf, \"Reflect.setPrototypeOf\"],\n  [RegExp, \"RegExp\"],\n  [Set, \"Set\"],\n  [String, \"String\"],\n  [String.fromCharCode, \"String.fromCharCode\"],\n  [String.fromCodePoint, \"String.fromCodePoint\"],\n  [String.raw, \"String.raw\"],\n  [Symbol, \"Symbol\"],\n  [Symbol.for, \"Symbol.for\"],\n  [SyntaxError, \"SyntaxError\"],\n  [TypeError, \"TypeError\"],\n  [Uint16Array, \"Uint16Array\"],\n  [Uint16Array.from, \"Uint16Array.from\"],\n  [Uint16Array.of, \"Uint16Array.of\"],\n  [Uint32Array, \"Uint32Array\"],\n  [Uint32Array.from, \"Uint32Array.from\"],\n  [Uint32Array.of, \"Uint32Array.of\"],\n  [Uint8Array, \"Uint8Array\"],\n  [Uint8Array.from, \"Uint8Array.from\"],\n  [Uint8Array.of, \"Uint8Array.of\"],\n  [Uint8ClampedArray, \"Uint8ClampedArray\"],\n  [Uint8ClampedArray.from, \"Uint8ClampedArray.from\"],\n  [Uint8ClampedArray.of, \"Uint8ClampedArray.of\"],\n  [URIError, \"URIError\"],\n  [WeakMap, \"WeakMap\"],\n  [WeakSet, \"WeakSet\"]\n]);\nvar KNOWN_OBJECTS = /* @__PURE__ */ new Map([\n  [Atomics, \"Atomics\"],\n  [console, \"console\"],\n  [globalThis, \"globalThis\"],\n  [globalThis.crypto, \"crypto\"],\n  [Intl, \"Intl\"],\n  [JSON, \"JSON\"],\n  [Math, \"Math\"],\n  [Reflect, \"Reflect\"]\n]);\nfunction toAccess(accessor) {\n  const start = accessor[0];\n  return start === '\"' || start >= \"0\" && start <= \"9\" ? \"[\" + accessor + \"]\" : \".\" + accessor;\n}\n\n// src/html/writer.ts\nvar K_SCOPE_ID = Symbol(\"Scope ID\");\nvar kPendingContexts = Symbol(\"Pending Contexts\");\nvar branchIdKey = Symbol();\nif (false) {\n  writeScope = /* @__PURE__ */ ((writeScope2) => (scopeId, partialScope, file, loc, vars) => {\n    const scope = writeScope2(scopeId, partialScope);\n    if (file && loc !== void 0) {\n      setDebugInfo(scope, file, loc, vars);\n    }\n    return scope;\n  })(writeScope);\n}\nvar tick = globalThis.setImmediate || globalThis.setTimeout || globalThis.queueMicrotask || ((cb) => Promise.resolve().then(cb));\n\n// src/html/attrs.ts\nfunction classAttr(value) {\n  return stringAttr(\"class\", classValue(value));\n}\nfunction styleAttr(value) {\n  return stringAttr(\"style\", styleValue(value));\n}\nvar kSelectedValue = Symbol(\"selectedValue\");\nfunction attr(name2, value) {\n  return isVoid(value) ? \"\" : nonVoidAttr(name2, value);\n}\nfunction stringAttr(name2, value) {\n  return value && \" \" + name2 + attrAssignment(value);\n}\nfunction nonVoidAttr(name2, value) {\n  switch (typeof value) {\n    case \"string\":\n      return \" \" + name2 + attrAssignment(value);\n    case \"boolean\":\n      return \" \" + name2;\n    case \"number\":\n      return \" \" + name2 + \"=\" + value;\n    case \"object\":\n      if (value instanceof RegExp) {\n        return \" \" + name2 + attrAssignment(value.source);\n      }\n      break;\n  }\n  return \" \" + name2 + attrAssignment(value + \"\");\n}\nvar singleQuoteAttrReplacements = /'|&(?=#?\\w+;)/g;\nvar doubleQuoteAttrReplacements = /\"|&(?=#?\\w+;)/g;\nvar needsQuotedAttr = /[\"'>\\s]|&#?\\w+;|\\/$/g;\nfunction attrAssignment(value) {\n  return value ? needsQuotedAttr.test(value) ? value[needsQuotedAttr.lastIndex - 1] === (needsQuotedAttr.lastIndex = 0, '\"') ? \"='\" + escapeSingleQuotedAttrValue(value) + \"'\" : '=\"' + escapeDoubleQuotedAttrValue(value) + '\"' : \"=\" + value : \"\";\n}\nfunction escapeSingleQuotedAttrValue(value) {\n  return singleQuoteAttrReplacements.test(value) ? value.replace(\n    singleQuoteAttrReplacements,\n    replaceUnsafeSingleQuoteAttrChar\n  ) : value;\n}\nfunction replaceUnsafeSingleQuoteAttrChar(match) {\n  return match === \"'\" ? \"&#39;\" : \"&amp;\";\n}\nfunction escapeDoubleQuotedAttrValue(value) {\n  return doubleQuoteAttrReplacements.test(value) ? value.replace(\n    doubleQuoteAttrReplacements,\n    replaceUnsafeDoubleQuoteAttrChar\n  ) : value;\n}\nfunction replaceUnsafeDoubleQuoteAttrChar(match) {\n  return match === '\"' ? \"&#34;\" : \"&amp;\";\n}\n\n// src/common/compat-meta.ts\nvar prefix = false ? \"$compat_\" : \"$C_\";\nvar RENDERER_REGISTER_ID = prefix + (false ? \"renderer\" : \"r\");\nvar SET_SCOPE_REGISTER_ID = prefix + (false ? \"setScope\" : \"s\");\nvar RENDER_BODY_ID = prefix + (false ? \"renderBody\" : \"b\");\n\n// src/html/compat.ts\nvar K_TAGS_API_STATE = Symbol();\n\n// src/translator/util/to-property-name.ts\nvar import_compiler3 = require(\"@marko/compiler\");\nfunction isValidPropertyIdentifier(name2) {\n  return /^[a-z_$][a-z0-9_$]*$/i.test(name2);\n}\nfunction toPropertyName(name2) {\n  if (isValidPropertyIdentifier(name2)) {\n    return import_compiler3.types.identifier(name2);\n  } else if (/^(?:0|[1-9][0-9]*)$/.test(name2)) {\n    return import_compiler3.types.numericLiteral(parseInt(name2, 10));\n  }\n  return import_compiler3.types.stringLiteral(name2);\n}\nfunction toObjectProperty(name2, value) {\n  return import_compiler3.types.objectProperty(toPropertyName(name2), value);\n}\nfunction toMemberExpression(object, key, optional) {\n  const prop = toPropertyName(key);\n  const computed = prop.type !== \"Identifier\";\n  return optional ? import_compiler3.types.optionalMemberExpression(object, prop, computed, true) : import_compiler3.types.memberExpression(object, prop, computed);\n}\n\n// src/translator/util/runtime.ts\nvar pureFunctions = [\n  \"conditional\",\n  \"conditionalClosure\",\n  \"dynamicTag\",\n  \"createRenderer\",\n  \"createContent\",\n  \"createTemplate\",\n  \"dynamicClosure\",\n  \"intersection\",\n  \"loopClosure\",\n  \"loopIn\",\n  \"loopOf\",\n  \"loopTo\",\n  \"state\",\n  \"value\"\n];\nfunction importRuntime(name2) {\n  const { output } = getMarkoOpts();\n  return toMemberExpression(\n    (0, import_babel_utils4.importStar)(currentProgramPath.hub.file, getRuntimePath(output), \"$\"),\n    name2\n  );\n}\nfunction callRuntime(name2, ...args) {\n  const callExpression2 = import_compiler4.types.callExpression(\n    importRuntime(name2),\n    filterArguments(args)\n  );\n  if (pureFunctions.includes(name2)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `${runtime_info_default.name}/${optimize ? \"\" : \"debug/\"}${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || import_compiler4.types.unaryExpression(\"void\", import_compiler4.types.numericLiteral(0));\n    }\n  }\n  return filteredArgs;\n}\nfunction getCompatRuntimeFile() {\n  const markoOpts = getMarkoOpts();\n  return `marko/src/runtime/helpers/tags-compat/${isOutputHTML() ? \"html\" : \"dom\"}${markoOpts.optimize ? \"\" : \"-debug\"}.${markoOpts.modules === \"esm\" ? \"mjs\" : \"js\"}`;\n}\n\n// src/translator/util/sections.ts\nvar import_compiler6 = require(\"@marko/compiler\");\nvar import_babel_utils7 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-core-tag.ts\nvar import_babel_utils5 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-tag-name.ts\nfunction getTagName(tag) {\n  return tag.node.name.value;\n}\n\n// src/translator/util/is-core-tag.ts\nvar { taglibId } = runtime_info_default;\nvar htmlTaglibId = \"marko-html\";\nvar interopTaglibId = \"@marko/translator-interop-class-tags\";\nfunction isCoreTag(tag) {\n  if (tag.isMarkoTag()) {\n    const tagDef = (0, import_babel_utils5.getTagDef)(tag);\n    if (tagDef) {\n      switch (tagDef.taglibId) {\n        case taglibId:\n        case interopTaglibId:\n          return true;\n        case htmlTaglibId:\n          switch (tagDef.name) {\n            case \"script\":\n            case \"style\":\n              return true;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction isCoreTagName(tag, name2) {\n  return isCoreTag(tag) && getTagName(tag) === name2;\n}\nfunction isConditionTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n        return true;\n    }\n  }\n  return false;\n}\nfunction isControlFlowTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n      case \"for\":\n      case \"await\":\n      case \"try\":\n        return true;\n    }\n  }\n  return false;\n}\n\n// src/translator/util/optional.ts\nvar Sorted = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? addSorted(this.compare, data, item) : joinRepeatable(this.compare, data, item) : item;\n  }\n  union(a, b) {\n    if (a) {\n      if (Array.isArray(a)) {\n        if (b) {\n          if (Array.isArray(b)) {\n            return unionSortedRepeatable(this.compare, a, b);\n          } else {\n            return addSorted(this.compare, a, b);\n          }\n        }\n        return a;\n      }\n      if (b) {\n        if (Array.isArray(b)) {\n          return addSorted(this.compare, [...b], a);\n        }\n        return joinRepeatable(this.compare, b, a);\n      }\n      return a;\n    }\n    return b;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return findSorted(this.compare, data, item);\n      } else if (this.compare(data, item) === 0) {\n        return data;\n      }\n    }\n  }\n};\nfunction push(data, item) {\n  if (data) {\n    if (Array.isArray(data)) {\n      data.push(item);\n      return data;\n    }\n    return [data, item];\n  }\n  return item;\n}\nfunction concat(a, b) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        return a.concat(b);\n      } else if (Array.isArray(b)) {\n        return [a, ...b];\n      } else {\n        return [a, b];\n      }\n    }\n    return a;\n  }\n  return b;\n}\nfunction filter(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      const len = data.length;\n      let result;\n      let i = 0;\n      while (i < len) {\n        let item = data[i++];\n        if (cb(item)) {\n          result = item;\n          while (i < len) {\n            item = data[i++];\n            if (cb(item)) {\n              result = [result, item];\n              while (i < len) {\n                item = data[i++];\n                if (cb(item)) {\n                  result.push(item);\n                }\n              }\n              return result;\n            }\n          }\n          return result;\n        }\n      }\n      return result;\n    }\n    if (cb(data)) {\n      return data;\n    }\n  }\n  return void 0;\n}\nfunction forEach(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      let i = 0;\n      for (const item of data) {\n        cb(item, i++);\n      }\n    } else {\n      cb(data, 0);\n    }\n  }\n}\nfunction find(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      return data.find(cb);\n    }\n    if (cb(data, 0)) {\n      return data;\n    }\n  }\n}\nfunction findSorted(compare, data, item) {\n  let max = data.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const cur = data[mid];\n    const compareResult = compare(cur, item);\n    if (compareResult === 0) return cur;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n}\nfunction addSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0) return data;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n  const result = new Array(len + 1);\n  for (let i = 0; i < pos; i++) {\n    result[i] = data[i];\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    result[pos++] = next;\n  }\n  result[len] = cur;\n  return result;\n}\nfunction unionSortedRepeatable(compare, a, b) {\n  const aLen = a.length;\n  const bLen = b.length;\n  let aIndex = 0;\n  let bIndex = 0;\n  const result = [];\n  while (aIndex < aLen && bIndex < bLen) {\n    const aValue = a[aIndex];\n    const bValue = b[bIndex];\n    const delta = compare(aValue, bValue);\n    if (delta === 0) {\n      aIndex++;\n      bIndex++;\n      result.push(aValue);\n    } else if (delta < 0) {\n      aIndex++;\n      result.push(aValue);\n    } else {\n      bIndex++;\n      result.push(bValue);\n    }\n  }\n  if (aLen === bLen && aIndex === aLen) {\n    return a;\n  }\n  while (aIndex < aLen) {\n    result.push(a[aIndex++]);\n  }\n  while (bIndex < bLen) {\n    result.push(b[bIndex++]);\n  }\n  return result;\n}\nfunction joinRepeatable(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\n\n// src/translator/util/state.ts\nvar createProgramState = (init) => {\n  const map = /* @__PURE__ */ new WeakMap();\n  return [\n    () => {\n      let state = map.get(currentProgramPath);\n      if (!state) {\n        map.set(currentProgramPath, state = init());\n      }\n      return state;\n    },\n    (value) => {\n      map.set(currentProgramPath, value);\n    }\n  ];\n};\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\n\n// src/translator/util/tag-name-type.ts\nvar import_compiler5 = require(\"@marko/compiler\");\nvar import_babel_utils6 = require(\"@marko/compiler/babel-utils\");\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name2 = tag.get(\"name\");\n    if (name2.isStringLiteral()) {\n      extra.tagNameType = name2.node.value[0] === \"@\" ? 3 /* AttributeTag */ : (0, import_babel_utils6.isNativeTag)(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else if (name2.isIdentifier()) {\n      analyzeExpressionTagName(name2, extra);\n      if (extra.tagNameType === 0 /* NativeTag */) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      }\n    } else if (name2.isTemplateLiteral() && !name2.node.expressions.length) {\n      extra.tagNameType = 0 /* NativeTag */;\n    } else {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === 1 /* CustomTag */) {\n      const childFile = (0, import_babel_utils6.loadFileForTag)(tag);\n      if (!childFile) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      } else if (childFile.ast.program.extra.featureType === \"class\") {\n        extra.tagNameType = 2 /* DynamicTag */;\n        extra.featureType = \"class\";\n        (currentProgramPath.node.extra ??= {}).needsCompat = true;\n      }\n    }\n  }\n  return extra.tagNameType;\n}\nfunction analyzeExpressionTagName(name2, extra) {\n  const pending = [name2];\n  let path5;\n  let type;\n  let nullable = false;\n  let tagNameImported;\n  while ((path5 = pending.pop()) && type !== 2 /* DynamicTag */) {\n    if (path5.isConditionalExpression()) {\n      pending.push(path5.get(\"consequent\"));\n      if (path5.node.alternate) {\n        pending.push(path5.get(\"alternate\"));\n      }\n    } else if (path5.isLogicalExpression()) {\n      if (path5.node.operator === \"||\") {\n        pending.push(path5.get(\"left\"));\n      } else {\n        nullable = true;\n      }\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isAssignmentExpression()) {\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isBinaryExpression()) {\n      type = path5.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isStringLiteral() || path5.isTemplateLiteral()) {\n      type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isNullLiteral()) {\n      nullable = true;\n    } else if (path5.isIdentifier()) {\n      if (path5.node.name === \"undefined\") {\n        nullable = true;\n        continue;\n      }\n      const binding = path5.scope.getBinding(path5.node.name);\n      if (!binding) {\n        type = 2 /* DynamicTag */;\n        continue;\n      }\n      if (binding.kind === \"module\") {\n        const decl = binding.path.parent;\n        if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => import_compiler5.types.isImportDefaultSpecifier(it))) {\n          const resolvedImport = (0, import_babel_utils6.resolveTagImport)(name2, decl.source.value) || decl.source.value;\n          if (type === 0 /* NativeTag */ || tagNameImported && tagNameImported !== resolvedImport) {\n            type = 2 /* DynamicTag */;\n            tagNameImported = void 0;\n          } else {\n            type = 1 /* CustomTag */;\n            tagNameImported = resolvedImport;\n          }\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n        continue;\n      }\n      const bindingTag = binding.path;\n      if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n        const bindingTagName = bindingTag.get(\"name\").node.value;\n        if (bindingTagName === \"const\") {\n          pending.push(\n            bindingTag.get(\"attributes\")[0].get(\"value\")\n          );\n          continue;\n        }\n        if (bindingTagName === \"let\") {\n          type = 2 /* DynamicTag */;\n          continue;\n        }\n        continue;\n      }\n      type = 2 /* DynamicTag */;\n    } else {\n      type = 2 /* DynamicTag */;\n    }\n  }\n  extra.tagNameType = type;\n  extra.tagNameNullable = nullable;\n  extra.tagNameDynamic = true;\n  if (type === 1 /* CustomTag */ && tagNameImported) {\n    extra.tagNameImported = tagNameImported;\n  }\n}\n\n// src/translator/util/sections.ts\nfunction startSection(path5) {\n  const extra = path5.node.extra ??= {};\n  let section = extra.section;\n  if (!section && (path5.type === \"Program\" || path5.get(\"body\").length)) {\n    const parentSection = path5.parentPath ? getOrCreateSection(path5.parentPath) : void 0;\n    const sectionNamePath = path5.parentPath?.get(\n      \"name\"\n    );\n    const sectionName = path5.isProgram() ? \"\" : currentProgramPath.scope.generateUid(\n      sectionNamePath.toString() + \"_content\"\n    );\n    const programExtra = path5.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      loc: sectionNamePath?.node.loc || void 0,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection,\n      sectionAccessor: void 0,\n      params: void 0,\n      closures: void 0,\n      bindings: void 0,\n      hoisted: void 0,\n      isHoistThrough: void 0,\n      assignments: void 0,\n      content: getContentInfo(path5),\n      upstreamExpression: void 0,\n      downstreamBinding: void 0,\n      hasAbortSignal: false,\n      isBranch: false\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path5) {\n  let cur = path5;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && !cur.node.attributeTags && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */ && cur.parent.name.value !== \"html-comment\") {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionForBody(body) {\n  return body.node.extra?.section;\n}\nfunction getSection(path5) {\n  let section;\n  let currentPath = path5;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nvar [getScopeIdIdentifier] = createSectionState(\n  \"scopeIdIdentifier\",\n  (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`)\n);\nvar [getSectionParentIsOwner, setSectionParentIsOwner] = createSectionState(\"parentIsOwner\", () => false);\nvar [_getScopeIdentifier] = createSectionState(\n  \"scopeIdentifier\",\n  () => import_compiler6.types.identifier(\"undefined\")\n);\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\nfunction getContentInfo(path5) {\n  const body = path5.get(\"body\");\n  const contentInfo = {\n    startType: null,\n    endType: null,\n    singleChild: true\n  };\n  for (let endIndex = body.length; endIndex--; ) {\n    const endType = getNodeContentType(body[endIndex], \"endType\", contentInfo);\n    if (endType !== null) {\n      contentInfo.endType = endType;\n      for (let startIndex = 0; startIndex < endIndex; startIndex++) {\n        const startType = getNodeContentType(body[startIndex], \"startType\");\n        if (startType !== null) {\n          contentInfo.startType = startType;\n          contentInfo.singleChild = false;\n          return contentInfo;\n        }\n      }\n      contentInfo.startType = getNodeContentType(body[endIndex], \"startType\");\n      return contentInfo;\n    }\n  }\n  return null;\n}\nfunction getNodeContentType(path5, extraMember, contentInfo) {\n  switch (path5.type) {\n    case \"MarkoText\":\n      return 4 /* Text */;\n    case \"MarkoPlaceholder\":\n      return 2 /* Placeholder */;\n    case \"MarkoScriptlet\":\n    case \"MarkoComment\":\n    case \"ImportDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportNamedDeclaration\":\n      return null;\n    case \"MarkoTag\": {\n      const tag = path5;\n      if (isCoreTag(tag)) {\n        switch (tag.node.name.value) {\n          case \"html-comment\":\n            return 0 /* Comment */;\n          case \"html-script\":\n          case \"html-style\":\n            return 3 /* Tag */;\n          case \"for\":\n          case \"if\":\n            return 1 /* Dynamic */;\n          default:\n            return null;\n        }\n      } else if ((0, import_babel_utils7.isNativeTag)(tag)) {\n        return 3 /* Tag */;\n      } else if ((0, import_babel_utils7.isAttributeTag)(tag)) {\n        return null;\n      } else if (import_compiler6.types.isStringLiteral(tag.node.name)) {\n        const tagSection = (0, import_babel_utils7.loadFileForTag)(tag)?.ast.program.extra.section;\n        if (tagSection) {\n          if (tagSection.content) {\n            if (contentInfo && !tagSection.content.singleChild) {\n              if (extraMember === \"endType\") {\n                contentInfo.startType = tagSection.content.startType;\n                contentInfo.singleChild = false;\n              }\n            }\n            return tagSection.content[extraMember];\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  return 1 /* Dynamic */;\n}\nvar isSerializedSection = (section) => {\n  return !(section.isBranch || section.downstreamBinding?.serialize === false);\n};\nvar checkStatefulClosures = (section, immediateOnly) => {\n  return !!find(\n    section.closures,\n    (closure) => (!immediateOnly || section.parent === closure.section) && isStatefulReferences(closure)\n  );\n};\nfunction isSameOrChildSection(section, other) {\n  do {\n    if (other === section) {\n      return true;\n    }\n  } while (other = other.parent);\n  return false;\n}\nfunction getCommonSection(section, other) {\n  let ancestor = section;\n  if (other.depth < section.depth) {\n    ancestor = other;\n    other = section;\n  }\n  while (ancestor) {\n    if (other === ancestor || !other.parent) {\n      return ancestor;\n    }\n    other = other.parent;\n    if (other.depth < ancestor.depth) {\n      ancestor = ancestor.parent;\n    }\n  }\n  throw new Error(\"No common section\");\n}\n\n// src/translator/visitors/program/dom.ts\nvar import_compiler18 = require(\"@marko/compiler\");\nvar import_babel_utils10 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-style-file.ts\nvar import_path = __toESM(require(\"path\"));\nfunction getStyleFile(file) {\n  const { filename } = file.opts;\n  const fs = file.markoOpts.fileSystem;\n  const base = getBase(filename);\n  const styleMatch = new RegExp(\n    `^(${escapeRegExp(base)}\\\\.${\"index\" === base ? \"|\" : \"\"})style\\\\.\\\\w+$`\n  );\n  for (const file2 of fs.readdirSync(import_path.default.dirname(filename)).sort()) {\n    if (styleMatch.test(file2)) {\n      return `./${file2}`;\n    }\n  }\n}\nfunction getBase(filename) {\n  const start = filename.lastIndexOf(import_path.default.sep) + 1;\n  const leftDot = filename.indexOf(\".\", start);\n  if (leftDot === -1) {\n    return filename.slice(start);\n  }\n  const rightDot = filename.lastIndexOf(\".\");\n  const closeBracket = leftDot - 1;\n  if (filename[closeBracket] === \"]\") {\n    const openBracket = filename.lastIndexOf(\"[\", closeBracket);\n    if (openBracket > start) {\n      return filename.slice(start, openBracket) + filename.slice(leftDot, rightDot);\n    }\n  }\n  return filename.slice(start, rightDot);\n}\nvar regexpCharsReg = /[\\\\^$.*+?()[\\]{}|]/g;\nfunction escapeRegExp(str) {\n  return str.replace(regexpCharsReg, \"\\\\$&\");\n}\n\n// src/translator/util/signals.ts\nvar import_compiler17 = require(\"@marko/compiler\");\nvar import_babel_utils9 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/return.ts\nvar import_compiler11 = require(\"@marko/compiler\");\nvar import_babel_utils8 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-known-attr-values.ts\nfunction getKnownAttrValues(tag) {\n  const attrs2 = {};\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      attrs2[attr2.name] = attr2.value;\n    }\n  }\n  return attrs2;\n}\n\n// src/translator/util/get-parent-tag.ts\nfunction getParentTag(tag) {\n  const parent = tag.parent.type === \"MarkoTagBody\" ? tag.parentPath.parentPath : tag.parentPath;\n  if (parent.type === \"MarkoTag\") {\n    return parent;\n  }\n}\n\n// src/translator/util/plugin-hooks.ts\nvar import_compiler7 = require(\"@marko/compiler\");\nfunction enter(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path5, import_compiler7.types);\n  } else if (plugin.enter) {\n    plugin.enter(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction exit(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/translator/util/visitors.ts\nfunction extractVisitors(visitors2) {\n  const result = {\n    migrate: {},\n    transform: {},\n    analyze: {},\n    translate: {}\n  };\n  for (const _name in visitors2) {\n    const name2 = _name;\n    const value = visitors2[name2];\n    if (value.migrate) result.migrate[name2] = value.migrate;\n    if (value.transform) result.transform[name2] = value.transform;\n    if (value.analyze) result.analyze[name2] = value.analyze;\n    if (value.translate) result.translate[name2] = value.translate;\n  }\n  return result;\n}\nfunction translateByTarget({\n  html,\n  dom\n}) {\n  return {\n    enter(path5) {\n      enter(isOutputHTML() ? html : dom, path5);\n    },\n    exit(path5) {\n      exit(isOutputHTML() ? html : dom, path5);\n    }\n  };\n}\n\n// src/translator/util/writer.ts\nvar import_compiler10 = require(\"@marko/compiler\");\n\n// src/translator/util/normalize-string-expression.ts\nvar import_compiler8 = require(\"@marko/compiler\");\nfunction normalizeStringExpression(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (import_compiler8.types.isStringLiteral(content)) {\n        content = content.value;\n      } else if (import_compiler8.types.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    if (exprs.length === 1 && !curStr && !strs[0]) {\n      return exprs[0];\n    }\n    strs.push(curStr);\n    return import_compiler8.types.templateLiteral(\n      strs.map((raw) => import_compiler8.types.templateElement({ raw })),\n      exprs\n    );\n  } else if (curStr) {\n    return import_compiler8.types.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/translator/util/walks.ts\nvar import_compiler9 = require(\"@marko/compiler\");\nvar [getWalks] = createSectionState(\n  \"walks\",\n  () => [\"\"]\n);\nvar [getWalkComment] = createSectionState(\n  \"walkComment\",\n  () => []\n);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [48 /* BeginChildWithVar */]: \"beginChildWithVar\",\n  [49 /* DynamicTagWithVar */]: \"dynamicTagWithVar\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter2(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */);\n}\nfunction exit2(path5) {\n  getSteps(getSection(path5)).push(1 /* Exit */);\n}\nfunction enterShallow(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */, 1 /* Exit */);\n}\nfunction injectWalks(tag, expr) {\n  const walks = getWalks(getSection(tag));\n  const walkComment = getWalkComment(getSection(tag));\n  walkComment.push(\n    `${walkCodeToName[tag.node.var ? 48 /* BeginChildWithVar */ : 47 /* BeginChild */]}`,\n    expr.name,\n    walkCodeToName[38 /* EndChild */]\n  );\n  appendLiteral(\n    walks,\n    String.fromCharCode(\n      tag.node.var ? 48 /* BeginChildWithVar */ : 47 /* BeginChild */\n    )\n  );\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path5, code) {\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path5);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walkCodes = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* Enter */) {\n        depth++;\n        walkCodes.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walkCodes.length = walkCodes.lastIndexOf(67 /* Next */);\n          walkCodes.push(97 /* Over */);\n        } else {\n          walkCodes.length = walkCodes.lastIndexOf(107 /* Out */) + 1;\n          walkCodes.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walkCodes[0];\n    let count = 0;\n    for (const walk of walkCodes) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path5)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(\n      multiplier,\n      117 /* Multiplier */,\n      10 /* Multiplier */\n    );\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const prefix2 = section.content?.startType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const postfix = section.content?.endType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const walks = getWalks(section);\n  const walkLiteral = normalizeStringExpression([prefix2, ...walks, postfix]);\n  if (walkLiteral && walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/translator/util/writer.ts\nvar [getWrites] = createSectionState(\n  \"writes\",\n  () => [\"\"]\n);\nvar [getTrailerWrites] = createSectionState(\n  \"trailerWrites\",\n  () => [\"\"]\n);\nfunction writeTo(path5, trailer) {\n  const section = getSection(path5);\n  const get = trailer ? getTrailerWrites : getWrites;\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = get(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path5) {\n  const section = getSection(path5);\n  const writes = getWrites(section);\n  const trailers = getTrailerWrites(section);\n  const writeResult = normalizeStringExpression(writes);\n  const trailerResult = normalizeStringExpression(trailers);\n  writes.length = 0;\n  writes[0] = \"\";\n  trailers.length = 0;\n  trailers[0] = \"\";\n  if (writeResult && trailerResult) {\n    return import_compiler10.types.expressionStatement(\n      import_compiler10.types.sequenceExpression([\n        callRuntime(\"write\", writeResult),\n        callRuntime(\"writeTrailers\", trailerResult)\n      ])\n    );\n  } else if (writeResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"write\", writeResult));\n  } else if (trailerResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"writeTrailers\", trailerResult));\n  }\n}\nfunction flushBefore(path5) {\n  const expr = consumeHTML(path5);\n  if (expr) {\n    path5.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path5) {\n  const target = path5.isProgram() ? path5 : path5.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writePrefix = section.content?.startType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writePostfix = section.content?.endType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: normalizeStringExpression([writePrefix, ...writes, writePostfix])\n  };\n}\nfunction markNode(path5, binding) {\n  const section = getSection(path5);\n  if (binding.type !== 0 /* dom */) {\n    throw path5.buildCodeFrameError(\n      \"Tried to mark a node that was not determined to need a mark during analyze.\"\n    );\n  }\n  if (isOutputHTML()) {\n    writeTo(path5)`${callRuntime(\n      \"markResumeNode\",\n      getScopeIdIdentifier(section),\n      getScopeAccessorLiteral(binding)\n    )}`;\n  }\n}\n\n// src/translator/core/return.ts\nvar tagsWithReturn = /* @__PURE__ */ new WeakSet();\nvar [getSectionReturnValueIdentifier, setReturnValueIdentifier] = createSectionState(\"returnValue\");\nvar return_default = {\n  analyze(tag) {\n    (0, import_babel_utils8.assertNoArgs)(tag);\n    (0, import_babel_utils8.assertNoVar)(tag);\n    (0, import_babel_utils8.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils8.assertAllowedAttributes)(tag, [\"value\", \"valueChange\"]);\n    const parentTag = getParentTag(tag);\n    if (parentTag) {\n      if ((0, import_babel_utils8.isNativeTag)(parentTag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `return` tag can not be used in a native tag.\"\n        );\n      } else if (isControlFlowTag(parentTag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          `The \\`return\\` tag can not be used under an \\`${parentTag.get(\"name\").toString()}\\` tag.`\n        );\n      }\n    }\n    if (tagsWithReturn.has(tag.parentPath)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Cannot have multiple \\`return\\` tags ${tag.parent.type === \"Program\" ? \"for the template\" : \"within a tag's body content\"}.`\n      );\n    } else {\n      tagsWithReturn.add(tag.parentPath);\n    }\n    if (!getKnownAttrValues(tag.node).value) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `return` tag requires a value.\");\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        flushBefore(tag);\n        if (attrs2.valueChange) {\n          setSerializedProperty(\n            section,\n            \"@\" /* TagVariableChange */,\n            attrs2.valueChange\n          );\n        }\n        if (attrs2.value) {\n          const returnId = tag.scope.generateUidIdentifier(\"return\");\n          setReturnValueIdentifier(section, returnId);\n          tag.replaceWith(\n            import_compiler11.types.variableDeclaration(\"const\", [\n              import_compiler11.types.variableDeclarator(returnId, attrs2.value)\n            ])\n          )[0].skip();\n        }\n      }\n    },\n    dom: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        if (attrs2.value) {\n          addValue(\n            section,\n            attrs2.value.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"tagVarSignal\"),\n              hasDownstreamIntersections: () => true\n            },\n            attrs2.value\n          );\n        }\n        if (attrs2.valueChange) {\n          addValue(\n            section,\n            attrs2.valueChange.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"setTagVarChange\"),\n              hasDownstreamIntersections: () => false\n            },\n            attrs2.valueChange\n          );\n        }\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: {\n    openTagOnly: true\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/translator/util/for-each-identifier.ts\nfunction forEachIdentifier(node, cb) {\n  switch (node.type) {\n    case \"ObjectPattern\":\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case \"ObjectProperty\":\n            if (prop.value.type === \"AssignmentPattern\") {\n              forEachIdentifier(prop.value.left, cb);\n            } else {\n              forEachIdentifier(prop.value, cb);\n            }\n            break;\n          case \"RestElement\":\n            forEachIdentifier(prop.argument, cb);\n            break;\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      for (const el of node.elements) {\n        if (el != null) {\n          switch (el.type) {\n            case \"RestElement\":\n              forEachIdentifier(el.argument, cb);\n              break;\n            case \"AssignmentPattern\":\n              forEachIdentifier(el.left, cb);\n              break;\n            default:\n              forEachIdentifier(el, cb);\n              break;\n          }\n        }\n      }\n      break;\n    case \"Identifier\":\n      cb(node);\n      break;\n  }\n}\n\n// src/translator/util/get-defined-binding-expression.ts\nvar import_compiler12 = require(\"@marko/compiler\");\nfunction getDeclaredBindingExpression(binding) {\n  if (binding.declared || !binding.upstreamAlias) {\n    return import_compiler12.types.identifier(binding.name);\n  } else if (binding.property !== void 0) {\n    return toMemberExpression(\n      getDeclaredBindingExpression(binding.upstreamAlias),\n      binding.property,\n      binding.upstreamAlias.nullable\n    );\n  } else {\n    return getDeclaredBindingExpression(binding.upstreamAlias);\n  }\n}\n\n// src/translator/util/scope-read.ts\nvar import_compiler13 = require(\"@marko/compiler\");\nfunction createScopeReadPattern(section, referencedBindings) {\n  const rootDepth = section.depth;\n  const rootPattern = import_compiler13.types.objectPattern([]);\n  let nestedPatterns;\n  forEach(referencedBindings, (ref) => {\n    const propertyValue = ref.name;\n    if (!isValidPropertyIdentifier(propertyValue)) return;\n    const propertyKey = getScopeAccessor(ref);\n    const isShorthand = propertyKey === propertyValue;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns) nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = import_compiler13.types.objectPattern([]);\n        prev.properties.push(\n          import_compiler13.types.objectProperty(import_compiler13.types.identifier(\"_\"), nestedPattern)\n        );\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(\n      import_compiler13.types.objectProperty(\n        toPropertyName(propertyKey),\n        import_compiler13.types.identifier(propertyValue),\n        false,\n        isShorthand\n      )\n    );\n  });\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier ?? import_compiler13.types.identifier(\"undefined\");\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = import_compiler13.types.memberExpression(scope, import_compiler13.types.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  const propName = toPropertyName(getScopeAccessor(reference));\n  return import_compiler13.types.memberExpression(\n    getScopeExpression(section, reference.section),\n    propName,\n    propName.type !== \"Identifier\"\n  );\n}\n\n// src/translator/util/simplify-fn.ts\nvar import_compiler14 = require(\"@marko/compiler\");\nfunction simplifyFunction(fn) {\n  switch (fn.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return fn;\n    default:\n      return import_compiler14.types.functionExpression(\n        null,\n        fn.params,\n        fn.body,\n        fn.async,\n        fn.generator\n      );\n  }\n}\n\n// src/translator/util/to-first-expression-or-block.ts\nvar import_compiler15 = require(\"@marko/compiler\");\nfunction toFirstExpressionOrBlock(stmts) {\n  if (stmts.length === 1 && import_compiler15.types.isExpressionStatement(stmts[0])) {\n    const { expression } = stmts[0];\n    switch (expression.type) {\n      case \"ObjectExpression\":\n      case \"AssignmentExpression\":\n        return toParenthesizedExpressionIfNeeded(expression);\n      default:\n        return expression;\n    }\n  }\n  return import_compiler15.types.blockStatement(stmts);\n}\nfunction toParenthesizedExpressionIfNeeded(expr) {\n  switch (expr.type) {\n    case \"ObjectExpression\":\n    case \"AssignmentExpression\":\n      return import_compiler15.types.parenthesizedExpression(expr);\n    default:\n      return expr;\n  }\n}\n\n// src/translator/util/traverse.ts\nvar import_compiler16 = require(\"@marko/compiler\");\nvar skip = Symbol(\"skip\");\nfunction traverseReplace(container, key, enter3) {\n  const node = container[key];\n  if (node) {\n    if (Array.isArray(node)) {\n      for (let i = node.length; i--; ) {\n        traverseReplace(node, i, enter3);\n      }\n    } else {\n      const keys = import_compiler16.types.VISITOR_KEYS[node.type];\n      for (let i = keys.length; i--; ) {\n        traverseReplace(node, keys[i], enter3);\n      }\n      const replacement = enter3(node, container, key);\n      if (replacement) container[key] = replacement;\n    }\n  }\n}\nfunction traverseContains(node, check) {\n  if (node) {\n    if (Array.isArray(node)) {\n      for (const item of node) {\n        if (traverseContains(item, check)) {\n          return true;\n        }\n      }\n    } else {\n      switch (check(node)) {\n        case true:\n          return true;\n        case skip:\n          return false;\n      }\n      for (const key of import_compiler16.types.VISITOR_KEYS[node.type]) {\n        if (traverseContains(node[key], check)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// src/translator/util/signals.ts\nvar [getSignals] = createSectionState(\n  \"signals\",\n  () => /* @__PURE__ */ new Map()\n);\nvar [getClosureSignalBuilder, _setClosureSignalBuilder] = createSectionState(\"queue\");\nfunction setClosureSignalBuilder(tag, builder) {\n  _setClosureSignalBuilder(getSectionForBody(tag.get(\"body\")), builder);\n}\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nfunction setSerializedProperty(section, key, value) {\n  getSerializedScopeProperties(section).set(key, value);\n}\nvar [getSectionSubscriberIdentifier, setSectionSubscriberIdentifiers] = createSectionState(\"sectionSubscriberIdentifiers\");\nvar [getHTMLSectionStatements] = createSectionState(\n  \"htmlScopeStatements\",\n  () => []\n);\nvar [getHoistFunctionsIdsMap] = createSectionState(\"hoistFunctionsIdsMap\", () => /* @__PURE__ */ new Map());\nfunction getHoistFunctionIdentifier(hoistedBinding) {\n  const idsMap = getHoistFunctionsIdsMap(hoistedBinding.section);\n  let identifier = idsMap.get(hoistedBinding);\n  if (!identifier) {\n    idsMap.set(\n      hoistedBinding,\n      identifier = currentProgramPath.scope.generateUidIdentifier(\n        `get${hoistedBinding.name}`\n      )\n    );\n  }\n  return identifier;\n}\nvar unimplementedBuild = () => {\n  return import_compiler17.types.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, referencedBindings, name2 = generateSignalName(referencedBindings)) {\n  const signals = getSignals(section);\n  let signal = signals.get(referencedBindings);\n  if (!signal) {\n    const exportName = referencedBindings ? !Array.isArray(referencedBindings) && referencedBindings.section === section && referencedBindings.export : !section.parent && currentProgramPath.node.extra.domExports?.setup;\n    signals.set(\n      referencedBindings,\n      signal = {\n        identifier: exportName ? import_compiler17.types.identifier(exportName) : currentProgramPath.scope.generateUidIdentifier(\n          name2 + section.name.replace(\"_\", \"$\")\n        ),\n        referencedBindings,\n        section,\n        values: [],\n        intersection: void 0,\n        render: [],\n        renderReferencedBindings: void 0,\n        effect: [],\n        effectReferencedBindings: void 0,\n        subscribers: [],\n        closures: /* @__PURE__ */ new Map(),\n        hasDownstreamIntersections: () => {\n          let hasDownstreamIntersections = !!signal.intersection;\n          if (!hasDownstreamIntersections) {\n            for (const value of signal.values) {\n              if (value.signal.hasDownstreamIntersections()) {\n                hasDownstreamIntersections = true;\n                break;\n              }\n            }\n          }\n          if (!hasDownstreamIntersections) {\n            if (!Array.isArray(referencedBindings) && referencedBindings) {\n              for (const alias of referencedBindings.aliases) {\n                if (getSignal(section, alias).hasDownstreamIntersections()) {\n                  hasDownstreamIntersections = true;\n                  break;\n                }\n              }\n              if (!hasDownstreamIntersections) {\n                for (const [, alias] of referencedBindings.propertyAliases) {\n                  if (getSignal(section, alias).hasDownstreamIntersections()) {\n                    hasDownstreamIntersections = true;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n          signal.hasDownstreamIntersections = () => hasDownstreamIntersections;\n          return hasDownstreamIntersections;\n        },\n        build: unimplementedBuild,\n        export: !!exportName\n      }\n    );\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!referencedBindings) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(referencedBindings)) {\n      subscribe(referencedBindings, signal);\n      signal.build = () => {\n        const { id, scopeOffset } = intersectionMeta.get(referencedBindings);\n        return callRuntime(\n          \"intersection\",\n          import_compiler17.types.numericLiteral(id),\n          getSignalFn(signal, [scopeIdentifier], referencedBindings),\n          scopeOffset || referencedBindings.length > 2 ? import_compiler17.types.numericLiteral(referencedBindings.length - 1) : void 0,\n          scopeOffset && getScopeAccessorLiteral(scopeOffset)\n        );\n      };\n    } else if (referencedBindings.section !== section && bindingUtil.find(section.closures, referencedBindings)) {\n      getSignal(referencedBindings.section, referencedBindings).closures.set(\n        section,\n        signal\n      );\n      signal.build = () => {\n        const builder = getClosureSignalBuilder(section);\n        const ownerScope = getScopeExpression(\n          section,\n          referencedBindings.section\n        );\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        const isDynamicClosure = !isImmediateOwner || !builder;\n        const render = getSignalFn(signal, [\n          scopeIdentifier,\n          import_compiler17.types.identifier(referencedBindings.name)\n        ]);\n        return isDynamicClosure ? isStatefulReferences(referencedBindings) ? callRuntime(\n          \"registerDynamicClosure\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(\n              section,\n              signal.referencedBindings,\n              \"subscriber\"\n            )\n          ),\n          getScopeAccessorLiteral(referencedBindings),\n          render,\n          isImmediateOwner ? void 0 : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope)\n        ) : callRuntime(\n          \"dynamicClosure\",\n          getScopeAccessorLiteral(referencedBindings),\n          render,\n          isImmediateOwner ? void 0 : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope)\n        ) : builder(signal, render);\n      };\n      addStatement(\n        \"render\",\n        section,\n        void 0,\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(\n            import_compiler17.types.memberExpression(signal.identifier, import_compiler17.types.identifier(\"_\")),\n            [scopeIdentifier]\n          )\n        )\n      );\n    }\n  }\n  return signal;\n}\nfunction initValue(binding, runtimeHelper = \"value\") {\n  const section = binding.section;\n  const signal = getSignal(section, binding);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      import_compiler17.types.identifier(binding.name)\n    ]);\n    const isParamBinding = !binding.upstreamAlias && (binding.type === 3 /* param */ || binding.type === 2 /* input */);\n    const isNakedAlias = binding.upstreamAlias && !binding.property;\n    const needsGuard = !isNakedAlias && (binding.downstreamExpressions.size || fn.body.body.length > 0);\n    const needsCache = needsGuard || signal.intersection;\n    const needsMarks = isParamBinding || signal.intersection;\n    if (needsCache || needsMarks || binding.hoists.size) {\n      return callRuntime(\n        runtimeHelper,\n        getScopeAccessorLiteral(binding, runtimeHelper === \"state\"),\n        fn\n      );\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = getScopeAccessorLiteral(binding);\n  for (const alias of binding.aliases) {\n    initValue(alias);\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    initValue(alias);\n  }\n  return signal;\n}\nfunction getSignalFn(signal, params, referencedBindings) {\n  const section = signal.section;\n  const binding = signal.referencedBindings;\n  const [scopeIdentifier2, valueIdentifier] = params;\n  const isValueSignal = binding && !Array.isArray(binding) && binding.section === section;\n  if (isValueSignal) {\n    for (const alias of binding.aliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            valueIdentifier,\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n    for (const [key, alias] of binding.propertyAliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            toMemberExpression(valueIdentifier, key, binding.nullable),\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n  }\n  for (const value of signal.values) {\n    signal.render.push(\n      import_compiler17.types.expressionStatement(\n        import_compiler17.types.callExpression(value.signal.identifier, [\n          value.scope,\n          value.value,\n          ...getTranslatedExtraArgs(value.signal)\n        ])\n      )\n    );\n  }\n  forEach(signal.intersection, (intersection) => {\n    signal.render.push(\n      import_compiler17.types.expressionStatement(import_compiler17.types.callExpression(intersection, [scopeIdentifier2]))\n    );\n  });\n  if (isValueSignal) {\n    const closureEntries = Array.from(signal.closures.entries()).sort(\n      ([a], [b]) => a.id - b.id\n    );\n    for (const [_closureSection, closureSignal] of closureEntries) {\n      if (isStatefulReferences(closureSignal.referencedBindings)) {\n        signal.render.push(\n          import_compiler17.types.expressionStatement(\n            import_compiler17.types.callExpression(closureSignal.identifier, [scopeIdentifier2])\n          )\n        );\n      }\n    }\n  }\n  if (signal.effect.length) {\n    const effectIdentifier = import_compiler17.types.identifier(`${signal.identifier.name}_effect`);\n    signal.render.push(\n      import_compiler17.types.expressionStatement(\n        import_compiler17.types.callExpression(effectIdentifier, [scopeIdentifier2])\n      )\n    );\n  }\n  if (referencedBindings) {\n    signal.render.unshift(\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(\n          createScopeReadPattern(section, referencedBindings),\n          scopeIdentifier2\n        )\n      ])\n    );\n  }\n  return import_compiler17.types.arrowFunctionExpression(params, import_compiler17.types.blockStatement(signal.render));\n}\nvar hasTranslatedExtraArgs = /* @__PURE__ */ new WeakSet();\nvar emptyExtraArgs = [];\nfunction getTranslatedExtraArgs(signal) {\n  if (signal.extraArgs) {\n    if (!hasTranslatedExtraArgs.has(signal)) {\n      hasTranslatedExtraArgs.add(signal);\n      traverseReplace(signal, \"extraArgs\", replaceRenderNode);\n    }\n    return signal.extraArgs;\n  }\n  return emptyExtraArgs;\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = push(\n    providerSignal.intersection,\n    subscriber.identifier\n  );\n}\nfunction generateSignalName(referencedBindings) {\n  let name2;\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      name2 = \"expr\";\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 = referencedBindings.name;\n    }\n  } else {\n    name2 = \"setup\";\n  }\n  return name2;\n}\nfunction replaceNullishAndEmptyFunctionsWith0(args) {\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (!arg) {\n      args[i] = import_compiler17.types.numericLiteral(0);\n    } else if (import_compiler17.types.isArrowFunctionExpression(arg) && import_compiler17.types.isBlockStatement(arg.body)) {\n      const body = arg.body.body;\n      if (body.length === 0) {\n        args[i] = import_compiler17.types.numericLiteral(0);\n      } else if (body.length === 1 && import_compiler17.types.isExpressionStatement(body[0])) {\n        arg.body = toParenthesizedExpressionIfNeeded(body[0].expression);\n      }\n    } else if (import_compiler17.types.isNullLiteral(arg) || import_compiler17.types.isUnaryExpression(arg) && arg.operator === \"void\") {\n      args[i] = import_compiler17.types.numericLiteral(0);\n    }\n  }\n  for (let i = args.length - 1; import_compiler17.types.isNumericLiteral(args[i]) && args[i].value === 0; ) {\n    args.length = i--;\n  }\n  return args;\n}\nfunction addStatement(type, targetSection, referencedBindings, statement, usedReferences) {\n  const signal = getSignal(targetSection, referencedBindings);\n  const statements = signal[type] ??= [];\n  const add = type === \"effect\" ? addEffectReferences : addRenderReferences;\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (usedReferences !== false) {\n    if (usedReferences) {\n      for (const ref of usedReferences) {\n        add(signal, ref);\n      }\n    } else {\n      add(signal, referencedBindings);\n    }\n  }\n}\nfunction addEffectReferences(signal, referencedBindings) {\n  signal.effectReferencedBindings = bindingUtil.union(\n    signal.effectReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addRenderReferences(signal, referencedBindings) {\n  signal.renderReferencedBindings = bindingUtil.union(\n    signal.renderReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addValue(targetSection, referencedBindings, signal, value, scope = scopeIdentifier) {\n  getSignal(targetSection, referencedBindings).values.push({\n    signal,\n    value,\n    scope\n  });\n}\nfunction getResumeRegisterId(section, referencedBindings, type) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name2 = \"\";\n  if (referencedBindings) {\n    if (typeof referencedBindings === \"string\") {\n      name2 += `_${referencedBindings}`;\n    } else if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 += `_${referencedBindings.name}`;\n    }\n  }\n  return (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}${name2}${type ? \"/\" + type : \"\"}`\n  );\n}\nvar usedRegisterIdsBySection = /* @__PURE__ */ new WeakMap();\nfunction getRegisterUID(section, name2) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let used = usedRegisterIdsBySection.get(section);\n  if (!used) usedRegisterIdsBySection.set(section, used = /* @__PURE__ */ new Set());\n  const baseId = (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}/${name2}`\n  );\n  let count = 0;\n  let id = baseId;\n  while (used.has(id)) {\n    id = baseId + \"_\" + ++count;\n  }\n  used.add(id);\n  return id;\n}\nfunction writeSignals(section) {\n  forEach(section.hoisted, (binding) => {\n    for (const hoistedBinding of binding.hoists.values()) {\n      const accessors = [\n        binding.type === 0 /* dom */ ? import_compiler17.types.stringLiteral(getScopeAccessor(binding) + \">\" /* Getter */) : getScopeAccessorLiteral(binding)\n      ];\n      let currentSection = section;\n      while (currentSection && currentSection !== hoistedBinding.section) {\n        const parentSection = currentSection.parent;\n        if (parentSection) {\n          accessors.push(getSectionScopeAccessorLiteral(currentSection));\n        }\n        currentSection = parentSection;\n      }\n      const hoistIdentifier = getHoistFunctionIdentifier(hoistedBinding);\n      currentProgramPath.pushContainer(\n        \"body\",\n        import_compiler17.types.variableDeclaration(\"const\", [\n          import_compiler17.types.variableDeclarator(\n            hoistIdentifier,\n            hoistedBinding.downstreamExpressions.size ? callRuntime(\n              \"register\",\n              import_compiler17.types.stringLiteral(\n                getResumeRegisterId(\n                  hoistedBinding.section,\n                  hoistedBinding,\n                  \"hoist\"\n                )\n              ),\n              callRuntime(\"hoist\", ...accessors)\n            ) : callRuntime(\"hoist\", ...accessors)\n          )\n        ])\n      );\n      if (hoistedBinding.downstreamExpressions.size) {\n        addValue(\n          hoistedBinding.section,\n          void 0,\n          initValue(hoistedBinding),\n          import_compiler17.types.callExpression(hoistIdentifier, [scopeIdentifier])\n        );\n      }\n    }\n  });\n  const signals = [...getSignals(section).values()].sort(sortSignals);\n  for (const signal of signals) {\n    traverseReplace(signal, \"render\", replaceRenderNode);\n    for (const value2 of signal.values) {\n      traverseReplace(value2, \"value\", replaceRenderNode);\n    }\n    let effectDeclarator;\n    if (signal.effect.length) {\n      traverseReplace(signal, \"effect\", replaceEffectNode);\n      const effectIdentifier = import_compiler17.types.identifier(`${signal.identifier.name}_effect`);\n      const referencedBindings = signal.effectReferencedBindings;\n      const referencesScope = traverseContains(\n        signal.effect,\n        isScopeIdentifier\n      );\n      effectDeclarator = import_compiler17.types.variableDeclarator(\n        effectIdentifier,\n        callRuntime(\n          \"effect\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(section, signal.referencedBindings)\n          ),\n          import_compiler17.types.arrowFunctionExpression(\n            referencedBindings ? referencesScope ? [\n              scopeIdentifier,\n              createScopeReadPattern(section, referencedBindings)\n            ] : [createScopeReadPattern(section, referencedBindings)] : referencesScope ? [scopeIdentifier] : [],\n            toFirstExpressionOrBlock(signal.effect)\n          )\n        )\n      );\n    }\n    let value = signal.build();\n    if (import_compiler17.types.isCallExpression(value)) {\n      replaceNullishAndEmptyFunctionsWith0(value.arguments);\n    }\n    if (signal.register) {\n      value = callRuntime(\n        \"registerBoundSignal\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"var\")\n        ),\n        value\n      );\n    }\n    const signalDeclarator = import_compiler17.types.variableDeclarator(signal.identifier, value);\n    let signalDeclaration = !section.parent && !signal.referencedBindings && (import_compiler17.types.isFunctionExpression(value) || import_compiler17.types.isArrowFunctionExpression(value)) ? import_compiler17.types.functionDeclaration(\n      signal.identifier,\n      value.params,\n      import_compiler17.types.isExpression(value.body) ? import_compiler17.types.blockStatement([import_compiler17.types.expressionStatement(value.body)]) : value.body\n    ) : import_compiler17.types.variableDeclaration(\"const\", [signalDeclarator]);\n    if (signal.export) {\n      signalDeclaration = import_compiler17.types.exportNamedDeclaration(signalDeclaration);\n    }\n    currentProgramPath.pushContainer(\n      \"body\",\n      effectDeclarator ? [\n        import_compiler17.types.variableDeclaration(\"const\", [effectDeclarator]),\n        signalDeclaration\n      ] : signalDeclaration\n    );\n  }\n}\nfunction writeRegisteredFns() {\n  const registeredFns = registeredFnsForProgram.get(currentProgramPath.node);\n  const statements = [];\n  if (registeredFns) {\n    for (const registeredFn of registeredFns) {\n      let fn;\n      const params = registeredFn.referencedBindings ? registeredFn.referencesScope ? [\n        scopeIdentifier,\n        import_compiler17.types.assignmentPattern(\n          createScopeReadPattern(\n            registeredFn.section,\n            registeredFn.referencedBindings\n          ),\n          scopeIdentifier\n        )\n      ] : [\n        createScopeReadPattern(\n          registeredFn.section,\n          registeredFn.referencedBindings\n        )\n      ] : registeredFn.referencesScope ? [scopeIdentifier] : void 0;\n      if (params) {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          params,\n          import_compiler17.types.blockStatement(toReturnedFunction(registeredFn.node))\n        );\n      } else if (registeredFn.node.type === \"FunctionDeclaration\" && registeredFn.node.id?.name === registeredFn.id) {\n        fn = registeredFn.node;\n      } else {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          registeredFn.node.params,\n          registeredFn.node.body.type === \"BlockStatement\" ? registeredFn.node.body : import_compiler17.types.blockStatement([import_compiler17.types.returnStatement(registeredFn.node.body)]),\n          registeredFn.node.generator,\n          registeredFn.node.async\n        );\n      }\n      statements.push(fn);\n    }\n    for (const registeredFn of registeredFns) {\n      statements.push(\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler17.types.stringLiteral(registeredFn.registerId),\n            import_compiler17.types.identifier(registeredFn.id)\n          )\n        )\n      );\n    }\n    for (const stmt of currentProgramPath.pushContainer(\"body\", statements)) {\n      stmt.skip();\n    }\n  }\n}\nfunction toReturnedFunction(rawFn) {\n  const fn = simplifyFunction(rawFn);\n  return fn.type === \"FunctionDeclaration\" ? [fn, import_compiler17.types.returnStatement(fn.id)] : [import_compiler17.types.returnStatement(fn)];\n}\nfunction sortSignals(a, b) {\n  const aReferencedBindings = getReferencedBindings(a);\n  const bReferencedBindings = getReferencedBindings(b);\n  for (let i = Math.max(aReferencedBindings.length, bReferencedBindings.length) - 1; i >= 0; i--) {\n    const diff = (bReferencedBindings[i] ?? -1) - (aReferencedBindings[i] ?? -1);\n    if (diff !== 0) return diff;\n  }\n  return 0;\n}\nfunction getReferencedBindings({ referencedBindings: reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reference) {\n  return (reference.type === 0 /* dom */ ? 1 : 0) * 1e4 + reference.id;\n}\nfunction addHTMLEffectCall(section, referencedBindings) {\n  addStatement(\"effect\", section, referencedBindings, void 0, false);\n}\nfunction writeHTMLResumeStatements(path5) {\n  const section = getSectionForBody(path5);\n  if (!section) return;\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  forEach(section.assignments, (assignment) => {\n    let currentSection = section;\n    while (currentSection !== assignment.section) {\n      const currentSerialized = getSerializedScopeProperties(currentSection);\n      currentSection = currentSection.parent;\n      if (!currentSerialized.has(\"_\")) {\n        currentSerialized.set(\n          \"_\",\n          callRuntime(\n            \"ensureScopeWithId\",\n            getScopeIdIdentifier(currentSection)\n          )\n        );\n      }\n    }\n  });\n  forEach(section.closures, (closure) => {\n    if (isStatefulReferences(closure)) {\n      let currentSection = section;\n      while (currentSection !== closure.section) {\n        const currentSerialized = getSerializedScopeProperties(currentSection);\n        currentSection = currentSection.parent;\n        if (!currentSerialized.has(\"_\")) {\n          currentSerialized.set(\n            \"_\",\n            callRuntime(\n              \"ensureScopeWithId\",\n              getScopeIdIdentifier(currentSection)\n            )\n          );\n        }\n      }\n      setForceResumeScope(closure.section);\n      const isImmediateOwner = section.parent?.id === closure.section.id;\n      const isDynamicClosure = !getClosureSignalBuilder(section) || !isImmediateOwner;\n      if (isDynamicClosure) {\n        path5.pushContainer(\n          \"body\",\n          import_compiler17.types.expressionStatement(\n            callRuntime(\n              \"writeEffect\",\n              scopeIdIdentifier,\n              import_compiler17.types.stringLiteral(\n                getResumeRegisterId(section, closure, \"subscriber\")\n              )\n            )\n          )\n        );\n      }\n    }\n  });\n  const sectionDynamicSubscribers = /* @__PURE__ */ new Set();\n  forEach(section.hoisted, (binding) => {\n    for (const hoistedBinding of binding.hoists.values()) {\n      if (hoistedBinding.downstreamExpressions.size) {\n        getHTMLSectionStatements(hoistedBinding.section).push(\n          import_compiler17.types.variableDeclaration(\"const\", [\n            import_compiler17.types.variableDeclarator(\n              import_compiler17.types.identifier(hoistedBinding.name),\n              callRuntime(\n                \"hoist\",\n                getScopeIdIdentifier(hoistedBinding.section),\n                import_compiler17.types.stringLiteral(\n                  getResumeRegisterId(\n                    hoistedBinding.section,\n                    hoistedBinding,\n                    \"hoist\"\n                  )\n                )\n              )\n            )\n          ])\n        );\n      }\n      let currentSection = section;\n      while (currentSection && currentSection !== hoistedBinding.section) {\n        const parentSection = currentSection.parent;\n        if (!currentSection.sectionAccessor && !sectionDynamicSubscribers.has(currentSection)) {\n          const subscribersIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `${currentSection.name}_subscribers`\n          );\n          sectionDynamicSubscribers.add(currentSection);\n          getHTMLSectionStatements(parentSection).push(\n            import_compiler17.types.variableDeclaration(\"const\", [\n              import_compiler17.types.variableDeclarator(\n                subscribersIdentifier,\n                import_compiler17.types.newExpression(import_compiler17.types.identifier(\"Set\"), [])\n              )\n            ])\n          );\n          setSectionSubscriberIdentifiers(\n            currentSection,\n            subscribersIdentifier\n          );\n          setSerializedProperty(\n            parentSection,\n            getSectionScopeAccessor(currentSection),\n            subscribersIdentifier\n          );\n        }\n        currentSection = parentSection;\n      }\n    }\n    if (binding.hoists.size && binding.type !== 0 /* dom */) {\n      setSerializedProperty(\n        section,\n        getScopeAccessor(binding),\n        getDeclaredBindingExpression(binding)\n      );\n    }\n  });\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].referencedBindings;\n      path5.pushContainer(\n        \"body\",\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"writeEffect\",\n            scopeIdIdentifier,\n            import_compiler17.types.stringLiteral(getResumeRegisterId(section, signalRefs))\n          )\n        )\n      );\n    }\n  }\n  const serializedLookup = getSerializedScopeProperties(section);\n  const serializedProperties = [];\n  forEach(section.bindings, (binding) => {\n    if (binding.serialize && binding.type !== 0 /* dom */) {\n      const accessor = getScopeAccessor(binding);\n      serializedLookup.delete(accessor);\n      serializedProperties.push(\n        toObjectProperty(accessor, getDeclaredBindingExpression(binding))\n      );\n    }\n  });\n  for (const [key, value] of serializedLookup) {\n    serializedProperties.push(toObjectProperty(key, value));\n  }\n  const subscriberIdentifier = getSectionSubscriberIdentifier(section);\n  if (serializedProperties.length || forceResumeScope(section) || subscriberIdentifier) {\n    for (const prop of serializedProperties) {\n      if (prop.key.type === \"Identifier\" && prop.value.type === \"Identifier\" && prop.key.name === prop.value.name) {\n        prop.shorthand = true;\n      }\n    }\n    const writeScopeArgs = [\n      scopeIdIdentifier,\n      import_compiler17.types.objectExpression(serializedProperties)\n    ];\n    if (!isOptimize()) {\n      let debugVars;\n      forEach(section.bindings, (binding) => {\n        if (!binding.serialize || binding.type === 0 /* dom */) return;\n        let root = binding;\n        let access = \"\";\n        while (!(root.loc || root.declared) && root.upstreamAlias) {\n          if (root.property !== void 0) {\n            access = toAccess(root.property) + access;\n          }\n          root = root.upstreamAlias;\n        }\n        const locExpr = root.loc && import_compiler17.types.stringLiteral(\n          `${root.loc.start.line}:${root.loc.start.column + 1}`\n        );\n        (debugVars ||= []).push(\n          toObjectProperty(\n            getScopeAccessor(binding),\n            root !== binding ? import_compiler17.types.arrayExpression(\n              locExpr ? [import_compiler17.types.stringLiteral(root.name + access), locExpr] : [import_compiler17.types.stringLiteral(root.name + access)]\n            ) : locExpr || import_compiler17.types.numericLiteral(0)\n          )\n        );\n      });\n      writeScopeArgs.push(\n        import_compiler17.types.stringLiteral(path5.hub.file.opts.filenameRelative),\n        section.loc && section.loc.start.line != null ? import_compiler17.types.stringLiteral(\n          `${section.loc.start.line}:${section.loc.start.column + 1}`\n        ) : import_compiler17.types.numericLiteral(0)\n      );\n      if (debugVars) {\n        writeScopeArgs.push(import_compiler17.types.objectExpression(debugVars));\n      }\n    }\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        subscriberIdentifier ? callRuntime(\n          \"writeSubscribe\",\n          subscriberIdentifier,\n          callRuntime(\"writeScope\", ...writeScopeArgs)\n        ) : callRuntime(\"writeScope\", ...writeScopeArgs)\n      )\n    );\n  }\n  const resumeClosestBranch2 = !section.isBranch && (section.hasAbortSignal || !!section.closures || !!find(section.bindings, (binding) => binding.type === 1 /* let */));\n  if (resumeClosestBranch2) {\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        callRuntime(\"resumeClosestBranch\", scopeIdIdentifier)\n      )\n    );\n  }\n  const additionalStatements = getHTMLSectionStatements(section);\n  if (path5.get(\"body\").length || additionalStatements.length) {\n    path5.unshiftContainer(\"body\", [\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n      ]),\n      ...additionalStatements\n    ]);\n  }\n  const returnIdentifier = getSectionReturnValueIdentifier(section);\n  if (returnIdentifier !== void 0) {\n    path5.pushContainer(\"body\", import_compiler17.types.returnStatement(returnIdentifier));\n  }\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\nfunction replaceRenderNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node) || replaceRegisteredFunctionNode(node);\n}\nfunction replaceEffectNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node);\n}\nfunction replaceBindingReadNode(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      return getReadReplacement(node);\n    }\n  }\n}\nfunction replaceAssignedNode(node) {\n  switch (node.type) {\n    case \"UpdateExpression\": {\n      const { extra } = node.argument;\n      if (isAssignedBindingExtra(extra)) {\n        const { buildAssignment } = getSignal(\n          extra.assignment.section,\n          extra.assignment\n        );\n        if (buildAssignment) {\n          const replacement = buildAssignment(\n            extra.section,\n            import_compiler17.types.binaryExpression(\n              node.operator === \"++\" ? \"+\" : \"-\",\n              node.argument,\n              import_compiler17.types.numericLiteral(1)\n            )\n          );\n          if (!node.prefix) {\n            return import_compiler17.types.sequenceExpression([replacement, node.argument]);\n          }\n          return replacement;\n        }\n      }\n      break;\n    }\n    case \"AssignmentExpression\":\n      switch (node.left.type) {\n        case \"Identifier\": {\n          const { extra } = node.left;\n          if (isAssignedBindingExtra(extra)) {\n            const { buildAssignment } = getSignal(\n              extra.assignment.section,\n              extra.assignment\n            );\n            if (buildAssignment) {\n              return buildAssignment(\n                extra.section,\n                node.operator === \"=\" ? node.right : import_compiler17.types.binaryExpression(\n                  node.operator.slice(\n                    0,\n                    -1\n                  ),\n                  node.left,\n                  node.right\n                )\n              );\n            }\n          }\n          break;\n        }\n        case \"ArrayPattern\":\n        case \"ObjectPattern\": {\n          let params;\n          let assignments;\n          forEachIdentifier(node.left, (id) => {\n            const { extra } = id;\n            if (isAssignedBindingExtra(extra)) {\n              const signal = getSignal(\n                extra.assignment.section,\n                extra.assignment\n              );\n              if (signal?.buildAssignment) {\n                id.name = currentProgramPath.scope.generateUid(id.name);\n                (params ||= []).push(import_compiler17.types.identifier(id.name));\n                (assignments ||= []).push(\n                  signal.buildAssignment(extra.section, import_compiler17.types.identifier(id.name))\n                );\n              }\n            }\n          });\n          if (params && assignments) {\n            const resultId = currentProgramPath.scope.generateUid(\"result\");\n            return import_compiler17.types.callExpression(\n              import_compiler17.types.arrowFunctionExpression(\n                [import_compiler17.types.identifier(resultId), ...params],\n                import_compiler17.types.sequenceExpression([\n                  import_compiler17.types.assignmentExpression(\n                    \"=\",\n                    node.left,\n                    import_compiler17.types.identifier(resultId)\n                  ),\n                  ...assignments,\n                  import_compiler17.types.identifier(resultId)\n                ])\n              ),\n              [node.right]\n            );\n          }\n          break;\n        }\n      }\n      break;\n  }\n}\nvar registeredFnsForProgram = /* @__PURE__ */ new WeakMap();\nfunction replaceRegisteredFunctionNode(node) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.objectProperty(node.key, replacement);\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression(node);\n    }\n    case \"FunctionDeclaration\": {\n      const replacement = getRegisteredFnExpression(node);\n      if (replacement) {\n        return import_compiler17.types.variableDeclaration(\"const\", [\n          import_compiler17.types.variableDeclarator(node.id, replacement)\n        ]);\n      }\n      break;\n    }\n  }\n}\nfunction getRegisteredFnExpression(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    const id = currentProgramPath.scope.generateUid(extra.name);\n    const referencesScope = extra.referencesScope;\n    const referencedBindings = extra.referencedBindingsInFunction;\n    let registedFns = registeredFnsForProgram.get(currentProgramPath.node);\n    if (!registedFns) {\n      registeredFnsForProgram.set(currentProgramPath.node, registedFns = []);\n    }\n    registedFns.push({\n      id,\n      node,\n      registerId: extra.registerId,\n      section: extra.section,\n      referencesScope,\n      referencedBindings\n    });\n    if (referencesScope || referencedBindings) {\n      return import_compiler17.types.callExpression(import_compiler17.types.identifier(id), [scopeIdentifier]);\n    } else {\n      return import_compiler17.types.identifier(id);\n    }\n  }\n}\n\n// src/translator/visitors/program/dom.ts\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSectionForBody(program);\n      const { walks, writes, setup } = getSectionMeta(section);\n      const domExports = program.node.extra.domExports;\n      const templateIdentifier = import_compiler18.types.identifier(domExports.template);\n      const walksIdentifier = import_compiler18.types.identifier(domExports.walks);\n      const setupIdentifier = import_compiler18.types.identifier(domExports.setup);\n      const inputBinding = program.node.params[0].extra?.binding;\n      const programInputSignal = inputBinding && bindingHasDownstreamExpressions(inputBinding) ? initValue(inputBinding) : void 0;\n      const styleFile = getStyleFile(program.hub.file);\n      if (styleFile) {\n        (0, import_babel_utils10.importDefault)(program.hub.file, styleFile);\n      }\n      forEachSectionReverse((childSection) => {\n        if (childSection !== section) {\n          const tagParamsSignal = childSection.params && initValue(childSection.params);\n          const { walks: walks2, writes: writes2, setup: setup2 } = getSectionMeta(childSection);\n          const params = tagParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], tagParamsSignal.identifier);\n          const identifier = import_compiler18.types.identifier(childSection.name);\n          const renderer = getSectionParentIsOwner(childSection) ? callRuntime(\n            \"createRenderer\",\n            ...replaceNullishAndEmptyFunctionsWith0([\n              writes2,\n              walks2,\n              setup2,\n              params\n            ])\n          ) : callRuntime(\n            isSerializedSection(childSection) ? \"registerContent\" : \"createContent\",\n            import_compiler18.types.stringLiteral(getResumeRegisterId(childSection, \"renderer\")),\n            ...replaceNullishAndEmptyFunctionsWith0([\n              writes2,\n              walks2,\n              setup2,\n              params,\n              childSection.hoisted || childSection.isHoistThrough ? getSectionScopeAccessorLiteral(childSection) : void 0\n            ])\n          );\n          writeSignals(childSection);\n          program.node.body.push(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(identifier, renderer)\n            ])\n          );\n        }\n      });\n      writeSignals(section);\n      writeRegisteredFns();\n      if (!setup) {\n        program.node.body.unshift(\n          import_compiler18.types.exportNamedDeclaration(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                setupIdentifier,\n                import_compiler18.types.arrowFunctionExpression([], import_compiler18.types.blockStatement([]))\n              )\n            ])\n          )\n        );\n      }\n      program.node.body.unshift(\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(\n              templateIdentifier,\n              writes || import_compiler18.types.stringLiteral(\"\")\n            )\n          ])\n        ),\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(walksIdentifier, walks || import_compiler18.types.stringLiteral(\"\"))\n          ])\n        )\n      );\n      program.node.body.push(\n        import_compiler18.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler18.types.stringLiteral(program.hub.file.metadata.marko.id),\n            templateIdentifier,\n            walksIdentifier,\n            setupIdentifier,\n            programInputSignal?.identifier\n          )\n        )\n      );\n    }\n  }\n};\n\n// src/translator/visitors/program/html.ts\nvar import_compiler19 = require(\"@marko/compiler\");\n\n// src/translator/util/is-static.ts\nfunction isStatic(path5) {\n  return path5.isImportDeclaration() || path5.isExportDeclaration() || path5.isMarkoScriptlet({ static: true });\n}\n\n// src/translator/visitors/program/html.ts\nvar templateContentIdentifierForProgram = /* @__PURE__ */ new WeakMap();\nfunction getTemplateContentName() {\n  let name2 = templateContentIdentifierForProgram.get(currentProgramPath);\n  if (!name2) {\n    templateContentIdentifierForProgram.set(\n      currentProgramPath,\n      name2 = currentProgramPath.scope.generateUid(\"content\")\n    );\n  }\n  return name2;\n}\nvar html_default = {\n  translate: {\n    exit(program) {\n      flushInto(program);\n      writeHTMLResumeStatements(program);\n      traverseReplace(program.node, \"body\", replaceNode);\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          if (child.node.target && child.node.target !== \"server\") {\n            child.remove();\n          } else {\n            child.replaceWithMultiple(child.node.body);\n          }\n        }\n      }\n      const contentId = templateContentIdentifierForProgram.get(program);\n      const contentFn = import_compiler19.types.arrowFunctionExpression(\n        [import_compiler19.types.identifier(\"input\")],\n        import_compiler19.types.blockStatement(renderContent)\n      );\n      const exportDefault = import_compiler19.types.exportDefaultDeclaration(\n        callRuntime(\n          \"createTemplate\",\n          import_compiler19.types.stringLiteral(program.hub.file.metadata.marko.id),\n          contentId ? import_compiler19.types.identifier(contentId) : contentFn\n        )\n      );\n      program.pushContainer(\n        \"body\",\n        contentId ? [\n          import_compiler19.types.variableDeclaration(\"const\", [\n            import_compiler19.types.variableDeclarator(import_compiler19.types.identifier(contentId), contentFn)\n          ]),\n          exportDefault\n        ] : exportDefault\n      );\n    }\n  }\n};\nfunction replaceNode(node, container) {\n  return replaceBindingReadNode2(node) || replaceRegisteredFunctionNode2(node, container);\n}\nfunction replaceBindingReadNode2(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      const { extra } = node;\n      if (extra && !(extra.read && !extra.read.binding.declared || extra.binding && !extra.binding.declared)) {\n        return getReadReplacement(node);\n      }\n    }\n  }\n}\nfunction replaceRegisteredFunctionNode2(node, container) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.objectProperty(node.key, replacement);\n    }\n    case \"FunctionDeclaration\": {\n      const { extra } = node;\n      if (isRegisteredFnExtra(extra)) {\n        let registeredFnDeclarations = registeredFnDeclarationsByBody.get(\n          container\n        );\n        if (!registeredFnDeclarations) {\n          registeredFnDeclarationsByBody.set(\n            container,\n            registeredFnDeclarations = []\n          );\n        }\n        registeredFnDeclarations.push({\n          id: node.id.name,\n          registerId: extra.registerId\n        });\n      }\n      break;\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression2(node);\n    }\n    case \"BlockStatement\":\n    case \"MarkoScriptlet\":\n      addRegisteredDeclarations(node.body);\n      break;\n  }\n}\nvar registeredFnDeclarationsByBody = /* @__PURE__ */ new WeakMap();\nfunction addRegisteredDeclarations(body) {\n  const registeredFnDeclarations = registeredFnDeclarationsByBody.get(body);\n  if (registeredFnDeclarations) {\n    for (const { id, registerId } of registeredFnDeclarations) {\n      body.push(\n        import_compiler19.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler19.types.identifier(id),\n            import_compiler19.types.stringLiteral(registerId)\n          )\n        )\n      );\n    }\n  }\n}\nfunction getRegisteredFnExpression2(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    return callRuntime(\n      \"register\",\n      simplifyFunction(node),\n      import_compiler19.types.stringLiteral(extra.registerId),\n      (extra.referencedBindingsInFunction || extra.referencesScope) && getScopeIdIdentifier(extra.section)\n    );\n  }\n}\n\n// src/translator/visitors/program/index.ts\nvar currentProgramPath;\nvar cleanIdentifier;\nvar scopeIdentifier;\nfunction isScopeIdentifier(node) {\n  return node === scopeIdentifier;\n}\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      program.node.params = [import_compiler20.types.identifier(\"input\")];\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n      trackParamsReferences(program, 2 /* input */);\n      const inputBinding = program.node.params[0].extra?.binding;\n      if (inputBinding) {\n        inputBinding.nullable = false;\n      }\n      const { scope } = program;\n      (program.node.extra ??= {}).domExports = {\n        template: scope.generateUid(\"template_\"),\n        walks: scope.generateUid(\"walks_\"),\n        setup: scope.generateUid(\"setup_\"),\n        input: void 0,\n        // TODO look into recursive components with fine grained params.\n        closures: scope.generateUid(\"closures_\")\n      };\n    },\n    exit(program) {\n      finalizeReferences();\n      const programExtra = program.node.extra;\n      const inputBinding = program.node.params[0].extra?.binding;\n      if (inputBinding && bindingHasDownstreamExpressions(inputBinding)) {\n        programExtra.domExports.input = buildTemplateExports(inputBinding);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        const entryFile = program.hub.file;\n        const visitedFiles = /* @__PURE__ */ new Set([\n          (0, import_babel_utils11.resolveRelativePath)(entryFile, entryFile.opts.filename)\n        ]);\n        entry_builder_default.visit(entryFile, entryFile, function visitChild(resolved) {\n          if (!visitedFiles.has(resolved)) {\n            visitedFiles.add(resolved);\n            const file = (0, import_babel_utils11.loadFileForImport)(entryFile, resolved);\n            if (file) {\n              entry_builder_default.visit(\n                file,\n                entryFile,\n                (id) => visitChild(resolveRelativeToEntry(entryFile, file, id))\n              );\n            }\n          }\n        });\n        program.node.body = entry_builder_default.build(entryFile);\n        program.skip();\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      if (program.node.extra?.needsCompat) {\n        const compatFile = getCompatRuntimeFile();\n        const body = [void 0];\n        for (const child of program.node.body) {\n          if (child.type === \"ImportDeclaration\" && child.source.value === compatFile) {\n            body[0] = child;\n          } else {\n            body.push(child);\n          }\n        }\n        body[0] ??= import_compiler20.types.importDeclaration([], import_compiler20.types.stringLiteral(compatFile));\n        program.node.body = body;\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\nfunction resolveRelativeToEntry(entryFile, file, req) {\n  return file === entryFile ? (0, import_babel_utils11.resolveRelativePath)(file, req) : (0, import_babel_utils11.resolveRelativePath)(\n    entryFile,\n    req[0] === \".\" ? import_path2.default.join(file.opts.filename, \"..\", req) : req\n  );\n}\nfunction buildTemplateExports(binding) {\n  const templateExport = {\n    id: binding.export ??= currentProgramPath.scope.generateUid(\n      binding.name + \"_\"\n    ),\n    binding,\n    props: void 0\n  };\n  if (!(binding.aliases.size || binding.downstreamExpressions.size)) {\n    templateExport.props = {};\n    for (const [property, alias] of binding.propertyAliases) {\n      templateExport.props[property] = buildTemplateExports(alias);\n    }\n  }\n  return templateExport;\n}\n\n// src/translator/util/get-root.ts\nfunction getMarkoRoot(path5) {\n  let curPath = path5;\n  do\n    curPath = curPath.parentPath;\n  while (curPath && !isMarko(curPath));\n  return curPath;\n}\nfunction getExprRoot(path5) {\n  let curPath = path5;\n  while (!isMarko(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path5) {\n  let curPath = path5;\n  let fnPath;\n  if (curPath.isProgram()) return;\n  while (!isMarko(curPath)) {\n    if (isFunction(curPath)) {\n      fnPath = curPath;\n    } else {\n      switch (curPath.type) {\n        case \"CallExpression\":\n        case \"NewExpression\":\n          fnPath = void 0;\n          break;\n      }\n    }\n    curPath = curPath.parentPath;\n  }\n  return fnPath;\n}\nfunction isMarko(path5) {\n  switch (path5.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunction(path5) {\n  switch (path5.type) {\n    case \"FunctionDeclaration\":\n      return !path5.node.declare;\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ObjectMethod\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/util/is-invoked-function.ts\nvar import_compiler21 = require(\"@marko/compiler\");\nfunction isInvokedFunction(expr) {\n  let curPath = expr;\n  while (curPath) {\n    const { parent, node } = curPath;\n    switch (parent.type) {\n      case \"CallExpression\":\n        return parent.callee === node;\n      case \"TSNonNullExpression\":\n        curPath = curPath.parentPath;\n        break;\n      default:\n        return false;\n    }\n  }\n  return false;\n}\n\n// src/translator/util/with-previous-location.ts\nfunction withPreviousLocation(newNode, originalNode) {\n  newNode.start = originalNode.start;\n  newNode.loc = originalNode.loc;\n  newNode.end = originalNode.end;\n  return newNode;\n}\n\n// src/translator/util/references.ts\nvar kIsInvoked = Symbol(\"hoist is invoked\");\nvar [getBindings] = createProgramState(() => /* @__PURE__ */ new Set());\nvar [getNextBindingId, setNextBindingId] = createProgramState(() => 0);\nfunction createBinding(name2, type, section, upstreamAlias, upstreamExpression, property, loc = null, declared = false) {\n  const id = getNextBindingId();\n  const binding = {\n    id,\n    name: name2,\n    type,\n    loc,\n    section,\n    property,\n    declared,\n    excludeProperties: void 0,\n    serialize: false,\n    aliases: /* @__PURE__ */ new Set(),\n    hoists: /* @__PURE__ */ new Map(),\n    propertyAliases: /* @__PURE__ */ new Map(),\n    upstreamAlias,\n    upstreamExpression,\n    downstreamExpressions: /* @__PURE__ */ new Set(),\n    scopeOffset: void 0,\n    export: void 0,\n    nullable: !upstreamExpression?.confident || upstreamExpression.computed == null\n  };\n  if (property) {\n    if (declared) upstreamAlias.nullable = false;\n    const propBinding = upstreamAlias.propertyAliases.get(property);\n    if (propBinding) {\n      binding.property = void 0;\n      binding.upstreamAlias = propBinding;\n      propBinding.aliases.add(binding);\n    } else {\n      upstreamAlias.propertyAliases.set(property, binding);\n    }\n  } else if (upstreamAlias) {\n    upstreamAlias.aliases.add(binding);\n  }\n  setNextBindingId(id + 1);\n  getBindings().add(binding);\n  return binding;\n}\nfunction trackVarReferences(tag, type, upstreamAlias, upstreamExpression) {\n  const tagVar = tag.node.var;\n  if (tagVar) {\n    const section = getOrCreateSection(tag);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    createBindingsAndTrackReferences(\n      tagVar,\n      type,\n      tag.scope,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    );\n  }\n}\nfunction trackParamsReferences(body, type, upstreamAlias, upstreamExpression) {\n  const params = body.node.params;\n  if (body.node.body.length && params.length) {\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    const section = getOrCreateSection(body);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    const paramsBinding = canonicalUpstreamAlias || ((body.node.extra ??= {}).binding = createBinding(\n      currentProgramPath.scope.generateUid(\"params_\"),\n      type,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    ));\n    section.params = paramsBinding;\n    for (let i = 0; i < params.length; i++) {\n      createBindingsAndTrackReferences(\n        params[i],\n        type,\n        body.scope,\n        section,\n        paramsBinding,\n        upstreamExpression,\n        i + \"\"\n      );\n    }\n  }\n}\nfunction trackHoistedReference(referencePath, binding) {\n  const section = binding.section;\n  const referenceSection = getOrCreateSection(referencePath);\n  const hoistSection = getCommonSection(referenceSection, section);\n  const extra = referencePath.node.extra ??= {};\n  let hoistedBinding = binding.hoists.get(hoistSection);\n  if (!hoistedBinding) {\n    binding.hoists.set(\n      hoistSection,\n      hoistedBinding = createBinding(\n        currentProgramPath.scope.generateUid(\n          \"hoisted_\" + referencePath.node.name\n        ),\n        5 /* hoist */,\n        hoistSection,\n        void 0,\n        void 0,\n        void 0,\n        binding.loc,\n        true\n      )\n    );\n    section.hoisted = bindingUtil.add(section.hoisted, binding);\n    let currentSection = section.parent;\n    while (currentSection && currentSection !== hoistSection) {\n      currentSection.isHoistThrough = true;\n      currentSection = currentSection.parent;\n    }\n  }\n  extra.hoistedBinding = hoistedBinding;\n  if (isInvokedFunction(referencePath)) {\n    extra.read = createRead(hoistedBinding, void 0);\n    extra.section = referenceSection;\n    extra[kIsInvoked] = true;\n  } else {\n    trackReference(referencePath, hoistedBinding);\n  }\n  if (referenceSection !== hoistSection) {\n    referenceSection.closures = bindingUtil.add(\n      referenceSection.closures,\n      hoistedBinding\n    );\n  }\n}\nfunction trackReferencesForBinding(babelBinding) {\n  const { identifier, referencePaths, constantViolations } = babelBinding;\n  const binding = identifier.extra.binding;\n  for (const referencePath of referencePaths) {\n    const referenceSection = getOrCreateSection(referencePath);\n    if (isSameOrChildSection(binding.section, referenceSection)) {\n      trackReference(referencePath, binding);\n    } else {\n      trackHoistedReference(referencePath, binding);\n    }\n  }\n  for (const ref of constantViolations) {\n    if (ref.isUpdateExpression()) {\n      trackAssignment(ref.get(\"argument\"), binding);\n    } else if (ref.isAssignmentExpression()) {\n      trackAssignment(ref.get(\"left\"), binding);\n      if (ref.node.operator !== \"=\") {\n        const left = ref.get(\"left\");\n        if (left.isIdentifier()) {\n          trackReference(left, binding);\n        }\n      }\n    }\n  }\n}\nfunction trackAssignment(assignment, binding) {\n  const section = getOrCreateSection(assignment);\n  setReferencesScope(assignment);\n  forEachIdentifier(assignment.node, (id) => {\n    if (id.name === binding.name) {\n      const extra = id.extra ??= {};\n      section.assignments = bindingUtil.add(section.assignments, binding);\n      extra.assignment = binding;\n      extra.section = section;\n    }\n  });\n}\nfunction setReferencesScope(path5) {\n  const fnRoot = getFnRoot(path5);\n  if (fnRoot) {\n    (fnRoot.node.extra ??= {}).referencesScope = true;\n  }\n}\nfunction createBindingsAndTrackReferences(lVal, type, scope, section, upstreamAlias, upstreamExpression, property) {\n  switch (lVal.type) {\n    case \"Identifier\":\n      (lVal.extra ??= {}).binding = createBinding(\n        lVal.name,\n        type,\n        section,\n        upstreamAlias,\n        upstreamExpression,\n        property,\n        lVal.loc,\n        true\n      );\n      trackReferencesForBinding(scope.getBinding(lVal.name));\n      break;\n    case \"ObjectPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      for (const prop of lVal.properties) {\n        if (prop.type === \"RestElement\") {\n          createBindingsAndTrackReferences(\n            prop.argument,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            property\n          );\n        } else {\n          let key;\n          if (prop.key.type === \"Identifier\") {\n            key = prop.key.name;\n          } else if (prop.key.type === \"StringLiteral\") {\n            key = prop.key.value;\n          } else {\n            throw new Error(\"computed keys not supported in object pattern\");\n          }\n          createBindingsAndTrackReferences(\n            prop.value,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            key\n          );\n        }\n      }\n      break;\n    }\n    case \"ArrayPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      let i = -1;\n      for (const element of lVal.elements) {\n        i++;\n        if (element) {\n          if (element.type === \"RestElement\") {\n            createBindingsAndTrackReferences(\n              element.argument,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              property\n            );\n          } else {\n            createBindingsAndTrackReferences(\n              element,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              `${i}`\n            );\n          }\n        }\n      }\n      break;\n    }\n    case \"AssignmentPattern\":\n      createBindingsAndTrackReferences(\n        lVal.left,\n        type,\n        scope,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      );\n      break;\n  }\n}\nfunction trackReference(referencePath, binding) {\n  let root = referencePath;\n  let reference = binding;\n  let propPath = binding.name;\n  while (true) {\n    const { parent } = root;\n    if (!import_compiler22.types.isMemberExpression(parent)) break;\n    const prop = getMemberExpressionPropString(parent);\n    if (prop === void 0) break;\n    if (reference.propertyAliases.has(prop)) {\n      root = root.parentPath;\n      reference = reference.propertyAliases.get(prop);\n      propPath = reference.name;\n      continue;\n    }\n    if (root.parentPath.parentPath.isCallExpression() && !isEventOrChangeHandler(prop)) {\n      break;\n    }\n    root = root.parentPath;\n    reference = createBinding(\n      propPath += `_${prop.replace(/[^a-zA-Z0-9_$]/g, \"_\")}`,\n      reference.type,\n      reference.section,\n      reference,\n      void 0,\n      prop\n    );\n  }\n  const fnRoot = getFnRoot(root);\n  const exprRoot = getExprRoot(fnRoot || root);\n  const { section } = addReadToExpression(exprRoot, reference, root.node);\n  if (fnRoot) {\n    const readsByFn = getReadsByFunction();\n    const fnExtra = fnRoot.node.extra ??= {};\n    fnExtra.section = section;\n    readsByFn.set(\n      fnExtra,\n      push(readsByFn.get(fnExtra), {\n        binding: reference,\n        node: root.node\n      })\n    );\n  }\n}\nvar [getMergedReferences] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction mergeReferences(section, target, nodes) {\n  (target.extra ??= {}).section = section;\n  getMergedReferences().set(target, nodes);\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = bindingUtil.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeReferences() {\n  const bindings = getBindings();\n  const readsByExpression = getReadsByExpression();\n  const readsByFn = getReadsByFunction();\n  const mergedReferences = getMergedReferences();\n  if (mergedReferences.size) {\n    for (const [target, nodes] of mergedReferences) {\n      const targetExtra = target.extra;\n      let reads = readsByExpression.get(targetExtra);\n      let { isEffect } = targetExtra;\n      for (const node of nodes) {\n        const extra = node?.extra;\n        if (isReferencedExtra(extra)) {\n          isEffect ||= extra.isEffect;\n          const additionalReads = readsByExpression.get(extra);\n          if (additionalReads) {\n            reads = concat(reads, additionalReads);\n            readsByExpression.delete(extra);\n          }\n        }\n      }\n      readsByExpression.set(targetExtra, reads);\n      targetExtra.isEffect = isEffect;\n    }\n  }\n  const intersectionsBySection = /* @__PURE__ */ new Map();\n  for (const [expr, reads] of readsByExpression) {\n    if (isReferencedExtra(expr)) {\n      expr.referencedBindings = resolveReferencedBindings(\n        expr,\n        reads,\n        intersectionsBySection\n      );\n      forEach(expr.referencedBindings, (binding) => {\n        binding.downstreamExpressions.add(expr);\n      });\n    }\n  }\n  for (const [fn, reads] of readsByFn) {\n    fn.referencedBindingsInFunction = resolveReferencedBindings(\n      fn,\n      reads,\n      intersectionsBySection\n    );\n    forEach(fn.referencedBindingsInFunction, (binding) => {\n      binding.serialize = true;\n    });\n  }\n  for (const binding of bindings) {\n    if (binding.type !== 0 /* dom */ && !binding.upstreamAlias) {\n      pruneBinding(bindings, binding);\n    }\n  }\n  for (const binding of bindings) {\n    const { name: name2, section } = binding;\n    if (binding.type !== 0 /* dom */) {\n      if (find(section.bindings, ({ name: name3 }) => name3 === binding.name)) {\n        binding.name = currentProgramPath.scope.generateUid(name2);\n      }\n    }\n    section.bindings = bindingUtil.add(section.bindings, binding);\n    for (const {\n      referencedBindings,\n      isEffect,\n      section: section2\n    } of binding.downstreamExpressions) {\n      if (section2 !== binding.section) {\n        section2.closures = bindingUtil.add(section2.closures, binding);\n      }\n      if (isEffect) {\n        forEach(referencedBindings, (bindingReference) => {\n          bindingReference.serialize = true;\n        });\n      }\n    }\n  }\n  forEachSection((section) => {\n    const intersections = intersectionsBySection.get(section);\n    if (intersections) {\n      for (const intersection of intersections) {\n        const numReferences = intersection.length;\n        for (let i = 0; i < numReferences - 1; i++) {\n          for (let j = i + 1; j < numReferences; j++) {\n            const binding1 = intersection[i];\n            const binding2 = intersection[j];\n            const sources1 = getSourceBindings(binding1);\n            const sources2 = getSourceBindings(binding2);\n            if (!binding1.serialize && !isSuperset(sources1, sources2)) {\n              binding1.serialize = true;\n            }\n            if (!binding2.serialize && !isSuperset(sources2, sources1)) {\n              binding2.serialize = true;\n            }\n          }\n        }\n      }\n    }\n    forEach(section.closures, (binding) => {\n      if (!binding.serialize) {\n        let serialize = false;\n        const sourceSection = binding.section;\n        let currentSection = section;\n        while (currentSection !== sourceSection && !(serialize = !currentSection.upstreamExpression || isStatefulReferences(\n          currentSection.upstreamExpression.referencedBindings\n        ))) {\n          currentSection = currentSection.parent;\n        }\n        binding.serialize = serialize;\n      }\n    });\n  });\n  forEachSection((section) => {\n    let intersectionIndex = 0;\n    const intersections = intersectionsBySection.get(section) || [];\n    const { id, bindings: bindings2 } = section;\n    const isOwnedBinding = ({ section: section2 }) => section2.id === id;\n    let lastBindingIndex = 0;\n    let intersection;\n    forEach(filter(bindings2, isOwnedBinding), (binding, bindingIndex) => {\n      binding.id = (lastBindingIndex = bindingIndex) + intersectionIndex;\n      while (intersectionIndex < intersections.length && (intersection = intersections[intersectionIndex]).filter(isOwnedBinding).at(-1) === binding) {\n        intersectionMeta.set(intersection, {\n          id: bindingIndex + ++intersectionIndex,\n          scopeOffset: getMaxOwnSourceOffset(intersection, section)\n        });\n      }\n    });\n    while (intersectionIndex < intersections.length) {\n      intersection = intersections[intersectionIndex];\n      intersectionMeta.set(intersection, {\n        id: lastBindingIndex + ++intersectionIndex,\n        scopeOffset: getMaxOwnSourceOffset(intersection, section)\n      });\n    }\n  });\n  mergedReferences.clear();\n  readsByExpression.clear();\n  readsByFn.clear();\n}\nfunction getMaxOwnSourceOffset(intersection, section) {\n  let scopeOffset;\n  for (const binding of intersection) {\n    if (binding.section === section) {\n      for (const sourceBinding of getSourceBindings(binding)) {\n        if (sourceBinding.scopeOffset && (!scopeOffset || scopeOffset.id < sourceBinding.scopeOffset.id)) {\n          scopeOffset = sourceBinding.scopeOffset;\n        }\n      }\n    }\n  }\n  return scopeOffset;\n}\nvar intersectionMeta = /* @__PURE__ */ new WeakMap();\nfunction isSuperset(set, subset) {\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getSourceBindings(binding) {\n  const derived = /* @__PURE__ */ new Set();\n  const sources = /* @__PURE__ */ new Set();\n  crawl(binding);\n  return sources;\n  function crawl(binding2) {\n    if (binding2.type === 4 /* derived */ || binding2.type === 3 /* param */) {\n      let alias;\n      let curBinding = binding2;\n      while (alias = curBinding.upstreamAlias) {\n        curBinding = alias;\n      }\n      if (curBinding.upstreamExpression) {\n        if (derived.has(curBinding)) return;\n        derived.add(curBinding);\n        forEach(curBinding.upstreamExpression.referencedBindings, crawl);\n      } else if (curBinding.type === 2 /* input */) {\n        sources.add(binding2);\n      } else {\n        sources.add(curBinding);\n      }\n    } else {\n      sources.add(binding2);\n    }\n  }\n}\nvar bindingUtil = new Sorted(function compareBindings(a, b) {\n  return a.section.id - b.section.id || a.type !== b.type && (a.type === 0 /* dom */ || b.type === 0 /* dom */) ? a.type - b.type || a.id - b.id : a.id - b.id;\n});\nvar [getReadsByExpression] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nvar [getReadsByFunction] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction addReadToExpression(path5, binding, node) {\n  const exprExtra = path5.node.extra ??= {};\n  const readsByExpression = getReadsByExpression();\n  exprExtra.section = getOrCreateSection(path5);\n  readsByExpression.set(\n    exprExtra,\n    push(readsByExpression.get(exprExtra), { binding, node })\n  );\n  return exprExtra;\n}\nfunction dropReferences(node) {\n  if (Array.isArray(node)) {\n    for (const item of node) {\n      (item.extra ??= {}).pruned = true;\n    }\n  } else {\n    (node.extra ??= {}).pruned = true;\n  }\n}\nfunction getCanonicalBinding(binding) {\n  return binding && (binding.property ? binding : binding.upstreamAlias || binding);\n}\nfunction getAllTagReferenceNodes(tag, referenceNodes = []) {\n  if (tag.arguments) {\n    for (const arg of tag.arguments) {\n      referenceNodes.push(arg);\n    }\n  }\n  for (const attr2 of tag.attributes) {\n    referenceNodes.push(attr2.value);\n  }\n  for (const child of tag.body.attributeTags ? tag.body.body : tag.attributeTags) {\n    switch (child.type) {\n      case \"MarkoTag\":\n        getAllTagReferenceNodes(child, referenceNodes);\n        break;\n      case \"MarkoScriptlet\":\n        for (const statement of child.body) {\n          referenceNodes.push(statement);\n        }\n        break;\n    }\n  }\n  return referenceNodes;\n}\nfunction getScopeAccessorLiteral(binding, includeId) {\n  if (isOptimize()) {\n    return import_compiler22.types.numericLiteral(binding.id);\n  }\n  return import_compiler22.types.stringLiteral(\n    binding.name + (includeId || binding.type === 0 /* dom */ ? `/${binding.id}` : \"\")\n  );\n}\nfunction getScopeAccessor(binding, includeId) {\n  if (isOptimize()) {\n    return binding.id + \"\";\n  }\n  return binding.name + (includeId || binding.type === 0 /* dom */ ? `/${binding.id}` : \"\");\n}\nfunction getSectionScopeAccessor(section) {\n  return section.sectionAccessor ? getScopeAccessor(section.sectionAccessor.binding) + section.sectionAccessor.suffix : section.id + \"?\" /* Dynamic */;\n}\nfunction getSectionScopeAccessorLiteral(section) {\n  const accessor = getSectionScopeAccessor(section);\n  return accessor ? typeof accessor === \"number\" ? import_compiler22.types.numericLiteral(accessor) : import_compiler22.types.stringLiteral(accessor) : void 0;\n}\nfunction getReadReplacement(node) {\n  const { extra } = node;\n  if (!extra) return;\n  let { binding, read } = extra;\n  let replacement;\n  if (read) {\n    if (read.props === void 0) {\n      binding = read.binding;\n      read = void 0;\n    } else {\n      binding = void 0;\n    }\n  }\n  if (binding) {\n    if (node.type === \"Identifier\") {\n      if (binding.type === 5 /* hoist */) {\n        replacement = node.extra?.[kIsInvoked] ? import_compiler22.types.callExpression(getHoistFunctionIdentifier(binding), [\n          getScopeExpression(node.extra.section, binding.section)\n        ]) : import_compiler22.types.identifier(getScopeAccessor(binding));\n      } else if (binding.name !== node.name) {\n        node.name = binding.name;\n      }\n    } else {\n      replacement = import_compiler22.types.identifier(binding.name);\n    }\n  } else if (read) {\n    replacement = toMemberExpression(\n      import_compiler22.types.identifier(read.binding.name),\n      Array.isArray(read.props) ? read.props[0] : read.props\n    );\n    if (Array.isArray(read.props)) {\n      for (let i = 1; i < read.props.length; i++) {\n        replacement = toMemberExpression(replacement, read.props[i]);\n      }\n    }\n  }\n  return replacement && withPreviousLocation(replacement, node);\n}\nfunction pruneBinding(bindings, binding) {\n  let shouldPrune = !binding.downstreamExpressions.size;\n  for (const alias of binding.aliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.aliases.delete(alias);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  for (const [key, alias] of binding.propertyAliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.propertyAliases.delete(key);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  if (shouldPrune) {\n    bindings.delete(binding);\n  }\n  return shouldPrune;\n}\nfunction resolveReferencedBindings(expr, reads, intersectionsBySection) {\n  let referencedBindings;\n  if (Array.isArray(reads)) {\n    for (const read of reads) {\n      let { binding } = read;\n      if (read.node) {\n        const exprReference = (read.node.extra ??= {}).read ??= resolveExpressionReference(reads, binding, void 0);\n        ({ binding } = (read.node.extra ??= {}).read = exprReference);\n      }\n      referencedBindings = bindingUtil.add(referencedBindings, binding);\n    }\n  } else if (reads) {\n    if (reads.node) {\n      (reads.node.extra ??= {}).read = createRead(reads.binding, void 0);\n    }\n    referencedBindings = reads.binding;\n  }\n  if (Array.isArray(referencedBindings)) {\n    const intersections = intersectionsBySection.get(expr.section) || [];\n    const intersection = findSorted(\n      compareIntersections,\n      intersections,\n      referencedBindings\n    );\n    if (intersection) {\n      referencedBindings = intersection;\n    } else {\n      intersectionsBySection.set(\n        expr.section,\n        addSorted(compareIntersections, intersections, referencedBindings)\n      );\n    }\n  }\n  return referencedBindings;\n}\nfunction resolveExpressionReference(reads, readBinding, readProps) {\n  const { upstreamAlias } = readBinding;\n  if (upstreamAlias && Array.isArray(reads)) {\n    const prop = getCanonicalProperty(readBinding);\n    const aliasProps = prop === void 0 ? readProps : push(readProps, prop);\n    for (const { binding } of reads) {\n      if (binding !== readBinding) {\n        let alias = upstreamAlias;\n        while (alias) {\n          if (binding === alias) {\n            return resolveExpressionReference(reads, alias, aliasProps);\n          }\n          alias = alias.upstreamAlias;\n        }\n      }\n    }\n  }\n  return createRead(readBinding, readProps);\n}\nfunction getCanonicalProperty(binding) {\n  return binding.property ?? binding.upstreamAlias?.property;\n}\nfunction createRead(binding, props) {\n  return { binding, props };\n}\nfunction getMemberExpressionPropString(expr) {\n  switch (expr.property.type) {\n    case \"StringLiteral\":\n      return expr.property.value;\n    case \"NumericLiteral\":\n      return \"\" + expr.property.value;\n    case \"Identifier\":\n      if (expr.computed) return;\n      return expr.property.name;\n  }\n}\nfunction isEventOrChangeHandler(prop) {\n  return /^on[-A-Z][a-zA-Z0-9_$]|[a-zA-Z_$][a-zA-Z0-9_$]*Change$/.test(prop);\n}\nfunction isReferencedExtra(extra) {\n  return !!(extra && !extra.pruned && extra.section);\n}\nfunction isAssignedBindingExtra(extra) {\n  return isReferencedExtra(extra) && extra.assignment !== void 0;\n}\nfunction isRegisteredFnExtra(extra) {\n  return isReferencedExtra(extra) && extra.registerId !== void 0;\n}\n\n// src/translator/util/is-stateful.ts\nfunction isStatefulReferences(referencedBindings) {\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        if (isStatefulBinding(ref)) {\n          return true;\n        }\n      }\n    } else {\n      return isStatefulBinding(referencedBindings);\n    }\n  }\n  return false;\n}\nfunction isStatefulBinding(binding) {\n  switch (binding.type) {\n    case 1 /* let */:\n    case 2 /* input */:\n      return true;\n    default:\n      return binding.upstreamAlias ? isStatefulBinding(binding.upstreamAlias) : !binding.upstreamExpression || isStatefulReferences(binding.upstreamExpression.referencedBindings);\n  }\n}\n\n// src/translator/core/await.ts\nvar await_default = {\n  analyze(tag) {\n    (0, import_babel_utils12.assertNoVar)(tag);\n    (0, import_babel_utils12.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    (0, import_babel_utils12.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler23.types.isMarkoAttribute(valueAttr) || valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports the `value` attribute.\"\n      );\n    }\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires body content.\");\n    }\n    if (node.body.params.length && (node.body.params.length > 1 || import_compiler23.types.isSpreadElement(node.body.params[0]))) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports a single parameter.\"\n      );\n    }\n    getOrCreateSection(tag);\n    trackParamsReferences(\n      tag.get(\"body\"),\n      4 /* derived */,\n      void 0,\n      evaluate(valueAttr.value)\n    );\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const { node } = tag;\n        const [valueAttr] = node.attributes;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isStatefulReferences(valueAttr.extra?.referencedBindings) || checkStatefulClosures(bodySection, true)) {\n          setForceResumeScope(bodySection);\n        }\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.replaceWith(\n          import_compiler23.types.expressionStatement(\n            callRuntime(\n              \"fork\",\n              valueAttr.value,\n              import_compiler23.types.arrowFunctionExpression(\n                node.body.params,\n                toFirstExpressionOrBlock(node.body.body)\n              )\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to consume asynchronous an data.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#await\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/await.d.marko\"\n};\n\n// src/translator/core/client.ts\nvar import_compiler24 = require(\"@marko/compiler\");\nvar import_babel_utils13 = require(\"@marko/compiler/babel-utils\");\nvar client_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^client\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils13.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler24.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler24.types.markoScriptlet(body, true, \"client\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"client <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the client.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#client-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/const.ts\nvar import_compiler26 = require(\"@marko/compiler\");\nvar import_babel_utils14 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/translate-var.ts\nvar import_compiler25 = require(\"@marko/compiler\");\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.insertBefore(\n    import_compiler25.types.variableDeclaration(kind, [import_compiler25.types.variableDeclarator(tagVar, initialValue)])\n  );\n}\n\n// src/translator/core/const.ts\nvar const_default = {\n  analyze(tag) {\n    (0, import_babel_utils14.assertNoArgs)(tag);\n    (0, import_babel_utils14.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a tag variable.\");\n    }\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler26.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `const` tag only supports the `value` attribute.\"\n      );\n    }\n    const upstreamAlias = import_compiler26.types.isIdentifier(valueAttr.value) ? tag.scope.getBinding(valueAttr.value.name)?.identifier.extra?.binding : void 0;\n    trackVarReferences(\n      tag,\n      4 /* derived */,\n      upstreamAlias,\n      evaluate(valueAttr.value)\n      // TODO could perform a more extensive \"nullable\" check.\n    );\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      const { value } = valueAttr;\n      if (isOutputDOM()) {\n        const section = getSection(tag);\n        const varBinding = node.var.extra?.binding;\n        if (varBinding && !varBinding.upstreamAlias) {\n          const derivation = initValue(varBinding);\n          addValue(section, value.extra?.referencedBindings, derivation, value);\n        }\n      } else {\n        translateVar(tag, value);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/const.d.marko\"\n};\n\n// src/translator/core/debug.ts\nvar import_compiler27 = require(\"@marko/compiler\");\nvar import_babel_utils15 = require(\"@marko/compiler/babel-utils\");\nvar debug_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils15.assertNoVar)(tag);\n    (0, import_babel_utils15.assertNoArgs)(tag);\n    (0, import_babel_utils15.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (tag.node.attributes.length > 1 || tag.node.attributes.length === 1 && (!import_compiler27.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\")) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `debug` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const referencedBindings = valueAttr?.value.extra?.referencedBindings;\n      const statement = withPreviousLocation(import_compiler27.types.debuggerStatement(), tag.node);\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Debug on value change.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#debug\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/debug.d.marko\"\n};\n\n// src/translator/core/define.ts\nvar import_compiler33 = require(\"@marko/compiler\");\nvar import_babel_utils21 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/nested-attribute-tags.ts\nvar import_compiler28 = require(\"@marko/compiler\");\nvar import_babel_utils16 = require(\"@marko/compiler/babel-utils\");\nvar attrTagToIdentifierLookup = /* @__PURE__ */ new WeakMap();\nfunction getAttrTagIdentifier(meta) {\n  let name2 = attrTagToIdentifierLookup.get(meta);\n  if (!name2) {\n    name2 = currentProgramPath.scope.generateUid(meta.name);\n    attrTagToIdentifierLookup.set(meta, name2);\n  }\n  return import_compiler28.types.identifier(name2);\n}\nfunction analyzeAttributeTags(tag) {\n  if (tag.node.extra?.attributeTags) return tag.node.extra.attributeTags;\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  if (!attrTags2.length) return;\n  const tagExtra = tag.node.extra ??= {};\n  const lookup = tagExtra.attributeTags = {};\n  const attrTagNodesByName = {};\n  const sampleAttrTagsForControlFlow = /* @__PURE__ */ new Map();\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const name2 = getTagName(child);\n        lookup[name2] ||= createAttrTagMeta(name2, [name2]);\n        (attrTagNodesByName[name2] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        const isRepeated = (0, import_babel_utils16.isLoopTag)(child);\n        let curGroup;\n        for (const name2 of crawlAttrTags(child, attrTagNodesByName)) {\n          const oldMeta = lookup[name2];\n          if (oldMeta) {\n            if (!curGroup) {\n              curGroup = oldMeta.group;\n            } else if (curGroup !== oldMeta.group) {\n              for (const name3 of oldMeta.group) {\n                lookup[name3].group = curGroup;\n                curGroup.push(name3);\n              }\n            }\n          }\n          let attrTagMeta = lookup[name2];\n          if (!attrTagMeta) {\n            attrTagMeta = lookup[name2] = createAttrTagMeta(name2, []);\n            curGroup = attrTagMeta.group;\n            curGroup.push(name2);\n          }\n          attrTagMeta.dynamic = true;\n          if (isRepeated) {\n            attrTagMeta.repeated = true;\n          }\n          sampleAttrTagsForControlFlow.set(child, name2);\n        }\n      }\n    }\n  }\n  for (const [controlFlowTag, sampleAttrName] of sampleAttrTagsForControlFlow) {\n    (controlFlowTag.node.extra ??= {}).attributeTagGroup = lookup[sampleAttrName].group;\n  }\n  for (const name2 in attrTagNodesByName) {\n    const attrTagMeta = lookup[name2];\n    if (!attrTagMeta.repeated) {\n      const attrTagNodes = attrTagNodesByName[name2];\n      if (attrTagNodes.length > 1) {\n        attrTagMeta.repeated = !attrTagMeta.dynamic || hasRepeatedDynamicAttrTags(attrTagNodes);\n      }\n    }\n  }\n  return lookup;\n}\nfunction createAttrTagMeta(name2, group) {\n  return {\n    name: name2.slice(1),\n    dynamic: false,\n    repeated: false,\n    group\n  };\n}\nfunction crawlAttrTags(tag, attrTagNodesByName, attrTagNames = /* @__PURE__ */ new Set()) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const tagName = getTagName(child);\n        attrTagNames.add(tagName);\n        (attrTagNodesByName[tagName] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        crawlAttrTags(child, attrTagNodesByName, attrTagNames);\n      }\n    }\n  }\n  return attrTagNames;\n}\nfunction hasRepeatedDynamicAttrTags(attrTags2) {\n  let conditionRoot;\n  const seenBranches = /* @__PURE__ */ new Set();\n  for (const attrTag2 of attrTags2) {\n    const parentTag = getParentTag(attrTag2);\n    if (seenBranches.has(parentTag) || !isConditionTag(parentTag)) {\n      return true;\n    }\n    const curConditionRoot = getConditionRoot(parentTag);\n    if (curConditionRoot && curConditionRoot !== (conditionRoot ||= curConditionRoot)) {\n      return true;\n    }\n    seenBranches.add(parentTag);\n  }\n  return false;\n}\nfunction getConditionRoot(tag) {\n  if (getTagName(tag) === \"if\") return tag;\n  let prev = tag.getPrevSibling();\n  while (prev.node) {\n    if (prev.isMarkoTag() && getTagName(prev) === \"if\") {\n      return prev;\n    }\n    prev = prev.getPrevSibling();\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar import_compiler32 = require(\"@marko/compiler\");\nvar import_babel_utils20 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/for.ts\nvar import_compiler31 = require(\"@marko/compiler\");\nvar import_babel_utils19 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-only-child-in-parent.ts\nvar import_compiler30 = require(\"@marko/compiler\");\nvar import_babel_utils18 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/native-tag.ts\nvar import_compiler29 = require(\"@marko/compiler\");\nvar import_babel_utils17 = require(\"@marko/compiler/babel-utils\");\nvar kNativeTagBinding = Symbol(\"native tag binding\");\nvar kSerializeMarker = Symbol(\"serialize marker\");\nvar kGetterId = Symbol(\"node getter id\");\nvar htmlSelectArgs = /* @__PURE__ */ new WeakMap();\nfunction assertExclusiveControllableGroups(tag, attrs2) {\n  const exclusiveGroups = [\n    attrs2.open || attrs2.openChange,\n    attrs2.checked || attrs2.checkedChange,\n    attrs2.checkedValue || attrs2.checkedValueChange,\n    attrs2.valueChange\n  ].filter(Boolean);\n  if (exclusiveGroups.length > 1) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The attributes ${exclusiveGroups.map((attr2) => `\"${attr2.name}\"`).join(\", \")} are mutually exclusive.`\n    );\n  }\n}\nfunction getRelatedControllable(tagName, attrs2) {\n  switch (tagName) {\n    case \"input\":\n      if (attrs2.checked || attrs2.checkedChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_checked\",\n          attrs: [attrs2.checked, attrs2.checkedChange]\n        };\n      }\n      if (attrs2.checkedValue || attrs2.checkedValueChange) {\n        return {\n          special: true,\n          helper: \"controllable_input_checkedValue\",\n          attrs: [attrs2.checkedValue, attrs2.checkedValueChange, attrs2.value]\n        };\n      }\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"select\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_select_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"textarea\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_textarea_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"details\":\n    case \"dialog\":\n      if (attrs2.open || attrs2.openChange) {\n        return {\n          special: false,\n          helper: \"controllable_detailsOrDialog_open\",\n          attrs: [attrs2.open, attrs2.openChange]\n        };\n      }\n      break;\n  }\n}\nvar native_tag_default = {\n  transform: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      if (tagName === \"textarea\" && tag.node.body.body.length) {\n        const parts = [];\n        for (const child of tag.node.body.body) {\n          if (child.type === \"MarkoText\" || child.type === \"MarkoPlaceholder\" && child.escape) {\n            parts.push(child.value);\n          } else {\n            throw tag.hub.file.hub.buildError(\n              child,\n              \"Unexpected content in textarea, only text and placeholders are supported.\",\n              SyntaxError\n            );\n          }\n        }\n        tag.node.attributes.push(\n          import_compiler29.types.markoAttribute(\n            \"value\",\n            normalizeStringExpression(parts) || buildUndefined()\n          )\n        );\n        tag.node.body.body = [];\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils17.assertNoArgs)(tag);\n      (0, import_babel_utils17.assertNoParams)(tag);\n      (0, import_babel_utils17.assertNoAttributeTags)(tag);\n      const { node } = tag;\n      if (node.var && !import_compiler29.types.isIdentifier(node.var)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"Tag variables on native elements cannot be destructured.\"\n        );\n      }\n      const tagName = getTagName(tag);\n      const section = getOrCreateSection(tag);\n      let hasEventHandlers = false;\n      let hasDynamicAttributes = false;\n      const seen = {};\n      const { attributes } = tag.node;\n      let relatedControllable;\n      let spreadReferenceNodes;\n      for (let i = attributes.length; i--; ) {\n        const attr2 = attributes[i];\n        if (import_compiler29.types.isMarkoAttribute(attr2)) {\n          if (seen[attr2.name]) {\n            dropReferences(attr2.value);\n            continue;\n          }\n          seen[attr2.name] = attr2;\n          if (isEventHandler(attr2.name) || isChangeHandler(attr2.name)) {\n            (attr2.value.extra ??= {}).isEffect = true;\n            hasEventHandlers = true;\n          } else if (!evaluate(attr2.value).confident) {\n            hasDynamicAttributes = true;\n          }\n        } else if (import_compiler29.types.isMarkoSpreadAttribute(attr2)) {\n          hasEventHandlers = true;\n          hasDynamicAttributes = true;\n          (attr2.value.extra ??= {}).isEffect = true;\n        }\n        if (spreadReferenceNodes) {\n          spreadReferenceNodes.push(attr2.value);\n        } else if (import_compiler29.types.isMarkoSpreadAttribute(attr2)) {\n          spreadReferenceNodes = [attr2.value];\n          relatedControllable = getRelatedControllable(tagName, seen);\n        }\n      }\n      assertExclusiveControllableGroups(tag, seen);\n      if (spreadReferenceNodes) {\n        if (relatedControllable && !relatedControllable.attrs.every(Boolean)) {\n          for (const attr2 of relatedControllable.attrs) {\n            if (attr2) {\n              spreadReferenceNodes.push(attr2.value);\n            }\n          }\n          relatedControllable = void 0;\n        }\n        mergeReferences(section, tag.node, spreadReferenceNodes);\n      } else {\n        relatedControllable = getRelatedControllable(tagName, seen);\n      }\n      if (relatedControllable) {\n        mergeReferences(\n          section,\n          relatedControllable.attrs.find(Boolean).value,\n          relatedControllable.attrs.map((it) => it?.value)\n        );\n      }\n      if (node.var || hasEventHandlers || hasDynamicAttributes) {\n        currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n        const tagName2 = node.name.type === \"StringLiteral\" ? node.name.value : import_compiler29.types.toIdentifier(tag.get(\"name\"));\n        const tagExtra = node.extra ??= {};\n        const bindingName = \"#\" + tagName2;\n        if (hasEventHandlers || node.var) {\n          tagExtra[kSerializeMarker] = true;\n        }\n        const tagBinding = tagExtra[kNativeTagBinding] = createBinding(\n          bindingName,\n          0 /* dom */,\n          section\n        );\n        if (node.var) {\n          const varBinding = tag.scope.getBinding(node.var.name);\n          for (const referencePath of varBinding.referencePaths) {\n            const referenceSection = getSection(referencePath);\n            setReferencesScope(referencePath);\n            if (!isSameOrChildSection(section, referenceSection)) {\n              trackHoistedReference(\n                referencePath,\n                tagBinding\n              );\n            } else if (!isInvokedFunction(referencePath)) {\n              tagExtra[kGetterId] ||= getRegisterUID(section, bindingName);\n            }\n          }\n        }\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const name2 = tag.get(\"name\");\n      const tagDef = (0, import_babel_utils17.getTagDef)(tag);\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        const varName = tag.node.var.name;\n        const varBinding = tag.scope.getBinding(varName);\n        const getterId = extra[kGetterId];\n        if (isHTML) {\n          for (const reference of varBinding.referencePaths) {\n            const referenceSection = getSection(reference);\n            if (!reference.node.extra?.hoist) {\n              let currentSection = referenceSection;\n              while (currentSection !== section && currentSection.parent) {\n                setSerializedProperty(\n                  currentSection,\n                  \"_\",\n                  callRuntime(\n                    \"ensureScopeWithId\",\n                    getScopeIdIdentifier(\n                      currentSection = currentSection.parent\n                    )\n                  )\n                );\n              }\n            }\n          }\n          setForceResumeScope(section);\n          translateVar(\n            tag,\n            callRuntime(\n              \"nodeRef\",\n              getterId && getScopeIdIdentifier(section),\n              getterId && import_compiler29.types.stringLiteral(getterId)\n            )\n          );\n        } else {\n          let getterFnIdentifier;\n          if (getterId) {\n            getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n              `get_${varName}`\n            );\n            currentProgramPath.pushContainer(\n              \"body\",\n              import_compiler29.types.variableDeclaration(\"const\", [\n                import_compiler29.types.variableDeclarator(\n                  getterFnIdentifier,\n                  callRuntime(\n                    \"nodeRef\",\n                    import_compiler29.types.stringLiteral(getterId),\n                    import_compiler29.types.stringLiteral(\n                      getScopeAccessorLiteral(nodeRef2).value + \">\" /* Getter */\n                    )\n                  )\n                )\n              ])\n            );\n          }\n          for (const reference of varBinding.referencePaths) {\n            if (!reference.node.extra?.hoistedBinding) {\n              const referenceSection = getSection(reference);\n              if (isInvokedFunction(reference)) {\n                reference.parentPath.replaceWith(\n                  import_compiler29.types.expressionStatement(\n                    createScopeReadExpression(referenceSection, nodeRef2)\n                  )\n                );\n              } else if (getterFnIdentifier) {\n                reference.replaceWith(\n                  import_compiler29.types.callExpression(getterFnIdentifier, [\n                    getScopeExpression(referenceSection, getSection(tag))\n                  ])\n                );\n              } else {\n                reference.replaceWith(\n                  import_compiler29.types.expressionStatement(\n                    import_compiler29.types.memberExpression(\n                      getScopeExpression(section, referenceSection),\n                      import_compiler29.types.stringLiteral(\n                        getScopeAccessorLiteral(nodeRef2).value + \">\" /* Getter */\n                      ),\n                      true\n                    )\n                  )\n                );\n              }\n            }\n          }\n        }\n      }\n      let visitAccessor;\n      if (nodeRef2) {\n        visitAccessor = getScopeAccessorLiteral(nodeRef2);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name2.node}`;\n      const usedAttrs = getUsedAttrs(tagName, tag.node);\n      const { staticAttrs, staticControllable, skipExpression } = usedAttrs;\n      let { spreadExpression } = usedAttrs;\n      if (staticControllable) {\n        const { helper, attrs: attrs2 } = staticControllable;\n        const firstAttr = attrs2.find(Boolean);\n        const referencedBindings = firstAttr.value.extra?.referencedBindings;\n        const values = attrs2.map((attr2) => attr2?.value);\n        if (isHTML) {\n          if (tagName !== \"select\" && tagName !== \"textarea\") {\n            write2`${callRuntime(helper, getScopeIdIdentifier(section), visitAccessor, ...values)}`;\n          }\n          addHTMLEffectCall(section, void 0);\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            import_compiler29.types.expressionStatement(\n              callRuntime(helper, scopeIdentifier, visitAccessor, ...values)\n            )\n          );\n          addStatement(\n            \"effect\",\n            section,\n            void 0,\n            import_compiler29.types.expressionStatement(\n              callRuntime(`${helper}_effect`, scopeIdentifier, visitAccessor)\n            )\n          );\n        }\n      }\n      let writeAtStartOfBody;\n      if (isHTML) {\n        if (tagName === \"select\") {\n          if (staticControllable) {\n            htmlSelectArgs.set(tag.node, {\n              value: staticControllable.attrs[0]?.value || buildUndefined(),\n              valueChange: staticControllable.attrs[1]?.value || buildUndefined()\n            });\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"select_input\");\n            tag.insertBefore(\n              import_compiler29.types.variableDeclaration(\"const\", [\n                import_compiler29.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            htmlSelectArgs.set(tag.node, {\n              value: import_compiler29.types.memberExpression(\n                spreadIdentifier,\n                import_compiler29.types.identifier(\"value\")\n              ),\n              valueChange: import_compiler29.types.memberExpression(\n                spreadIdentifier,\n                import_compiler29.types.identifier(\"valueChange\")\n              )\n            });\n            spreadExpression = spreadIdentifier;\n          }\n        } else if (tagName === \"textarea\") {\n          let value;\n          let valueChange;\n          if (staticControllable) {\n            value = staticControllable.attrs[0]?.value;\n            valueChange = staticControllable.attrs[1]?.value;\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"textarea_input\");\n            tag.insertBefore(\n              import_compiler29.types.variableDeclaration(\"const\", [\n                import_compiler29.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            value = import_compiler29.types.memberExpression(spreadIdentifier, import_compiler29.types.identifier(\"value\"));\n            valueChange = import_compiler29.types.memberExpression(\n              spreadIdentifier,\n              import_compiler29.types.identifier(\"valueChange\")\n            );\n            spreadExpression = spreadIdentifier;\n          }\n          if (value || valueChange) {\n            writeAtStartOfBody = callRuntime(\n              \"controllable_textarea_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              value,\n              valueChange\n            );\n          }\n        }\n      }\n      for (const attr2 of staticAttrs) {\n        const { name: name3, value } = attr2;\n        const { confident, computed } = value.extra || {};\n        const valueReferences = value.extra?.referencedBindings;\n        if (isHTML && tagName === \"option\" && name3 === \"value\") {\n          write2`${callRuntime(\"optionValueAttr\", value)}`;\n          continue;\n        }\n        switch (name3) {\n          case \"class\":\n          case \"style\": {\n            const helper = `${name3}Attr`;\n            if (confident) {\n              write2`${getHTMLRuntime()[helper](computed)}`;\n            } else if (isHTML) {\n              write2`${callRuntime(helper, value)}`;\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler29.types.expressionStatement(\n                  callRuntime(\n                    helper,\n                    import_compiler29.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n          }\n          default:\n            if (confident) {\n              write2`${getHTMLRuntime().attr(name3, computed)}`;\n            } else if (isHTML) {\n              if (isEventHandler(name3)) {\n                addHTMLEffectCall(section, valueReferences);\n              } else {\n                write2`${callRuntime(\"attr\", import_compiler29.types.stringLiteral(name3), value)}`;\n              }\n            } else if (isEventHandler(name3)) {\n              addStatement(\n                \"effect\",\n                section,\n                valueReferences,\n                import_compiler29.types.expressionStatement(\n                  callRuntime(\n                    \"on\",\n                    import_compiler29.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler29.types.stringLiteral(getEventHandlerName(name3)),\n                    value\n                  )\n                )\n              );\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler29.types.expressionStatement(\n                  callRuntime(\n                    \"attr\",\n                    import_compiler29.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler29.types.stringLiteral(name3),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n        }\n      }\n      if (spreadExpression) {\n        if (isHTML) {\n          addHTMLEffectCall(section, extra.referencedBindings);\n          if (skipExpression) {\n            write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          } else {\n            write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          }\n        } else {\n          if (skipExpression) {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler29.types.expressionStatement(\n                callRuntime(\n                  \"partialAttrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression,\n                  skipExpression\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler29.types.expressionStatement(\n                callRuntime(\n                  \"attrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression\n                )\n              )\n            );\n          }\n          addStatement(\n            \"effect\",\n            section,\n            extra.referencedBindings,\n            import_compiler29.types.expressionStatement(\n              callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n            ),\n            false\n          );\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(import_compiler29.types.ifStatement(name2.node, consumeHTML(tag)))[0].skip();\n      }\n      if (writeAtStartOfBody) {\n        write2`${writeAtStartOfBody}`;\n      }\n      enter2(tag);\n    },\n    exit(tag) {\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const openTagOnly = (0, import_babel_utils17.getTagDef)(tag)?.parseOptions?.openTagOnly;\n      const selectArgs = isHTML && htmlSelectArgs.get(tag.node);\n      const tagName = getTagName(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      if (selectArgs) {\n        writeTo(tag)`</${tag.node.name}>`;\n        flushInto(tag);\n        tag.insertBefore(\n          import_compiler29.types.expressionStatement(\n            callRuntime(\n              \"controllable_select_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              selectArgs.value,\n              selectArgs.valueChange,\n              import_compiler29.types.arrowFunctionExpression(\n                [],\n                import_compiler29.types.blockStatement(tag.node.body.body)\n              )\n            )\n          )\n        );\n      } else {\n        tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      }\n      if (!openTagOnly && !selectArgs) {\n        writeTo(\n          tag,\n          isHTML && (tagName === \"html\" || tagName === \"body\")\n        )`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(\n          import_compiler29.types.ifStatement(tag.node.name, consumeHTML(tag))\n        )[0].skip();\n      }\n      if (nodeRef2 && (extra[kSerializeMarker] || extra[kSerializeMarker] === void 0 && (isStatefulReferences(extra.referencedBindings) || tag.node.attributes.some(\n        (attr2) => isStatefulReferences(attr2.value.extra?.referencedBindings)\n      )))) {\n        markNode(tag, nodeRef2);\n      }\n      exit2(tag);\n      tag.remove();\n    }\n  }\n};\nfunction getUsedAttrs(tagName, tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  let staticControllable;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler29.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n        staticControllable = getRelatedControllable(tagName, seen);\n        if (staticControllable && !staticControllable.attrs.every(Boolean)) {\n          for (const attr3 of staticControllable.attrs) {\n            if (attr3) {\n              spreadProps.push(toObjectProperty(attr3.name, attr3.value));\n              maybeStaticAttrs.delete(attr3);\n            }\n          }\n          staticControllable = void 0;\n        }\n      }\n      spreadProps.push(import_compiler29.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  if (!spreadProps) {\n    staticControllable = getRelatedControllable(tagName, seen);\n    if (staticControllable?.special === false && !staticControllable.attrs[1]) {\n      staticControllable = void 0;\n    }\n  }\n  if (staticControllable) {\n    for (const attr2 of staticControllable.attrs) {\n      if (attr2) {\n        maybeStaticAttrs.delete(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    if (staticControllable) {\n      for (const attr2 of staticControllable.attrs) {\n        if (attr2) {\n          (skipProps ||= []).push(\n            toObjectProperty(attr2.name, import_compiler29.types.numericLiteral(1))\n          );\n        }\n      }\n    }\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler29.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler29.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    staticControllable,\n    spreadExpression,\n    skipExpression\n  };\n}\nfunction isChangeHandler(propName) {\n  return /^(?:value|checked(?:Value)?|open)Change/.test(propName);\n}\nfunction buildUndefined() {\n  return import_compiler29.types.unaryExpression(\"void\", import_compiler29.types.numericLiteral(0));\n}\n\n// src/translator/util/is-only-child-in-parent.ts\nvar kOnlyChildInParent = Symbol(\"only child in parent\");\nvar kNodeRef = Symbol(\"potential only child node ref\");\nfunction isOnlyChildInParent(tag, branchSize = 1) {\n  const extra = tag.node.extra;\n  if (extra[kOnlyChildInParent] !== void 0) {\n    return extra[kOnlyChildInParent];\n  }\n  const parentTag = getParentTag(tag);\n  if (parentTag && (0, import_babel_utils18.getTagDef)(parentTag)?.html) {\n    return extra[kOnlyChildInParent] = tag.parent.body.length === branchSize;\n  }\n  return extra[kOnlyChildInParent] = false;\n}\nfunction getOptimizedOnlyChildNodeRef(tag, section, branchSize = 1) {\n  if (isOnlyChildInParent(tag, branchSize)) {\n    const parentTag = getParentTag(tag).node;\n    const parentTagName = parentTag.name?.value;\n    return (parentTag.extra ??= {})[kNativeTagBinding] ??= createBinding(\n      \"#\" + parentTagName,\n      0 /* dom */,\n      section\n    );\n  } else {\n    return (tag.node.extra ??= {})[kNodeRef] ??= createBinding(\n      \"#text\",\n      0 /* dom */,\n      section\n    );\n  }\n}\n\n// src/translator/core/for.ts\nvar for_default = {\n  analyze(tag) {\n    const tagExtra = tag.node.extra ??= {};\n    const isAttrTag = tag.node.body.attributeTags;\n    let allowAttrs;\n    (0, import_babel_utils19.assertNoVar)(tag);\n    (0, import_babel_utils19.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    switch (getForType(tag.node)) {\n      case \"of\":\n        allowAttrs = [\"of\"];\n        break;\n      case \"in\":\n        allowAttrs = [\"in\"];\n        break;\n      case \"to\":\n        allowAttrs = [\"to\", \"from\", \"step\"];\n        break;\n      default:\n        throw tag.buildCodeFrameError(\n          \"Invalid `for` tag, missing an `of=`, `in=`, `to=` attribute.\"\n        );\n    }\n    if (!isAttrTag) {\n      allowAttrs.push(\"by\");\n    }\n    (0, import_babel_utils19.assertAllowedAttributes)(tag, allowAttrs);\n    if (isAttrTag) return;\n    const tagBody = tag.get(\"body\");\n    const bodySection = startSection(tagBody);\n    if (!bodySection) {\n      dropReferences(getAllTagReferenceNodes(tag.node));\n      return;\n    }\n    const section = getOrCreateSection(tag);\n    trackParamsReferences(tagBody, 3 /* param */, void 0, tagExtra);\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    bodySection.sectionAccessor = {\n      binding: getOptimizedOnlyChildNodeRef(tag, section),\n      suffix: \"(\" /* LoopScopeMap */\n    };\n    bodySection.upstreamExpression = tagExtra;\n    bodySection.isBranch = true;\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const isStateful = isStatefulReferences(tagExtra.referencedBindings);\n        const onlyChildInParentOptimization = isOnlyChildInParent(tag);\n        const nodeRef2 = getOptimizedOnlyChildNodeRef(tag, tagSection);\n        const forAttrs = getKnownAttrValues(node);\n        const forType = getForType(node);\n        const params = node.body.params;\n        const statements = [];\n        const bodyStatements = node.body.body;\n        const hasStatefulClosures = checkStatefulClosures(bodySection, true);\n        const hasHoists = bodySection.hoisted || bodySection.isHoistThrough;\n        const singleNodeOptimization = bodySection.content === null || bodySection.content.singleChild && bodySection.content.startType !== 4 /* Text */;\n        let keyExpression;\n        if (isStateful && onlyChildInParentOptimization) {\n          getParentTag(tag).node.extra[kSerializeMarker] = false;\n        }\n        if (isStateful || hasStatefulClosures || hasHoists) {\n          const defaultParamNames = {\n            of: [\"list\", \"index\"],\n            in: [\"key\", \"value\"],\n            to: [\"value\"]\n          }[forType];\n          const defaultByParamIndex = forType === \"of\" ? 1 : 0;\n          const requiredParamsIndex = forAttrs.by ? defaultParamNames.length - 1 : defaultByParamIndex;\n          setForceResumeScope(bodySection);\n          for (let i = 0; i <= requiredParamsIndex; i++) {\n            const existingParam = params[i];\n            if (!existingParam || !import_compiler31.types.isIdentifier(existingParam)) {\n              const id = params[i] = currentProgramPath.scope.generateUidIdentifier(\n                defaultParamNames[i]\n              );\n              if (existingParam) {\n                bodyStatements.unshift(\n                  import_compiler31.types.variableDeclaration(\"let\", [\n                    import_compiler31.types.variableDeclarator(existingParam, id)\n                  ])\n                );\n              }\n            }\n          }\n          if (forAttrs.by) {\n            if (import_compiler31.types.isStringLiteral(forAttrs.by)) {\n              keyExpression = toMemberExpression(\n                params[0],\n                forAttrs.by.value\n              );\n            } else if (import_compiler31.types.isFunction(forAttrs.by)) {\n              const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n              statements.push(\n                import_compiler31.types.variableDeclaration(\"const\", [\n                  import_compiler31.types.variableDeclarator(byIdentifier, forAttrs.by)\n                ])\n              );\n              keyExpression = import_compiler31.types.callExpression(\n                byIdentifier,\n                params\n              );\n            } else {\n              keyExpression = callRuntime(\n                forTypeToHTMLByRuntime(forType),\n                forAttrs.by,\n                ...params\n              );\n            }\n          } else {\n            keyExpression = params[defaultByParamIndex];\n          }\n          const forScopesIdentifier = getScopeIdentifier(bodySection);\n          getHTMLSectionStatements(tagSection).push(\n            import_compiler31.types.variableDeclaration(\"const\", [\n              import_compiler31.types.variableDeclarator(\n                forScopesIdentifier,\n                import_compiler31.types.newExpression(import_compiler31.types.identifier(\"Map\"), [])\n              )\n            ])\n          );\n          if (isStateful || hasStatefulClosures || hasHoists) {\n            bodyStatements.push(\n              import_compiler31.types.expressionStatement(\n                import_compiler31.types.callExpression(\n                  import_compiler31.types.memberExpression(forScopesIdentifier, import_compiler31.types.identifier(\"set\")),\n                  [\n                    keyExpression,\n                    callRuntime(\n                      \"ensureScopeWithId\",\n                      getScopeIdIdentifier(bodySection)\n                    )\n                  ]\n                )\n              )\n            );\n          }\n          setSerializedProperty(\n            tagSection,\n            getScopeAccessor(nodeRef2) + \"(\" /* LoopScopeMap */,\n            import_compiler31.types.conditionalExpression(\n              import_compiler31.types.memberExpression(forScopesIdentifier, import_compiler31.types.identifier(\"size\")),\n              forScopesIdentifier,\n              import_compiler31.types.identifier(\"undefined\")\n            )\n          );\n        }\n        flushInto(tag);\n        setClosureSignalBuilder(tag, () => {\n        });\n        writeHTMLResumeStatements(tagBody);\n        const forTagArgs = getBaseArgsInForTag(forType, forAttrs);\n        const forTagHTMLRuntime = isStateful ? forTypeToHTMLResumeRuntime(forType, singleNodeOptimization) : forTypeToRuntime(forType);\n        forTagArgs.push(\n          import_compiler31.types.arrowFunctionExpression(params, import_compiler31.types.blockStatement(bodyStatements))\n        );\n        if (isStateful) {\n          forTagArgs.push(\n            getScopeIdIdentifier(tagSection),\n            getScopeAccessorLiteral(nodeRef2)\n          );\n          if (onlyChildInParentOptimization) {\n            forTagArgs.push(import_compiler31.types.numericLiteral(1));\n          }\n        }\n        statements.push(\n          import_compiler31.types.expressionStatement(callRuntime(forTagHTMLRuntime, ...forTagArgs))\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const { referencedBindings } = tagExtra;\n        const nodeRef2 = getOptimizedOnlyChildNodeRef(tag, tagSection);\n        setClosureSignalBuilder(tag, (closureSignal, render) => {\n          return callRuntime(\n            \"loopClosure\",\n            getScopeAccessorLiteral(\n              closureSignal.referencedBindings\n            ),\n            getScopeAccessorLiteral(nodeRef2),\n            render\n          );\n        });\n        const forType = getForType(node);\n        const signal = getSignal(tagSection, nodeRef2, \"for\");\n        signal.build = () => {\n          return callRuntime(\n            forTypeToDOMRuntime(forType),\n            getScopeAccessorLiteral(nodeRef2),\n            import_compiler31.types.identifier(bodySection.name)\n          );\n        };\n        const params = node.body.params;\n        signal.hasDownstreamIntersections = () => {\n          for (const param of params) {\n            const binding = param.extra?.binding;\n            if (binding) {\n              for (const {\n                referencedBindings: referencedBindings2\n              } of binding.downstreamExpressions) {\n                if (getSignal(\n                  bodySection,\n                  referencedBindings2\n                ).hasDownstreamIntersections()) {\n                  return true;\n                }\n              }\n            }\n          }\n          return false;\n        };\n        const forAttrs = getKnownAttrValues(node);\n        const loopArgs = getBaseArgsInForTag(forType, forAttrs);\n        if (forAttrs.by) {\n          loopArgs.push(forAttrs.by);\n        }\n        addValue(\n          tagSection,\n          referencedBindings,\n          signal,\n          import_compiler31.types.arrayExpression(loopArgs)\n        );\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| to=${2:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nfunction buildForRuntimeCall(type, attrs2, params, statements) {\n  return import_compiler31.types.expressionStatement(\n    callRuntime(\n      forTypeToRuntime(type),\n      ...getBaseArgsInForTag(type, attrs2),\n      import_compiler31.types.arrowFunctionExpression(params, import_compiler31.types.blockStatement(statements))\n    )\n  );\n}\nfunction getForType(tag) {\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      switch (attr2.name) {\n        case \"of\":\n        case \"in\":\n        case \"to\":\n          return attr2.name;\n      }\n    }\n  }\n}\nfunction forTypeToRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOf\";\n    case \"in\":\n      return \"forIn\";\n    case \"to\":\n      return \"forTo\";\n  }\n}\nfunction forTypeToHTMLResumeRuntime(type, singleNodeOptimization) {\n  if (singleNodeOptimization) {\n    switch (type) {\n      case \"of\":\n        return \"resumeSingleNodeForOf\";\n      case \"in\":\n        return \"resumeSingleNodeForIn\";\n      case \"to\":\n        return \"resumeSingleNodeForTo\";\n    }\n  } else {\n    switch (type) {\n      case \"of\":\n        return \"resumeForOf\";\n      case \"in\":\n        return \"resumeForIn\";\n      case \"to\":\n        return \"resumeForTo\";\n    }\n  }\n}\nfunction forTypeToDOMRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"loopOf\";\n    case \"in\":\n      return \"loopIn\";\n    case \"to\":\n      return \"loopTo\";\n  }\n}\nfunction forTypeToHTMLByRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOfBy\";\n    case \"in\":\n      return \"forInBy\";\n    case \"to\":\n      return \"forToBy\";\n  }\n}\nfunction getBaseArgsInForTag(type, attrs2) {\n  switch (type) {\n    case \"in\":\n      return [attrs2.in];\n    case \"of\":\n      return [attrs2.of];\n    case \"to\":\n      return [\n        attrs2.to,\n        attrs2.from || import_compiler31.types.numericLiteral(0),\n        attrs2.step || import_compiler31.types.numericLiteral(1)\n      ];\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar contentProps = /* @__PURE__ */ new WeakSet();\nfunction translateAttrs(tag, templateExports, statements = [], contentKey = \"content\") {\n  const seen = /* @__PURE__ */ new Set();\n  const properties = [];\n  const attrTagLookup = tag.node.extra?.attributeTags;\n  if (attrTagLookup) {\n    for (const name2 in attrTagLookup) {\n      const attrTagMeta = attrTagLookup[name2];\n      if (usesExport(templateExports, attrTagMeta.name)) {\n        seen.add(attrTagMeta.name);\n        if (attrTagMeta.dynamic) {\n          statements.push(\n            import_compiler32.types.variableDeclaration(\"let\", [\n              import_compiler32.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta))\n            ])\n          );\n          properties.push(\n            toObjectProperty(\n              attrTagMeta.name,\n              getAttrTagIdentifier(attrTagMeta)\n            )\n          );\n        }\n      }\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils20.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          if (attrTagMeta.dynamic) {\n            i = addDynamicAttrTagStatements(\n              attrTags2,\n              i,\n              attrTagLookup,\n              statements,\n              templateExports,\n              contentKey\n            );\n          } else {\n            const translatedAttrTag = translateAttrs(\n              child,\n              templateExports?.[attrTagMeta.name]?.props,\n              statements,\n              contentKey\n            );\n            if (attrTagMeta.repeated) {\n              const prevProp = findObjectProperty(attrTagMeta.name, properties);\n              if (prevProp) {\n                prevProp.value = callRuntime(\n                  \"attrTags\",\n                  prevProp.value,\n                  propsToExpression(translatedAttrTag.properties)\n                );\n              } else {\n                properties.push(\n                  toObjectProperty(\n                    attrTagMeta.name,\n                    callRuntime(\n                      \"attrTag\",\n                      propsToExpression(translatedAttrTag.properties)\n                    )\n                  )\n                );\n              }\n            } else {\n              properties.push(\n                toObjectProperty(\n                  attrTagMeta.name,\n                  callRuntime(\n                    \"attrTag\",\n                    propsToExpression(translatedAttrTag.properties)\n                  )\n                )\n              );\n            }\n          }\n        } else {\n          i = addDynamicAttrTagStatements(\n            attrTags2,\n            i,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  if (!seen.has(contentKey) && usesExport(templateExports, contentKey)) {\n    seen.add(contentKey);\n    const contentExpression = buildContent(tag.get(\"body\"));\n    if (contentExpression) {\n      const contentProp = import_compiler32.types.objectProperty(\n        import_compiler32.types.identifier(contentKey),\n        contentExpression\n      );\n      contentProps.add(contentProp);\n      properties.push(contentProp);\n    }\n  }\n  const { attributes } = tag.node;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler32.types.isMarkoSpreadAttribute(attr2)) {\n      properties.push(import_compiler32.types.spreadElement(value));\n    } else if (!seen.has(attr2.name) && usesExport(templateExports, attr2.name)) {\n      seen.add(attr2.name);\n      properties.push(toObjectProperty(attr2.name, value));\n    }\n  }\n  properties.reverse();\n  return { properties, statements };\n}\nfunction getTranslatedBodyContentProperty(props) {\n  for (const prop of props) {\n    if (contentProps.has(prop)) {\n      return prop;\n    }\n  }\n}\nfunction addDynamicAttrTagStatements(attrTags2, index, attrTagLookup, statements, templateExports, contentKey = \"content\") {\n  const tag = attrTags2[index];\n  if (tag.isMarkoTag()) {\n    if ((0, import_babel_utils20.isAttributeTag)(tag)) {\n      const attrTagMeta = attrTagLookup[getTagName(tag)];\n      if (usesExport(templateExports, attrTagMeta.name) && attrTagMeta.dynamic) {\n        const translatedAttrTag = translateAttrs(\n          tag,\n          templateExports?.[attrTagMeta.name]?.props,\n          statements,\n          contentKey\n        );\n        if (attrTagMeta.repeated) {\n          statements.push(\n            import_compiler32.types.expressionStatement(\n              import_compiler32.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTags\",\n                  getAttrTagIdentifier(attrTagMeta),\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        } else {\n          statements.push(\n            import_compiler32.types.expressionStatement(\n              import_compiler32.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTag\",\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        }\n      }\n    } else {\n      switch (getTagName(tag)) {\n        case \"if\":\n          return translateIfAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        case \"for\": {\n          return translateForAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  return index;\n}\nfunction propsToExpression(props) {\n  return props.length === 1 && import_compiler32.types.isSpreadElement(props[0]) ? props[0].argument : import_compiler32.types.objectExpression(props);\n}\nfunction translateForAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const forTag = attrTags2[index];\n  const bodyStatements = [];\n  addAllAttrTagsAsDynamic(\n    forTag,\n    attrTagLookup,\n    bodyStatements,\n    templateExports,\n    contentKey\n  );\n  statements.push(\n    buildForRuntimeCall(\n      getForType(forTag.node),\n      getKnownAttrValues(forTag.node),\n      forTag.node.body.params,\n      bodyStatements\n    )\n  );\n  return index;\n}\nfunction translateIfAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const ifTag = attrTags2[index];\n  const consequentStatements = [];\n  let ifStatement = import_compiler32.types.ifStatement(\n    getConditionTestValue(ifTag),\n    import_compiler32.types.blockStatement(consequentStatements)\n  );\n  statements.push(ifStatement);\n  addAllAttrTagsAsDynamic(\n    ifTag,\n    attrTagLookup,\n    consequentStatements,\n    templateExports,\n    contentKey\n  );\n  let nextIndex = index + 1;\n  while (nextIndex < attrTags2.length) {\n    const nextTag = attrTags2[nextIndex];\n    if (nextTag.isMarkoTag()) {\n      switch (getTagName(nextTag)) {\n        case \"else-if\":\n        case \"else\": {\n          const testValue = getConditionTestValue(nextTag);\n          const alternateStatements = [];\n          addAllAttrTagsAsDynamic(\n            nextTag,\n            attrTagLookup,\n            alternateStatements,\n            templateExports,\n            contentKey\n          );\n          if (testValue) {\n            ifStatement.alternate = ifStatement = import_compiler32.types.ifStatement(\n              testValue,\n              import_compiler32.types.blockStatement(alternateStatements)\n            );\n            nextIndex++;\n            continue;\n          } else {\n            ifStatement.alternate = import_compiler32.types.blockStatement(alternateStatements);\n            break;\n          }\n        }\n      }\n    }\n    break;\n  }\n  return nextIndex - 1;\n}\nfunction addAllAttrTagsAsDynamic(tag, attrTagLookup, statements, templateExports, contentKey) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (let i = 0; i < attrTags2.length; i++) {\n    i = addDynamicAttrTagStatements(\n      attrTags2,\n      i,\n      attrTagLookup,\n      statements,\n      templateExports,\n      contentKey\n    );\n  }\n}\nfunction usesExport(templateExports, name2) {\n  return !templateExports || !!templateExports[name2];\n}\nfunction findObjectProperty(name2, props) {\n  for (const prop of props) {\n    if (prop.type === \"ObjectProperty\") {\n      switch (prop.key.type) {\n        case \"StringLiteral\":\n          if (prop.key.value === name2) {\n            return prop;\n          }\n          break;\n        case \"Identifier\":\n          if (prop.key.name === name2) {\n            return prop;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction getConditionTestValue({\n  node: { attributes }\n}) {\n  return attributes.length === 1 ? attributes[0].value : void 0;\n}\nfunction buildContent(body) {\n  const bodySection = body.node.extra?.section;\n  if (bodySection) {\n    if (isOutputHTML()) {\n      const serialized = isSerializedSection(bodySection);\n      return callRuntime(\n        serialized ? \"registerContent\" : \"createContent\",\n        import_compiler32.types.stringLiteral(getResumeRegisterId(bodySection, \"renderer\")),\n        import_compiler32.types.arrowFunctionExpression(\n          body.node.params,\n          import_compiler32.types.blockStatement(body.node.body)\n        ),\n        serialized ? getScopeIdIdentifier(\n          getSection(\n            getNonAttributeTagParent(\n              body.parentPath\n            )\n          )\n        ) : void 0\n      );\n    } else {\n      return import_compiler32.types.callExpression(import_compiler32.types.identifier(bodySection.name), [\n        scopeIdentifier\n      ]);\n    }\n  }\n}\nfunction getNonAttributeTagParent(tag) {\n  let cur = tag;\n  while ((0, import_babel_utils20.isAttributeTag)(cur) || (0, import_babel_utils20.isTransparentTag)(cur)) {\n    cur = getParentTag(cur);\n  }\n  return cur;\n}\n\n// src/translator/core/define.ts\nvar define_default = {\n  analyze(tag) {\n    (0, import_babel_utils21.assertNoArgs)(tag);\n    if (!tag.node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `define` tag requires a tag variable.\");\n    }\n    const tagBody = tag.get(\"body\");\n    const bodySection = startSection(tagBody);\n    trackVarReferences(tag, 4 /* derived */);\n    if (bodySection) {\n      const varBinding = tag.node.var?.extra?.binding;\n      if (varBinding) {\n        bodySection.downstreamBinding = varBinding.propertyAliases.get(\"content\") || varBinding;\n      }\n    }\n    trackParamsReferences(tagBody, 3 /* param */);\n    analyzeAttributeTags(tag);\n    mergeReferences(\n      getOrCreateSection(tag),\n      tag.node,\n      getAllTagReferenceNodes(tag.node)\n    );\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const translatedAttrs = translateAttrs(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertBefore(translatedAttrs.statements);\n        translateVar(tag, propsToExpression(translatedAttrs.properties));\n      } else {\n        const section = getSection(tag);\n        const referencedBindings = node.extra?.referencedBindings;\n        const derivation = initValue(tag.get(\"var\").node.extra.binding);\n        if (translatedAttrs.statements.length) {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            translatedAttrs.statements\n          );\n        }\n        addValue(\n          section,\n          referencedBindings,\n          derivation,\n          propsToExpression(translatedAttrs.properties)\n        );\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a constant object binding that can be rendered.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#define\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/define.d.marko\"\n};\n\n// src/translator/core/effect.ts\nvar import_compiler34 = require(\"@marko/compiler\");\nvar import_babel_utils22 = require(\"@marko/compiler/babel-utils\");\nvar effect_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils22.assertNoArgs)(tag);\n      (0, import_babel_utils22.assertNoParams)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils22.assertNoAttributeTags)(tag);\n      assertNoSpreadAttrs(tag);\n      (0, import_babel_utils22.assertAllowedAttributes)(tag, [\"value\"]);\n      (0, import_babel_utils22.diagnosticDeprecate)(tag, {\n        label: \"The 'effect' tag has been replaced by the 'script' tag.\",\n        fix() {\n          const { node } = tag;\n          tag.replaceWith(\n            import_compiler34.types.markoTag(\n              withPreviousLocation(import_compiler34.types.stringLiteral(\"script\"), node.name),\n              node.attributes,\n              node.body,\n              node.arguments,\n              node.var,\n              node.attributeTags\n            )\n          );\n        }\n      });\n    }\n  ],\n  attributes: {},\n  types: runtime_info_default.name + \"/tag-types/effect.d.marko\"\n};\n\n// src/translator/core/export.ts\nvar import_babel_utils23 = require(\"@marko/compiler/babel-utils\");\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils23.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/translator/core/html-comment.ts\nvar import_compiler35 = require(\"@marko/compiler\");\nvar import_babel_utils24 = require(\"@marko/compiler/babel-utils\");\nvar kCommentTagBinding = Symbol(\"comment tag binding\");\nvar kGetterId2 = Symbol(\"node getter id\");\nvar html_comment_default = {\n  analyze(tag) {\n    (0, import_babel_utils24.assertNoArgs)(tag);\n    (0, import_babel_utils24.assertNoParams)(tag);\n    (0, import_babel_utils24.assertNoAttributes)(tag);\n    const tagVar = tag.node.var;\n    let needsBinding = false;\n    let needsGetter = false;\n    if (tagVar) {\n      if (!import_compiler35.types.isIdentifier(tagVar)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"The `html-comment` tag variable cannot be destructured.\"\n        );\n      }\n      needsBinding = true;\n      for (const ref of tag.scope.getBinding(tagVar.name).referencePaths) {\n        if (!ref.parentPath?.isCallExpression()) {\n          needsGetter = true;\n          break;\n        }\n      }\n    }\n    const referenceNodes = [];\n    for (const child of tag.get(\"body\").get(\"body\")) {\n      if (child.isMarkoPlaceholder()) {\n        referenceNodes.push(child.node.value);\n        needsBinding = true;\n      } else if (!child.isMarkoText()) {\n        throw child.buildCodeFrameError(\n          \"Invalid child. Only text is allowed inside an html comment.\"\n        );\n      }\n    }\n    if (needsBinding) {\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      if (needsGetter) {\n        tagExtra[kGetterId2] = getRegisterUID(section, \"comment\");\n      }\n      tagExtra[kCommentTagBinding] = createBinding(\n        \"#comment\",\n        0 /* dom */,\n        section\n      );\n      mergeReferences(section, tag.node, referenceNodes);\n    }\n    tag.skip();\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const commentBinding = tagExtra[kCommentTagBinding];\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId2];\n      if (isOutputHTML()) {\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(getSection(tag)),\n            getterId && import_compiler35.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler35.types.variableDeclaration(\"const\", [\n              import_compiler35.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler35.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(commentBinding)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler35.types.expressionStatement(\n                createScopeReadExpression(referenceSection, commentBinding)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler35.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    if (tagExtra[kCommentTagBinding]) {\n      visit(tag, 32 /* Get */);\n    }\n    const write2 = writeTo(tag);\n    enter2(tag);\n    write2`<!--`;\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeXML\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (templateExpressions.length === 0) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          tagExtra.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\n              \"data\",\n              import_compiler35.types.memberExpression(\n                scopeIdentifier,\n                getScopeAccessorLiteral(commentBinding),\n                true\n              ),\n              import_compiler35.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    exit2(tag);\n    write2`-->`;\n    if (commentBinding) {\n      markNode(tag, commentBinding);\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/translator/core/html-script.ts\nvar import_compiler36 = require(\"@marko/compiler\");\nvar import_babel_utils25 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId3 = Symbol(\"node getter id\");\nvar html_script_default = {\n  analyze(tag) {\n    (0, import_babel_utils25.assertNoArgs)(tag);\n    (0, import_babel_utils25.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler36.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler36.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler36.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler36.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-script.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#script\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId3] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId3];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            setSerializedProperty(\n              currentSection,\n              \"_\",\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler36.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler36.types.variableDeclaration(\"const\", [\n              import_compiler36.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler36.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler36.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler36.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<script`;\n    const usedAttrs = getUsedAttrs2(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler36.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler36.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler36.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler36.types.stringLiteral(\"script\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler36.types.stringLiteral(\"script\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler36.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler36.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler36.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler36.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler36.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeScript\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler36.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler36.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler36.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler36.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler36.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler36.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</script>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@async\": \"#html-async\",\n  \"@crossorigin\": \"#html-crossorigin\",\n  \"@defer\": \"#html-defer\",\n  \"@integrity\": \"#html-integrity\",\n  \"@nomodule\": \"#html-nomodule\",\n  \"@nonce\": \"#html-nonce\",\n  \"@referrerpolicy\": \"#html-referrerpolicy\",\n  \"@src\": \"#html-src\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs2(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler36.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler36.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler36.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/html-style.ts\nvar import_compiler37 = require(\"@marko/compiler\");\nvar import_babel_utils26 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId4 = Symbol(\"node getter id\");\nvar html_style_default = {\n  analyze(tag) {\n    (0, import_babel_utils26.assertNoArgs)(tag);\n    (0, import_babel_utils26.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler37.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler37.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler37.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler37.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler37.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler37.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-style.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#style\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId4] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId4];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            setSerializedProperty(\n              currentSection,\n              \"_\",\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler37.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler37.types.variableDeclaration(\"const\", [\n              import_compiler37.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler37.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler37.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler37.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<style`;\n    const usedAttrs = getUsedAttrs3(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler37.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler37.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler37.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler37.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler37.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler37.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler37.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler37.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler37.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler37.types.stringLiteral(\"style\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler37.types.stringLiteral(\"style\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler37.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler37.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler37.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler37.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler37.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeStyle\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler37.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler37.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler37.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler37.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler37.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler37.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler37.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</style>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@disabled\": \"#html-disabled\",\n  \"@media\": \"#html-media\",\n  \"@nonce\": \"#html-nonce\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs3(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler37.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler37.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler37.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler37.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/id.ts\nvar import_compiler38 = require(\"@marko/compiler\");\nvar import_babel_utils27 = require(\"@marko/compiler/babel-utils\");\nvar id_default = {\n  analyze(tag) {\n    (0, import_babel_utils27.assertNoArgs)(tag);\n    (0, import_babel_utils27.assertNoParams)(tag);\n    (0, import_babel_utils27.assertNoAttributes)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils27.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `id` tag requires a tag variable.\");\n    }\n    if (!import_compiler38.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `id` tag cannot be destructured\");\n    }\n    trackVarReferences(tag, 4 /* derived */);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const id = isOutputHTML() ? callRuntime(\"nextTagId\") : callRuntime(\"nextTagId\", scopeIdentifier);\n      if (isOutputHTML()) {\n        tag.replaceWith(\n          import_compiler38.types.variableDeclaration(\"const\", [import_compiler38.types.variableDeclarator(node.var, id)])\n        );\n      } else {\n        const source = initValue(node.var.extra.binding);\n        addValue(getSection(tag), void 0, source, id);\n        tag.remove();\n      }\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/id.d.marko\"\n};\n\n// src/translator/core/if.ts\nvar import_compiler40 = require(\"@marko/compiler\");\nvar import_babel_utils28 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/to-first-statement-or-block.ts\nvar import_compiler39 = require(\"@marko/compiler\");\nfunction toFirstStatementOrBlock(body) {\n  if (Array.isArray(body)) {\n    if (body.length === 1) {\n      return body[0];\n    }\n    return import_compiler39.types.blockStatement(body);\n  }\n  return body;\n}\n\n// src/translator/core/if.ts\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nvar IfTag = {\n  analyze(tag) {\n    assertValidCondition(tag);\n    if (tag.node.body.attributeTags) return;\n    const bodySection = startSection(tag.get(\"body\"));\n    const [isLast, branches] = getBranches(tag, bodySection);\n    if (isLast) {\n      const [rootTag] = branches[0];\n      const rootExtra = rootTag.node.extra ??= {};\n      const mergeReferenceNodes = [];\n      let singleNodeOptimization = true;\n      for (const [branchTag, branchBodySection] of branches) {\n        if (branchBodySection) {\n          branchBodySection.isBranch = true;\n          branchBodySection.upstreamExpression = rootExtra;\n          if (!(branchBodySection.content === null || branchBodySection.content?.singleChild && branchBodySection.content.startType !== 4 /* Text */)) {\n            singleNodeOptimization = false;\n          }\n        }\n        if (branchTag.node.attributes.length) {\n          mergeReferenceNodes.push(branchTag.node.attributes[0].value);\n        }\n      }\n      const section = getOrCreateSection(tag);\n      mergeReferences(section, rootTag.node, mergeReferenceNodes);\n      bodySection.sectionAccessor = {\n        binding: getOptimizedOnlyChildNodeRef(\n          rootTag,\n          section,\n          branches.length\n        ),\n        suffix: \"!\" /* ConditionalScope */\n      };\n      rootExtra.singleNodeOptimization = singleNodeOptimization;\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isRoot(tag) && !isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const section = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const [isLast, branches] = getBranches(tag, bodySection);\n        const [rootTag] = branches[0];\n        const rootExtra = rootTag.node.extra;\n        const isStateful = isStatefulReferences(rootExtra.referencedBindings);\n        const singleNodeOptimization = rootExtra.singleNodeOptimization;\n        const hasStatefulClosures = bodySection && checkStatefulClosures(bodySection, true);\n        const hasHoists = bodySection && (bodySection.hoisted || bodySection.isHoistThrough);\n        if (bodySection) {\n          if (isStateful || hasStatefulClosures || hasHoists) {\n            setForceResumeScope(bodySection);\n          }\n          flushInto(tag);\n          setClosureSignalBuilder(tag, () => {\n          });\n          writeHTMLResumeStatements(tagBody);\n        }\n        if (isLast) {\n          const nodeRef2 = getOptimizedOnlyChildNodeRef(rootTag, section);\n          const onlyChildInParentOptimization = isOnlyChildInParent(rootTag);\n          const nextTag = tag.getNextSibling();\n          const ifScopeIdIdentifier = rootTag.scope.generateUidIdentifier(\"ifScopeId\");\n          const ifBranchIdentifier = rootTag.scope.generateUidIdentifier(\"ifBranch\");\n          let statement;\n          if (isStateful && onlyChildInParentOptimization) {\n            getParentTag(rootTag).node.extra[kSerializeMarker] = false;\n          }\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const bodyStatements = branchTag.node.body.body;\n            if (branchBodySection) {\n              const branchHasStatefulClosures = checkStatefulClosures(\n                branchBodySection,\n                true\n              );\n              if (isStateful) {\n                bodyStatements.push(\n                  import_compiler40.types.expressionStatement(\n                    import_compiler40.types.assignmentExpression(\n                      \"=\",\n                      ifBranchIdentifier,\n                      import_compiler40.types.numericLiteral(i)\n                    )\n                  )\n                );\n              }\n              if (isStateful || branchHasStatefulClosures || hasHoists) {\n                bodyStatements.push(\n                  import_compiler40.types.expressionStatement(\n                    import_compiler40.types.assignmentExpression(\n                      \"=\",\n                      ifScopeIdIdentifier,\n                      getScopeIdIdentifier(branchBodySection)\n                    )\n                  )\n                );\n              }\n            }\n            const [testAttr] = branchTag.node.attributes;\n            const curStatement = toFirstStatementOrBlock(bodyStatements);\n            if (testAttr) {\n              statement = import_compiler40.types.ifStatement(\n                testAttr.value,\n                curStatement,\n                statement\n              );\n            } else {\n              statement = curStatement;\n            }\n            branchTag.remove();\n          }\n          if (isStateful || hasStatefulClosures || hasHoists) {\n            if (isStateful) {\n              setSerializedProperty(\n                section,\n                getScopeAccessor(nodeRef2) + \"(\" /* ConditionalRenderer */,\n                ifBranchIdentifier\n              );\n              const cbNode = import_compiler40.types.arrowFunctionExpression(\n                [],\n                import_compiler40.types.blockStatement([statement])\n              );\n              statement = import_compiler40.types.expressionStatement(\n                singleNodeOptimization ? callRuntime(\n                  \"resumeSingleNodeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2),\n                  onlyChildInParentOptimization && import_compiler40.types.numericLiteral(1)\n                ) : callRuntime(\n                  \"resumeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              );\n            }\n            nextTag.insertBefore(statement);\n            getHTMLSectionStatements(section).push(\n              import_compiler40.types.variableDeclaration(\n                \"let\",\n                [\n                  import_compiler40.types.variableDeclarator(ifScopeIdIdentifier),\n                  isStateful && import_compiler40.types.variableDeclarator(ifBranchIdentifier)\n                ].filter(Boolean)\n              )\n            );\n            setSerializedProperty(\n              section,\n              getScopeAccessor(nodeRef2) + \"!\" /* ConditionalScope */,\n              callRuntime(\"getScopeById\", ifScopeIdIdentifier)\n            );\n          } else {\n            nextTag.insertBefore(statement);\n          }\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n        if (isRoot(tag) && !isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const [isLast, branches] = getBranches(\n          tag,\n          getSectionForBody(tag.get(\"body\"))\n        );\n        if (isLast) {\n          const [rootTag] = branches[0];\n          const section = getSection(rootTag);\n          const rootExtra = branches[0][0].node.extra;\n          const nodeRef2 = getOptimizedOnlyChildNodeRef(rootTag, section);\n          const rendererIdentifiers = [];\n          let expr = import_compiler40.types.numericLiteral(branches.length);\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const [testAttr] = branchTag.node.attributes;\n            const consequent = import_compiler40.types.numericLiteral(branchBodySection ? i : -1);\n            if (branchBodySection) {\n              rendererIdentifiers.push(import_compiler40.types.identifier(branchBodySection.name));\n              setClosureSignalBuilder(branchTag, (closureSignal, render) => {\n                return callRuntime(\n                  \"conditionalClosure\",\n                  getScopeAccessorLiteral(\n                    closureSignal.referencedBindings\n                  ),\n                  getScopeAccessorLiteral(nodeRef2),\n                  import_compiler40.types.numericLiteral(i),\n                  render\n                );\n              });\n            }\n            branchTag.remove();\n            expr = testAttr ? import_compiler40.types.conditionalExpression(testAttr.value, consequent, expr) : consequent;\n          }\n          const signal = getSignal(section, nodeRef2, \"if\");\n          signal.build = () => {\n            return callRuntime(\n              \"conditional\",\n              getScopeAccessorLiteral(nodeRef2),\n              ...rendererIdentifiers.reverse()\n            );\n          };\n          addValue(section, rootExtra.referencedBindings, signal, expr);\n        }\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseIfTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nfunction assertValidCondition(tag) {\n  (0, import_babel_utils28.assertNoVar)(tag);\n  (0, import_babel_utils28.assertNoArgs)(tag);\n  (0, import_babel_utils28.assertNoParams)(tag);\n  assertHasBody(tag);\n  assertNoSpreadAttrs(tag);\n  switch (getTagName(tag)) {\n    case \"if\":\n      assertHasValueAttribute(tag);\n      break;\n    case \"else-if\":\n      assertHasValueAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n    case \"else\":\n      assertOptionalIfAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n  }\n}\nfunction assertHasPrecedingCondition(tag) {\n  let prev = tag.getPrevSibling();\n  while (prev.node && prev.isMarkoComment()) prev = prev.getPrevSibling();\n  if (!isConditionTag(prev) || getTagName(prev) !== \"else\" && !prev.node.attributes.length) {\n    throw tag.buildCodeFrameError(\n      `The \\`<${getTagName(tag)}>\\` must have a preceding \\`<if=cond>\\`, \\`<else-if=cond>\\`, or \\`<else if=cond>\\`.`\n    );\n  }\n}\nfunction assertHasBody(tag) {\n  if (!(tag.node.body.body.length || tag.node.attributeTags.length)) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${getTagName(tag)}\\` tag requires body content.`\n    );\n  }\n}\nfunction assertHasValueAttribute(tag) {\n  const { node } = tag;\n  const [valueAttr] = node.attributes;\n  if (!import_compiler40.types.isMarkoAttribute(valueAttr) || !valueAttr.default) {\n    throw tag.get(\"name\").buildCodeFrameError(`The \\`${getTagName(tag)}\\` tag requires a value.`);\n  }\n  if (node.attributes.length > 1) {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports the \\`value\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction assertOptionalIfAttribute(tag) {\n  const { node } = tag;\n  const [ifAttr] = node.attributes;\n  if (node.attributes.length > 1 || ifAttr && ifAttr.name !== \"if\") {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports an \\`if=\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  let nextTag = tag.getNextSibling();\n  while (nextTag.isMarkoComment()) nextTag = nextTag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push([tag, bodySection]);\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction isRoot(tag) {\n  return isCoreTagName(tag, \"if\");\n}\n\n// src/translator/core/import.ts\nvar import_babel_utils29 = require(\"@marko/compiler/babel-utils\");\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils29.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/translator/core/let.ts\nvar import_compiler41 = require(\"@marko/compiler\");\nvar import_babel_utils30 = require(\"@marko/compiler/babel-utils\");\nvar let_default = {\n  analyze(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    let valueAttr;\n    let valueChangeAttr;\n    for (const attr2 of node.attributes) {\n      if (import_compiler41.types.isMarkoAttribute(attr2)) {\n        if (attr2.name === \"value\") {\n          valueAttr = attr2;\n        } else if (attr2.name === \"valueChange\") {\n          valueChangeAttr = attr2;\n        } else {\n          const start = attr2.loc?.start;\n          const end = attr2.loc?.end;\n          const msg = \"The `let` tag only supports the `value` attribute and its change handler.\";\n          if (start == null || end == null) {\n            throw tag.get(\"name\").buildCodeFrameError(msg);\n          } else {\n            throw tag.hub.buildError(\n              { loc: { start, end } },\n              msg,\n              Error\n            );\n          }\n        }\n      }\n    }\n    (0, import_babel_utils30.assertNoArgs)(tag);\n    (0, import_babel_utils30.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `let` tag requires a tag variable.\");\n    }\n    if (!import_compiler41.types.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `let` tag variable cannot be destructured.\");\n    }\n    if (valueChangeAttr && (0, import_babel_utils30.computeNode)(valueChangeAttr.value)) {\n      throw tag.get(\"attributes\").find((attr2) => attr2.node === valueChangeAttr).get(\"value\").buildCodeFrameError(\n        \"The `let` tag `valueChange` attribute must be a function.\"\n      );\n    }\n    mergeReferences(getOrCreateSection(tag), tag.node, [\n      valueAttr?.value,\n      valueChangeAttr?.value\n    ]);\n    trackVarReferences(tag, 1 /* let */, void 0, tag.node.extra);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const tagVar = node.var;\n      const valueAttr = node.attributes.find(\n        (attr2) => import_compiler41.types.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")\n      ) ?? import_compiler41.types.markoAttribute(\"value\", import_compiler41.types.identifier(\"undefined\"));\n      const valueChangeAttr = node.attributes.find(\n        (attr2) => import_compiler41.types.isMarkoAttribute(attr2) && attr2.name === \"valueChange\"\n      );\n      const section = getSection(tag);\n      const binding = tagVar.extra.binding;\n      if (isOutputDOM()) {\n        const signal = initValue(binding, \"state\");\n        const referencedBindings = tag.node.extra.referencedBindings;\n        addValue(section, referencedBindings, signal, valueAttr.value);\n        if (valueChangeAttr) {\n          signal.extraArgs = [valueChangeAttr.value];\n        }\n        signal.buildAssignment = (valueSection, value) => {\n          const scope = getScopeExpression(valueSection, signal.section);\n          return import_compiler41.types.callExpression(signal.identifier, [scope, value]);\n        };\n      } else {\n        translateVar(tag, valueAttr.value);\n        if (valueChangeAttr) {\n          setSerializedProperty(\n            section,\n            getScopeAccessor(binding) + \"@\" /* TagVariableChange */,\n            valueChangeAttr.value\n          );\n        }\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/let.d.marko\"\n};\n\n// src/translator/core/lifecycle.ts\nvar import_compiler42 = require(\"@marko/compiler\");\nvar import_babel_utils31 = require(\"@marko/compiler/babel-utils\");\nvar kRef = Symbol(\"lifecycle attrs reference\");\nvar lifecycle_default = {\n  analyze(tag) {\n    (0, import_babel_utils31.assertNoArgs)(tag);\n    (0, import_babel_utils31.assertNoVar)(tag);\n    (0, import_babel_utils31.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const tagExtra = node.extra ??= {};\n    const section = getOrCreateSection(tag);\n    tagExtra[kRef] = createBinding(\n      currentProgramPath.scope.generateUid(\"lifecycle\"),\n      4 /* derived */,\n      section,\n      void 0,\n      tagExtra\n    );\n    if (node.attributes.length === 0) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `lifecycle` tag requires at least one attribute.\"\n      );\n    }\n    for (const attr2 of node.attributes) {\n      if (import_compiler42.types.isMarkoSpreadAttribute(attr2)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `lifecycle` tag does not support `...spread` attributes.\"\n        );\n      }\n      (attr2.value.extra ??= {}).isEffect = true;\n    }\n    (currentProgramPath.node.extra ??= {}).isInteractive = true;\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const section = getSection(tag);\n      const tagExtra = node.extra;\n      const { referencedBindings } = tagExtra;\n      const lifecycleAttrsRef = tagExtra[kRef];\n      if (isOutputDOM()) {\n        const translatedAttrs = translateAttrs(tag);\n        translatedAttrs.statements.push(\n          import_compiler42.types.expressionStatement(\n            callRuntime(\n              \"lifecycle\",\n              scopeIdentifier,\n              getScopeAccessorLiteral(lifecycleAttrsRef),\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        );\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          translatedAttrs.statements\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/lifecycle.d.marko\"\n};\n\n// src/translator/core/log.ts\nvar import_compiler43 = require(\"@marko/compiler\");\nvar import_babel_utils32 = require(\"@marko/compiler/babel-utils\");\nvar log_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils32.assertNoArgs)(tag);\n    (0, import_babel_utils32.assertNoVar)(tag);\n    (0, import_babel_utils32.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `log` tag requires a value.\");\n    }\n    if (tag.node.attributes.length > 1 || !import_compiler43.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `log` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      const statement = import_compiler43.types.expressionStatement(\n        import_compiler43.types.callExpression(\n          import_compiler43.types.memberExpression(import_compiler43.types.identifier(\"console\"), import_compiler43.types.identifier(\"log\")),\n          [value]\n        )\n      );\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to log a value to the console.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#log\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/log.d.marko\"\n};\n\n// src/translator/core/script.ts\nvar import_compiler44 = require(\"@marko/compiler\");\nvar import_babel_utils33 = require(\"@marko/compiler/babel-utils\");\nvar htmlScriptTagAlternateMsg = \" For a native html `script` tag use the `html-script` core tag instead.\";\nvar script_default = {\n  parse(tag) {\n    const { node } = tag;\n    const { body } = node.body;\n    if (body.length) {\n      let code = \"\";\n      for (const child of body) {\n        if (child.type !== \"MarkoText\") {\n          throw tag.hub.file.hub.buildError(\n            child,\n            \"Unexpected content in `script` tag. Only javascript and typescript is supported.\" + htmlScriptTagAlternateMsg,\n            SyntaxError\n          );\n        }\n        code += child.value;\n      }\n      const start = body[0]?.start;\n      const end = body[body.length - 1]?.end;\n      const bodyStatements = (0, import_babel_utils33.parseStatements)(tag.hub.file, code, start, end);\n      const valueFn = import_compiler44.types.arrowFunctionExpression(\n        [],\n        import_compiler44.types.blockStatement(bodyStatements),\n        traverseContains(bodyStatements, isAwaitExpression)\n      );\n      node.attributes.push(import_compiler44.types.markoAttribute(\"value\", valueFn));\n      node.body.body = [];\n    }\n  },\n  analyze(tag) {\n    const { node } = tag;\n    (0, import_babel_utils33.assertNoArgs)(tag);\n    (0, import_babel_utils33.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils33.assertNoAttributeTags)(tag);\n    if (node.var) {\n      throw tag.hub.buildError(\n        node.var,\n        \"The `script` tag does not support a tag variable reference.\" + htmlScriptTagAlternateMsg\n      );\n    }\n    let seenValueAttr = false;\n    for (const attr2 of node.attributes) {\n      if (attr2.type === \"MarkoAttribute\" && attr2.name === \"value\") {\n        if (seenValueAttr) {\n          throw tag.hub.buildError(attr2, \"Invalid duplicate value attribute.\");\n        }\n        seenValueAttr = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n        (currentProgramPath.node.extra ??= {}).isInteractive = true;\n      } else {\n        throw tag.hub.buildError(\n          attr2,\n          \"The `script` tag does not support html attributes.\" + htmlScriptTagAlternateMsg\n        );\n      }\n    }\n    if (!seenValueAttr) {\n      dropReferences(getAllTagReferenceNodes(node));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      if (!valueAttr) {\n        tag.remove();\n        return;\n      }\n      const section = getSection(tag);\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      if (isOutputDOM()) {\n        const { value: value2 } = valueAttr;\n        const isFunction2 = import_compiler44.types.isFunctionExpression(value2) || import_compiler44.types.isArrowFunctionExpression(value2);\n        let inlineBody = null;\n        if (isFunction2 && !(value2.async || value2.generator)) {\n          if (import_compiler44.types.isBlockStatement(value2.body)) {\n            let hasDeclaration = false;\n            for (const child of value2.body.body) {\n              if (import_compiler44.types.isDeclaration(child)) {\n                hasDeclaration = true;\n                break;\n              }\n            }\n            inlineBody = hasDeclaration ? value2.body : value2.body.body;\n          } else {\n            inlineBody = import_compiler44.types.expressionStatement(value2.body);\n          }\n        }\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          inlineBody || import_compiler44.types.expressionStatement(\n            import_compiler44.types.callExpression(value2, isFunction2 ? [] : [scopeIdentifier])\n          )\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  html: false,\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#script\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/script.d.marko\"\n};\nfunction isAwaitExpression(node) {\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ObjectMethod\":\n    case \"ClassPrivateMethod\":\n      return skip;\n    case \"AwaitExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/core/server.ts\nvar import_compiler45 = require(\"@marko/compiler\");\nvar import_babel_utils34 = require(\"@marko/compiler/babel-utils\");\nvar server_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^server\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils34.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler45.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler45.types.markoScriptlet(body, true, \"server\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"server <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the server.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#server-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/static.ts\nvar import_compiler46 = require(\"@marko/compiler\");\nvar import_babel_utils35 = require(\"@marko/compiler/babel-utils\");\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils35.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler46.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler46.types.markoScriptlet(body, true));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/style.ts\nvar import_compiler47 = require(\"@marko/compiler\");\nvar import_babel_utils36 = require(\"@marko/compiler/babel-utils\");\nvar import_magic_string = __toESM(require(\"magic-string\"));\nvar import_path3 = __toESM(require(\"path\"));\nvar STYLE_EXT_REG = /^style((?:\\.[a-zA-Z0-9$_-]+)+)?/;\nvar htmlStyleTagAlternateMsg = \" For a native html `style` tag use the `html-style` core tag instead.\";\nvar style_default = {\n  analyze(tag) {\n    (0, import_babel_utils36.assertNoArgs)(tag);\n    (0, import_babel_utils36.assertNoParams)(tag);\n    (0, import_babel_utils36.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1]?.slice(1);\n    for (const attr2 of node.attributes) {\n      if (attr2.start == null && attr2.type === \"MarkoAttribute\" && attr2.name === \"class\" && attr2.value.type === \"StringLiteral\" && attr2.value.value === ext) {\n        continue;\n      }\n      throw tag.hub.buildError(\n        attr2.value,\n        \"The `style` does not support html attributes.\" + htmlStyleTagAlternateMsg\n      );\n    }\n    for (const child of node.body.body) {\n      if (child.type !== \"MarkoText\") {\n        throw tag.hub.buildError(\n          child,\n          \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n        );\n      }\n    }\n    if (node.body.body.length > 1) {\n      throw tag.hub.buildError(\n        node.name,\n        \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n      );\n    }\n  },\n  translate(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const { filename, sourceMaps } = file.opts;\n    let ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1] || \".css\";\n    if (node.var && !/\\.module\\./.test(ext)) {\n      ext = \".module\" + ext;\n    }\n    const markoText = node.body.body[0];\n    const { resolveVirtualDependency } = getMarkoOpts();\n    const start = (0, import_babel_utils36.getStart)(file, markoText);\n    const end = (0, import_babel_utils36.getEnd)(file, markoText);\n    let code = markoText.value;\n    let map;\n    if (resolveVirtualDependency && sourceMaps && start !== null && end !== null) {\n      const magicString = new import_magic_string.default(file.code, { filename });\n      magicString.remove(0, start);\n      magicString.remove(end, file.code.length);\n      map = magicString.generateMap({\n        source: filename,\n        includeContent: true\n      });\n      if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n        code += `\n/*# sourceMappingURL=${map.toUrl()}*/`;\n        if (sourceMaps === \"inline\") {\n          map = void 0;\n        }\n      }\n    }\n    const importPath = resolveVirtualDependency?.(filename, {\n      virtualPath: `./${import_path3.default.basename(filename) + ext}`,\n      code,\n      map\n    });\n    if (importPath) {\n      if (!node.var) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler47.types.importDeclaration([], import_compiler47.types.stringLiteral(importPath))\n        );\n      } else if (import_compiler47.types.isIdentifier(node.var)) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler47.types.importDeclaration(\n            [import_compiler47.types.importDefaultSpecifier(node.var)],\n            import_compiler47.types.stringLiteral(importPath)\n          )\n        );\n      } else {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler47.types.variableDeclaration(\"const\", [\n            import_compiler47.types.variableDeclarator(\n              node.var,\n              (0, import_babel_utils36.importDefault)(file, importPath, \"style\")\n            )\n          ])\n        );\n      }\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    html: false,\n    text: true,\n    rawOpenTag: true,\n    preserveWhitespace: true\n  },\n  attributes: {}\n};\n\n// src/translator/core/try.ts\nvar import_compiler48 = require(\"@marko/compiler\");\nvar import_babel_utils37 = require(\"@marko/compiler/babel-utils\");\nvar try_default = {\n  analyze(tag) {\n    (0, import_babel_utils37.assertNoVar)(tag);\n    (0, import_babel_utils37.assertNoArgs)(tag);\n    (0, import_babel_utils37.assertNoParams)(tag);\n    (0, import_babel_utils37.assertNoAttributes)(tag);\n    assertNoSpreadAttrs(tag);\n    analyzeAttributeTags(tag);\n    const { node } = tag;\n    const section = getOrCreateSection(tag);\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `try` tag requires body content.\");\n    }\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (!getSectionForBody(tag.get(\"body\"))) {\n          tag.remove();\n          return;\n        }\n        setAllSectionsParentIsOwner(tag);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const tagBody = tag.get(\"body\");\n        const translatedAttrs = translateAttrs(tag);\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.insertBefore(translatedAttrs.statements);\n        tag.replaceWith(\n          import_compiler48.types.expressionStatement(\n            callRuntime(\n              \"tryContent\",\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        setAllSectionsParentIsOwner(tag);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Used to capture errors and display placeholders for nested content.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#try\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/try.d.marko\"\n};\nfunction setAllSectionsParentIsOwner(tag) {\n  for (const attrTag2 of tag.get(\"attributeTags\")) {\n    if (attrTag2.isMarkoTag()) {\n      setAllSectionsParentIsOwner(attrTag2);\n    }\n  }\n  const bodySection = getSectionForBody(tag.get(\"body\"));\n  if (bodySection) {\n    setSectionParentIsOwner(bodySection, true);\n  }\n}\n\n// src/translator/core/index.ts\nvar core_default = {\n  taglibId: runtime_info_default.taglibId,\n  \"<attrs>\": attrs_default,\n  \"<await>\": await_default,\n  \"<client>\": client_default,\n  \"<const>\": const_default,\n  \"<debug>\": debug_default,\n  \"<define>\": define_default,\n  \"<effect>\": effect_default,\n  \"<else-if>\": ElseIfTag,\n  \"<else>\": ElseTag,\n  \"<export>\": export_default,\n  \"<for>\": for_default,\n  \"<html-comment>\": html_comment_default,\n  \"<html-script>\": html_script_default,\n  \"<html-style>\": html_style_default,\n  \"<id>\": id_default,\n  \"<if>\": IfTag,\n  \"<import>\": import_default,\n  \"<let>\": let_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<log>\": log_default,\n  \"<return>\": return_default,\n  \"<script>\": script_default,\n  \"<server>\": server_default,\n  \"<static>\": static_default,\n  \"<style>\": style_default,\n  \"<try>\": try_default\n};\n\n// src/translator/visitors/cdata.ts\nvar cdata_default = {\n  translate: {\n    enter(cdata) {\n      throw cdata.buildCodeFrameError(\n        \"CDATA sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/comment.ts\nvar comment_default = {\n  translate: {\n    exit(comment) {\n      comment.remove();\n    }\n  }\n};\n\n// src/translator/visitors/declaration.ts\nvar declaration_default = {\n  translate: {\n    enter(decl) {\n      throw decl.buildCodeFrameError(\n        \"XML declarations sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/document-type.ts\nvar document_type_default = {\n  translate: {\n    exit(documentType) {\n      if (isOutputHTML()) {\n        writeTo(documentType)`<!${documentType.node.value}>`;\n      }\n      documentType.remove();\n    }\n  }\n};\n\n// src/translator/visitors/function.ts\nvar import_compiler49 = require(\"@marko/compiler\");\nvar import_babel_utils38 = require(\"@marko/compiler/babel-utils\");\nvar functionIdsBySection = /* @__PURE__ */ new WeakMap();\nvar function_default = {\n  analyze(fn) {\n    if (fn !== getFnRoot(fn)) {\n      return;\n    }\n    const markoRoot = getMarkoRoot(fn);\n    if (markoRoot && (markoRoot.isMarkoPlaceholder() || markoRoot.isMarkoScriptlet() && markoRoot.node.target === \"server\")) {\n      return;\n    }\n    if (isMarkoAttribute(markoRoot) && ((0, import_babel_utils38.isNativeTag)(markoRoot.parentPath) && /^on[A-Z-]/.test(markoRoot.node.name) || isCoreTagName(markoRoot.parentPath, \"script\") || isCoreTagName(markoRoot.parentPath, \"lifecycle\") || isCoreTagName(markoRoot.parentPath, \"for\"))) {\n      return;\n    }\n    const { node } = fn;\n    const extra = node.extra ??= {};\n    const name2 = extra.name = fn.node.id?.name || (isMarkoAttribute(markoRoot) ? markoRoot.node.default ? import_compiler49.types.toIdentifier(\n      markoRoot.parentPath.has(\"var\") ? markoRoot.parentPath.get(\"var\") : markoRoot.parentPath.get(\"name\")\n    ) : markoRoot.node.name : import_compiler49.types.isVariableDeclarator(fn.parent) && import_compiler49.types.isIdentifier(fn.parent.id) ? fn.parent.id.name : import_compiler49.types.isObjectMethod(node) && import_compiler49.types.isIdentifier(node.key) ? node.key.name : \"anonymous\");\n    const {\n      markoOpts,\n      opts: { filename }\n    } = currentProgramPath.hub.file;\n    const section = getSection(fn);\n    let functionNameCounts = functionIdsBySection.get(section);\n    if (!functionNameCounts) {\n      functionNameCounts = /* @__PURE__ */ new Map();\n      functionIdsBySection.set(section, functionNameCounts);\n    }\n    const index = functionNameCounts.get(name2);\n    let id = \"\";\n    if (index === void 0) {\n      functionNameCounts.set(name2, 0);\n    } else {\n      functionNameCounts.set(name2, index + 1);\n      id = `_${index}`;\n    }\n    extra.section = section;\n    extra.registerId = (0, import_babel_utils38.getTemplateId)(\n      markoOpts,\n      filename,\n      `${section.id}/${name2 + id}`\n    );\n  }\n};\nfunction isMarkoAttribute(path5) {\n  return path5 ? path5.isMarkoAttribute() : false;\n}\n\n// src/translator/visitors/import-declaration.ts\nvar import_babel_utils39 = require(\"@marko/compiler/babel-utils\");\nvar import_declaration_default = {\n  analyze(importDecl) {\n    const { node } = importDecl;\n    const { source } = node;\n    const { value } = source;\n    const tagImport = (0, import_babel_utils39.resolveTagImport)(importDecl, value);\n    if (tagImport) {\n      node.extra ??= {};\n      node.extra.tagImport = tagImport;\n      const tags = importDecl.hub.file.metadata.marko.tags;\n      if (!tags.includes(tagImport)) {\n        tags.push(tagImport);\n      }\n    }\n  },\n  translate: {\n    exit(importDecl) {\n      const { node } = importDecl;\n      const { extra } = node;\n      const tagImport = extra?.tagImport;\n      if (tagImport) {\n        node.source.value = tagImport;\n      }\n    }\n  }\n};\n\n// src/translator/visitors/placeholder.ts\nvar import_compiler50 = require(\"@marko/compiler\");\nvar kBinding = Symbol(\"placeholder node binding\");\nvar kSiblingText = Symbol(\"placeholder has sibling text\");\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(node.value);\n    if (!(confident && (node.escape || isVoid2(computed)))) {\n      (node.extra ??= {})[kBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        getOrCreateSection(placeholder),\n        void 0,\n        node.value.extra\n      );\n      analyzeSiblingText(placeholder);\n    }\n  },\n  translate: {\n    exit(placeholder) {\n      const { node } = placeholder;\n      const { value } = node;\n      const { confident, computed, referencedBindings } = evaluate(value);\n      if (confident && isVoid2(computed)) {\n        placeholder.remove();\n        return;\n      }\n      const isHTML = isOutputHTML();\n      const write2 = writeTo(placeholder);\n      const extra = node.extra || {};\n      const nodeBinding = extra[kBinding];\n      const canWriteHTML = isHTML || confident && node.escape;\n      const method = canWriteHTML ? node.escape ? \"escapeXML\" : \"toString\" : node.escape ? \"data\" : \"html\";\n      const isStateful = isStatefulReferences(referencedBindings);\n      const siblingText = extra[kSiblingText];\n      if (confident && canWriteHTML) {\n        write2`${getHTMLRuntime()[method](computed)}`;\n      } else {\n        if (siblingText === 1 /* Before */) {\n          if (isHTML && isStateful) {\n            write2`<!>`;\n          }\n          visit(placeholder, 37 /* Replace */);\n        } else if (siblingText === 2 /* After */) {\n          visit(placeholder, 37 /* Replace */);\n        } else {\n          if (!isHTML) write2` `;\n          visit(placeholder, 32 /* Get */);\n        }\n        if (isHTML) {\n          write2`${callRuntime(method, value)}`;\n          if (isStateful) {\n            markNode(placeholder, nodeBinding);\n          }\n        } else {\n          addStatement(\n            \"render\",\n            getSection(placeholder),\n            value.extra?.referencedBindings,\n            import_compiler50.types.expressionStatement(\n              method === \"data\" ? callRuntime(\n                \"data\",\n                import_compiler50.types.memberExpression(\n                  scopeIdentifier,\n                  getScopeAccessorLiteral(nodeBinding),\n                  true\n                ),\n                value\n              ) : callRuntime(\n                \"html\",\n                scopeIdentifier,\n                value,\n                getScopeAccessorLiteral(nodeBinding)\n              )\n            )\n          );\n        }\n      }\n      enterShallow(placeholder);\n      placeholder.remove();\n    }\n  }\n};\nfunction analyzeSiblingText(placeholder) {\n  const placeholderExtra = placeholder.node.extra;\n  let prev = placeholder.getPrevSibling();\n  while (prev.node) {\n    const contentType = getNodeContentType(\n      prev,\n      \"endType\"\n    );\n    if (contentType === null) {\n      prev = prev.getPrevSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 1 /* Before */;\n    } else {\n      break;\n    }\n  }\n  if (!prev.node && import_compiler50.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 1 /* Before */;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node) {\n    const contentType = getNodeContentType(\n      next,\n      \"startType\"\n    );\n    if (contentType === null) {\n      next = next.getNextSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 2 /* After */;\n    } else {\n      break;\n    }\n  }\n  if (!next.node && import_compiler50.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 2 /* After */;\n  }\n  return placeholderExtra[kSiblingText] = 0 /* None */;\n}\nfunction isVoid2(value) {\n  return value == null || value === false;\n}\n\n// src/translator/visitors/referenced-identifier.ts\nvar import_compiler51 = require(\"@marko/compiler\");\nvar abortIdsByExpressionForSection = /* @__PURE__ */ new WeakMap();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"out\":\n        if (import_compiler51.types.isMemberExpression(identifier.parent) && import_compiler51.types.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          identifier.parentPath.replaceWith(import_compiler51.types.identifier(\"$global\"));\n        } else {\n          throw identifier.buildCodeFrameError(\n            \"Only `out.global` is supported for compatibility.\"\n          );\n        }\n        break;\n    }\n  },\n  analyze(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    if (name2 === \"$global\") {\n      setReferencesScope(identifier);\n    } else if (name2 === \"$signal\") {\n      const section = getOrCreateSection(identifier);\n      section.hasAbortSignal = true;\n      setReferencesScope(identifier);\n    }\n  },\n  translate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"$global\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler51.types.callExpression(importRuntime(\"$global\"), [])\n          );\n        } else {\n          identifier.replaceWith(\n            import_compiler51.types.memberExpression(scopeIdentifier, import_compiler51.types.identifier(\"$global\"))\n          );\n        }\n        break;\n      case \"$signal\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler51.types.callExpression(\n              import_compiler51.types.arrowFunctionExpression(\n                [],\n                import_compiler51.types.blockStatement([\n                  import_compiler51.types.throwStatement(\n                    import_compiler51.types.newExpression(import_compiler51.types.identifier(\"Error\"), [\n                      import_compiler51.types.stringLiteral(\"Cannot use $signal in a server render.\")\n                    ])\n                  )\n                ])\n              ),\n              []\n            )\n          );\n        } else {\n          const section = getSection(identifier);\n          const exprRoot = getExprRoot(identifier);\n          let abortIdsByExpression = abortIdsByExpressionForSection.get(section);\n          let exprId;\n          if (abortIdsByExpression) {\n            exprId = abortIdsByExpression.get(exprRoot);\n          } else {\n            abortIdsByExpression = /* @__PURE__ */ new Map();\n            abortIdsByExpressionForSection.set(section, abortIdsByExpression);\n          }\n          if (!exprId) {\n            exprId = abortIdsByExpression.size;\n            abortIdsByExpression.set(exprRoot, exprId);\n            addStatement(\n              \"render\",\n              section,\n              exprRoot.node.extra?.referencedBindings,\n              import_compiler51.types.expressionStatement(\n                import_compiler51.types.callExpression(importRuntime(\"resetAbortSignal\"), [\n                  scopeIdentifier,\n                  import_compiler51.types.numericLiteral(exprId)\n                ])\n              )\n            );\n          }\n          identifier.replaceWith(\n            import_compiler51.types.callExpression(importRuntime(\"getAbortSignal\"), [\n              scopeIdentifier,\n              import_compiler51.types.numericLiteral(exprId)\n            ])\n          );\n        }\n    }\n  }\n};\n\n// src/translator/visitors/scriptlet.ts\nvar scriptlet_default = {\n  analyze(scriptlet) {\n    if (!scriptlet.node.static) {\n      throw scriptlet.buildCodeFrameError(\n        \"Scriptlets are not supported when using the tags api.\"\n      );\n    }\n    mergeReferences(\n      getOrCreateSection(scriptlet),\n      scriptlet.node,\n      scriptlet.node.body\n    );\n  },\n  translate: {\n    exit(scriptlet) {\n      const { node } = scriptlet;\n      const isHTML = isOutputHTML();\n      if (node.target && node.target !== (isHTML ? \"server\" : \"client\")) {\n        scriptlet.remove();\n        return;\n      }\n      if (isHTML) {\n      } else {\n        traverseReplace(node, \"body\", replaceRegisteredFunctionNode);\n        scriptlet.replaceWithMultiple(node.body);\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar import_compiler55 = require(\"@marko/compiler\");\nvar import_babel_utils43 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/attribute-tag.ts\nvar import_compiler52 = require(\"@marko/compiler\");\nvar import_babel_utils40 = require(\"@marko/compiler/babel-utils\");\nvar attribute_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils40.assertNoVar)(tag);\n      (0, import_babel_utils40.assertNoArgs)(tag);\n      const body = tag.get(\"body\");\n      startSection(body);\n      trackParamsReferences(body, 3 /* param */);\n      if (!(0, import_babel_utils40.findParentTag)(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/custom-tag.ts\nvar import_compiler53 = require(\"@marko/compiler\");\nvar import_babel_utils41 = require(\"@marko/compiler/babel-utils\");\nvar import_path4 = __toESM(require(\"path\"));\nvar kChildScopeBinding = Symbol(\"custom tag child scope\");\nvar kChildOffsetScopeBinding = Symbol(\"custom tag scope offset\");\nvar kChildAttrExprs = Symbol(\"custom tag child attribute expressions\");\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils41.assertAttributesOrSingleArg)(tag);\n      analyzeAttributeTags(tag);\n      const templateFile = (0, import_babel_utils41.getTagTemplate)(tag);\n      if (!templateFile) {\n        const tagName = getTagName(tag);\n        if (tagName && tag.scope.hasBinding(tagName)) {\n          throw tag.get(\"name\").buildCodeFrameError(\n            `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n          );\n        }\n        throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n      }\n      const section = getOrCreateSection(tag);\n      const tagBody = tag.get(\"body\");\n      const tagExtra = tag.node.extra ??= {};\n      tagExtra[kChildScopeBinding] = createBinding(\n        \"#childScope\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      tagExtra[kChildAttrExprs] = /* @__PURE__ */ new Set([tagExtra]);\n      if (tag.has(\"var\")) {\n        trackVarReferences(tag, 4 /* derived */);\n        tag.node.var.extra.binding.scopeOffset = tagExtra[kChildOffsetScopeBinding] = createBinding(\n          \"#scopeOffset\",\n          0 /* dom */,\n          section,\n          void 0,\n          tagExtra\n        );\n      }\n      startSection(tagBody);\n      trackParamsReferences(tagBody, 3 /* param */);\n      const childFile = (0, import_babel_utils41.loadFileForTag)(tag);\n      if (childFile.opts.filename === tag.hub.file.opts.filename) {\n        mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      } else {\n        const childProgramExtra = childFile.ast.program.extra;\n        analyzeAttrs(\n          tagExtra,\n          section,\n          tag,\n          childProgramExtra?.domExports.input\n        );\n        currentProgramPath.node.extra.hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild || false;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  const tagExtra = node.extra;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (import_compiler53.types.isStringLiteral(node.name)) {\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = isCircularRequest(tag.hub.file, relativePath) ? import_compiler53.types.identifier(getTemplateContentName()) : (0, import_babel_utils41.importDefault)(tag.hub.file, relativePath, getTagName(tag));\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const section = getSection(tag);\n  const inputExport = (0, import_babel_utils41.loadFileForTag)(tag)?.ast.program.extra?.domExports?.input;\n  const { properties, statements } = inputExport ? translateAttrs(tag, inputExport.props) : {\n    properties: [],\n    statements: []\n  };\n  let providesStatefulAttrs = false;\n  for (const expr of tagExtra[kChildAttrExprs]) {\n    if (isReferencedExtra(expr) && isStatefulReferences(expr.referencedBindings)) {\n      providesStatefulAttrs = true;\n      break;\n    }\n  }\n  if (providesStatefulAttrs || tagVar) {\n    const childScopeBinding = tagExtra[kChildScopeBinding];\n    const peekScopeId = tag.scope.generateUidIdentifier(\n      childScopeBinding?.name\n    );\n    tag.insertBefore(\n      import_compiler53.types.variableDeclaration(\"const\", [\n        import_compiler53.types.variableDeclarator(peekScopeId, callRuntime(\"peekNextScope\"))\n      ])\n    );\n    setSerializedProperty(\n      section,\n      getScopeAccessor(childScopeBinding),\n      callRuntime(\"writeExistingScope\", peekScopeId)\n    );\n    if (tagVar) {\n      statements.push(\n        import_compiler53.types.expressionStatement(\n          callRuntime(\n            \"setTagVar\",\n            getScopeIdIdentifier(section),\n            getScopeAccessorLiteral(tag.node.extra[kChildOffsetScopeBinding]),\n            peekScopeId,\n            import_compiler53.types.stringLiteral(\n              getResumeRegisterId(\n                section,\n                node.var.extra?.binding,\n                // TODO: node.var is not always an identifier.\n                \"var\"\n              )\n            )\n          )\n        )\n      );\n    }\n  }\n  if (node.extra.tagNameNullable) {\n    const contentProp = getTranslatedBodyContentProperty(properties);\n    let contentId = void 0;\n    if (contentProp) {\n      const contentExpression = contentProp.value;\n      contentProp.value = contentId = tag.scope.generateUidIdentifier(\"content\");\n      const [contentPath] = tag.insertBefore(\n        import_compiler53.types.variableDeclaration(\"const\", [\n          import_compiler53.types.variableDeclarator(\n            contentId,\n            // TODO: only register if needed (child template analysis)\n            contentExpression\n          )\n        ])\n      );\n      contentPath.skip();\n    }\n    let renderTagExpr = callExpression(\n      tagIdentifier,\n      propsToExpression(properties)\n    );\n    if (tagVar) {\n      translateVar(tag, import_compiler53.types.unaryExpression(\"void\", import_compiler53.types.numericLiteral(0)), \"let\");\n      renderTagExpr = import_compiler53.types.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    statements.push(\n      import_compiler53.types.ifStatement(\n        tagIdentifier,\n        import_compiler53.types.expressionStatement(renderTagExpr),\n        contentId && callStatement(contentId)\n      )\n    );\n  } else if (tagVar) {\n    translateVar(\n      tag,\n      callExpression(tagIdentifier, propsToExpression(properties))\n    );\n    setForceResumeScope(section);\n  } else {\n    statements.push(\n      callStatement(tagIdentifier, propsToExpression(properties))\n    );\n  }\n  for (const replacement of tag.replaceWithMultiple(statements)) {\n    replacement.skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const { node } = tag;\n  const extra = node.extra;\n  const childScopeBinding = extra[kChildScopeBinding];\n  const write2 = writeTo(tag);\n  const { file } = tag.hub;\n  const tagName = import_compiler53.types.isIdentifier(node.name) ? node.name.name : import_compiler53.types.isStringLiteral(node.name) ? node.name.value : \"tag\";\n  const relativePath = getTagRelativePath(tag);\n  const childFile = (0, import_babel_utils41.loadFileForTag)(tag);\n  const childExports = childFile.ast.program.extra.domExports;\n  const tagIdentifier = importOrSelfReferenceName(\n    file,\n    relativePath,\n    childExports.setup,\n    tagName\n  );\n  const inputExport = childExports.input;\n  if (inputExport) {\n    writeAttrsToExports(tag, inputExport, `${getTagName(tag) || \"tag\"}_input`, {\n      circular: childFile.opts.filename === file.opts.filename,\n      tagSection,\n      relativePath,\n      childScopeBinding,\n      attrTagCallsByTag: void 0\n    });\n  }\n  write2`${(0, import_babel_utils41.importNamed)(file, relativePath, childExports.template, `${tagName}_template`)}`;\n  injectWalks(\n    tag,\n    (0, import_babel_utils41.importNamed)(file, relativePath, childExports.walks, `${tagName}_walks`)\n  );\n  if (node.var) {\n    const source = initValue(\n      // TODO: support destructuring\n      node.var.extra.binding\n    );\n    source.register = true;\n    source.buildAssignment = (valueSection, value) => {\n      return import_compiler53.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n        createScopeReadExpression(valueSection, childScopeBinding),\n        value\n      ]);\n    };\n    addStatement(\n      \"render\",\n      tagSection,\n      void 0,\n      import_compiler53.types.expressionStatement(\n        callRuntime(\n          \"setTagVar\",\n          scopeIdentifier,\n          getScopeAccessorLiteral(childScopeBinding),\n          source.identifier\n        )\n      )\n    );\n  }\n  addStatement(\n    \"render\",\n    tagSection,\n    void 0,\n    import_compiler53.types.expressionStatement(\n      import_compiler53.types.callExpression(tagIdentifier, [\n        createScopeReadExpression(tagSection, childScopeBinding)\n      ])\n    )\n  );\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  let relativePath;\n  if (import_compiler53.types.isStringLiteral(node.name)) {\n    const template = (0, import_babel_utils41.getTagTemplate)(tag);\n    relativePath = template && (0, import_babel_utils41.resolveRelativePath)(file, template);\n  } else if (node.extra?.tagNameImported) {\n    relativePath = node.extra.tagNameImported;\n  }\n  if (!relativePath) {\n    const tagName = getTagName(tag);\n    if (tagName && tag.scope.hasBinding(tagName)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n      );\n    }\n    throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n  }\n  return relativePath;\n}\nfunction analyzeAttrs(rootTagExtra, section, tag, templateExport) {\n  if (!templateExport) {\n    dropReferences(getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  if (!templateExport.props || tag.node.arguments?.length) {\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  const bodySection = getSectionForBody(tag.get(\"body\"));\n  if (bodySection) {\n    bodySection.downstreamBinding = (templateExport.props.content || templateExport.props).binding;\n  }\n  const attrTagLookup = analyzeAttributeTags(tag);\n  const seen = /* @__PURE__ */ new Set();\n  if (attrTagLookup) {\n    const nodeReferencesByGroup = /* @__PURE__ */ new Map();\n    const analyzeDynamicChildGroup = (group, child) => {\n      const referenceNodes = getAllTagReferenceNodes(child.node);\n      const groupReferences = nodeReferencesByGroup.get(group);\n      if (groupReferences) {\n        groupReferences.referenceNodes = groupReferences.referenceNodes.concat(referenceNodes);\n      } else {\n        nodeReferencesByGroup.set(group, {\n          firstTag: child,\n          referenceNodes\n        });\n      }\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (const child of attrTags2) {\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils41.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExports = templateExport.props[attrTagMeta.name];\n          if (childAttrExports) {\n            if (childAttrExports.props && !attrTagMeta.dynamic) {\n              analyzeAttrs(rootTagExtra, section, child, childAttrExports);\n            } else {\n              analyzeDynamicChildGroup(attrTagMeta.group, child);\n            }\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        } else {\n          const group = child.node.extra.attributeTagGroup;\n          let childUsesGroupProp = false;\n          for (const name2 of group) {\n            if (templateExport.props[attrTagLookup[name2].name]) {\n              childUsesGroupProp = true;\n              break;\n            }\n          }\n          if (childUsesGroupProp) {\n            analyzeDynamicChildGroup(group, child);\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        }\n      }\n    }\n    for (const {\n      firstTag: { node },\n      referenceNodes\n    } of nodeReferencesByGroup.values()) {\n      mergeReferences(section, node, referenceNodes);\n      rootTagExtra[kChildAttrExprs].add(node.extra);\n    }\n  }\n  const { attributes } = tag.node;\n  let spreadReferenceNodes;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler53.types.isMarkoAttribute(attr2)) {\n      if (seen.has(attr2.name) || !templateExport.props[attr2.name]) {\n        dropReferences(attr2.value);\n        continue;\n      }\n      seen.add(attr2.name);\n    }\n    if (spreadReferenceNodes) {\n      spreadReferenceNodes.push(attr2.value);\n    } else if (import_compiler53.types.isMarkoSpreadAttribute(attr2)) {\n      spreadReferenceNodes = [attr2.value];\n    } else {\n      rootTagExtra[kChildAttrExprs].add(attr2.value.extra ??= {});\n    }\n  }\n  if (spreadReferenceNodes) {\n    mergeReferences(section, tag.node, spreadReferenceNodes);\n  }\n}\nfunction writeAttrsToExports(tag, templateExport, importAlias, info) {\n  if (tag.node.arguments?.length) {\n    const [arg] = tag.node.arguments;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    addValue(\n      info.tagSection,\n      // technically this should be `arg.extra?.referencedBindings`\n      // but we should probably ensure all other references are dropped in this case before we do that.\n      tag.node.extra?.referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      import_compiler53.types.isSpreadElement(arg) ? import_compiler53.types.memberExpression(arg.argument, import_compiler53.types.numericLiteral(0), true) : arg,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding)\n    );\n    return;\n  }\n  if (!templateExport.props || info.circular) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    const translatedAttrs = translateAttrs(tag);\n    if (translatedAttrs.statements.length) {\n      addStatement(\n        \"render\",\n        info.tagSection,\n        referencedBindings,\n        translatedAttrs.statements\n      );\n    }\n    let translatedProps = propsToExpression(translatedAttrs.properties);\n    if ((0, import_babel_utils41.isAttributeTag)(tag)) {\n      const attrTagName = getTagName(tag);\n      const parentTag = tag.parentPath;\n      const repeated = analyzeAttributeTags(parentTag)?.[attrTagName]?.repeated;\n      if (repeated) {\n        let attrTagCallsForTag = (info.attrTagCallsByTag ||= /* @__PURE__ */ new Map()).get(\n          parentTag\n        );\n        if (!attrTagCallsForTag) {\n          info.attrTagCallsByTag.set(\n            parentTag,\n            attrTagCallsForTag = /* @__PURE__ */ new Map()\n          );\n        }\n        const attrTagCall = attrTagCallsForTag.get(attrTagName);\n        if (attrTagCall) {\n          attrTagCall.expression = callRuntime(\n            \"attrTags\",\n            attrTagCall.expression,\n            translatedProps\n          );\n          return;\n        } else {\n          attrTagCallsForTag.set(\n            attrTagName,\n            translatedProps = import_compiler53.types.parenthesizedExpression(\n              callRuntime(\"attrTag\", translatedProps)\n            )\n          );\n        }\n      } else {\n        translatedProps = callRuntime(\"attrTag\", translatedProps);\n      }\n    }\n    addValue(\n      info.tagSection,\n      referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      translatedProps,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding)\n    );\n    return;\n  }\n  const seen = /* @__PURE__ */ new Set();\n  const attrTagLookup = analyzeAttributeTags(tag);\n  if (attrTagLookup) {\n    const attrTags2 = tag.get(\"attributeTags\");\n    const statementsByGroup = /* @__PURE__ */ new Map();\n    const translateDynamicAttrTagChildInGroup = (group, index) => {\n      const child = attrTags2[index];\n      let statements = statementsByGroup.get(group)?.statements;\n      if (!statements) {\n        statements = [];\n        statementsByGroup.set(group, {\n          referencedBindings: child.node.extra?.referencedBindings,\n          statements\n        });\n      }\n      return addDynamicAttrTagStatements(\n        attrTags2,\n        index,\n        attrTagLookup,\n        statements,\n        templateExport.props\n      );\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils41.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExport = templateExport.props[attrTagMeta.name];\n          if (childAttrExport) {\n            if (attrTagMeta.dynamic) {\n              i = translateDynamicAttrTagChildInGroup(attrTagMeta.group, i);\n            } else {\n              writeAttrsToExports(\n                child,\n                childAttrExport,\n                `${importAlias}_${attrTagMeta.name}`,\n                info\n              );\n            }\n          }\n        } else if (child.node.extra?.attributeTagGroup) {\n          i = translateDynamicAttrTagChildInGroup(\n            child.node.extra.attributeTagGroup,\n            i\n          );\n        }\n      }\n    }\n    for (const [\n      group,\n      { referencedBindings, statements }\n    ] of statementsByGroup) {\n      const decls = [];\n      for (const name2 of group) {\n        const attrTagMeta = attrTagLookup[name2];\n        const childAttrExports = templateExport.props[attrTagMeta.name];\n        if (!childAttrExports) continue;\n        const attrExportIdentifier = importOrSelfReferenceName(\n          tag.hub.file,\n          info.relativePath,\n          childAttrExports.id,\n          `${importAlias}_${attrTagMeta.name}`\n        );\n        decls.push(import_compiler53.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta)));\n        addValue(\n          info.tagSection,\n          referencedBindings,\n          identifierToSignal(attrExportIdentifier),\n          getAttrTagIdentifier(attrTagMeta),\n          createScopeReadExpression(info.tagSection, info.childScopeBinding)\n        );\n      }\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler53.types.variableDeclaration(\"let\", decls),\n        ...statements\n      ]);\n    }\n  }\n  const bodySection = tag.node.body.extra?.section;\n  if (bodySection && !seen.has(\"content\")) {\n    seen.add(\"content\");\n    if (templateExport.props.content) {\n      const contentExportIdentifier = (0, import_babel_utils41.importNamed)(\n        tag.hub.file,\n        info.relativePath,\n        templateExport.props.content.id,\n        `${importAlias}_content`\n      );\n      addValue(\n        info.tagSection,\n        void 0,\n        // TODO: pretty sure content needs to have the reference group of it's param defaults.\n        identifierToSignal(contentExportIdentifier),\n        import_compiler53.types.callExpression(import_compiler53.types.identifier(bodySection.name), [scopeIdentifier]),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding)\n      );\n    }\n  }\n  const { attributes } = tag.node;\n  const staticAttrs = [];\n  let spreadProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler53.types.isMarkoAttribute(attr2)) {\n      const childAttrExports = templateExport.props[attr2.name];\n      if (!childAttrExports || seen.has(attr2.name)) continue;\n      seen.add(attr2.name);\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n        continue;\n      }\n      staticAttrs.push(attr2);\n    } else if (spreadProps) {\n      spreadProps.push(import_compiler53.types.spreadElement(attr2.value));\n    } else {\n      spreadProps = [import_compiler53.types.spreadElement(attr2.value)];\n    }\n  }\n  for (const attr2 of staticAttrs.reverse()) {\n    const childAttrExports = templateExport.props[attr2.name];\n    const attrExportIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      childAttrExports.id,\n      `${importAlias}_${attr2.name}`\n    );\n    addValue(\n      info.tagSection,\n      attr2.value.extra?.referencedBindings,\n      identifierToSignal(attrExportIdentifier),\n      attr2.value,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding)\n    );\n  }\n  const missing = new Set(Object.keys(templateExport.props));\n  for (const name2 of seen) missing.delete(name2);\n  if (missing.size) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    let getMissingPropValue = buildUndefined2;\n    if (spreadProps) {\n      const spreadId = tag.scope.generateUidIdentifier(`${importAlias}_spread`);\n      spreadProps.reverse();\n      getMissingPropValue = (name2) => toMemberExpression(spreadId, name2);\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler53.types.variableDeclaration(\"const\", [\n          import_compiler53.types.variableDeclarator(spreadId, propsToExpression(spreadProps))\n        ])\n      ]);\n    }\n    for (const name2 of missing) {\n      const childAttrExports = templateExport.props[name2];\n      const attrExportIdentifier = importOrSelfReferenceName(\n        tag.hub.file,\n        info.relativePath,\n        childAttrExports.id,\n        `${importAlias}_${name2}`\n      );\n      addValue(\n        info.tagSection,\n        referencedBindings,\n        identifierToSignal(attrExportIdentifier),\n        getMissingPropValue(name2),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding)\n      );\n    }\n  }\n}\nfunction importOrSelfReferenceName(file, request, name2, nameHint) {\n  if (isCircularRequest(file, request)) {\n    return import_compiler53.types.identifier(name2);\n  }\n  return (0, import_babel_utils41.importNamed)(file, request, name2, nameHint);\n}\nfunction isCircularRequest(file, request) {\n  const { filename } = file.opts;\n  return request === filename || request[0] === \".\" && import_path4.default.resolve(filename, \"..\", request) === filename;\n}\nfunction callStatement(id, ...args) {\n  return import_compiler53.types.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return import_compiler53.types.callExpression(id, args.filter(Boolean));\n}\nfunction identifierToSignal(identifier) {\n  return {\n    identifier,\n    hasDownstreamIntersections: always\n  };\n}\nfunction buildUndefined2() {\n  return import_compiler53.types.unaryExpression(\"void\", import_compiler53.types.numericLiteral(0));\n}\nfunction always() {\n  return true;\n}\n\n// src/translator/visitors/tag/dynamic-tag.ts\nvar import_compiler54 = require(\"@marko/compiler\");\nvar import_babel_utils42 = require(\"@marko/compiler/babel-utils\");\nvar kDOMBinding = Symbol(\"dynamic tag dom binding\");\nvar kChildOffsetScopeBinding2 = Symbol(\"custom tag scope offset\");\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils42.assertAttributesOrArgs)(tag);\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      const tagBody = tag.get(\"body\");\n      tagExtra[kDOMBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      if (tag.has(\"var\")) {\n        trackVarReferences(tag, 4 /* derived */);\n        tag.node.var.extra.binding.scopeOffset = tagExtra[kChildOffsetScopeBinding2] = createBinding(\n          \"#scopeOffset\",\n          0 /* dom */,\n          section,\n          void 0,\n          tagExtra\n        );\n      }\n      startSection(tagBody);\n      trackParamsReferences(tagBody, 3 /* param */);\n      mergeReferences(section, tag.node, [\n        tag.node.name,\n        ...getAllTagReferenceNodes(tag.node)\n      ]);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(\n        tag,\n        tag.node.var ? 49 /* DynamicTagWithVar */ : 37 /* Replace */\n      );\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const tagExtra = node.extra;\n      const nodeRef2 = tagExtra[kDOMBinding];\n      const section = getSection(tag);\n      const isClassAPI = tagExtra.featureType === \"class\";\n      const referencedBindings = tagExtra.referencedBindings;\n      let tagExpression = node.name;\n      if (import_compiler54.types.isStringLiteral(tagExpression)) {\n        tagExpression = (0, import_babel_utils42.importDefault)(\n          tag.hub.file,\n          getTagRelativePath(tag),\n          tagExpression.value\n        );\n      }\n      if (isClassAPI) {\n        if (isOutputHTML()) {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler54.types.expressionStatement(\n              import_compiler54.types.callExpression(\n                (0, import_babel_utils42.importNamed)(tag.hub.file, getCompatRuntimeFile(), \"s\"),\n                [\n                  import_compiler54.types.identifier(tagExpression.name),\n                  import_compiler54.types.stringLiteral((0, import_babel_utils42.loadFileForTag)(tag).metadata.marko.id)\n                ]\n              )\n            )\n          );\n        } else {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler54.types.expressionStatement(\n              callRuntime(\n                \"register\",\n                import_compiler54.types.stringLiteral((0, import_babel_utils42.loadFileForTag)(tag).metadata.marko.id),\n                import_compiler54.types.identifier(tagExpression.name)\n              )\n            )\n          );\n        }\n      }\n      const { properties, statements } = translateAttrs(\n        tag,\n        void 0,\n        void 0,\n        isClassAPI ? \"renderBody\" : \"content\"\n      );\n      const args = [];\n      let hasMultipleArgs = false;\n      if (node.arguments?.length) {\n        args.push(...node.arguments);\n        if (properties.length) {\n          hasMultipleArgs = true;\n          args.push(propsToExpression(properties));\n        } else {\n          hasMultipleArgs = node.arguments.length > 1 || import_compiler54.types.isSpreadElement(node.arguments[0]);\n        }\n      } else {\n        const contentProp = getTranslatedBodyContentProperty(properties);\n        if (contentProp) {\n          properties.splice(properties.indexOf(contentProp), 1);\n          args.push(propsToExpression(properties), contentProp.value);\n        } else {\n          args.push(propsToExpression(properties));\n        }\n      }\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        if (node.var) {\n          if (!hasMultipleArgs && args.length === 1) {\n            args.push(import_compiler54.types.unaryExpression(\"void\", import_compiler54.types.numericLiteral(0)));\n          }\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = hasMultipleArgs ? callRuntime(\n          \"dynamicTagArgs\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          import_compiler54.types.arrayExpression(args)\n        ) : callRuntime(\n          \"dynamicTagInput\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          ...args\n        );\n        statements.push(\n          import_compiler54.types.variableDeclaration(\"const\", [\n            import_compiler54.types.variableDeclarator(\n              dynamicScopeIdentifier,\n              callRuntime(\"peekNextScope\")\n            )\n          ])\n        );\n        if (node.var) {\n          statements.push(\n            import_compiler54.types.variableDeclaration(\"const\", [\n              import_compiler54.types.variableDeclarator(node.var, dynamicTagExpr)\n            ]),\n            import_compiler54.types.expressionStatement(\n              callRuntime(\n                \"setTagVar\",\n                getScopeIdIdentifier(section),\n                getScopeAccessorLiteral(\n                  tag.node.extra[kChildOffsetScopeBinding2]\n                ),\n                dynamicScopeIdentifier,\n                import_compiler54.types.stringLiteral(\n                  getResumeRegisterId(\n                    section,\n                    node.var.extra?.binding,\n                    // TODO: node.var is not always an identifier.\n                    \"var\"\n                  )\n                )\n              )\n            )\n          );\n        } else {\n          statements.push(import_compiler54.types.expressionStatement(dynamicTagExpr));\n        }\n        setSerializedProperty(\n          section,\n          getScopeAccessor(nodeRef2) + \"!\" /* ConditionalScope */,\n          callRuntime(\"writeExistingScope\", dynamicScopeIdentifier)\n        );\n        setSerializedProperty(\n          section,\n          getScopeAccessor(nodeRef2) + \"(\" /* ConditionalRenderer */,\n          callRuntime(\n            \"dynamicTagId\",\n            import_compiler54.types.isIdentifier(tagExpression) ? import_compiler54.types.identifier(tagExpression.name) : tagExpression\n          )\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      } else {\n        const section2 = getSection(tag);\n        const bodySection = getSectionForBody(tag.get(\"body\"));\n        const signal = getSignal(section2, nodeRef2, \"dynamicTag\");\n        let tagVarSignal;\n        if (tag.node.var) {\n          tagVarSignal = initValue(\n            // TODO: support destructuring\n            tag.node.var.extra.binding\n          );\n          tagVarSignal.register = true;\n          tagVarSignal.buildAssignment = (valueSection, value) => {\n            return import_compiler54.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n              import_compiler54.types.memberExpression(\n                getScopeExpression(tagVarSignal.section, valueSection),\n                import_compiler54.types.stringLiteral(\n                  getScopeAccessor(nodeRef2) + \"!\" /* ConditionalScope */\n                ),\n                true\n              ),\n              value\n            ]);\n          };\n        }\n        signal.build = () => {\n          return callRuntime(\n            \"dynamicTag\",\n            getScopeAccessorLiteral(nodeRef2),\n            bodySection && import_compiler54.types.identifier(bodySection.name),\n            tagVarSignal ? import_compiler54.types.arrowFunctionExpression([], tagVarSignal.identifier) : void 0,\n            hasMultipleArgs && import_compiler54.types.numericLiteral(1)\n          );\n        };\n        if (args.length) {\n          const argsOrInput = hasMultipleArgs ? import_compiler54.types.arrayExpression(args) : args[0];\n          if (!import_compiler54.types.isObjectExpression(argsOrInput) || argsOrInput.properties.length) {\n            signal.extraArgs = [\n              import_compiler54.types.arrowFunctionExpression(\n                [],\n                statements.length ? import_compiler54.types.blockStatement(\n                  statements.concat(import_compiler54.types.returnStatement(argsOrInput))\n                ) : argsOrInput\n              )\n            ];\n          }\n        }\n        signal.hasDownstreamIntersections = () => true;\n        addValue(section2, referencedBindings, signal, tagExpression);\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar TAG_NAME_IDENTIFIER_REG = /^[A-Z][a-zA-Z0-9_$]*$/;\nvar BINDING_CHANGE_HANDLER = /* @__PURE__ */ new WeakMap();\nvar tag_default = {\n  transform: {\n    enter(tag) {\n      const { node } = tag;\n      const { name: name2, attributes } = tag.node;\n      let crawl = false;\n      if (import_compiler55.types.isStringLiteral(name2)) {\n        const tagName = name2.value;\n        if (tag.scope.getBinding(tagName) && TAG_NAME_IDENTIFIER_REG.test(tagName)) {\n          node.name = withPreviousLocation(import_compiler55.types.identifier(tagName), name2);\n          crawl = true;\n        }\n      }\n      for (let i = 0; i < attributes.length; i++) {\n        const attr2 = attributes[i];\n        if (import_compiler55.types.isMarkoAttribute(attr2) && attr2.bound) {\n          attr2.bound = false;\n          attributes.splice(++i, 0, getChangeHandler(tag, attr2));\n          crawl = true;\n        }\n      }\n      if (crawl) {\n        tag.scope.crawl();\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils43.getTagDef)(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        native_tag_default.analyze.enter(tag);\n        return;\n      }\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.analyze.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const hook = (0, import_babel_utils43.getTagDef)(tag)?.analyzer?.hook;\n      if (hook) {\n        exit(hook, tag);\n        return;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils43.getTagDef)(tag);\n      const extra = tag.node.extra;\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(\n              `Unsupported arguments on the \\`${attr2.node.name}\\` attribute.`\n            );\n          }\n          if (attr2.node.modifier) {\n            if ((0, import_babel_utils43.isNativeTag)(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(\n                `Unsupported modifier \\`${attr2.node.modifier}\\`.`\n              );\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(\n          import_compiler55.types.variableDeclaration(\"const\", [\n            import_compiler55.types.variableDeclarator(tagNameId, tag.node.name)\n          ])\n        );\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = (0, import_babel_utils43.getTagDef)(tag)?.translator;\n      if (translator) {\n        exit(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\nfunction getChangeHandler(tag, attr2) {\n  const attrName = attr2.name;\n  const changeAttrName = attrName + \"Change\";\n  if (import_compiler55.types.isIdentifier(attr2.value)) {\n    const binding = tag.scope.getBinding(attr2.value.name);\n    if (!binding)\n      return import_compiler55.types.markoAttribute(\n        changeAttrName,\n        buildChangeHandlerFunction(attr2.value)\n      );\n    const existingChangedAttr = BINDING_CHANGE_HANDLER.get(binding.identifier);\n    if (!existingChangedAttr) {\n      const changeHandlerAttr = import_compiler55.types.markoAttribute(\n        changeAttrName,\n        buildChangeHandlerFunction(attr2.value)\n      );\n      BINDING_CHANGE_HANDLER.set(binding.identifier, changeHandlerAttr);\n      return changeHandlerAttr;\n    }\n    if (existingChangedAttr.type === \"Identifier\") {\n      return import_compiler55.types.markoAttribute(\n        changeAttrName,\n        withPreviousLocation(\n          import_compiler55.types.identifier(existingChangedAttr.name),\n          attr2.value\n        )\n      );\n    }\n    const markoRoot = isMarko(binding.path) ? binding.path : getMarkoRoot(binding.path);\n    if (!(markoRoot?.isMarkoTag() || markoRoot?.isMarkoTagBody())) {\n      throw tag.hub.buildError(attr2.value, \"Unable to bind to value.\");\n    }\n    const changeHandlerId = markoRoot.scope.generateUid(changeAttrName);\n    const changeHandlerConst = import_compiler55.types.markoTag(\n      import_compiler55.types.stringLiteral(\"const\"),\n      [import_compiler55.types.markoAttribute(\"value\", existingChangedAttr.value, null, null, true)],\n      import_compiler55.types.markoTagBody([]),\n      null,\n      import_compiler55.types.identifier(changeHandlerId)\n    );\n    BINDING_CHANGE_HANDLER.set(\n      binding.identifier,\n      existingChangedAttr.value = import_compiler55.types.identifier(changeHandlerId)\n    );\n    if (markoRoot.isMarkoTag()) {\n      markoRoot.insertAfter(changeHandlerConst);\n    } else {\n      markoRoot.unshiftContainer(\"body\", changeHandlerConst);\n    }\n    return import_compiler55.types.markoAttribute(\n      changeAttrName,\n      withPreviousLocation(import_compiler55.types.identifier(changeHandlerId), attr2.value)\n    );\n  } else if (import_compiler55.types.isMemberExpression(attr2.value)) {\n    const prop = attr2.value.property;\n    if (!import_compiler55.types.isPrivateName(attr2.value.property)) {\n      return import_compiler55.types.markoAttribute(\n        changeAttrName,\n        import_compiler55.types.memberExpression(\n          import_compiler55.types.cloneNode(attr2.value.object),\n          prop.type === \"Identifier\" ? withPreviousLocation(import_compiler55.types.identifier(prop.name + \"Change\"), prop) : import_compiler55.types.binaryExpression(\n            \"+\",\n            import_compiler55.types.cloneNode(prop),\n            import_compiler55.types.stringLiteral(\"Change\")\n          ),\n          prop.type !== \"Identifier\"\n        )\n      );\n    }\n  }\n  throw tag.hub.buildError(\n    attr2.value,\n    \"Attributes may only be bound to identifiers or member expressions\"\n  );\n}\nfunction buildChangeHandlerFunction(id) {\n  const newId = \"_new_\" + id.name;\n  return import_compiler55.types.arrowFunctionExpression(\n    [withPreviousLocation(import_compiler55.types.identifier(newId), id)],\n    import_compiler55.types.blockStatement([\n      import_compiler55.types.expressionStatement(\n        import_compiler55.types.assignmentExpression(\n          \"=\",\n          withPreviousLocation(import_compiler55.types.identifier(id.name), id),\n          withPreviousLocation(import_compiler55.types.identifier(newId), id)\n        )\n      )\n    ])\n  );\n}\n\n// src/translator/visitors/text.ts\nvar import_compiler56 = require(\"@marko/compiler\");\nvar text_default = {\n  translate: {\n    exit(text) {\n      writeTo(text)`${text.node.value}`;\n      enterShallow(text);\n      text.remove();\n    }\n  }\n};\n\n// src/translator/index.ts\nvar visitors = extractVisitors({\n  Program: program_default,\n  Function: function_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n});\nvar tagDiscoveryDirs = [\"tags\"];\nvar preferAPI = \"tags\";\nvar { transform, analyze, translate } = visitors;\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: visitors.migrate\n    }\n  ]\n];\nfunction getRuntimeEntryFiles(output, optimize) {\n  return [\n    `${runtime_info_default.name}${optimize ? \"\" : \"/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`\n  ];\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyze,\n  getRuntimeEntryFiles,\n  internalEntryBuilder,\n  preferAPI,\n  tagDiscoveryDirs,\n  taglibs,\n  transform,\n  translate\n});\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__toESM","isNodeMode","target","__esModule","value","translator_exports","__export","all","name2","analyze","getRuntimeEntryFiles","internalEntryBuilder","entry_builder_default","preferAPI","tagDiscoveryDirs","taglibs","transform","translate","module","exports","runtime_info_default","name","require","taglibId","import_compiler","import_babel_utils","assertNoSpreadAttrs","tag","attr2","isMarkoSpreadAttribute","buildCodeFrameError","node","assertNoBodyContent","body","length","attrs_default","migrate","assertNoArgs","assertNoParams","assertNoAttributes","assertNoAttributeTags","diagnosticDeprecate","label","fix","tagVar","var","type","remove","constTag","types","markoTag","stringLiteral","markoAttribute","identifier","markoTagBody","replaceWith","attributes","autocomplete","displayText","description","snippet","import_compiler23","import_babel_utils12","import_babel_utils2","evaluate","extra","confident","computed","computeNode","import_compiler22","import_compiler20","import_babel_utils11","import_path2","bindingHasDownstreamExpressions","binding","downstreamExpressions","size","alias","aliases","propertyAliases","values","import_compiler2","import_babel_utils3","kState","Symbol","build","entryFile","state","path","imports","map","it","importDeclaration","init","unshift","importSpecifier","markoOpts","optimize","push","expressionStatement","callExpression","visit","file","visitChild","analyzedTags","metadata","marko","resolveRelativePath","opts","filename","hasInteractiveChild","isInteractive","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","isOptimize","import_compiler4","import_babel_utils4","stringifyClassObject","stringifyStyleObject","test","toDelimitedString","val","delimiter","stringify","result","curDelimiter","Array","isArray","v","part","isEventHandler","getEventHandlerName","slice","toLowerCase","toString","unsafeXMLReg","replaceUnsafeXML","c","escapeXML","str","replace","unsafeScriptReg","escapeScript","unsafeStyleReg","escapeStyle","toAccess","accessor","start","classAttr","stringAttr","classValue","styleAttr","styleValue","attr","isVoid","attrAssignment","RegExp","source","nonVoidAttr","constructor","async","KNOWN_SYMBOLS2","Map","symbol","set","AggregateError","of","ArrayBuffer","isView","Atomics","add","and","compareExchange","exchange","isLockFree","load","notify","or","store","sub","wait","BigInt","asIntN","asUintN","BigInt64Array","BigUint64Array","Boolean","console","assert","clear","count","countReset","debug","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","table","time","timeEnd","timeLog","timeStamp","trace","warn","DataView","Date","now","parse","UTC","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Function","globalThis","atob","btoa","clearImmediate","clearInterval","clearTimeout","crypto","getRandomValues","randomUUID","fetch","performance","queueMicrotask","setImmediate","setInterval","setTimeout","structuredClone","URL","URLSearchParams","WritableStream","Int16Array","Int32Array","Int8Array","Intl","Collator","DateTimeFormat","DisplayNames","getCanonicalLocales","ListFormat","Locale","NumberFormat","PluralRules","RelativeTimeFormat","Segmenter","supportedValuesOf","isFinite","isNaN","JSON","groupBy","Math","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","Number","isInteger","isSafeInteger","parseFloat","parseInt","assign","defineProperties","entries","freeze","fromEntries","getOwnPropertyDescriptors","getOwnPropertySymbols","is","isExtensible","isFrozen","isSealed","keys","preventExtensions","seal","setPrototypeOf","Promise","Proxy","RangeError","ReferenceError","Reflect","apply","construct","deleteProperty","has","ownKeys","Set","String","fromCharCode","fromCodePoint","raw","for","SyntaxError","TypeError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","URIError","WeakMap","WeakSet","singleQuoteAttrReplacements","doubleQuoteAttrReplacements","needsQuotedAttr","lastIndex","replaceUnsafeSingleQuoteAttrChar","escapeSingleQuotedAttrValue","replaceUnsafeDoubleQuoteAttrChar","escapeDoubleQuotedAttrValue","match","import_compiler3","isValidPropertyIdentifier","toPropertyName","numericLiteral","toObjectProperty","objectProperty","toMemberExpression","object","optional","prop","optionalMemberExpression","memberExpression","pureFunctions","importRuntime","importStar","getRuntimePath","callRuntime","args","callExpression2","filteredArgs","i","arg","unaryExpression","filterArguments","includes","leadingComments","getHTMLRuntime","getCompatRuntimeFile","modules","import_compiler6","import_babel_utils7","import_babel_utils5","getTagName","isCoreTag","isMarkoTag","tagDef","getTagDef","isCoreTagName","isConditionTag","data","item","forEach","cb","find","findSorted","compare","pos","mid","cur","compareResult","addSorted","len","next","joinRepeatable","a","b","createProgramState","createSectionState","section","arrayOfSectionData","id","import_compiler5","import_babel_utils6","MARKO_FILE_REG","analyzeTagNameType","tagNameType","isStringLiteral","isNativeTag","tagNameNullable","isIdentifier","pending","path5","tagNameImported","nullable","pop","isConditionalExpression","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","scope","getBinding","kind","decl","parent","specifiers","some","isImportDefaultSpecifier","resolvedImport","resolveTagImport","bindingTag","bindingTagName","tagNameDynamic","analyzeExpressionTagName","expressions","childFile","loadFileForTag","ast","program","featureType","needsCompat","startSection","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","programExtra","sections","loc","depth","sectionAccessor","params","closures","bindings","hoisted","isHoistThrough","assignments","content","getContentInfo","upstreamExpression","downstreamBinding","hasAbortSignal","isBranch","attributeTags","getSectionForBody","getSection","currentPath","getScopeIdIdentifier","generateUidIdentifier","getSectionParentIsOwner","setSectionParentIsOwner","_getScopeIdentifier","forEachSection","fn","contentInfo","startType","endType","singleChild","endIndex","getNodeContentType","startIndex","extraMember","isAttributeTag","tagSection","isSerializedSection","serialize","checkStatefulClosures","immediateOnly","closure","isStatefulReferences","isSameOrChildSection","other","import_compiler18","import_babel_utils10","import_path","regexpCharsReg","import_compiler17","import_babel_utils9","import_compiler11","import_babel_utils8","getKnownAttrValues","attrs2","getParentTag","import_compiler7","enter","modulePlugin","plugin","isModulePlugin","default","isFunctionPlugin","exit","translateByTarget","html","dom","import_compiler10","import_compiler8","normalizeStringExpression","parts","strs","exprs","curStr","nextIndex","exprLen","shiftItems","quasis","j","templateLiteral","templateElement","appendLiteral","arr","list","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter2","exit2","enterShallow","code","steps","walks","walkComment","walkString","walkCodes","step","lastIndexOf","current","walk","nCodeString","writeTo","number","toCharString","startCode","rangeSize","multiplier","getWalkString","prefix2","postfix","walkLiteral","join","getWrites","getTrailerWrites","trailer","exprsLen","writes","consumeHTML","trailers","writeResult","trailerResult","sequenceExpression","flushBefore","expr","insertBefore","skip","flushInto","pushContainer","getSectionMeta","writePrefix","writePostfix","setup","getSetup","markNode","getScopeAccessorLiteral","tagsWithReturn","getSectionReturnValueIdentifier","setReturnValueIdentifier","return_default","assertNoVar","assertAllowedAttributes","parentTag","isControlFlowTag","valueChange","setSerializedProperty","returnId","variableDeclaration","variableDeclarator","addValue","referencedBindings","hasDownstreamIntersections","parseOptions","openTagOnly","descriptionMoreURL","forEachIdentifier","properties","left","argument","el","elements","import_compiler12","getDeclaredBindingExpression","declared","upstreamAlias","property","import_compiler13","createScopeReadPattern","rootDepth","rootPattern","objectPattern","nestedPatterns","ref","propertyValue","propertyKey","getScopeAccessor","isShorthand","pattern","relativeDepth","prev","nestedPattern","getScopeExpression","targetSection","scopeIdentifier","diff","createScopeReadExpression","reference","propName","import_compiler14","simplifyFunction","functionExpression","generator","import_compiler15","toFirstExpressionOrBlock","stmts","isExpressionStatement","expression","toParenthesizedExpressionIfNeeded","blockStatement","parenthesizedExpression","import_compiler16","traverseReplace","container","enter3","VISITOR_KEYS","replacement","traverseContains","check","getSignals","getClosureSignalBuilder","_setClosureSignalBuilder","setClosureSignalBuilder","builder","forceResumeScope","_setForceResumeScope","setForceResumeScope","getSerializedScopeProperties","getSectionSubscriberIdentifier","setSectionSubscriberIdentifiers","getHTMLSectionStatements","getHoistFunctionsIdsMap","getHoistFunctionIdentifier","hoistedBinding","idsMap","unimplementedBuild","getSignal","generateSignalName","signals","signal","exportName","export","domExports","intersection","render","renderReferencedBindings","effect","effectReferencedBindings","subscribers","subscribe","scopeOffset","intersectionMeta","getSignalFn","bindingUtil","ownerScope","isImmediateOwner","isDynamicClosure","getResumeRegisterId","arrowFunctionExpression","addStatement","initValue","runtimeHelper","isParamBinding","needsCache","needsMarks","hoists","valueAccessor","scopeIdentifier2","valueIdentifier","isValueSignal","aliasSignal","getTranslatedExtraArgs","closureEntries","sort","_closureSection","closureSignal","effectIdentifier","hasTranslatedExtraArgs","emptyExtraArgs","extraArgs","replaceRenderNode","provider","subscriber","p","providerSignal","replaceNullishAndEmptyFunctionsWith0","isArrowFunctionExpression","isBlockStatement","isUnaryExpression","isNumericLiteral","statement","usedReferences","statements","addEffectReferences","addRenderReferences","union","getTemplateId","usedRegisterIdsBySection","getRegisterUID","used","baseId","writeSignals","accessors","currentSection","getSectionScopeAccessorLiteral","hoistIdentifier","sortSignals","value2","effectDeclarator","replaceEffectNode","referencesScope","isScopeIdentifier","isCallExpression","arguments","register","signalDeclarator","signalDeclaration","isFunctionExpression","functionDeclaration","isExpression","exportNamedDeclaration","toReturnedFunction","rawFn","returnStatement","aReferencedBindings","getReferencedBindings","bReferencedBindings","reserve","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","allSignals","scopeIdIdentifier","assignment","currentSerialized","sectionDynamicSubscribers","subscribersIdentifier","newExpression","getSectionScopeAccessor","signalRefs","serializedLookup","serializedProperties","delete","subscriberIdentifier","shorthand","writeScopeArgs","objectExpression","debugVars","root","access","locExpr","line","column","arrayExpression","filenameRelative","additionalStatements","unshiftContainer","returnIdentifier","replaceAssignedNode","replaceBindingReadNode","replaceRegisteredFunctionNode","getReadReplacement","isAssignedBindingExtra","buildAssignment","binaryExpression","prefix","right","resultId","assignmentExpression","registeredFnsForProgram","getRegisteredFnExpression","classProperty","classPrivateProperty","isRegisteredFnExtra","referencedBindingsInFunction","registedFns","registerId","dom_default","templateIdentifier","template","walksIdentifier","setupIdentifier","inputBinding","programInputSignal","styleFile","fs","fileSystem","base","sep","leftDot","indexOf","rightDot","closeBracket","openBracket","getBase","styleMatch","file2","readdirSync","dirname","getStyleFile","importDefault","forEachSectionReverse","childSection","tagParamsSignal","walks2","writes2","setup2","renderer","registeredFns","registeredFn","assignmentPattern","stmt","writeRegisteredFns","exportDefaultDeclaration","import_compiler19","templateContentIdentifierForProgram","html_default","replaceNode","renderContent","child","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","replaceWithMultiple","contentId","contentFn","exportDefault","read","replaceBindingReadNode2","getRegisteredFnExpression2","registeredFnDeclarations","registeredFnDeclarationsByBody","addRegisteredDeclarations","replaceRegisteredFunctionNode2","previousProgramPath","program_default","crawl","trackParamsReferences","input","getBindings","readsByExpression","getReadsByExpression","readsByFn","getReadsByFunction","mergedReferences","getMergedReferences","nodes","targetExtra","reads","isEffect","isReferencedExtra","additionalReads","concat","intersectionsBySection","resolveReferencedBindings","pruneBinding","name3","section2","bindingReference","intersections","numReferences","binding1","binding2","sources1","getSourceBindings","sources2","isSuperset","sourceSection","intersectionIndex","bindings2","isOwnedBinding","lastBindingIndex","filter","bindingIndex","at","getMaxOwnSourceOffset","finalizeReferences","buildTemplateExports","visitedFiles","resolved","loadFileForImport","req","resolveRelativeToEntry","compatFile","templateExport","props","getMarkoRoot","curPath","isMarko","getExprRoot","getFnRoot","fnPath","isFunction","declare","isInvokedFunction","callee","withPreviousLocation","newNode","originalNode","end","kIsInvoked","getNextBindingId","setNextBindingId","createBinding","excludeProperties","propBinding","trackVarReferences","canonicalUpstreamAlias","getCanonicalBinding","pruned","createBindingsAndTrackReferences","paramsBinding","trackHoistedReference","referencePath","referenceSection","hoistSection","ancestor","getCommonSection","createRead","trackReference","trackAssignment","setReferencesScope","fnRoot","lVal","babelBinding","referencePaths","constantViolations","isUpdateExpression","trackReferencesForBinding","patternBinding","element","propPath","isMemberExpression","getMemberExpressionPropString","isEventOrChangeHandler","exprRoot","exprExtra","addReadToExpression","fnExtra","mergeReferences","compareIntersections","lenDelta","sourceBinding","subset","elem","derived","sources","curBinding","this","aLen","bLen","aIndex","bIndex","aValue","bValue","delta","unionSortedRepeatable","dropReferences","getAllTagReferenceNodes","referenceNodes","includeId","suffix","shouldPrune","exprReference","resolveExpressionReference","readBinding","readProps","aliasProps","isStatefulBinding","await_default","valueAttr","isMarkoAttribute","isSpreadElement","bodySection","tagBody","import_compiler24","import_babel_utils13","client_default","rawValue","trim","parseStatements","markoScriptlet","rawOpenTag","import_compiler26","import_babel_utils14","import_compiler25","translateVar","initialValue","const_default","varBinding","derivation","import_compiler27","import_babel_utils15","debug_default","debuggerStatement","import_babel_utils21","import_compiler28","import_babel_utils16","attrTagToIdentifierLookup","getAttrTagIdentifier","meta","analyzeAttributeTags","attrTags2","lookup","attrTagNodesByName","sampleAttrTagsForControlFlow","createAttrTagMeta","isRepeated","isLoopTag","curGroup","crawlAttrTags","oldMeta","attrTagMeta","dynamic","repeated","controlFlowTag","sampleAttrName","attributeTagGroup","attrTagNodes","hasRepeatedDynamicAttrTags","attrTagNames","tagName","conditionRoot","seenBranches","attrTag2","curConditionRoot","getConditionRoot","getPrevSibling","import_compiler32","import_babel_utils20","import_compiler31","import_babel_utils19","import_babel_utils18","import_compiler29","import_babel_utils17","kNativeTagBinding","kSerializeMarker","kGetterId","htmlSelectArgs","getRelatedControllable","checked","checkedChange","special","helper","attrs","checkedValue","checkedValueChange","open","openChange","native_tag_default","escape","buildError","buildUndefined","hasEventHandlers","hasDynamicAttributes","seen","relatedControllable","spreadReferenceNodes","exclusiveGroups","assertExclusiveControllableGroups","every","tagName2","toIdentifier","tagExtra","bindingName","tagBinding","nodeRef2","isHTML","write2","varName","getterId","hoist","getterFnIdentifier","visitAccessor","usedAttrs","maybeStaticAttrs","spreadExpression","skipExpression","spreadProps","skipProps","staticControllable","attr3","spreadElement","staticAttrs","reverse","propsToExpression","getUsedAttrs","writeAtStartOfBody","firstAttr","spreadIdentifier","valueReferences","htmlType","ifStatement","selectArgs","kOnlyChildInParent","kNodeRef","isOnlyChildInParent","branchSize","getOptimizedOnlyChildNodeRef","parentTagName","for_default","isAttrTag","allowAttrs","getForType","isStateful","onlyChildInParentOptimization","forAttrs","forType","bodyStatements","hasStatefulClosures","hasHoists","singleNodeOptimization","keyExpression","defaultParamNames","in","defaultByParamIndex","requiredParamsIndex","by","existingParam","byIdentifier","forTypeToHTMLByRuntime","forScopesIdentifier","getScopeIdentifier","scopeId","conditionalExpression","forTagArgs","getBaseArgsInForTag","forTagHTMLRuntime","forTypeToHTMLResumeRuntime","forTypeToRuntime","forTypeToDOMRuntime","param","referencedBindings2","loopArgs","controlFlow","contentProps","translateAttrs","templateExports","contentKey","attrTagLookup","usesExport","addDynamicAttrTagStatements","translatedAttrTag","prevProp","findObjectProperty","contentExpression","serialized","isTransparentTag","getNonAttributeTagParent","buildContent","contentProp","getTranslatedBodyContentProperty","index","ifTag","consequentStatements","getConditionTestValue","addAllAttrTagsAsDynamic","nextTag","testValue","alternateStatements","translateIfAttrTag","forTag","buildForRuntimeCall","translateForAttrTag","define_default","translatedAttrs","import_compiler34","import_babel_utils22","effect_default","import_babel_utils23","export_default","import_compiler35","import_babel_utils24","kCommentTagBinding","kGetterId2","html_comment_default","needsBinding","needsGetter","isMarkoPlaceholder","isMarkoText","commentBinding","references","templateQuasis","templateExpressions","currentQuasi","text","import_compiler36","import_babel_utils25","kGetterId3","html_script_default","bodyPlaceholderNodes","hasBodyPlaceholders","getUsedAttrs2","referencePlaceholder","preserveWhitespace","import_compiler37","import_babel_utils26","kGetterId4","html_style_default","getUsedAttrs3","import_compiler38","import_babel_utils27","id_default","import_compiler40","import_babel_utils28","import_compiler39","BRANCHES_LOOKUP","IfTag","assertHasBody","assertHasValueAttribute","assertHasPrecedingCondition","ifAttr","msg","assertOptionalIfAttribute","assertValidCondition","isLast","branches","getBranches","rootTag","rootExtra","mergeReferenceNodes","branchTag","branchBodySection","isRoot","getNextSibling","ifScopeIdIdentifier","ifBranchIdentifier","branchHasStatefulClosures","testAttr","curStatement","cbNode","rendererIdentifiers","consequent","ElseIfTag","ElseTag","isMarkoComment","import_babel_utils29","import_default","import_compiler41","import_babel_utils30","let_default","valueChangeAttr","valueSection","import_compiler42","import_babel_utils31","kRef","lifecycle_default","lifecycleAttrsRef","import_compiler43","import_babel_utils32","log_default","import_compiler44","import_babel_utils33","htmlScriptTagAlternateMsg","script_default","valueFn","isAwaitExpression","seenValueAttr","isFunction2","inlineBody","hasDeclaration","isDeclaration","import_compiler45","import_babel_utils34","server_default","import_compiler46","import_babel_utils35","static_default","import_compiler47","import_babel_utils36","import_magic_string","import_path3","STYLE_EXT_REG","htmlStyleTagAlternateMsg","style_default","ext","exec","sourceMaps","markoText","resolveVirtualDependency","getStart","getEnd","magicString","generateMap","includeContent","toUrl","importPath","virtualPath","basename","importDefaultSpecifier","import_compiler48","import_babel_utils37","try_default","setAllSectionsParentIsOwner","core_default","cdata_default","cdata","comment_default","comment","declaration_default","document_type_default","documentType","import_compiler49","import_babel_utils38","functionIdsBySection","function_default","markoRoot","isVariableDeclarator","isObjectMethod","functionNameCounts","import_babel_utils39","import_declaration_default","importDecl","tagImport","tags","import_compiler50","kBinding","kSiblingText","placeholder_default","placeholder","isVoid2","placeholderExtra","contentType","analyzeSiblingText","nodeBinding","canWriteHTML","method","siblingText","import_compiler51","abortIdsByExpressionForSection","referenced_identifier_default","hasBinding","throwStatement","exprId","abortIdsByExpression","scriptlet_default","scriptlet","import_compiler55","import_babel_utils43","import_babel_utils40","attribute_tag_default","findParentTag","import_compiler53","import_babel_utils41","import_path4","kChildScopeBinding","kChildOffsetScopeBinding","kChildAttrExprs","custom_tag_default","assertAttributesOrSingleArg","getTagTemplate","charAt","toUpperCase","childProgramExtra","analyzeAttrs","tagIdentifier","relativePath","getTagRelativePath","isCircularRequest","getTemplateContentName","inputExport","providesStatefulAttrs","childScopeBinding","peekScopeId","contentPath","renderTagExpr","callStatement","translateHTML","childExports","importOrSelfReferenceName","writeAttrsToExports","circular","attrTagCallsByTag","importNamed","injectWalks","translateDOM","rootTagExtra","nodeReferencesByGroup","analyzeDynamicChildGroup","groupReferences","firstTag","attrTagName","childAttrExports","childUsesGroupProp","importAlias","tagInputIdentifier","identifierToSignal","translatedProps","attrTagCallsForTag","attrTagCall","statementsByGroup","translateDynamicAttrTagChildInGroup","childAttrExport","decls","attrExportIdentifier","contentExportIdentifier","missing","getMissingPropValue","buildUndefined2","spreadId","request","nameHint","resolve","always","import_compiler54","import_babel_utils42","kDOMBinding","kChildOffsetScopeBinding2","dynamic_tag_default","assertAttributesOrArgs","isClassAPI","tagExpression","hasMultipleArgs","splice","dynamicScopeIdentifier","dynamicTagExpr","tagVarSignal","argsOrInput","isObjectExpression","TAG_NAME_IDENTIFIER_REG","BINDING_CHANGE_HANDLER","tag_default","bound","getChangeHandler","hook","analyzer","translator","watchFiles","modifier","tagNameId","tagNameVarPath","changeAttrName","buildChangeHandlerFunction","existingChangedAttr","changeHandlerAttr","isMarkoTagBody","changeHandlerId","changeHandlerConst","insertAfter","isPrivateName","cloneNode","newId","visitors","visitors2","_name","extractVisitors","Program","ReferencedIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment"],"sourceRoot":""}