{"version":3,"file":"996.0023766f.js","mappings":"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","sources":["webpack:///./try-online-new/components/preview.marko"],"sourcesContent":["import path from \"path\"\nimport { format } from \"prettier/standalone\"\nimport prettierHTML from \"prettier/parser-html\"\nimport prettierBabel from \"prettier/parser-babel\"\nimport highlight from \"../../../utils/highlight\"\nimport { bundle, compile } from \"../../../utils/compiler\"\nimport fs, { vol } from \"memfs\"\n\n<attrs/{ type, files, selectedFile, onSelectError, onSyntaxError }/>\n<id/examplePath/>\n<const/selectedPath = path.join(\"/\", examplePath, selectedFile.path)/>\n<const/defaultPath = path.join(\"/\", examplePath, files[0].path)/>\n\n<let/error = null/>\n<let/result = null/>\n<const/SYNTAX_ERROR_REG = /(.+?)(?:\\((\\d+),(\\d+)\\)|:(\\d+)): (.*(?=\\s+\\d+ | ))/ />\n\n<style>\n  .preview-error,\n  .preview-output,\n  .preview-compiled {\n    position: relative;\n    display: block;\n    min-height: 100%;\n    width: 100%;\n    padding-top: 8px;\n    padding-left: 16px;\n  }\n\n  .preview-compiled {\n    background: #202134;\n  }\n\n  .preview-output {\n    padding-right: 16px;\n  }\n\n  .preview-output,\n  .preview-error {\n    background: #fff;\n  }\n  .preview-compiled pre.highlighted {\n    padding: 0;\n    font-family: Menlo, Monaco, \"Courier New\", monospace;\n    font-weight: normal;\n    font-size: 12px;\n    font-feature-settings: \"liga\" 0, \"calt\" 0;\n    line-height: 18px;\n    letter-spacing: 0px;\n  }\n\n  .preview-error .error-name {\n    background: #f92672;\n    color: #f8f8f0;\n    margin-left: -16px;\n    margin-top: -8px;\n    padding-top: 8px;\n    padding-bottom: 12px;\n    padding-left: 16px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n\n  .preview-error a {\n    color: #66d9ef;\n    font-weight: normal;\n  }\n\n  .preview-error pre {\n    width: 100%;\n    overflow: auto;\n  }\n\n  .preview-error small {\n    font-style: italic;\n    font-size: 0.75 rem;\n  }\n</style>\n\n\n<if=error>\n  <div.preview-error>\n    <h1.error-name>\n      ${error.name}\n      <if=error.file>\n        &nbsp;:&nbsp;\n        <a onClick() { onSelectError(error) }>\n          ${error.file.slice(1)}(${error.line},${error.column})\n        </a>\n      </if>\n    </h1>\n    <div>${error.message}</div>\n    <if=(selectedPath !== error.file)>\n      <if=error.codeFrame>\n        <pre><code>${error.codeFrame}</code></pre>\n      </if>\n      <else>\n        <small>Open the dev tools to view the full error.</small>\n      </else>\n    </if>\n  </div>\n</if>\n<else>\n  <if=(type === \"preview\")>\n    <div/outputEl class=\"preview-output\"/>\n  </if>\n  <else>\n    <div.preview-compiled>$!{result}</div>\n  </else>\n</else>\n\n<effect() {\n  const previewTargetEl = !error && type === \"preview\" && outputEl();\n  const syncTimeout = setTimeout(async () => {\n    for (const file of files) {\n      const filePath = path.join(\"/\", examplePath, file.path);\n      vol.mkdirSync(path.dirname(filePath), { recursive: true });\n      vol.writeFileSync(filePath, file.content);\n    }\n    \n    try {\n      if (type === \"preview\" || type === \"html\") {\n        const bundleResult = await bundle({\n          entry: defaultPath,\n          markoOptions: { output: \"vdom\" }\n        });\n        const template = (0, eval)(bundleResult.js);\n\n        const renderResult = await template.render({});\n\n        if (type === \"preview\" && previewTargetEl) {\n          let shadowRoot = previewTargetEl.shadowRoot;\n\n          if (shadowRoot) {\n            while (shadowRoot.firstChild) {\n              shadowRoot.removeChild(shadowRoot.firstChild);\n            }\n          } else {\n            shadowRoot = previewTargetEl.attachShadow({ mode: \"open\" });\n          }\n\n          const style = document.createElement(\"style\");\n          style.innerHTML = bundleResult.css;\n          // TODO: this is because of bug in Marko when rendering in shadow roots that\n          // should be removed once fixed.\n          shadowRoot.createElementNS = document.createElementNS.bind(document);\n          shadowRoot.createTextNode = document.createTextNode.bind(document);\n\n          shadowRoot.appendChild(style);\n          renderResult.appendTo(shadowRoot);\n        } else {\n          result = highlight(\n            \"html\",\n            format(String(renderResult), {\n              parser: \"html\",\n              plugins: [prettierHTML]\n            })\n          );\n        }\n      } else {\n        const output = type === \"compiled-html\" ? \"html\" : \"vdom\";\n        const code = await compile({\n          entry: selectedPath,\n          markoOptions: { output }\n        });\n        result = highlight(\n          \"javascript\",\n          format(\n            code.replaceAll(`${examplePath}/`, \"\"),\n            {\n              parser: \"babel\",\n              plugins: [prettierBabel]\n            }\n          )\n        );\n      }\n\n      error = null;\n    } catch (err) {\n      result = null;\n\n      const errorWithLocationMatch =\n        err.name === \"SyntaxError\" && SYNTAX_ERROR_REG.exec(err.message);\n      if (errorWithLocationMatch) {\n        let [match, file, line, column, lineOnly, message] = errorWithLocationMatch;\n        if (lineOnly) {\n          line = lineOnly;\n          column = 0;\n        }\n\n        file = path.resolve(file);\n        line = parseInt(line, 10);\n        column = parseInt(column, 10) + 1;\n        const codeFrame = err.message.slice(match.length);\n        error = {\n          name: err.name,\n          file,\n          message,\n          line,\n          column,\n          codeFrame\n        };\n\n        if (file === selectedPath && onSyntaxError) {\n          onSyntaxError(error);\n        }\n      } else {\n        error = err;\n        console.error(err);\n      }\n    }\n  }, 150);\n  return () => {\n    clearTimeout(syncTimeout);\n    try {\n      vol.rmdirSync(examplePath, { recursive: true });\n    } catch (e) {}\n  }\n}/>"],"names":["outputEl","type","files","selectedFile","onSelectError","onSyntaxError","examplePath","selectedPath","path","defaultPath","error","result","SYNTAX_ERROR_REG","name","file","slice","line","column","message","codeFrame","previewTargetEl","syncTimeout","setTimeout","filePath","vol","recursive","content","bundleResult","bundle","entry","markoOptions","output","template","eval","js","renderResult","render","shadowRoot","firstChild","removeChild","attachShadow","mode","style","document","createElement","innerHTML","css","createElementNS","bind","createTextNode","appendChild","appendTo","highlight","format","String","parser","plugins","prettierHTML","code","compile","replaceAll","prettierBabel","err","errorWithLocationMatch","exec","match","lineOnly","parseInt","length","console","clearTimeout","e"],"sourceRoot":""}