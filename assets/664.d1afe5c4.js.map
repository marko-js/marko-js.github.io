{"version":3,"file":"664.d1afe5c4.js","mappings":"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","sources":["webpack:///../../browser-shims/v6|sync","webpack:///file-tabs.marko","webpack:///pane.marko","webpack:///controllable-select.marko","webpack:///playground-link.marko","webpack:///match-media.marko","webpack:///resizable-panes.marko","webpack:///index.marko","webpack:///hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/compiler/modules.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-search/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.png","webpack:///../components/app-footer/osi.png","webpack:///../components/app-layout/components/layout-search/search.png","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../browser-shims/v6 sync recursive\";\nmodule.exports = webpackEmptyContext;","<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow:auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ default: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getTranslator, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <activeEditor\n          value=selectedFile.content \n          filename=selectedFile.path \n          valueChange(content) {\n            const modifiedFile = { ...selectedFile, content };\n            files = [\n              ...files.slice(0, selectedIndex), \n              modifiedFile,\n              ...files.slice(selectedIndex+1)\n            ];\n            debounce = true;\n          }/>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getTranslator=getTranslator\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ default:defaultValue }/>\n<let/value = (\n  (() => { \n    try {\n      if (typeof window !== \"undefined\") {\n        return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n      }\n    } catch(e) {\n      console.error(e);\n    }\n  })() \n  || defaultValue\n)/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removevEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","var __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n});\n\n// src/visitors/program/index.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\n\n// src/visitors/program/html.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/apply-hydrate.ts\nimport { types as t4 } from \"@marko/compiler\";\n\n// src/util/references.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/sorted-arr.ts\nfunction insertInArray(compare, arr, val) {\n  const len = arr.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return arr;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = val;\n  while (pos < len) {\n    const next = cur;\n    cur = arr[pos];\n    arr[pos++] = next;\n  }\n  arr[len] = cur;\n  return arr;\n}\nfunction findIndex(compare, arr, val) {\n  let max = arr.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return mid;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  return -1;\n}\nfunction createSortedCollection(compare) {\n  return {\n    insert(data, val, immutable = false) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return insertInArray(compare, immutable ? [...data] : data, val);\n        } else {\n          const compareResult = compare(data, val);\n          if (compareResult !== 0) {\n            return compareResult < 0 ? [data, val] : [val, data];\n          }\n        }\n      }\n      return val;\n    },\n    find(data, val) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return data[findIndex(compare, data, val)];\n        } else {\n          return data === val ? data : void 0;\n        }\n      }\n    }\n  };\n}\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              const defaultAttr = bindingTag.get(\"attributes\")[0];\n              if (defaultAttr.node) {\n                pending.push(defaultAttr.get(\"value\"));\n              } else {\n                nullable = true;\n              }\n              const assignments = binding.constantViolations;\n              for (let i = assignments.length; i--; ) {\n                const assignment = assignments[i];\n                const { operator } = assignment.node;\n                if (operator === \"=\") {\n                  pending.push(assignment.get(\"right\"));\n                } else if (operator === \"+=\") {\n                  type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n                } else {\n                  type = 2 /* DynamicTag */;\n                  break;\n                }\n              }\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sectionNameNode = path3.parent?.name;\n    const sectionName = sectionNameNode?.value ?? sectionNameNode?.name ?? \"dynamic\";\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n    programExtra.sectionNames = programExtra.sectionNames ?? [];\n    programExtra.sectionNames[sectionId] = currentProgramPath.scope.generateUid(sectionName + \"Body\");\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init(sectionId);\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, size = 0) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    if (size && reserve2.size) {\n      throw new Error(\"Unable to reserve multiple scopes for a node\");\n    } else {\n      reserve2.size = size;\n      reserve2.name += \"_\" + name;\n    }\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    size,\n    name,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += reserve.size + 1;\n        }\n      }\n    }\n  });\n}\nfunction compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n}\nvar { insert: insertReserve } = createSortedCollection(compareReserves);\n\n// src/util/references.ts\nvar [getReferenceGroups] = createSectionState(\"apply\", () => [\n  {\n    sectionId: 0,\n    index: 0,\n    count: 0,\n    references: void 0,\n    apply: t2.identifier(\"\"),\n    hydrate: t2.identifier(\"\")\n  }\n]);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3, reserveType = 1 /* Store */) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths;\n    const identifier = bindings[name];\n    const binding = reserveScope(reserveType, sectionId, identifier, name);\n    insertReferenceGroup(getReferenceGroups(sectionId), {\n      sectionId,\n      index: 0,\n      count: 0,\n      references: binding,\n      apply: t2.identifier(\"\"),\n      hydrate: t2.identifier(\"\")\n    });\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      if (fnRoot) {\n        const name2 = fnRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (fnRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        updateReferenceGroup(fnRoot, \"references\", binding);\n      }\n      updateReferenceGroup(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction updateReferenceGroup(path3, extraKey, newBinding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const currentGroup = (path3.node.extra ??= {})[extraKey];\n  const newReferences = insertReserve(currentGroup?.references, newBinding, true);\n  if (currentGroup) {\n    currentGroup.count--;\n  }\n  getOrCreateReferenceGroup(sectionId, newBinding);\n  path3.node.extra[extraKey] = getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction mergeReferenceGroups(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const group = extra[key];\n    const references = group.references;\n    delete extra[key];\n    group.count--;\n    sectionId = group.sectionId;\n    if (references) {\n      if (Array.isArray(references)) {\n        for (const binding of references) {\n          newReferences = insertReserve(newReferences, binding);\n        }\n      } else {\n        newReferences = insertReserve(newReferences, references);\n      }\n    }\n  }\n  return getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction getOrCreateReferenceGroup(sectionId, references) {\n  const newGroup = {\n    sectionId,\n    index: 0,\n    count: 1,\n    references,\n    apply: t2.identifier(\"\"),\n    hydrate: t2.identifier(\"\")\n  };\n  const referenceGroups = getReferenceGroups(sectionId);\n  const existingGroup = findReferenceGroup(referenceGroups, newGroup);\n  if (existingGroup) {\n    existingGroup.count++;\n  } else {\n    insertReferenceGroup(referenceGroups, newGroup);\n  }\n  return existingGroup ?? newGroup;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nvar { insert: insertReferenceGroup, find: findReferenceGroup } = createSortedCollection(function compareReferenceGroups({ references: a }, { references: b }) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        if (Array.isArray(b)) {\n          const len = a.length;\n          const lenDelta = len - b.length;\n          if (lenDelta !== 0) {\n            return lenDelta;\n          }\n          for (let i = 0; i < len; i++) {\n            const compareResult = compareReserves(a[i], b[i]);\n            if (compareResult !== 0) {\n              return compareResult;\n            }\n          }\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (Array.isArray(b)) {\n        return -1;\n      } else {\n        return compareReserves(a, b);\n      }\n    } else {\n      return 1;\n    }\n  } else {\n    return b ? -1 : 0;\n  }\n});\nfunction finalizeReferences() {\n  const allReferenceGroups = [];\n  forEachSectionId((sectionId) => {\n    const referenceGroups = getReferenceGroups(sectionId).filter((g) => g.count > 0 || !Array.isArray(g.references));\n    referenceGroups.forEach((g, i) => {\n      g.index = i;\n      g.apply.name = generateReferenceGroupName(\"apply\", sectionId, g.references);\n      g.hydrate.name = generateReferenceGroupName(\"hydrate\", sectionId, g.references);\n    });\n    allReferenceGroups[sectionId] = referenceGroups;\n  });\n  (currentProgramPath.node.extra ??= {}).referenceGroups = allReferenceGroups;\n}\nfunction getReferenceGroup(sectionId, lookup, analyze2 = false) {\n  const referenceGroups = analyze2 ? getReferenceGroups(sectionId) : currentProgramPath.node.extra.referenceGroups[sectionId];\n  let found;\n  if (typeof lookup === \"number\") {\n    found = referenceGroups[lookup];\n  } else {\n    found = findReferenceGroup(referenceGroups, {\n      references: lookup\n    });\n  }\n  if (!found) {\n    throw new Error(`Reference group not found for section ${sectionId}: ${lookup}`);\n  }\n  return found;\n}\nfunction generateReferenceGroupName(type, sectionId, references) {\n  let name = type + (sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\");\n  if (references) {\n    if (Array.isArray(references)) {\n      name += \"With\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return currentProgramPath.scope.generateUid(name);\n}\n\n// src/util/runtime.ts\nimport { types as t3 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  return t3.callExpression(importRuntime(name), args.filter(Boolean));\n}\nfunction getHTMLRuntime() {\n  return getRuntime(\"html\");\n}\nfunction getRuntime(output) {\n  return __require(getRuntimePath(output));\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t3.memberExpression(getScopeExpression(reference, targetSectionId), t3.numericLiteral(reference.id), true);\n}\nfunction callQueue({ apply, index }, reference, value, targetSectionId) {\n  return callRuntime(\"queue\", getScopeExpression(reference, targetSectionId), apply, t3.numericLiteral(index - 1), value);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t3.memberExpression(scope, t3.identifier(\"_\"));\n  }\n  return scope;\n}\n\n// src/util/apply-hydrate.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\nvar [getApplyStatements] = createSectionState(\"applyStatements\", () => []);\nvar [getHydrateStatements] = createSectionState(\"hydrateStatements\", () => []);\nvar [getQueueBuilder, _setQueueBuilder] = createSectionState(\"queue\");\nfunction setQueueBuilder(tag, builder) {\n  _setQueueBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction addStatement(type, targetSectionId, references, statement) {\n  const statementsIndex = references?.index ?? 0;\n  const allStatements = type === \"apply\" ? getApplyStatements(targetSectionId) : getHydrateStatements(targetSectionId);\n  const statements = allStatements[statementsIndex] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n}\nfunction getHydrateRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeAllStatementGroups() {\n  forEachSectionIdReverse((sectionId) => {\n    writeHydrateGroups(sectionId);\n    writeApplyGroups(sectionId);\n  });\n}\nvar [getClosurePriorities] = createSectionState(\"closurePriorities\", () => []);\nfunction writeApplyGroups(sectionId) {\n  const allStatements = getApplyStatements(sectionId);\n  const numReferenceGroups = currentProgramPath.node.extra.referenceGroups[sectionId].length;\n  if (!numReferenceGroups)\n    return;\n  for (let i = numReferenceGroups; i--; ) {\n    const statements = allStatements[i] ?? [];\n    if (i === 0 && !statements.length)\n      continue;\n    const referenceGroup = getReferenceGroup(sectionId, i);\n    const { references, apply: identifier } = referenceGroup;\n    const queuePriority = t4.numericLiteral(i - 1);\n    let params;\n    let body;\n    if (references) {\n      if (Array.isArray(references)) {\n        params = references.map((binding) => t4.assignmentPattern(t4.identifier(binding.name), callRead(binding, sectionId)));\n        body = t4.blockStatement(statements);\n        for (const binding of references) {\n          addStatement(\"apply\", sectionId, getReferenceGroup(sectionId, binding), t4.expressionStatement(callRuntime(\"queue\", scopeIdentifier, identifier, queuePriority)));\n        }\n      } else if (references.sectionId !== sectionId) {\n        params = [\n          t4.assignmentPattern(t4.identifier(references.name), callRead(references, sectionId))\n        ];\n        body = t4.blockStatement(statements);\n        const factory = getQueueBuilder(sectionId);\n        if (factory) {\n          const closurePriority = t4.numericLiteral(NaN);\n          getClosurePriorities(references.sectionId).push(closurePriority);\n          addStatement(\"apply\", references.sectionId, getReferenceGroup(references.sectionId, references), t4.expressionStatement(factory(referenceGroup, closurePriority)));\n          addStatement(\"apply\", sectionId, void 0, t4.expressionStatement(callRuntime(\"queue\", scopeIdentifier, identifier, queuePriority)));\n        }\n      } else {\n        const param = t4.identifier(references.name);\n        params = [param];\n        body = t4.blockStatement([\n          t4.ifStatement(callRuntime(\"write\", scopeIdentifier, t4.numericLiteral(references.id), param), t4.blockStatement(statements))\n        ]);\n      }\n    } else {\n      params = [];\n      body = t4.blockStatement(statements);\n    }\n    const [fnPath] = currentProgramPath.pushContainer(\"body\", t4.functionDeclaration(identifier, [scopeIdentifier, ...params], body));\n    fnPath.traverse(bindFunctionsVisitor, { root: fnPath, sectionId });\n  }\n  const closurePriorities = getClosurePriorities(sectionId);\n  for (let i = 0; i < closurePriorities.length; i++) {\n    closurePriorities[i].value = i + allStatements.length;\n  }\n}\nfunction writeHydrateGroups(sectionId) {\n  const allStatements = getHydrateStatements(sectionId);\n  for (let i = allStatements.length; i--; ) {\n    const statements = allStatements[i];\n    if (!statements?.length)\n      continue;\n    const referenceGroup = getReferenceGroup(sectionId, i);\n    const { references, hydrate: identifier } = referenceGroup;\n    const params = references ? (Array.isArray(references) ? references : [references]).map((binding) => t4.assignmentPattern(t4.identifier(binding.name), callRead(binding, sectionId))) : [];\n    const [fnPath] = currentProgramPath.pushContainer(\"body\", [\n      t4.functionDeclaration(identifier, [scopeIdentifier, ...params], t4.blockStatement(statements)),\n      t4.expressionStatement(callRuntime(\"register\", t4.stringLiteral(getHydrateRegisterId(sectionId, references)), identifier))\n    ]);\n    fnPath.traverse(bindFunctionsVisitor, { root: fnPath, sectionId });\n    addStatement(\"apply\", sectionId, getReferenceGroup(sectionId, references), t4.expressionStatement(callRuntime(\"queueHydrate\", scopeIdentifier, identifier)));\n  }\n}\nfunction addHTMLHydrateCall(sectionId, references) {\n  addStatement(\"hydrate\", sectionId, references, void 0);\n}\nfunction writeHTMLHydrateStatements(path3) {\n  const sectionId = getOrCreateSectionId(path3);\n  const allStatements = getHydrateStatements(sectionId);\n  path3.unshiftContainer(\"body\", t4.variableDeclaration(\"const\", [\n    t4.variableDeclarator(scopeIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  if (!allStatements.length)\n    return;\n  const refs = [];\n  for (let i = allStatements.length; i--; ) {\n    if (allStatements[i]?.length) {\n      const { references } = getReferenceGroup(sectionId, i);\n      if (references) {\n        if (Array.isArray(references)) {\n          for (const ref of references) {\n            insertReserve(refs, ref);\n          }\n        } else {\n          insertReserve(refs, references);\n        }\n      }\n      path3.pushContainer(\"body\", t4.expressionStatement(callRuntime(\"writeHydrateCall\", scopeIdentifier, t4.stringLiteral(getHydrateRegisterId(sectionId, references)))));\n    }\n  }\n  path3.pushContainer(\"body\", t4.expressionStatement(callRuntime(\"writeHydrateScope\", scopeIdentifier, t4.objectExpression(refs.reduce((acc, ref) => {\n    acc.push(t4.objectProperty(t4.numericLiteral(ref.id), t4.identifier(ref.name)));\n    return acc;\n  }, [])))));\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t4.blockStatement([t4.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t4.variableDeclaration(\"const\", (Array.isArray(references) ? references : [references]).map((binding) => t4.variableDeclarator(t4.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  root.insertBefore(t4.variableDeclaration(\"const\", [\n    t4.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bind\", scopeIdentifier, functionIdentifier));\n}\nfunction getDefaultApply(sectionId) {\n  const [firstApplyStatements] = getApplyStatements(sectionId);\n  return firstApplyStatements ? getReferenceGroup(sectionId, 0).apply : t4.nullLiteral();\n}\n\n// src/util/writer.ts\nimport { types as t7 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t5 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t5.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t5.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t5.templateLiteral(strs.map((raw) => t5.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t5.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t6 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [40 /* Skip */]: \"skip\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [46 /* SkipEnd */]: \"skipEnd\",\n  [66 /* BeginChildEnd */]: \"beginChildEnd\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, childIndex, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}(${childIndex})`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, nCodeString(47 /* BeginChild */, childIndex));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  if (code && isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markHydrateNode\", scopeIdentifier, t6.numericLiteral(reserve.id))}`;\n  } else {\n    let walkString = \"\";\n    if (steps.length) {\n      const walks2 = [];\n      let depth = 0;\n      for (const step of steps) {\n        if (step === 0 /* enter */) {\n          depth++;\n          walks2.push(67 /* Next */);\n        } else {\n          depth--;\n          if (depth >= 0) {\n            walks2.length = walks2.lastIndexOf(67 /* Next */);\n            walks2.push(97 /* Over */);\n          } else {\n            walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n            walks2.push(107 /* Out */);\n            depth = 0;\n          }\n        }\n      }\n      let current = walks2[0];\n      let count = 0;\n      for (const walk of walks2) {\n        if (walk !== current) {\n          walkComment.push(`${walkCodeToName[current]}(${count})`);\n          walkString += nCodeString(current, count);\n          current = walk;\n          count = 1;\n        } else {\n          count++;\n        }\n      }\n      walkComment.push(`${walkCodeToName[current]}(${count})`);\n      walkString += nCodeString(current, count);\n      steps.length = 0;\n    }\n    if (code !== void 0) {\n      if (code !== 32 /* Get */) {\n        writeTo(path3)`<!>`;\n      }\n      walkComment.push(`${walkCodeToName[code]}`);\n      walkString += String.fromCharCode(code);\n    }\n    if (reserve?.size) {\n      walkComment.push(`${walkCodeToName[40 /* Skip */]}(${reserve.size})`);\n      walkString += nCodeString(40 /* Skip */, reserve.size);\n    }\n    appendLiteral(walks, walkString);\n  }\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    case 47 /* BeginChild */:\n      return toCharString(number, code, 20 /* BeginChild */);\n    case 40 /* Skip */:\n      return toCharString(number, code, 7 /* Skip */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t6.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (sectionId) => {\n  const name = currentProgramPath.node.extra.sectionNames[sectionId];\n  return t7.identifier(name);\n});\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t7.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    apply: getDefaultApply(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t7.stringLiteral(\"\")\n  };\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      flushInto(program);\n      writeHTMLHydrateStatements(program);\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs } = program.node.extra;\n      program.pushContainer(\"body\", [\n        t8.variableDeclaration(\"const\", [\n          t8.variableDeclarator(rendererId, t8.arrowFunctionExpression([attrs ? attrs.var : t8.identifier(\"input\")], t8.blockStatement(renderContent)))\n        ]),\n        t8.exportDefaultDeclaration(rendererId),\n        t8.exportNamedDeclaration(t8.variableDeclaration(\"const\", [\n          t8.variableDeclarator(t8.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t9 } from \"@marko/compiler\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t9.identifier(\"template\");\n      const walksIdentifier = t9.identifier(\"walks\");\n      const applyIdentifier = t9.identifier(\"apply\");\n      const applyAttrsIdentifier = t9.identifier(\"applyAttrs\");\n      const { attrs } = program.node.extra;\n      const { walks, writes, apply } = getSectionMeta(sectionId);\n      writeAllStatementGroups();\n      const childRendererDeclarators = [];\n      forEachSectionId((childSectionId) => {\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, apply: apply2 } = getSectionMeta(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          childRendererDeclarators.push(t9.variableDeclarator(identifier, callRuntime(\"createRenderer\", writes2, walks2, apply2)));\n        }\n      });\n      if (attrs) {\n        const exportSpecifiers = [];\n        program.node.body.push(t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(applyAttrsIdentifier, t9.functionExpression(null, [scopeIdentifier, attrs.var], t9.blockStatement(Object.keys(attrs.bindings).map((name) => {\n            const bindingIdentifier = attrs.bindings[name];\n            const { apply: applyIdentifier2 } = getReferenceGroup(sectionId, bindingIdentifier.extra.reserve);\n            exportSpecifiers.push(t9.exportSpecifier(applyIdentifier2, bindingIdentifier.extra.reserve.exportIdentifier));\n            return t9.expressionStatement(t9.callExpression(applyIdentifier2, [\n              scopeIdentifier,\n              bindingIdentifier\n            ]));\n          }))))\n        ])), t9.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      program.node.body.push(t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(templateIdentifier, writes || t9.stringLiteral(\"\"))\n      ])), t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(walksIdentifier, walks || t9.stringLiteral(\"\"))\n      ])), t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(applyIdentifier, t9.isNullLiteral(apply) ? t9.functionExpression(null, [], t9.blockStatement([])) : apply)\n      ])));\n      if (childRendererDeclarators.length) {\n        program.node.body.push(t9.variableDeclaration(\"const\", childRendererDeclarators));\n      }\n      program.node.body.push(t9.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, applyIdentifier, attrs && applyAttrsIdentifier)));\n    }\n  }\n};\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeReferences();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = program.scope.generateUidIdentifier(\"scope\");\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t10.importDeclaration([], t10.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t10.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nvar text_default = {\n  translate(text) {\n    writeTo(text)`${text.node.value}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t20 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t11 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t11);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t11);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t11);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t15 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t12 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t12.identifier(name) : t12.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t13.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr of node.attributes) {\n    const value = attr.value;\n    if (t13.isMarkoSpreadAttribute(attr)) {\n      result.properties.push(t13.spreadElement(value));\n    } else {\n      result.properties.push(t13.objectProperty(toPropertyName(attr.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t13.objectMethod(\"method\", t13.identifier(\"renderBody\"), params, t13.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t13.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t13.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t13.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t14 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t14.variableDeclaration(kind, [\n    t14.variableDeclarator(t14.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs.some(isSpreadAttr)) {\n      } else {\n        for (const attr of attrs) {\n          const attrNode = attr.node;\n          const { name } = attrNode;\n          if (name.startsWith(\"on\")) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, node.name.value);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs.some((attr) => attr.isMarkoSpreadAttribute());\n      const write = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML) {\n        if (extra.tagNameNullable) {\n          flushBefore(tag);\n        }\n        translateVar(tag, t15.unaryExpression(\"void\", t15.numericLiteral(0)));\n      }\n      let visitIndex;\n      if (extra.reserve) {\n        visitIndex = t15.numericLiteral(extra.reserve.id);\n        visit(tag, 32 /* Get */);\n      }\n      write`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t15.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr of attrs) {\n          const name2 = attr.node.name;\n          const extra2 = attr.node.extra ?? {};\n          const value = attr.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t15.expressionStatement(callRuntime(helper, t15.memberExpression(scopeIdentifier, visitIndex, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (name2.startsWith(\"on\")) {\n                  addHTMLHydrateCall(sectionId, extra2.valueReferences);\n                } else {\n                  write`${callRuntime(\"attr\", t15.stringLiteral(name2), value.node)}`;\n                }\n              } else if (name2.startsWith(\"on\")) {\n                addStatement(\"hydrate\", sectionId, extra2.valueReferences, t15.expressionStatement(callRuntime(\"on\", t15.memberExpression(scopeIdentifier, visitIndex, true), t15.stringLiteral(name2.slice(2)), value.node)));\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t15.expressionStatement(callRuntime(\"attr\", t15.memberExpression(scopeIdentifier, visitIndex, true), t15.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      let emptyBody = false;\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write`/>`;\n            break;\n          default:\n            write`>`;\n            break;\n        }\n        emptyBody = true;\n      } else if (tag.node.body.body.length) {\n        write`>`;\n      } else {\n        write`></${name.node}>`;\n        emptyBody = true;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t15.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      if (emptyBody) {\n        enterShallow(tag);\n        tag.remove();\n      } else {\n        enter(tag);\n      }\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      writeTo(tag)`</${tag.node.name}>`;\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t15.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr) {\n  return attr.type === \"MarkoSpreadAttribute\";\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t16 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(1 /* Store */, getOrCreateSectionId(tag), tag.node, \"child\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr) => attr.extra?.valueReferences).map((attr) => [attr.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const tagSectionId = getSectionId(tag);\n      const tagBody = tag.get(\"body\");\n      const tagBodySectionId = getSectionId(tagBody);\n      const isHTML = isOutputHTML();\n      const { node } = tag;\n      const write = writeTo(tag);\n      const binding = node.extra.reserve;\n      let tagIdentifier;\n      let tagAttrsIdentifier;\n      if (isHTML) {\n        flushInto(tag);\n        writeHTMLHydrateStatements(tagBody);\n      }\n      if (t16.isStringLiteral(node.name)) {\n        const { file } = tag.hub;\n        const tagName = node.name.value;\n        const tags = file.metadata.marko.tags;\n        const tagDef = getTagDef2(tag);\n        const template = tagDef?.template;\n        const relativePath = template && resolveRelativePath(file, template);\n        const childFile = loadFileForTag(tag);\n        const childProgram = childFile.ast.program;\n        if (!relativePath) {\n          throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${tagName}>.`);\n        }\n        if (isHTML) {\n          tagIdentifier = importDefault(file, relativePath, tagName);\n        } else {\n          tagIdentifier = importNamed2(file, relativePath, \"apply\", tagName);\n          if (childProgram.extra.attrs) {\n            tagAttrsIdentifier = importNamed2(file, relativePath, \"applyAttrs\", `${tagName}_attrs`);\n          }\n          write`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n          injectWalks(tag, binding.id, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n        }\n        if (!tags.includes(relativePath)) {\n          tags.push(relativePath);\n        }\n      } else {\n        tagIdentifier = node.name;\n      }\n      const tagVar = node.var;\n      const attrsObject = attrsToObject(tag, true);\n      const renderBodyProp = getRenderBodyProp(attrsObject);\n      if (isHTML && node.extra.tagNameNullable) {\n        let renderBodyId = void 0;\n        let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n        if (renderBodyProp) {\n          renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n          const [renderBodyPath] = tag.insertBefore(t16.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n          renderBodyPath.skip();\n          attrsObject.properties[attrsObject.properties.length - 1] = t16.objectProperty(t16.identifier(\"renderBody\"), renderBodyId);\n        }\n        if (tagVar) {\n          translateVar(tag, t16.unaryExpression(\"void\", t16.numericLiteral(0)), \"let\");\n          renderTagExpr = t16.assignmentExpression(\"=\", tagVar, renderTagExpr);\n        }\n        tag.replaceWith(t16.ifStatement(tagIdentifier, t16.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n      } else {\n        if (isHTML) {\n          if (tagVar) {\n            translateVar(tag, callExpression(tagIdentifier, attrsObject));\n            tag.remove();\n          } else {\n            tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n          }\n        } else {\n          if (renderBodyProp) {\n            const { walks, writes } = getSectionMeta(tagBodySectionId);\n            attrsObject.properties.pop();\n            attrsObject.properties.push(t16.objectProperty(t16.identifier(\"renderBody\"), callRuntime(\"createRenderer\", writes || t16.stringLiteral(\"\"), walks || t16.stringLiteral(\"\"), t16.arrowFunctionExpression(renderBodyProp.params, renderBodyProp.body))));\n          }\n          addStatement(\"apply\", tagSectionId, void 0, t16.expressionStatement(t16.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n          if (attrsObject && tagAttrsIdentifier) {\n            addStatement(\"apply\", tagSectionId, tag.node.extra.attrsReferences, t16.expressionStatement(t16.callExpression(tagAttrsIdentifier, [\n              callRead(binding, tagSectionId),\n              attrsObject\n            ])));\n          }\n          tag.remove();\n        }\n      }\n    }\n  }\n};\nfunction callStatement(id, ...args) {\n  return t16.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t16.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t18 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t17 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t17.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t17.isBlockStatement(body)) {\n    return body;\n  }\n  return t17.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const tagBodySectionId = getSectionId(tag.get(\"body\"));\n      const attrsObject = attrsToObject(tag, true);\n      const renderBodyProp = getRenderBodyProp(attrsObject);\n      const args = [node.name, attrsObject || t18.nullLiteral()];\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      } else {\n        args.unshift(scopeIdentifier);\n      }\n      if (renderBodyProp) {\n        attrsObject.properties.pop();\n        let fnExpr = t18.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body));\n        if (isOutputDOM()) {\n          const { walks, writes } = getSectionMeta(tagBodySectionId);\n          fnExpr = callRuntime(\"createRenderer\", writes || t18.stringLiteral(\"\"), walks || t18.stringLiteral(\"\"), fnExpr);\n        }\n        args.push(fnExpr);\n      }\n      const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n      if (node.var) {\n        translateVar(tag, dynamicTagExpr);\n        tag.remove();\n      } else if (isOutputHTML()) {\n        tag.replaceWith(t18.expressionStatement(dynamicTagExpr))[0].skip();\n      } else {\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t19 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t19.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t19.variableDeclaration(\"const\", [\n            t19.variableDeclarator(info.identifier, t19.arrayExpression([]))\n          ]) : t19.variableDeclaration(\"let\", [\n            t19.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t19.expressionStatement(info.repeated ? t19.callExpression(t19.memberExpression(info.identifier, t19.identifier(\"push\")), [attrsObject]) : t19.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr) => attr.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, t19.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (analyzeTagNameType(tag)) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr of tag.get(\"attributes\")) {\n        if (attr.isMarkoAttribute()) {\n          if (attr.node.arguments) {\n            throw attr.buildCodeFrameError(`Unsupported arguments on the \"${attr.node.name}\" attribute.`);\n          }\n          if (attr.node.modifier) {\n            if (isNativeTag2(attr.parentPath)) {\n              attr.node.name += `:${attr.node.modifier}`;\n            } else {\n              throw attr.buildCodeFrameError(`Unsupported modifier \"${attr.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      let { tagNameType } = extra;\n      if (extra.tagNameDynamic) {\n        if (extra.tagNameNullable && !tag.get(\"name\").isIdentifier()) {\n          const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n          const [tagNameVarPath] = tag.insertBefore(t20.variableDeclaration(\"const\", [\n            t20.variableDeclarator(tagNameId, tag.node.name)\n          ]));\n          tagNameVarPath.skip();\n          tag.set(\"name\", tagNameId);\n        }\n        if (tagNameType !== 2 /* DynamicTag */ && !isOutputHTML()) {\n          tagNameType = 2 /* DynamicTag */;\n        }\n      }\n      switch (tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      const { extra } = tag.node;\n      let { tagNameType } = extra;\n      if (extra.tagNameDynamic && tagNameType !== 2 /* DynamicTag */ && (!isOutputHTML() || tagNameType === void 0)) {\n        tagNameType = 2 /* DynamicTag */;\n      }\n      switch (tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write`${callRuntime(method, placeholder.node.value)}`;\n      } else {\n        addStatement(\"apply\", getSectionId(placeholder), valueReferences, t21.expressionStatement(callRuntime(method, t21.memberExpression(scopeIdentifier, t21.numericLiteral(reserve.id), true), placeholder.node.value)));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t21.isMarkoComment(path3) || t21.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t21.isProgram(placeholder.parentPath)) && !(t21.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t21.isProgram(placeholder.parentPath)) && !(t21.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"apply\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      const sectionId = getOrCreateSectionId(tag);\n      trackReferencesForBindings(sectionId, varPath, 2 /* Attr */);\n      for (const key in bindings) {\n        const binding = bindings[key].extra.reserve;\n        binding.exportIdentifier = getReferenceGroup(sectionId, binding, true).apply;\n      }\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t23 } from \"@marko/compiler\";\nimport { assertNoParams, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t22 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t22.isBlockStatement(body)) {\n    return body;\n  }\n  return t22.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", 3);\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar2(tag);\n      assertNoParams(tag);\n      if (!t23.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    branches[0].tag.node.extra.conditionalReferences = mergeReferenceGroups(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isOutputHTML()) {\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n  }\n  if (isLast) {\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const { extra } = branches[0].tag.node;\n      let expr = t23.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2);\n        setQueueBuilder(tag2, ({ apply, index }, closurePriority) => {\n          return callRuntime(\"queueInBranch\", scopeIdentifier, t23.numericLiteral(extra.reserve.id), getRenderer(sectionId2), apply, t23.numericLiteral(index), closurePriority);\n        });\n        tag2.remove();\n        if (testAttr) {\n          expr = t23.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      addStatement(\"apply\", sectionId, extra.conditionalReferences, t23.expressionStatement(callRuntime(\"setConditionalRenderer\", scopeIdentifier, t23.numericLiteral(extra.reserve.id), expr)));\n    } else {\n      const nextTag = tag.getNextSibling();\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t23.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      nextTag.insertBefore(statement);\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t24 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t24.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams4 } from \"@marko/babel-utils\";\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr of tag.get(\"attributes\")) {\n    if (attr.isMarkoSpreadAttribute()) {\n      throw attr.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/const.ts\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams4(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t25.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, identifiers.length === 1 ? t25.expressionStatement(t25.callExpression(getReferenceGroup(sectionId, identifiers[0].extra.reserve).apply, [scopeIdentifier, defaultAttr.value])) : [\n        t25.variableDeclaration(\"const\", [\n          t25.variableDeclarator(node.var, defaultAttr.value)\n        ]),\n        ...identifiers.map((identifier) => t25.expressionStatement(t25.callExpression(getReferenceGroup(sectionId, identifier.extra.reserve).apply, [t25.identifier(identifier.name)])))\n      ]);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t26.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n    }\n    const sectionId = getSectionId(tag);\n    if (isOutputDOM()) {\n      const cleanupIndex = tag.node.extra.reserve.id;\n      const { value } = defaultAttr;\n      let inlineStatements = null;\n      if (t26.isFunctionExpression(value) || t26.isArrowFunctionExpression(value) && t26.isBlockStatement(value.body)) {\n        inlineStatements = value.body.body;\n        t26.traverse(value.body, (node2) => {\n          if (t26.isReturnStatement(node2)) {\n            inlineStatements = null;\n          }\n        });\n      }\n      addStatement(\"hydrate\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t26.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, t26.numericLiteral(cleanupIndex), defaultAttr.value)));\n    } else {\n      addHTMLHydrateCall(sectionId, defaultAttr.extra?.valueReferences);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t27 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar5,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? tag.parentPath.parent : tag.node, \"for\", 3);\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML.exit(tag);\n      } else {\n        translateDOM.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    const ofAttr = findName(attributes, \"of\");\n    const byAttr = findName(attributes, \"by\");\n    setQueueBuilder(tag, ({ apply, index }, closurePriority) => {\n      return callRuntime(\"queueForEach\", scopeIdentifier, t27.numericLiteral(reserve.id), apply, t27.numericLiteral(index), closurePriority);\n    });\n    if (ofAttr) {\n      const ofAttrValue = ofAttr.value;\n      const [valParam] = params;\n      if (!t27.isIdentifier(valParam)) {\n        throw tag.buildCodeFrameError(`Invalid 'for of' tag, |value| parameter must be an identifier.`);\n      }\n      const rendererId = getRenderer(bodySectionId);\n      tag.remove();\n      addStatement(\"apply\", sectionId, ofAttr.extra?.valueReferences, t27.expressionStatement(callRuntime(\"setLoopOf\", scopeIdentifier, t27.numericLiteral(reserve.id), ofAttrValue, rendererId, byAttr ? byAttr.value : t27.nullLiteral(), getReferenceGroup(bodySectionId, valParam.extra.reserve).apply)));\n    }\n  }\n};\nvar translateHTML = {\n  exit(tag) {\n    const tagBody = tag.get(\"body\");\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params }\n    } = node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const fromAttr = findName(attributes, \"from\");\n    const toAttr = findName(attributes, \"to\");\n    const block = t27.blockStatement(body);\n    let forNode;\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      if (valParam) {\n        block.body.unshift(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(valParam, t27.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      forNode = t27.forInStatement(t27.variableDeclaration(\"const\", [t27.variableDeclarator(keyParam)]), inAttr.value, block);\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      const [valParam, keyParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      forNode = [];\n      if (keyParam) {\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(keyParam, \"i\");\n        forNode.push(t27.variableDeclaration(\"let\", [\n          t27.variableDeclarator(indexName, t27.numericLiteral(0))\n        ]));\n        block.body.unshift(t27.variableDeclaration(\"let\", [\n          t27.variableDeclarator(keyParam, t27.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t27.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        forNode.push(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      forNode.push(t27.forOfStatement(t27.variableDeclaration(\"const\", [t27.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (fromAttr && toAttr) {\n      const stepAttr = findName(attributes, \"step\") || {\n        value: t27.numericLiteral(1)\n      };\n      const stepValue = stepAttr ? stepAttr.value : t27.numericLiteral(1);\n      const [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      if (indexParam) {\n        block.body.unshift(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(indexParam, t27.binaryExpression(\"+\", fromAttr.value, t27.binaryExpression(\"*\", stepName, stepValue)))\n        ]));\n      }\n      forNode = t27.forStatement(t27.variableDeclaration(\"let\", [\n        t27.variableDeclarator(stepsName, t27.binaryExpression(\"/\", t27.binaryExpression(\"-\", toAttr.value, fromAttr.value), stepValue)),\n        t27.variableDeclarator(stepName, t27.numericLiteral(0))\n      ]), t27.binaryExpression(\"<=\", stepName, stepsName), t27.updateExpression(\"++\", stepName), block);\n    }\n    block.body.push(t27.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple([].concat(forNode));\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t27.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar5(tag);\n  if (findName(attrs, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs, \"from\") && findName(attrs, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t27.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t28 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId2,\n  assertNoParams as assertNoParams6\n} from \"@marko/babel-utils\";\nvar get_default = {\n  translate(tag) {\n    assertNoParams6(tag);\n    assertNoBodyContent(tag);\n    flushBefore(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t28.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t28.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId2(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t28.variableDeclaration(\"const\", [\n        t28.variableDeclarator(node.var, callRuntime(\"getInContext\", t28.stringLiteral(refId)))\n      ]));\n    } else {\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes,\n  assertNoParams as assertNoParams7,\n  assertNoVar as assertNoVar6\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar6(tag);\n      assertNoParams7(tag);\n      assertNoAttributes(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    state: \"parsed-text\"\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams8 } from \"@marko/babel-utils\";\n\n// src/util/replace-assignments.ts\nimport { types as t29 } from \"@marko/compiler\";\nfunction replaceAssignments(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    let value;\n    if (assignment.isUpdateExpression()) {\n      value = t29.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", binding.identifier, t29.numericLiteral(1));\n    } else if (assignment.isAssignmentExpression()) {\n      value = assignment.node.operator === \"=\" ? assignment.node.right : t29.binaryExpression(assignment.node.operator.slice(0, -1), binding.identifier, assignment.node.right);\n    }\n    if (value) {\n      assignment.parentPath.replaceWith(map(assignment, value));\n    }\n  }\n}\n\n// src/core/let.ts\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const [defaultAttr] = node.attributes;\n    assertNoParams8(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t30.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const referenceGroup = getReferenceGroup(sectionId, binding);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t30.expressionStatement(t30.callExpression(referenceGroup.apply, [\n        scopeIdentifier,\n        defaultAttr.value\n      ])));\n      replaceAssignments(tag.scope.getBinding(binding.name), (assignment, value) => callQueue(referenceGroup, binding, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/set.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams9, assertNoVar as assertNoVar7 } from \"@marko/babel-utils\";\nvar set_default = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<set>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<set>' tag requires default attribute like '<set=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<set>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      tag.insertBefore(t31.expressionStatement(callRuntime(\"pushContext\", t31.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n    },\n    exit(tag) {\n      assertNoParams9(tag);\n      assertNoVar7(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.insertAfter(t31.expressionStatement(callRuntime(\"popContext\")));\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"set=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"set=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#set\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams10, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nimport { types as t32 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoVar8(tag);\n    assertNoParams10(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs.find((attr) => attr.isMarkoAttribute() && attr.node.name === \"type\");\n    if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      currentProgramPath.pushContainer(\"body\", t32.importDeclaration([], t32.stringLiteral(importPath)));\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t33 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t33.variableDeclaration(\"const\", [\n        t33.variableDeclarator(tag.node.var, t33.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/yield.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport { assertNoVar as assertNoVar9, assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar RETURN_IDENTIFIERS = /* @__PURE__ */ new WeakMap();\nvar yield_default = {\n  translate(tag) {\n    assertNoVar9(tag);\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    flushBefore(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr, onNextAttr] = node.attributes;\n    if (!t34.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<yield>' tag requires default attribute like '<yield=VALUE>'.`);\n    }\n    if (onNextAttr && onNextAttr.name === \"onnext\") {\n      if (isOutputHTML()) {\n        tag.get(\"attributes\")[1].remove();\n      }\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<yield>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    let returnId = RETURN_IDENTIFIERS.get(file);\n    if (!returnId) {\n      const program = file.path;\n      RETURN_IDENTIFIERS.set(file, returnId = program.scope.generateDeclaredUidIdentifier(\"return\"));\n      program.pushContainer(\"body\", t34.returnStatement(returnId))[0].skip();\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t34.assignmentExpression(\"=\", returnId, defaultAttr.value))[0].skip();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"yield=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"yield=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#yield\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t35 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t35.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t35.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<set>\": set_default,\n  \"<get>\": get_default,\n  \"<yield>\": yield_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t36 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t36.markoTag(t36.stringLiteral(\"attrs\"), void 0, t36.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t36.isMemberExpression(identifier.parent) && t36.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t36.markoTag(t36.stringLiteral(\"get\"), void 0, t36.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\"\n\n<hash-value/files = [{ \n  name:\"index.marko\", \n  path:\"/components/index.marko\", \n  content:\"<let/count=0/>\\n<button onclick() { count++ }>\\n  ${count}\\n</button>\"\n}]/>\n<repl getTranslator() { return fluurtTranslator } files:=files/>","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport \"../../../components/app-layout/components/layout-search/search.png\";\nimport component_0 from \"../../../components/app-layout/components/layout-search/component-browser.js\";\nregister(\"HkYzEWAp\", component_0);\nimport component_1 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_1);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_2);\nimport component_3 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_3);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.png\";\nimport \"../../../components/app-footer/osi.png\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"../../node_modules/@marko/compiler/modules\");\n","module.exports = require(\"memfs\");\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","module.exports = {\n  focus(e) {\n    var input = this.getEl(\"input\");\n    if (e.target != input) {\n      input.focus();\n    }\n  },\n  grow() {\n    this.el.classList.add(\"large\");\n    this.getEl(\"input\").value = \"\";\n  },\n  shrink() {\n    this.el.classList.remove(\"large\");\n  },\n  search(e) {\n    var value = this.getEl(\"input\").value;\n    value = encodeURIComponent(value.replace(/\\s+/g, \" \")).replace(\n      /\\%20/g,\n      \"+\"\n    );\n    window.location.href =\n      \"https://google.com/search?q=\" + value + \"+site:markojs.com\";\n    e.preventDefault();\n  }\n};\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"657b26bd.svg\";","export default __webpack_public_path__ + \"f9c991e7.png\";","export default __webpack_public_path__ + \"4dab80b0.png\";","export default __webpack_public_path__ + \"e213de74.png\";","export default __webpack_public_path__ + \"64c1e059.png\";","export default __webpack_public_path__ + \"8d84725b.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","files","externalFiles","selectedIndex","externalSelected","selectedFile","nextId","file","index","editing","selected","mutable","d","name","finishRename","modifiedFile","path","replace","slice","nameInput","length","focus","setSelectionRange","indexOf","window","confirm","stopPropagation","t","newFile","content","newIndex","concat","actions","body","renderBody","value","valueChange","class","className","el","target","attrs","compressToEncodedURIComponent","JSON","stringify","default","query","fallback","isMatch","matchMedia","matches","mq","listener","addEventListener","removeEventListener","left","right","editorSize","resizing","isVertical","container","preventDefault","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","getTranslator","previewType","debounce","activeEditor","async","loading","preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","this","isUpdating","removevEventListener","__require","require","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","createSortedCollection","compare","insert","data","val","immutable","Array","isArray","arr","len","pos","mid","compareResult","cur","next","insertInArray","find","findIndex","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","defaultAttr","assignments","constantViolations","i","assignment","tagNameDynamic","startSection","sectionId","programExtra","sectionNameNode","sectionName","nextSectionId","sectionNames","generateUid","getOrCreateSectionId","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","state","forEachSectionId","fn","getReservesByType","reserveScope","size","reserve","reserve2","reservesByType","compareReserves","a","b","insertReserve","getReferenceGroups","count","references","apply","t2","hydrate","trackReferencesForBindings","reserveType","bindings","getBindingIdentifiers","referencePaths","insertReferenceGroup","reference","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","name2","isMarkoAttribute","updateReferenceGroup","listKey","extraKey","newBinding","currentGroup","newReferences","getOrCreateReferenceGroup","mergeReferenceGroups","groupEntries","group","newGroup","referenceGroups","existingGroup","findReferenceGroup","curPath","isMarkoPath","isProgram","isFunctionExpression","lenDelta","getReferenceGroup","lookup","analyze2","found","generateReferenceGroupName","ref","importRuntime","importNamed","getRuntimePath","callRuntime","args","t3","filter","Boolean","getHTMLRuntime","optimize","callRead","targetSectionId","getScopeExpression","diff","scopeIdentifier","getApplyStatements","getHydrateStatements","getQueueBuilder","_setQueueBuilder","setQueueBuilder","builder","addStatement","statement","statementsIndex","allStatements","statements","getHydrateRegisterId","opts","filename","getTemplateId","getClosurePriorities","addHTMLHydrateCall","writeHTMLHydrateStatements","unshiftContainer","t4","refs","pushContainer","reduce","acc","bindFunctionsVisitor","FunctionExpression","exit","bindFunction","ArrowFunctionExpression","root","functionIdentifier","generateUidIdentifier","unshift","map","insertBefore","params","replaceWith","getDefaultApply","firstApplyStatements","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t5","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","appendLiteral","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","writeTo","t6","walkString","walks2","depth","step","lastIndexOf","current","walk","nCodeString","String","fromCharCode","number","toCharString","startCode","rangeSize","result","multiplier","floor","getWalkString","walkLiteral","leadingComments","join","getRenderer","t7","getWrites","exprsLen","writes","consumeHTML","flushBefore","expr","skip","flushInto","getSectionMeta","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","translate","program","renderContent","child","replaceWithMultiple","remove","rendererId","t8","var","dom_default","templateIdentifier","t9","walksIdentifier","applyIdentifier","applyAttrsIdentifier","forEachSectionIdReverse","referenceGroup","identifier","fnPath","traverse","writeHydrateGroups","numReferenceGroups","queuePriority","factory","closurePriority","NaN","param","closurePriorities","writeApplyGroups","childRendererDeclarators","childSectionId","writes2","apply2","exportSpecifiers","Object","bindingIdentifier","applyIdentifier2","exportIdentifier","previousProgramPath","WeakMap","program_default","migrate","set","crawl","analyze","curIndex","reserves","allReferenceGroups","g","forEach","finalizeReferences","t10","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","declaration_default","declaration","cdata_default","cdata","text_default","text","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t11","exit2","IDENTIFIER_REG","toPropertyName","t12","attrsToObject","withRenderBody","t13","resultExtra","attr","attributes","properties","hoistedControlFlows","isConditional","isLoop","prop","argument","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t14","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","startsWith","isHTML","tagDef","getTagDef","hasSpread","isMarkoSpreadAttribute","write","visitIndex","t15","attrsCallExpr","extra2","valueReferences","helper","emptyBody","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childProgramExtra","loadFileForTag","ast","attrsReferences","tagSectionId","tagBody","tagBodySectionId","tagIdentifier","tagAttrsIdentifier","t16","tagName","tags","metadata","marko","relativePath","resolveRelativePath","childProgram","importDefault","importNamed2","childIndex","injectWalks","includes","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","toFirstExpressionOrBlock","nodes","t17","expression","dynamic_tag_default","t18","fnExpr","dynamicTagExpr","attribute_tag_default","hasPendingHTML","assertNoVar","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t19","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","existing","tag_default","hook","getTagDef3","analyzer","assertNoArgs","translator","watchFiles","arguments","modifier","isNativeTag2","tagNameId","tagNameVarPath","t20","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","escape","prev","getPrevSibling","noOutput","t21","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","autocomplete","displayText","description","snippet","descriptionMoreURL","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t22","if_default","exitBranchAnalyze","testAttr","assertNoVar2","assertNoParams","t23","loc","end","msg","buildError","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","bodySectionId","branches","nextTag","isLast","conditionalReferences","tag2","sectionId2","curStatement","else_if_default","assertNoVar3","assertNoParams2","t24","else_default","assertNoVar4","assertNoParams3","assertNoSpreadAttrs","assertNoBodyContent","const_default","assertNoParams4","t25","identifiers","values","effect_default","assertNoParams5","t26","cleanupIndex","inlineStatements","node2","for_default","isOnlyChild","t27","getTagDef5","html","checkOnlyChild","hasParams","assertNoVar5","findName","assertAllowedAttributes","validateFor","translateHTML","translateDOM","of","in","to","from","ofAttr","byAttr","ofAttrValue","valParam","namePath","inAttr","fromAttr","toAttr","block","forNode","keyParam","loopParam","indexName","generateUidIdentifierBasedOnNode","stepAttr","stepValue","indexParam","stepsName","stepName","obj","get_default","assertNoParams6","refId","t28","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId2","html_comment_default","assertNoVar6","assertNoParams7","assertNoAttributes","assertNoAttributeTags","let_default","assertNoParams8","t30","isUpdateExpression","t29","replaceAssignments","callQueue","set_default","t31","assertNoParams9","assertNoVar7","insertAfter","style_default","assertNoVar8","assertNoParams10","base","path2","sourceFileName","typeAttr","typeValue","markoText","isMarkoText","resolveVirtualDependency","importPath","startPos","endPos","virtualPath","t32","enum","tag_default2","t33","RETURN_IDENTIFIERS","noop_default","core_default","assertNoVar9","assertNoParams11","onNextAttr","t34","returnId","generateDeclaredUidIdentifier","trim","parseScript3","t35","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","ReferencedIdentifier","hasBinding","add","t36","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","entries","visitor","taglibs","fluurtTranslator","register","types","env","browser","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","input","grow","shrink","search","encodeURIComponent","href","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","n","headers","call","document","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","nextSibling","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","parentNode","targetTop","targetHeight","switchVersion"],"sourceRoot":""}