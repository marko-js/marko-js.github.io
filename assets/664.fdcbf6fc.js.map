{"version":3,"file":"664.fdcbf6fc.js","mappings":"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","sources":["webpack:///../components/repl/components/file-tabs.marko","webpack:///../components/repl/components/pane.marko","webpack:///../components/repl/components/controllable-select.marko","webpack:///../components/repl/components/playground-link.marko","webpack:///../components/repl/components/match-media.marko","webpack:///../components/repl/components/resizable-panes.marko","webpack:///../components/repl/index.marko","webpack:///./playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ default: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <activeEditor\n          value=selectedFile.content \n          filename=selectedFile.path \n          valueChange(content) {\n            const modifiedFile = { ...selectedFile, content };\n            files = [\n              ...files.slice(0, selectedIndex), \n              modifiedFile,\n              ...files.slice(selectedIndex+1)\n            ];\n            debounce = true;\n          }/>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ default:defaultValue }/>\n<let/value = (\n  (() => { \n    try {\n      if (typeof window !== \"undefined\") {\n        return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n      }\n    } catch(e) {\n      console.error(e);\n    }\n  })() \n  || defaultValue\n)/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removevEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","// src/visitors/program/index.ts\nimport { types as t12 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t9 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              const defaultAttr = bindingTag.get(\"attributes\")[0];\n              if (defaultAttr.node) {\n                pending.push(defaultAttr.get(\"value\"));\n              } else {\n                nullable = true;\n              }\n              const assignments = binding.constantViolations;\n              for (let i = assignments.length; i--; ) {\n                const assignment = assignments[i];\n                const { operator } = assignment.node;\n                if (operator === \"=\") {\n                  pending.push(assignment.get(\"right\"));\n                } else if (operator === \"+=\") {\n                  type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n                } else {\n                  type = 2 /* DynamicTag */;\n                  break;\n                }\n              }\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = isOutputHTML() ? type : 2 /* DynamicTag */;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sectionNameNode = path3.parent?.name;\n    const sectionName = sectionNameNode?.value ?? sectionNameNode?.name ?? \"dynamic\";\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n    programExtra.sectionNames = programExtra.sectionNames ?? [];\n    programExtra.sectionNames[sectionId] = currentProgramPath.scope.generateUid(sectionName + \"Body\");\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init(sectionId);\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nvar [getScopeIdentifier] = createSectionState(\"scopeIdentifier\", (sectionId) => currentProgramPath.scope.generateUidIdentifier(`scope${sectionId}_`));\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/sorted-arr.ts\nfunction insertInArray(compare, arr, val) {\n  const len = arr.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return arr;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = val;\n  while (pos < len) {\n    const next = cur;\n    cur = arr[pos];\n    arr[pos++] = next;\n  }\n  arr[len] = cur;\n  return arr;\n}\nfunction findIndex(compare, arr, val) {\n  let max = arr.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return mid;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  return -1;\n}\nfunction createSortedCollection(compare) {\n  return {\n    insert(data, val, immutable = false) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return insertInArray(compare, immutable ? [...data] : data, val);\n        } else {\n          const compareResult = compare(data, val);\n          if (compareResult !== 0) {\n            return compareResult < 0 ? [data, val] : [val, data];\n          }\n        }\n      }\n      return val;\n    },\n    find(data, val) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return data[findIndex(compare, data, val)];\n        } else {\n          return data === val ? data : void 0;\n        }\n      }\n    },\n    count(data) {\n      if (data === void 0)\n        return 0;\n      if (!Array.isArray(data))\n        return 1;\n      return data.length;\n    }\n  };\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getNodeLiteral(reserve) {\n  if (!isOptimize()) {\n    return t2.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n  }\n  return t2.numericLiteral(reserve.id);\n}\nfunction compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n}\nvar { insert: insertReserve, count: countReserves } = createSortedCollection(compareReserves);\n\n// src/util/runtime.ts\nimport { types as t3 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val == null ? \"\" : val + \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (val == null) {\n      return \"\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"source\",\n  \"derivation\",\n  \"subscriber\",\n  \"closure\",\n  \"loop\",\n  \"conditional\",\n  \"destructureSources\",\n  \"bind\",\n  \"bindRenderer\",\n  \"inLoopScope\",\n  \"inConditionalScope\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t3.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t3.memberExpression(getScopeExpression(reference, targetSectionId), getNodeLiteral(reference), true);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t3.memberExpression(scope, t3.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t3.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t7 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t6 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t4 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t4.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t4.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t4.templateLiteral(strs.map((raw) => t4.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t4.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t5 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t5.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (sectionId) => {\n  const name = currentProgramPath.node.extra.sectionNames[sectionId];\n  return t6.identifier(name);\n});\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t6.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    apply: getSetup(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t6.stringLiteral(\"\"),\n    register: getRegisterRenderer(sectionId)\n  };\n}\nfunction markNode(path3) {\n  const sectionId = getSectionId(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markHydrateNode\", getScopeIdentifier(sectionId), getNodeLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const sectionId = getSectionId(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t7.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(sectionId, returnId2);\n      tag.replaceWith(t7.variableDeclaration(\"const\", [\n        t7.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      const signal = getSignal(sectionId, defaultAttr.extra?.valueReferences?.references);\n      const tagVarSignalIdentifier = importRuntime(\"tagVarSignal\");\n      signal.subscribers.push(tagVarSignalIdentifier);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t7.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, t7.identifier(tagVarSignalIdentifier.name), defaultAttr.value)));\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar [forceHydrateScope, _setForceHydrateScope] = createSectionState(\"forceHydrateScope\");\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getHydrateScopeBuilder, setHydrateScopeBuilder] = createSectionState(\"hydrateScopeBuilder\");\nfunction setForceHydrateScope(sectionId) {\n  _setForceHydrateScope(sectionId, true);\n}\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction getSignal(sectionId, reserve) {\n  const key = !Array.isArray(reserve) ? reserve : reserve.map((r) => `${r.sectionId}/${r.id}`).sort().join(\"-\");\n  const signals = getSignals(sectionId);\n  let signal = signals.get(key);\n  if (!signal) {\n    signals.set(key, signal = {\n      identifier: t8.identifier(generateSignalName(sectionId, reserve)),\n      reserve,\n      sectionId,\n      render: [],\n      hydrate: [],\n      hydrateInlineReferences: void 0,\n      subscribers: []\n    });\n    if (!reserve) {\n      signal.build = () => {\n        for (const subscriber of signal.subscribers) {\n          signal.render.push(t8.expressionStatement(callRuntime(\"notifySignal\", scopeIdentifier, subscriber)));\n        }\n        return t8.arrowFunctionExpression([scopeIdentifier], t8.blockStatement(signal.render));\n      };\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"subscriber\", t8.arrayExpression(signal.subscribers), t8.numericLiteral(reserve.length), getComputeFn(sectionId, t8.blockStatement(signal.render), reserve));\n      };\n    } else if (reserve.sectionId !== sectionId) {\n      getClosures(sectionId).push(signal.identifier);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(sectionId);\n        const provider = getSignal(reserve.sectionId, reserve);\n        if (builder) {\n          provider.subscribers.push(builder(signal.identifier));\n        } else if (!provider.hasDynamicSubscribers) {\n          provider.hasDynamicSubscribers = true;\n          provider.subscribers.push(callRuntime(\"dynamicSubscribers\", getNodeLiteral(reserve)));\n        }\n        return callRuntime(builder ? \"closure\" : \"dynamicClosure\", t8.numericLiteral(1), getNodeLiteral(reserve), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n      };\n    } else {\n      signal.build = () => {\n        return t8.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n      };\n    }\n  }\n  return signal;\n}\nfunction initSource(reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"source\", getNodeLiteral(reserve), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  return signal;\n}\nfunction initDerivation(reserve, providers, compute) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"derivation\", getNodeLiteral(reserve), t8.numericLiteral(Array.isArray(providers) ? providers.length : 1), t8.arrayExpression(signal.subscribers), getComputeFn(sectionId, compute, providers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  subscribe(providers, signal);\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const sectionId = reserve.sectionId;\n  const scopeAccessor = getNodeLiteral(reserve);\n  const valueAccessor = t8.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    return callRuntime(\"derivation\", valueAccessor, t8.numericLiteral(Array.isArray(providers) ? providers.length : 1), t8.arrayExpression(signal.subscribers), getComputeFn(sectionId, compute, providers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  subscribe(providers, signal);\n  signal.subscribers.push(callRuntime(\"dynamicSubscribers\", valueAccessor));\n  addStatement(\"apply\", reserve.sectionId, void 0, t8.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t8.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  getClosures(sectionId).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getNodeLiteral(reserve), t8.stringLiteral(templateId), t8.arrayExpression(signal.subscribers), t8.arrowFunctionExpression([scopeIdentifier, t8.identifier(reserve.name)], t8.blockStatement(signal.render)));\n  };\n  return signal;\n}\nfunction getComputeFn(sectionId, body, references) {\n  const params = [scopeIdentifier];\n  if (Array.isArray(references)) {\n    references.forEach((binding) => params.push(t8.assignmentPattern(t8.identifier(binding.name), callRead(binding, sectionId))));\n  } else if (references) {\n    params.push(t8.assignmentPattern(t8.identifier(references.name), callRead(references, sectionId)));\n  }\n  return t8.arrowFunctionExpression(params, body);\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.sectionId, provider);\n  providerSignal.subscribers.push(subscriber.identifier);\n}\nfunction generateSignalName(sectionId, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\";\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSectionId) {\n  return callRuntime(\"queueSource\", getScopeExpression2(source.sectionId, targetSectionId), source.identifier, value);\n}\nfunction getScopeExpression2(ownerSectionId, sectionId) {\n  const diff = ownerSectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t8.memberExpression(scope, t8.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t8.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t8.nullLiteral();\n        } else if (body.length === 1 && t8.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t8.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSectionId, references, statement, originalNodes, isInlined) {\n  const reserve = references?.references;\n  const signal = getSignal(targetSectionId, reserve);\n  const statements = signal[type === \"apply\" ? \"render\" : \"hydrate\"] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"hydrate\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t8.isFunction(node)) {\n          addHydrateReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t8.isFunction(originalNodes)) {\n        addHydrateReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addHydrateReferences(signal, expression) {\n  const references = expression.extra?.references?.references;\n  let refs = signal.hydrateInlineReferences;\n  if (references) {\n    if (Array.isArray(references)) {\n      for (const ref of references) {\n        refs = insertReserve(refs, ref);\n      }\n    } else {\n      refs = insertReserve(refs, references);\n    }\n  }\n  signal.hydrateInlineReferences = refs;\n}\nfunction getHydrateRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeSignals(sectionId) {\n  const signals = getSignals(sectionId);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t8.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), value);\n    }\n    const signalDeclarator = t8.variableDeclarator(signal.identifier, value);\n    let hydrateDeclarator;\n    if (signal.hydrate.length) {\n      const hydrateIdentifier = t8.identifier(\"_hydrate\" + signal.identifier.name);\n      if (signal.hydrateInlineReferences) {\n        signal.hydrate.unshift(t8.variableDeclaration(\"const\", (Array.isArray(signal.hydrateInlineReferences) ? signal.hydrateInlineReferences : [signal.hydrateInlineReferences]).map((binding) => t8.variableDeclarator(t8.identifier(binding.name), callRead(binding, sectionId)))));\n      }\n      hydrateDeclarator = t8.variableDeclarator(hydrateIdentifier, callRuntime(\"register\", t8.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), t8.arrowFunctionExpression([scopeIdentifier], signal.hydrate.length === 1 && t8.isExpressionStatement(signal.hydrate[0]) ? signal.hydrate[0].expression : t8.blockStatement(signal.hydrate))));\n      signal.render.push(t8.expressionStatement(callRuntime(\"queueHydrate\", scopeIdentifier, hydrateIdentifier)));\n    }\n    if (t8.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    return hydrateDeclarator ? [\n      t8.variableDeclaration(\"const\", [hydrateDeclarator]),\n      t8.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t8.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, sectionId }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLHydrateCall(sectionId, references) {\n  addStatement(\"hydrate\", sectionId, references, void 0, []);\n}\nfunction writeHTMLHydrateStatements(path3, tagVarIdentifier) {\n  const sectionId = getOrCreateSectionId(path3);\n  const allSignals = Array.from(getSignals(sectionId).values());\n  const scopeIdentifier2 = getScopeIdentifier(sectionId);\n  path3.unshiftContainer(\"body\", t8.variableDeclaration(\"const\", [\n    t8.variableDeclarator(scopeIdentifier2, callRuntime(\"nextScopeId\"))\n  ]));\n  const refs = [];\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].hydrate.length) {\n      const references = allSignals[i].reserve;\n      if (references) {\n        if (Array.isArray(references)) {\n          for (const ref of references) {\n            insertReserve(refs, ref);\n          }\n        } else {\n          insertReserve(refs, references);\n        }\n      }\n      path3.pushContainer(\"body\", t8.expressionStatement(callRuntime(\"writeHydrateCall\", scopeIdentifier2, t8.stringLiteral(getHydrateRegisterId(sectionId, references)))));\n    }\n  }\n  const serializedProperties = refs.reduce((acc, ref) => {\n    acc.push(t8.objectProperty(getNodeLiteral(ref), t8.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(sectionId) !== void 0) {\n    serializedProperties.push(t8.objectProperty(t8.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(sectionId);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t8.objectProperty(key, value, !t8.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceHydrateScope(sectionId)) {\n    const hydrateScopeBuilder = getHydrateScopeBuilder(sectionId);\n    path3.pushContainer(\"body\", t8.expressionStatement(callRuntime(\"writeHydrateScope\", scopeIdentifier2, hydrateScopeBuilder ? hydrateScopeBuilder(t8.objectExpression(serializedProperties)) : t8.objectExpression(serializedProperties))));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t8.blockStatement([t8.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t8.variableDeclaration(\"const\", (Array.isArray(references) ? references : [references]).map((binding) => t8.variableDeclarator(t8.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t8.variableDeclaration(\"const\", [\n    t8.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bind\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(sectionId) {\n  return getSignals(sectionId).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLHydrateStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(0);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t9.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      program.pushContainer(\"body\", [\n        t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(rendererId, t9.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t9.identifier(\"input\"),\n            tagVarIdentifier\n          ], t9.blockStatement(renderContent)))\n        ]),\n        t9.exportDefaultDeclaration(rendererId),\n        t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(t9.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t10 } from \"@marko/compiler\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t10.identifier(\"template\");\n      const walksIdentifier = t10.identifier(\"walks\");\n      const setupIdentifier = t10.identifier(\"setup\");\n      const attrsSignalIdentifier = t10.identifier(\"attrs\");\n      const closuresIdentifier = t10.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, apply } = getSectionMeta(sectionId);\n      forEachSectionIdReverse((childSectionId) => {\n        writeSignals(childSectionId);\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, apply: apply2, register: register2 } = getSectionMeta(childSectionId);\n          const closures2 = getClosures(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, apply2, closures2.length && t10.arrayExpression(closures2));\n          program.node.body.push(t10.variableDeclaration(\"const\", [\n            t10.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t10.stringLiteral(getHydrateRegisterId(childSectionId, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const subscribers = [];\n        const statements = [];\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(sectionId, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t10.exportSpecifier(signalIdentifier, bindingIdentifier.extra.reserve.exportIdentifier));\n          subscribers.push(signalIdentifier);\n          statements.push(t10.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, signalIdentifier, bindingIdentifier)));\n        }\n        program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(attrsSignalIdentifier, callRuntime(\"destructureSources\", t10.arrayExpression(subscribers), t10.arrowFunctionExpression([scopeIdentifier, attrs2.var], t10.blockStatement(statements))))\n        ])), t10.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(sectionId);\n      program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(templateIdentifier, writes || t10.stringLiteral(\"\"))\n      ])), t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(walksIdentifier, walks || t10.stringLiteral(\"\"))\n      ])), t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n        t10.variableDeclarator(setupIdentifier, t10.isNullLiteral(apply) || !apply ? t10.functionExpression(null, [], t10.blockStatement([])) : apply)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(closuresIdentifier, t10.arrayExpression(closures))\n        ])));\n      }\n      program.node.body.push(t10.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier)));\n    }\n  }\n};\n\n// src/util/references.ts\nimport { types as t11 } from \"@marko/compiler\";\nvar [getReferenceGroups] = createSectionState(\"apply\", () => [\n  {\n    sectionId: 0,\n    index: 0,\n    count: 0,\n    references: void 0,\n    apply: t11.identifier(\"\"),\n    hydrate: t11.identifier(\"\")\n  }\n]);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3, reserveType = 1 /* Store */) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(reserveType, sectionId, identifier, name);\n    insertReferenceGroup(getReferenceGroups(sectionId), {\n      sectionId,\n      index: 0,\n      count: 0,\n      references: binding,\n      apply: t11.identifier(\"\"),\n      hydrate: t11.identifier(\"\")\n    });\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        updateReferenceGroup(immediateRoot, \"references\", binding);\n      }\n      updateReferenceGroup(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction updateReferenceGroup(path3, extraKey, newBinding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const currentGroup = (path3.node.extra ??= {})[extraKey];\n  const newReferences = insertReserve(currentGroup?.references, newBinding, true);\n  if (currentGroup) {\n    currentGroup.count--;\n  }\n  getOrCreateReferenceGroup(sectionId, newBinding);\n  path3.node.extra[extraKey] = getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction mergeReferenceGroups(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const group = extra[key];\n    const references = group.references;\n    delete extra[key];\n    group.count--;\n    sectionId = group.sectionId;\n    if (references) {\n      if (Array.isArray(references)) {\n        for (const binding of references) {\n          newReferences = insertReserve(newReferences, binding);\n        }\n      } else {\n        newReferences = insertReserve(newReferences, references);\n      }\n    }\n  }\n  return getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction getOrCreateReferenceGroup(sectionId, references) {\n  const newGroup = {\n    sectionId,\n    index: 0,\n    count: 1,\n    references,\n    apply: t11.identifier(\"\"),\n    hydrate: t11.identifier(\"\")\n  };\n  const referenceGroups = getReferenceGroups(sectionId);\n  const existingGroup = findReferenceGroup(referenceGroups, newGroup);\n  if (existingGroup) {\n    existingGroup.count++;\n  } else {\n    insertReferenceGroup(referenceGroups, newGroup);\n  }\n  return existingGroup ?? newGroup;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nvar { insert: insertReferenceGroup, find: findReferenceGroup } = createSortedCollection(function compareReferenceGroups({ references: a }, { references: b }) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        if (Array.isArray(b)) {\n          const len = a.length;\n          const lenDelta = len - b.length;\n          if (lenDelta !== 0) {\n            return lenDelta;\n          }\n          for (let i = 0; i < len; i++) {\n            const compareResult = compareReserves(a[i], b[i]);\n            if (compareResult !== 0) {\n              return compareResult;\n            }\n          }\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (Array.isArray(b)) {\n        return -1;\n      } else {\n        return compareReserves(a, b);\n      }\n    } else {\n      return 1;\n    }\n  } else {\n    return b ? -1 : 0;\n  }\n});\nfunction finalizeReferences() {\n  const allReferenceGroups = [];\n  forEachSectionId((sectionId) => {\n    const referenceGroups = getReferenceGroups(sectionId).filter((g) => g.count > 0 || !Array.isArray(g.references));\n    referenceGroups.forEach((g, i) => {\n      g.index = i;\n      g.apply.name = generateReferenceGroupName(\"apply\", sectionId, g.references);\n      g.hydrate.name = generateReferenceGroupName(\"hydrate\", sectionId, g.references);\n    });\n    allReferenceGroups[sectionId] = referenceGroups;\n  });\n  (currentProgramPath.node.extra ??= {}).referenceGroups = allReferenceGroups;\n}\nfunction getReferenceGroup(sectionId, lookup, analyze2 = false) {\n  const referenceGroups = analyze2 ? getReferenceGroups(sectionId) : currentProgramPath.node.extra.referenceGroups[sectionId];\n  let found;\n  if (typeof lookup === \"number\") {\n    found = referenceGroups[lookup];\n  } else {\n    found = findReferenceGroup(referenceGroups, {\n      references: lookup\n    });\n  }\n  if (!found) {\n    throw new Error(`Reference group not found for section ${sectionId}: ${lookup}`);\n  }\n  return found;\n}\nfunction generateReferenceGroupName(type, sectionId, references) {\n  let name = type + (sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\");\n  if (references) {\n    if (Array.isArray(references)) {\n      name += \"With\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return currentProgramPath.scope.generateUid(name);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeReferences();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t12.importDeclaration([], t12.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t12.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t13.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t14.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t14.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t14.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t15.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t15.isMarkoTag(sibling) || t15.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t16 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t16);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t20 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t18 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t17 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t17.identifier(name) : t17.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t18.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t18.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t18.spreadElement(value));\n    } else {\n      result.properties.push(t18.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t18.objectMethod(\"method\", t18.identifier(\"renderBody\"), params, t18.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t18.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t18.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t18.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t19 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t19.variableDeclaration(kind, [\n    t19.variableDeclarator(t19.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, name, `#${node.name.value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t20.arrowFunctionExpression([], t20.blockStatement([\n            t20.throwStatement(t20.newExpression(t20.identifier(\"Error\"), [\n              t20.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSectionId = getSectionId(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t20.expressionStatement(callRead(extra.reserve, referenceSectionId)));\n            } else {\n              createElFunction ??= t20.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bind\", getScopeExpression(extra.reserve, referenceSectionId), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t20.variableDeclaration(\"const\", [\n              t20.variableDeclarator(createElFunction, t20.arrowFunctionExpression([scopeIdentifier], t20.memberExpression(scopeIdentifier, getNodeLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getNodeLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t20.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t20.expressionStatement(callRuntime(helper, t20.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLHydrateCall(sectionId, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t20.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"hydrate\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"on\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"attr\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLHydrateStatements(tagBody);\n  if (t21.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t21.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t21.objectProperty(t21.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t21.unaryExpression(\"void\", t21.numericLiteral(0)), \"let\");\n      renderTagExpr = t21.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t21.ifStatement(tagIdentifier, t21.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const sectionId = getSectionId(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t21.arrowFunctionExpression([], t21.blockStatement([])), t21.stringLiteral(getHydrateRegisterId(sectionId, node.var.extra?.reserve)), getScopeIdentifier(sectionId))));\n    setForceHydrateScope(sectionId);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSectionId = getSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySectionId = getSectionId(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSectionId).push(callRuntime(\"inChildMany\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getNodeLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySectionId !== tagSectionId) {\n    attrsObject ??= t21.objectExpression([]);\n    attrsObject.properties.push(t21.objectProperty(t21.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySectionId))));\n  }\n  if (node.var) {\n    const source = initSource(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"apply\", tagSectionId, void 0, t21.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getNodeLiteral(binding), source.identifier)));\n  }\n  addStatement(\"apply\", tagSectionId, void 0, t21.expressionStatement(t21.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n  if (attrsObject && tagAttrsIdentifier) {\n    let attrsSubscriber = callRuntime(\"inChild\", tagAttrsIdentifier, getNodeLiteral(binding));\n    if (!tag.node.extra.attrsReferences.references) {\n      const tagAttrsIdentifierInChild = currentProgramPath.scope.generateUidIdentifier(`${tagName}_attrs_inChild`);\n      currentProgramPath.pushContainer(\"body\", t21.variableDeclaration(\"const\", [\n        t21.variableDeclarator(tagAttrsIdentifierInChild, attrsSubscriber)\n      ]));\n      attrsSubscriber = tagAttrsIdentifierInChild;\n    }\n    getSignal(tagSectionId, tag.node.extra.attrsReferences.references).subscribers.push(attrsSubscriber);\n    addStatement(\"apply\", tagSectionId, tag.node.extra.attrsReferences, t21.expressionStatement(callRuntime(\"setSource\", callRead(binding, tagSectionId), t21.identifier(tagAttrsIdentifier.name), attrsObject)));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t21.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t21.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t21.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t23 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t22 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t22.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t22.isBlockStatement(body)) {\n    return body;\n  }\n  return t22.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferenceGroups(getOrCreateSectionId(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      updateReferenceGroup(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t23.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t23.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t23.expressionStatement(dynamicTagExpr))[0].skip();\n        }\n      } else {\n        const sectionId = getSectionId(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const hasBody = sectionId !== bodySectionId;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySectionId);\n        const tagNameReserve = node.extra?.reserve;\n        const references = node.extra?.nameReferences?.references;\n        const signal = getSignal(sectionId, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getNodeLiteral(tagNameReserve), t23.numericLiteral(countReserves(references) || 1), getComputeFn(sectionId, renderBodyIdentifier ? t23.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name, references), signal.subscribers[0], t23.arrowFunctionExpression([scopeIdentifier], t23.blockStatement(signal.render)));\n        };\n        subscribe(references, signal);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const attrsSignal = getSignal(sectionId, node.extra?.attrsReferences.references);\n          attrsSignal.subscribers.push(callRuntime(\"dynamicAttrsProxy\", getNodeLiteral(tagNameReserve)));\n          addStatement(\"apply\", sectionId, node.extra?.attrsReferences, t23.expressionStatement(callRuntime(\"dynamicTagAttrs\", scopeIdentifier, getNodeLiteral(tagNameReserve), t23.arrowFunctionExpression([], attrsObject ?? t23.objectExpression([])), renderBodyIdentifier)));\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t24.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(info.identifier, t24.arrayExpression([]))\n          ]) : t24.variableDeclaration(\"let\", [\n            t24.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t24.expressionStatement(info.repeated ? t24.callExpression(t24.memberExpression(info.identifier, t24.identifier(\"push\")), [attrsObject]) : t24.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, t24.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t25.variableDeclaration(\"const\", [\n          t25.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"apply\", getSectionId(placeholder), valueReferences, t26.expressionStatement(method === \"data\" ? callRuntime(\"data\", t26.memberExpression(scopeIdentifier, getNodeLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getNodeLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t26.isMarkoComment(path3) || t26.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"apply\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      const sectionId = getOrCreateSectionId(tag);\n      trackReferencesForBindings(sectionId, varPath, 1 /* Store */);\n      for (const key in bindings) {\n        const binding = bindings[key].extra.reserve;\n        binding.exportIdentifier = getReferenceGroup(sectionId, binding, true).apply;\n      }\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initSource(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t28 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t27 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t27.isBlockStatement(body)) {\n    return body;\n  }\n  return t27.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t28.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferenceGroups(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences.references;\n    rootExtra.hoistedScopeIdentifier = rootExtra.isStateful && tag.scope.generateUidIdentifier(\"ifScope\");\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const sectionId = getSectionId(tag);\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markHydrateScopeStart\", getScopeIdentifier(bodySectionId))}`;\n      }\n      setHydrateScopeBuilder(bodySectionId, (object) => {\n        return t28.callExpression(t28.memberExpression(t28.identifier(\"Object\"), t28.identifier(\"assign\")), [\n          branches[0].tag.node.extra.hoistedScopeIdentifier,\n          object\n        ]);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdentifier(sectionId));\n    }\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t28.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return callRuntime(\"inConditionalScope\", subscriber, getNodeLiteral(extra.reserve));\n        });\n        if (isStateful) {\n          setRegisterRenderer(sectionId2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t28.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const references = extra.conditionalReferences.references;\n      const signal = getSignal(sectionId, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getNodeLiteral(extra.reserve), t28.numericLiteral(countReserves(references) || 1), getComputeFn(sectionId, expr, references));\n      };\n      subscribe(references, signal);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = branches[0].tag.node.extra.hoistedScopeIdentifier;\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        if (isStateful) {\n          tag2.node.body.body.push(t28.expressionStatement(callRuntime(\"register\", ifRendererIdentifier, t28.stringLiteral(getHydrateRegisterId(sectionId2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t28.expressionStatement(t28.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdentifier(sectionId2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t28.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          singleNodeOptimization && t28.variableDeclaration(\"let\", [\n            t28.variableDeclarator(ifScopeIdIdentifier)\n          ]),\n          t28.variableDeclaration(\"const\", [\n            t28.variableDeclarator(ifScopeIdentifier, t28.objectExpression([])),\n            t28.variableDeclarator(ifRendererIdentifier, t28.arrowFunctionExpression([], t28.blockStatement([])))\n          ]),\n          statement\n        ].filter(Boolean));\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markHydrateControlSingleNodeEnd\", getScopeIdentifier(sectionId), getNodeLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markHydrateControlEnd\", getScopeIdentifier(sectionId), getNodeLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t29.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      if (identifiers.length === 1) {\n        initDerivation(identifiers[0].extra.reserve, defaultAttr.extra?.valueReferences?.references, defaultAttr.value);\n      } else {\n      }\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t31.isFunctionExpression(value) || t31.isArrowFunctionExpression(value) && t31.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t31.traverse(value.body, (node2) => {\n            if (t31.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"hydrate\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t31.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLHydrateCall(sectionId, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const sectionId = getSectionId(tag);\n      reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"hydrate\", sectionId, node.extra.attrsReferences, t32.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLHydrateCall(sectionId, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t33.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t33.variableDeclaration(\"const\", [t33.variableDeclarator(node.var, id)]));\n    } else {\n      initDerivation(tagVar.extra.reserve, void 0, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    const ofAttr = findName(attributes, \"of\");\n    const byAttr = findName(attributes, \"by\");\n    setSubscriberBuilder(tag, (signal) => {\n      return callRuntime(\"inLoopScope\", signal, getNodeLiteral(reserve));\n    });\n    if (ofAttr) {\n      const ofAttrValue = ofAttr.value;\n      const [valParam] = params;\n      if (!t34.isIdentifier(valParam)) {\n        throw tag.buildCodeFrameError(`Invalid 'for of' tag, |value| parameter must be an identifier.`);\n      }\n      const rendererId = getRenderer(bodySectionId);\n      tag.remove();\n      const references = ofAttr.extra?.valueReferences?.references;\n      const signal = getSignal(sectionId, reserve);\n      signal.build = () => {\n        const bindings = paramsPath.reduce((paramsLookup, param) => {\n          return Object.assign(paramsLookup, param.getBindingIdentifiers());\n        }, {});\n        return callRuntime(\"loop\", getNodeLiteral(reserve), t34.numericLiteral(countReserves(references) || 1), rendererId, t34.arrayExpression(Object.values(bindings).map((binding) => getSignal(bodySectionId, binding.extra.reserve).identifier)), t34.arrowFunctionExpression([scopeIdentifier, t34.arrayPattern(params)], t34.blockStatement(Object.values(bindings).map((binding) => {\n          return t34.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, getSignal(bodySectionId, binding.extra.reserve).identifier, binding));\n        }))), getComputeFn(sectionId, t34.arrayExpression([\n          ofAttrValue,\n          byAttr ? byAttr.value : t34.nullLiteral()\n        ]), references));\n      };\n      subscribe(references, signal);\n      for (const param of params) {\n        initSource(param.extra?.reserve);\n      }\n    }\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const tagBody = tag.get(\"body\");\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params }\n    } = node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const fromAttr = findName(attributes, \"from\");\n    const toAttr = findName(attributes, \"to\");\n    const block = t34.blockStatement(body);\n    let forNode;\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      if (valParam) {\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(valParam, t34.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      forNode = t34.forInStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(keyParam)]), inAttr.value, block);\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      const [valParam, keyParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      forNode = [];\n      if (keyParam) {\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(keyParam, \"i\");\n        forNode.push(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(indexName, t34.numericLiteral(0))\n        ]));\n        block.body.unshift(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(keyParam, t34.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t34.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        forNode.push(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      forNode.push(t34.forOfStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (fromAttr && toAttr) {\n      const stepAttr = findName(attributes, \"step\") || {\n        value: t34.numericLiteral(1)\n      };\n      const stepValue = stepAttr ? stepAttr.value : t34.numericLiteral(1);\n      const [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      if (indexParam) {\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(indexParam, t34.binaryExpression(\"+\", fromAttr.value, t34.binaryExpression(\"*\", stepName, stepValue)))\n        ]));\n      }\n      forNode = t34.forStatement(t34.variableDeclaration(\"let\", [\n        t34.variableDeclarator(stepsName, t34.binaryExpression(\"/\", t34.binaryExpression(\"-\", toAttr.value, fromAttr.value), stepValue)),\n        t34.variableDeclarator(stepName, t34.numericLiteral(0))\n      ]), t34.binaryExpression(\"<=\", stepName, stepsName), t34.updateExpression(\"++\", stepName), block);\n    }\n    block.body.push(t34.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple([].concat(forNode));\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t34.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"from\") && findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t34.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId2,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const sectionId = getOrCreateSectionId(tag);\n      if (sectionId === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t35.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t35.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId2(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(node.var, callRuntime(\"getInContext\", t35.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t36 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const [defaultAttr] = node.attributes;\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t36.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t36.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initSource(binding);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t36.expressionStatement(callRuntime(\"setSource\", scopeIdentifier, source.identifier, defaultAttr.value)));\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t37.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t37.expressionStatement(callRuntime(\"pushContext\", t37.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySectionId);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences?.references, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLHydrateStatements(tag.get(\"body\"));\n        tag.insertAfter(t37.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t38 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([], t38.stringLiteral(importPath)));\n      } else if (t38.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([t38.importDefaultSpecifier(tag.node.var)], t38.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t38.variableDeclaration(\"const\", [\n          t38.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t39 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t39.variableDeclaration(\"const\", [\n        t39.variableDeclarator(tag.node.var, t39.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t40 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t40.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t40.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t41 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t41.markoTag(t41.stringLiteral(\"attrs\"), void 0, t41.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t41.isMemberExpression(identifier.parent) && t41.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t41.markoTag(t41.stringLiteral(\"get\"), void 0, t41.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["files","externalFiles","selectedIndex","externalSelected","selectedFile","nextId","file","index","editing","selected","mutable","d","name","finishRename","modifiedFile","path","replace","slice","nameInput","length","e","code","focus","setSelectionRange","indexOf","window","confirm","stopPropagation","newFile","content","newIndex","concat","actions","body","renderBody","value","valueChange","class","className","el","target","attrs","compressToEncodedURIComponent","JSON","stringify","default","query","fallback","isMatch","matchMedia","matches","mq","listener","addEventListener","removeEventListener","left","right","editorSize","resizing","isVertical","container","preventDefault","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","getCompilerOptions","previewType","debounce","activeEditor","async","loading","preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","this","isUpdating","removevEventListener","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","t","bindingTag","isMarkoTag","bindingTagName","defaultAttr","assignments","constantViolations","i","assignment","tagNameDynamic","startSection","sectionId","programExtra","sectionNameNode","sectionName","nextSectionId","sectionNames","generateUid","getOrCreateSectionId","cur","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","state","getScopeIdentifier","generateUidIdentifier","forEachSectionId","fn","createSortedCollection","compare","insert","data","val","immutable","Array","isArray","arr","len","pos","mid","compareResult","next","insertInArray","find","findIndex","count","getReservesByType","reserveScope","debugKey","reserve","reserve2","reservesByType","id","getNodeLiteral","optimize","t2","compareReserves","a","b","insertReserve","countReserves","toString","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","pureFunctions","Symbol","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","importRuntime","importNamed","getRuntimePath","callRuntime","args","callExpression2","t3","filterArguments","includes","leadingComments","getHTMLRuntime","callRead","reference","targetSectionId","getScopeExpression","diff","scopeIdentifier","filteredArgs","arg","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t4","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","map","appendLiteral","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","depth","step","lastIndexOf","current","walk","nCodeString","writeTo","fromCharCode","number","toCharString","Error","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t5","join","getRenderer","t6","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","consumeHTML","flushBefore","expr","skip","flushInto","isProgram","pushContainer","getSectionMeta","apply","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","attributes","t7","loc","end","msg","buildError","returnId2","replaceWith","signal","getSignal","valueReferences","references","tagVarSignalIdentifier","subscribers","addStatement","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","getClosures","forceHydrateScope","_setForceHydrateScope","getSerializedScopeProperties","getHydrateScopeBuilder","setHydrateScopeBuilder","setSubscriberBuilder","builder","r","sort","signals","set","identifier","t8","generateSignalName","render","hydrate","hydrateInlineReferences","subscribe","build","getComputeFn","provider","hasDynamicSubscribers","subscriber","initSource","initDerivation","providers","compute","params","forEach","p","ref","statement","originalNodes","isInlined","statements","addHydrateReferences","expression","refs","getHydrateRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","getMappedId","addHTMLHydrateCall","writeHTMLHydrateStatements","tagVarIdentifier","allSignals","from","values","scopeIdentifier2","unshiftContainer","serializedProperties","reduce","acc","additionalProperties","hydrateScopeBuilder","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","root","functionIdentifier","unshift","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t9","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","dom_default","templateIdentifier","t10","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionIdReverse","childSectionId","declarations","flatMap","signalDeclarator","hydrateDeclarator","hydrateIdentifier","finalizeSignalArgs","arguments","newPath","traverse","writeSignals","writes2","apply2","register2","closures2","renderer","exportSpecifiers","bindings","bindingIdentifier","signalIdentifier","exportIdentifier","closures","getReferenceGroups","t11","trackReferencesForBindings","reserveType","getBindingIdentifiers","referencePaths","filter","path4","insertReferenceGroup","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","updateReferenceGroup","listKey","extraKey","newBinding","currentGroup","newReferences","getOrCreateReferenceGroup","mergeReferenceGroups","groupEntries","group","newGroup","referenceGroups","existingGroup","findReferenceGroup","curPath","isMarkoPath","isFunctionExpression","lenDelta","getReferenceGroup","lookup","analyze2","found","generateReferenceGroupName","previousProgramPath","WeakMap","program_default","migrate","crawl","analyze","curIndex","reserves","allReferenceGroups","g","finalizeReferences","t12","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment_expression_default","t13","update_expression_default","t14","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t15","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t16","exit2","Boolean","IDENTIFIER_REG","toPropertyName","t17","attrsToObject","withRenderBody","t18","resultExtra","properties","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t19","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t20","varName","createElFunction","referenceSectionId","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childProgramExtra","loadFileForTag","ast","attrsReferences","tagBody","tagIdentifier","t21","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceHydrateScope","translateHTML","tagSectionId","tagBodySectionId","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","attrsSubscriber","tagAttrsIdentifierInChild","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","toFirstExpressionOrBlock","nodes","t22","dynamic_tag_default","t23","dynamicTagExpr","bodySectionId","renderBodyIdentifier","tagNameReserve","nameReferences","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t24","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t25","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","prev","getPrevSibling","noOutput","t26","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t27","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t28","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","tag2","isStateful","hoistedScopeIdentifier","singleNodeOptimization","every","writePrependTo","object","sectionId2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t29","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t30","identifiers","effect_default","assertNoParams6","t31","inlineStatements","node2","lifecycle_default","assertNoParams7","t32","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t33","for_default","isOnlyChild","t34","getTagDef5","html","checkOnlyChild","parentTagName","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","keys","translateHTML2","translateDOM2","of","in","to","paramsPath","ofAttr","byAttr","ofAttrValue","valParam","paramsLookup","param","assign","namePath","inAttr","fromAttr","toAttr","block","forNode","keyParam","loopParam","indexName","generateUidIdentifierBasedOnNode","stepAttr","stepValue","indexParam","stepsName","stepName","obj","get_default","assertNoParams9","refId","t35","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId2","templateId","initContextConsumer","put_default","t37","scopeAccessor","valueAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","assertNoParams11","t36","registerAssignmentReplacer","ownerSectionId","getScopeExpression2","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t39","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t38","importDefault2","enum","trim","parseScript3","t40","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","add","t41","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","entries","visitor","taglibs","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","_","legacy","_resolveExportsOptions","browser","env","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","n","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}