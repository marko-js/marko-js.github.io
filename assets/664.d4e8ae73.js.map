{"version":3,"file":"664.d4e8ae73.js","mappings":"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","sources":["webpack:///../components/repl/components/file-tabs.marko","webpack:///../components/repl/components/pane.marko","webpack:///../components/repl/components/controllable-select.marko","webpack:///../components/repl/components/playground-link.marko","webpack:///../components/repl/components/match-media.marko","webpack:///../components/repl/components/resizable-panes.marko","webpack:///../components/repl/index.marko","webpack:///./playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ value: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <if=activeEditor>\n          <activeEditor\n            value=selectedFile.content \n            filename=selectedFile.path \n            valueChange(content) {\n              const modifiedFile = { ...selectedFile, content };\n              files = [\n                ...files.slice(0, selectedIndex), \n                modifiedFile,\n                ...files.slice(selectedIndex+1)\n              ];\n              debounce = true;\n            }/>\n        </if>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nstatic function getInitialValue() {\n  try {\n    if (typeof window !== \"undefined\") {\n      return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\n<attrs/{ value:defaultValue }/>\n<let/value = getInitialValue() || defaultValue/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removeEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","// src/visitors/program/index.ts\nimport { types as t12 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t9 } from \"@marko/compiler\";\n\n// src/util/sections.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"test\"));\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              type = 2 /* DynamicTag */;\n              continue;\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sectionNameNode = path3.parent?.name;\n    const sectionName = sectionNameNode?.value ?? sectionNameNode?.name ?? \"dynamic\";\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n    programExtra.sectionNames = programExtra.sectionNames ?? [];\n    programExtra.sectionNames[sectionId] = currentProgramPath.scope.generateUid(sectionName + \"Body\");\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init(sectionId);\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nvar [getScopeIdIdentifier] = createSectionState(\"scopeIdIdentifier\", (sectionId) => currentProgramPath.scope.generateUidIdentifier(`scope${sectionId}_id`));\nvar [_getScopeIdentifier] = createSectionState(\"scopeIdentifier\", () => t2.identifier(\"undefined\"));\nvar getScopeIdentifier = (sectionId, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(sectionId);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${sectionId}_`);\n  }\n  return scopeId;\n};\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t3 } from \"@marko/compiler\";\n\n// src/util/sorted-repeatable.ts\nvar SortedRepeatable = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? insertSorted(this.compare, data, item) : joinItems(this.compare, data, item) : item;\n  }\n  addAll(data, items) {\n    if (data) {\n      if (Array.isArray(data)) {\n        if (items) {\n          if (Array.isArray(items)) {\n            for (const item of items) {\n              insertSorted(this.compare, data, item);\n            }\n          } else {\n            insertSorted(this.compare, data, items);\n          }\n        }\n        return data;\n      }\n      if (items) {\n        if (Array.isArray(items)) {\n          return insertSorted(this.compare, [...items], data);\n        }\n        return joinItems(this.compare, items, data);\n      }\n      return data;\n    }\n    if (Array.isArray(items)) {\n      return [...items];\n    }\n    return items;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        let max = data.length;\n        let pos = 0;\n        while (pos < max) {\n          const mid = pos + max >>> 1;\n          const cur = data[mid];\n          const compareResult = this.compare(cur, item);\n          if (compareResult === 0)\n            return cur;\n          if (compareResult > 0)\n            max = mid;\n          else\n            pos = mid + 1;\n        }\n      } else {\n        return this.compare(data, item) === 0 ? data : void 0;\n      }\n    }\n  }\n  clone(item) {\n    return Array.isArray(item) ? [...item] : item;\n  }\n  size(data) {\n    return data ? Array.isArray(data) ? data.length : 1 : 0;\n  }\n  toArray(data, map) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return data.map(map);\n      }\n      return [map(data)];\n    }\n    return [];\n  }\n};\nfunction joinItems(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\nfunction insertSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0)\n      return data;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    data[pos++] = next;\n  }\n  data[len] = cur;\n  return data;\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getNodeLiteral(reserve) {\n  if (!isOptimize()) {\n    return t3.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n  }\n  return t3.numericLiteral(reserve.id);\n}\nvar repeatableReserves = new SortedRepeatable(function compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n});\n\n// src/util/runtime.ts\nimport { types as t4 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val || val === 0 ? val + \"\" : \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (!val && val !== 0) {\n      return \"&zwj;\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n        return \"true\";\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"value\",\n  \"intersection\",\n  \"closure\",\n  \"dynamicClosure\",\n  \"contextClosure\",\n  \"loop\",\n  \"conditional\",\n  \"bindFunction\",\n  \"bindRenderer\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t4.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t4.memberExpression(getScopeExpression(reference, targetSectionId), getNodeLiteral(reference), true);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t4.memberExpression(scope, t4.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t4.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t8 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t7 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t5 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t5.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t5.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t5.templateLiteral(strs.map((raw) => t5.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t5.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t6 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t6.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (sectionId) => {\n  const name = currentProgramPath.node.extra.sectionNames[sectionId];\n  return t7.identifier(name);\n});\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t7.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    setup: getSetup(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t7.stringLiteral(\"\"),\n    register: getRegisterRenderer(sectionId)\n  };\n}\nfunction markNode(path3) {\n  const sectionId = getSectionId(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markResumeNode\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const sectionId = getSectionId(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t8.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(sectionId, returnId2);\n      tag.replaceWith(t8.variableDeclaration(\"const\", [\n        t8.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      addValue(sectionId, defaultAttr.extra?.valueReferences, {\n        identifier: importRuntime(\"tagVarSignal\"),\n        hasDownstreamIntersections: () => true\n      }, defaultAttr.value);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(sectionId) {\n  _setForceResumeScope(sectionId, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getRegisterScopeBuilder, _setRegisterScopeBuilder] = createSectionState(\"register\");\nfunction setRegisterScopeBuilder(tag, builder) {\n  _setRegisterScopeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction getSignal(sectionId, reserve) {\n  const signals = getSignals(sectionId);\n  let signal = signals.get(reserve);\n  if (!signal) {\n    signals.set(reserve, signal = {\n      identifier: t9.identifier(generateSignalName(sectionId, reserve)),\n      reserve,\n      sectionId,\n      values: [],\n      intersectionDeclarations: [],\n      intersection: [],\n      render: [],\n      effect: [],\n      effectInlineReferences: void 0,\n      subscribers: [],\n      closures: /* @__PURE__ */ new Map(),\n      hasDownstreamIntersections: () => {\n        if (signal.intersection.length > 0 || signal.closures.size || signal.values.some((v) => v.signal.hasDownstreamIntersections())) {\n          signal.hasDownstreamIntersections = () => true;\n          return true;\n        } else {\n          signal.hasDownstreamIntersections = () => false;\n          return false;\n        }\n      }\n    });\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!reserve) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"intersection\", t9.numericLiteral(reserve.length), getSignalFn(signal, [scopeIdentifier], reserve));\n      };\n    } else if (reserve.sectionId !== sectionId) {\n      const provider = getSignal(reserve.sectionId, reserve);\n      getClosures(sectionId).push(signal.identifier);\n      provider.closures.set(sectionId, signal);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(sectionId);\n        return callRuntime(builder ? \"closure\" : \"dynamicClosure\", getNodeLiteral(reserve), getSignalFn(signal, [scopeIdentifier, t9.identifier(reserve.name)]));\n      };\n    } else {\n      signal.build = () => {\n        return t9.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n      };\n    }\n  }\n  return signal;\n}\nfunction initValue(reserve, valueAccessor = getNodeLiteral(reserve)) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      t9.identifier(reserve.name)\n    ]);\n    if (fn.body.body.length > 0) {\n      return callRuntime(\"value\", valueAccessor, fn);\n    } else {\n      return fn;\n    }\n  };\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const sectionId = reserve.sectionId;\n  const scopeAccessor = getNodeLiteral(reserve);\n  const valueAccessor = t9.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const subscribersAccessor = t9.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}${\"*\" /* SUBSCRIBERS */}`);\n  const signal = initValue(reserve, valueAccessor);\n  addValue(sectionId, providers, signal, compute);\n  signal.intersection.push(t9.expressionStatement(callRuntime(\"dynamicSubscribers\", t9.memberExpression(scopeIdentifier, subscribersAccessor, true), dirtyIdentifier)));\n  addStatement(\"render\", reserve.sectionId, void 0, t9.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t9.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  getClosures(sectionId).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getNodeLiteral(reserve), t9.stringLiteral(templateId), getSignalFn(signal, [scopeIdentifier, t9.identifier(reserve.name)]));\n  };\n  return signal;\n}\nfunction addIntersectionWithGuardedValue(signal, name, value, getStatement) {\n  const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(name);\n  signal.render.push(t9.expressionStatement(t9.assignmentExpression(\"=\", valueIdentifier, value)));\n  signal.intersection.push(getStatement(valueIdentifier));\n  signal.intersectionDeclarations.push(t9.variableDeclarator(valueIdentifier));\n}\nfunction getSignalFn(signal, params, references) {\n  const isSetup = !signal.reserve;\n  const sectionId = signal.sectionId;\n  const needsDirty = !isSetup && signal.hasDownstreamIntersections();\n  let statements;\n  for (const value of signal.values) {\n    const callee = value.signal.identifier;\n    const needsDirty2 = !isSetup && value.signal.hasDownstreamIntersections();\n    if (needsDirty2) {\n      addIntersectionWithGuardedValue(signal, callee.name + \"_value\", value.value, (valueIdentifier) => {\n        return t9.expressionStatement(t9.callExpression(callee, [\n          value.scope,\n          valueIdentifier,\n          dirtyIdentifier\n        ]));\n      });\n    } else {\n      signal.render.push(t9.expressionStatement(t9.callExpression(callee, [value.scope, value.value])));\n    }\n  }\n  const closureEntries = Array.from(signal.closures.entries()).sort(([a], [b]) => a - b);\n  for (const [closureSectionId, closureSignal] of closureEntries) {\n    const builder = getSubscribeBuilder(closureSectionId);\n    if (builder) {\n      signal.intersection.push(builder(closureSignal.identifier));\n    } else if (!signal.hasDynamicSubscribers) {\n      const dynamicSubscribersKey = getNodeLiteral(closureSignal.reserve);\n      dynamicSubscribersKey.value += \"*\" /* SUBSCRIBERS */;\n      signal.hasDynamicSubscribers = true;\n      signal.intersection.push(t9.expressionStatement(callRuntime(\"dynamicSubscribers\", t9.memberExpression(scopeIdentifier, dynamicSubscribersKey, true), dirtyIdentifier)));\n    }\n  }\n  if (Array.isArray(references)) {\n    signal.render.unshift(t9.variableDeclaration(\"const\", references.map((binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n  } else if (references) {\n    signal.render.unshift(t9.variableDeclaration(\"const\", [\n      t9.variableDeclarator(t9.identifier(references.name), callRead(references, sectionId))\n    ]));\n  }\n  if (needsDirty) {\n    params.push(dirtyIdentifier);\n    if (signal.render.length) {\n      statements = [\n        t9.ifStatement(dirtyIdentifier, t9.blockStatement(signal.render)),\n        ...signal.intersection\n      ];\n      if (signal.intersectionDeclarations.length) {\n        statements.unshift(t9.variableDeclaration(\"let\", signal.intersectionDeclarations));\n      }\n    } else {\n      statements = signal.intersection;\n    }\n  } else {\n    statements = signal.render;\n  }\n  return t9.arrowFunctionExpression(params, t9.blockStatement(statements));\n}\nfunction getTagVarSignal(varPath) {\n  if (varPath.isIdentifier()) {\n    return initValue(varPath.node.extra.reserve);\n  } else {\n    return getDestructureSignal(Object.values(varPath.getBindingIdentifiers()), varPath.node);\n  }\n}\nfunction getTagParamsSignal(paramsPaths, pattern = t9.arrayPattern(paramsPaths.map((path3) => path3.node))) {\n  const parameterBindings = paramsPaths.reduce((bindingsLookup, path3) => {\n    return Object.assign(bindingsLookup, path3.getBindingIdentifiers());\n  }, {});\n  return getDestructureSignal(parameterBindings, pattern);\n}\nfunction getDestructureSignal(bindingsByName, destructurePattern) {\n  const bindings = Array.isArray(bindingsByName) ? bindingsByName : Object.values(bindingsByName);\n  if (bindings.length) {\n    const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n    const bindingSignals = bindings.map((binding) => initValue(binding.extra?.reserve));\n    const declarations = t9.variableDeclaration(\"let\", bindings.map((binding) => t9.variableDeclarator(binding)));\n    return {\n      get identifier() {\n        const name = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n        currentProgramPath.pushContainer(\"body\", [\n          t9.variableDeclaration(\"const\", [\n            t9.variableDeclarator(name, this.build(true))\n          ])\n        ]);\n        return name;\n      },\n      build(canCallOnlyWhenDirty) {\n        if (canCallOnlyWhenDirty && !this.hasDownstreamIntersections()) {\n          return t9.arrowFunctionExpression([scopeIdentifier, destructurePattern], t9.blockStatement(bindingSignals.map((signal, i) => t9.expressionStatement(t9.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i]\n          ])))));\n        }\n        return t9.arrowFunctionExpression([\n          scopeIdentifier,\n          valueIdentifier,\n          t9.assignmentPattern(dirtyIdentifier, t9.booleanLiteral(true))\n        ], t9.blockStatement([\n          declarations,\n          t9.ifStatement(dirtyIdentifier, t9.expressionStatement(t9.assignmentExpression(\"=\", destructurePattern, valueIdentifier))),\n          ...bindingSignals.map((signal, i) => t9.expressionStatement(t9.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i],\n            dirtyIdentifier\n          ])))\n        ]));\n      },\n      hasDownstreamIntersections() {\n        return bindings.some((binding) => {\n          const reserve = binding.extra?.reserve;\n          const signal = getSignal(reserve.sectionId, reserve);\n          return signal.hasDownstreamIntersections();\n        });\n      }\n    };\n  }\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.sectionId, provider);\n  providerSignal.intersection.push(t9.expressionStatement(t9.callExpression(subscriber.identifier, [\n    scopeIdentifier,\n    dirtyIdentifier\n  ])));\n}\nfunction generateSignalName(sectionId, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\";\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSectionId) {\n  return callRuntime(\"queueSource\", getScopeExpression2(source.sectionId, targetSectionId), source.identifier, value);\n}\nfunction getScopeExpression2(ownerSectionId, sectionId) {\n  const diff = ownerSectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t9.memberExpression(scope, t9.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t9.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t9.nullLiteral();\n        } else if (body.length === 1 && t9.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t9.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSectionId, references, statement, originalNodes, isInlined) {\n  const signal = getSignal(targetSectionId, references);\n  const statements = signal[type] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"effect\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t9.isFunction(node)) {\n          addEffectReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t9.isFunction(originalNodes)) {\n        addEffectReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addValue(targetSectionId, references, signal, value, scope = scopeIdentifier) {\n  getSignal(targetSectionId, references).values.push({ signal, value, scope });\n}\nfunction addEffectReferences(signal, expression) {\n  signal.effectInlineReferences = repeatableReserves.addAll(signal.effectInlineReferences, expression.extra?.references);\n}\nfunction getResumeRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeSignals(sectionId) {\n  const signals = getSignals(sectionId);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let effectDeclarator;\n    if (signal.effect.length) {\n      const effectIdentifier = t9.identifier(`${signal.identifier.name}_effect`);\n      if (signal.effectInlineReferences) {\n        signal.effect.unshift(t9.variableDeclaration(\"const\", repeatableReserves.toArray(signal.effectInlineReferences, (binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n      }\n      effectDeclarator = t9.variableDeclarator(effectIdentifier, callRuntime(\"register\", t9.stringLiteral(getResumeRegisterId(sectionId, signal.reserve)), t9.arrowFunctionExpression([scopeIdentifier], signal.effect.length === 1 && t9.isExpressionStatement(signal.effect[0]) ? signal.effect[0].expression : t9.blockStatement(signal.effect))));\n      signal.render.push(t9.expressionStatement(callRuntime(\"queueEffect\", scopeIdentifier, effectIdentifier)));\n    }\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t9.stringLiteral(getResumeRegisterId(sectionId, signal.reserve)), value);\n    }\n    if (t9.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    const signalDeclarator = t9.variableDeclarator(signal.identifier, value);\n    return effectDeclarator ? [\n      t9.variableDeclaration(\"const\", [effectDeclarator]),\n      t9.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t9.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, sectionId }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLEffectCall(sectionId, references) {\n  addStatement(\"effect\", sectionId, references, void 0, []);\n}\nfunction writeHTMLResumeStatements(path3, tagVarIdentifier) {\n  const sectionId = getOrCreateSectionId(path3);\n  const intersections = currentProgramPath.node.extra.intersectionsBySection?.[sectionId] ?? [];\n  const allSignals = Array.from(getSignals(sectionId).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(sectionId);\n  const scopeIdentifier2 = getScopeIdentifier(sectionId, true);\n  path3.unshiftContainer(\"body\", t9.variableDeclaration(\"const\", [\n    t9.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  const serializedReferences = [];\n  for (const intersection of intersections) {\n    for (const reference of intersection) {\n      if (reference.type !== 0 /* Visit */) {\n        repeatableReserves.add(serializedReferences, reference);\n      }\n    }\n  }\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].reserve;\n      repeatableReserves.addAll(serializedReferences, signalRefs);\n      path3.pushContainer(\"body\", t9.expressionStatement(callRuntime(\"writeEffect\", scopeIdIdentifier, t9.stringLiteral(getResumeRegisterId(sectionId, signalRefs)))));\n    }\n  }\n  const serializedProperties = serializedReferences.reduce((acc, ref) => {\n    acc.push(t9.objectProperty(getNodeLiteral(ref), t9.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(sectionId) !== void 0) {\n    serializedProperties.push(t9.objectProperty(t9.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(sectionId);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t9.objectProperty(key, value, !t9.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceResumeScope(sectionId)) {\n    const isRoot = path3.isProgram();\n    const builder = getRegisterScopeBuilder(sectionId);\n    path3.pushContainer(\"body\", t9.expressionStatement(callRuntime(\"writeScope\", scopeIdIdentifier, builder ? builder(t9.objectExpression(serializedProperties)) : t9.objectExpression(serializedProperties), isRoot ? scopeIdentifier2 : null)));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t9.blockStatement([t9.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t9.variableDeclaration(\"const\", repeatableReserves.toArray(references, (binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t9.variableDeclaration(\"const\", [\n    t9.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bindFunction\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(sectionId) {\n  return getSignals(sectionId).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nimport { getTemplateId as getTemplateId2 } from \"@marko/babel-utils\";\nvar html_default = {\n  translate: {\n    exit(program) {\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLResumeStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(0);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t10.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.pushContainer(\"body\", [\n        t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(rendererId, callRuntime(\"register\", t10.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t10.identifier(\"input\"),\n            tagVarIdentifier,\n            getScopeIdentifier(0)\n          ], t10.blockStatement(renderContent)), t10.stringLiteral(getTemplateId2(optimize, `${filename}`))))\n        ]),\n        t10.exportDefaultDeclaration(rendererId),\n        t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(t10.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t11 } from \"@marko/compiler\";\nimport { getTemplateId as getTemplateId3 } from \"@marko/babel-utils\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t11.identifier(\"template\");\n      const walksIdentifier = t11.identifier(\"walks\");\n      const setupIdentifier = t11.identifier(\"setup\");\n      const attrsSignalIdentifier = t11.identifier(\"attrs\");\n      const closuresIdentifier = t11.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, setup } = getSectionMeta(sectionId);\n      forEachSectionIdReverse((childSectionId) => {\n        writeSignals(childSectionId);\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, setup: setup2, register: register2 } = getSectionMeta(childSectionId);\n          const closures2 = getClosures(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, setup2, closures2.length && t11.arrayExpression(closures2));\n          program.node.body.push(t11.variableDeclaration(\"const\", [\n            t11.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t11.stringLiteral(getResumeRegisterId(childSectionId, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const isIdentity = t11.isIdentifier(attrs2.var);\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(sectionId, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t11.exportSpecifier(signalIdentifier, signalIdentifier));\n        }\n        program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(attrsSignalIdentifier, isIdentity ? getSignal(sectionId, attrs2.var.extra.reserve).identifier : getDestructureSignal(attrs2.bindings, attrs2.var)?.build())\n        ])), t11.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(sectionId);\n      program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(templateIdentifier, writes || t11.stringLiteral(\"\"))\n      ])), t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(walksIdentifier, walks || t11.stringLiteral(\"\"))\n      ])), t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(setupIdentifier, t11.isNullLiteral(setup) || !setup ? t11.functionExpression(null, [], t11.blockStatement([])) : setup)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(closuresIdentifier, t11.arrayExpression(closures))\n        ])));\n      }\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.node.body.push(t11.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier, t11.stringLiteral(getTemplateId3(optimize, `${filename}`)))));\n    }\n  }\n};\n\n// src/util/references.ts\nvar intersectionSubscribeCounts = /* @__PURE__ */ new WeakMap();\nvar repeatableIntersections = new SortedRepeatable(compareIntersections);\nvar [getIntersectionsBySection, setIntersectionsBySection] = createSectionState(\"intersectionsBySection\", () => []);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(1 /* Store */, sectionId, identifier, name);\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        addBindingToReferences(immediateRoot, \"references\", binding);\n      }\n      addBindingToReferences(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction addBindingToReferences(path3, referencesKey, binding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const extra = path3.node.extra ??= {};\n  const prevReferences = extra[referencesKey];\n  if (prevReferences) {\n    if (prevReferences !== binding) {\n      extra[referencesKey] = addSubscriber(getIntersection(sectionId, repeatableReserves.add(repeatableReserves.clone(prevReferences), binding)));\n      if (isIntersection(prevReferences)) {\n        removeSubscriber(getIntersection(sectionId, prevReferences));\n      }\n    }\n  } else {\n    extra[referencesKey] = binding;\n  }\n}\nfunction mergeReferences(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const references = extra[key];\n    if (isIntersection(references)) {\n      removeSubscriber(getIntersection(sectionId, references));\n    }\n    newReferences = repeatableReserves.addAll(newReferences, references);\n    delete extra[key];\n  }\n  if (isIntersection(newReferences)) {\n    newReferences = addSubscriber(getIntersection(sectionId, newReferences));\n  }\n  return newReferences;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = repeatableReserves.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeIntersections() {\n  const intersectionsBySection = (currentProgramPath.node.extra ??= {}).intersectionsBySection = {};\n  forEachSectionId((sectionId) => {\n    intersectionsBySection[sectionId] = getIntersectionsBySection(sectionId).filter((intersection) => intersectionSubscribeCounts.get(intersection) > 0);\n  });\n}\nfunction getIntersection(sectionId, references) {\n  const intersections = getIntersectionsBySection(sectionId);\n  let intersection = repeatableIntersections.find(intersections, references);\n  if (!intersection) {\n    intersection = references;\n    setIntersectionsBySection(sectionId, repeatableIntersections.add(intersections, references));\n  }\n  return intersection;\n}\nfunction addSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, (intersectionSubscribeCounts.get(intersection) || 0) + 1);\n  return intersection;\n}\nfunction removeSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, intersectionSubscribeCounts.get(intersection) - 1);\n  return intersection;\n}\nfunction isIntersection(references) {\n  return Array.isArray(references);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar dirtyIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeIntersections();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      dirtyIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"dirty\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t12.importDeclaration([], t12.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t12.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t13.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t14.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t14.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t14.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t15.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t15.isMarkoTag(sibling) || t15.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t16 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t16);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t16);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t20 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t18 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t17 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t17.identifier(name) : t17.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t18.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t18.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t18.spreadElement(value));\n    } else {\n      result.properties.push(t18.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t18.objectMethod(\"method\", t18.identifier(\"renderBody\"), params, t18.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t18.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t18.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t18.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t19 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t19.variableDeclaration(kind, [\n    t19.variableDeclarator(t19.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, name, `#${tag.get(\"name\").evaluate().value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t20.arrowFunctionExpression([], t20.blockStatement([\n            t20.throwStatement(t20.newExpression(t20.identifier(\"Error\"), [\n              t20.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSectionId = getSectionId(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t20.expressionStatement(callRead(extra.reserve, referenceSectionId)));\n            } else {\n              createElFunction ??= t20.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bindFunction\", getScopeExpression(extra.reserve, referenceSectionId), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t20.variableDeclaration(\"const\", [\n              t20.variableDeclarator(createElFunction, t20.arrowFunctionExpression([scopeIdentifier], t20.memberExpression(scopeIdentifier, getNodeLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getNodeLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t20.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"render\", sectionId, valueReferences, t20.expressionStatement(callRuntime(helper, t20.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLEffectCall(sectionId, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t20.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"effect\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"on\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"render\", sectionId, valueReferences, t20.expressionStatement(callRuntime(\"attr\", t20.memberExpression(scopeIdentifier, visitAccessor, true), t20.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t20.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferences(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (t21.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t21.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t21.objectProperty(t21.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t21.unaryExpression(\"void\", t21.numericLiteral(0)), \"let\");\n      renderTagExpr = t21.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t21.ifStatement(tagIdentifier, t21.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const sectionId = getSectionId(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t21.arrowFunctionExpression([], t21.blockStatement([])), t21.stringLiteral(getResumeRegisterId(sectionId, node.var.extra?.reserve)), getScopeIdIdentifier(sectionId))));\n    setForceResumeScope(sectionId);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSectionId = getSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySectionId = getSectionId(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSectionId).push(callRuntime(\"childClosures\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getNodeLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySectionId !== tagSectionId) {\n    attrsObject ??= t21.objectExpression([]);\n    attrsObject.properties.push(t21.objectProperty(t21.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySectionId))));\n  }\n  if (node.var) {\n    const source = initValue(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"render\", tagSectionId, void 0, t21.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getNodeLiteral(binding), source.identifier)));\n  }\n  addStatement(\"render\", tagSectionId, void 0, t21.expressionStatement(t21.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n  if (attrsObject && tagAttrsIdentifier) {\n    addValue(tagSectionId, tag.node.extra.attrsReferences, {\n      identifier: tagAttrsIdentifier,\n      hasDownstreamIntersections: () => true\n    }, attrsObject, callRead(binding, tagSectionId));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t21.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t21.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t21.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t23 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t22 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t22.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t22.isBlockStatement(body)) {\n    return body;\n  }\n  return t22.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferences(getOrCreateSectionId(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      addBindingToReferences(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t23.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t23.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t23.variableDeclaration(\"const\", [\n            t23.variableDeclarator(dynamicScopeIdentifier, dynamicTagExpr)\n          ]))[0].skip();\n        }\n        const sectionId = getSectionId(tag);\n        writeTo(tag)`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(node.extra.reserve))}`;\n        getSerializedScopeProperties(sectionId).set(t23.stringLiteral(getNodeLiteral(node.extra.reserve).value + \"!\"), dynamicScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t23.stringLiteral(getNodeLiteral(node.extra.reserve).value + \"(\"), node.name);\n      } else {\n        const sectionId = getSectionId(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const hasBody = sectionId !== bodySectionId;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySectionId);\n        const tagNameReserve = node.extra?.reserve;\n        const signal = getSignal(sectionId, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getNodeLiteral(tagNameReserve), getSignalFn(signal, [scopeIdentifier]));\n        };\n        addValue(sectionId, node.extra?.nameReferences, signal, renderBodyIdentifier ? t23.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const name = currentProgramPath.node.extra.sectionNames[sectionId];\n          const signal2 = getSignal(sectionId, node.extra?.attrsReferences);\n          const attrsGetter = t23.arrowFunctionExpression([], attrsObject ?? t23.objectExpression([]));\n          addIntersectionWithGuardedValue(signal2, name + \"_attrs\", attrsGetter, (attrsIdentifier) => {\n            return t23.expressionStatement(callRuntime(\"dynamicTagAttrs\", scopeIdentifier, getNodeLiteral(tagNameReserve), attrsIdentifier, renderBodyIdentifier, dirtyIdentifier));\n          });\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t24.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(info.identifier, t24.arrayExpression([]))\n          ]) : t24.variableDeclaration(\"let\", [\n            t24.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t24.expressionStatement(info.repeated ? t24.callExpression(t24.memberExpression(info.identifier, t24.identifier(\"push\")), [attrsObject]) : t24.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, t24.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t24.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t25.variableDeclaration(\"const\", [\n          t25.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"render\", getSectionId(placeholder), valueReferences, t26.expressionStatement(method === \"data\" ? callRuntime(\"data\", t26.memberExpression(scopeIdentifier, getNodeLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getNodeLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t26.isMarkoComment(path3) || t26.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t26.isProgram(placeholder.parentPath)) && !(t26.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"render\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      trackReferencesForBindings(getOrCreateSectionId(tag), varPath);\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initValue(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t28 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t27 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t27.isBlockStatement(body)) {\n    return body;\n  }\n  return t27.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t28.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferences(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences;\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const sectionId = getSectionId(tag);\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySectionId))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        return t28.assignmentExpression(\"=\", getScopeIdentifier(bodySectionId), scope);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(sectionId));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t28.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return t28.expressionStatement(callRuntime(\"inConditionalScope\", scopeIdentifier, dirtyIdentifier, subscriber, getNodeLiteral(extra.reserve)));\n        });\n        if (isStateful) {\n          setRegisterRenderer(sectionId2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t28.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const signal = getSignal(sectionId, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getNodeLiteral(extra.reserve), getSignalFn(signal, [scopeIdentifier]));\n      };\n      signal.hasDownstreamIntersections = () => branches.some((b) => getClosures(b.sectionId).length > 0);\n      addValue(sectionId, extra.conditionalReferences, signal, expr);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = getScopeIdentifier(branches[0].sectionId);\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const branchScopeIdentifier = getScopeIdentifier(sectionId2, true);\n        branchScopeIdentifier.name = ifScopeIdentifier.name;\n        if (isStateful) {\n          tag2.node.body.body.push(t28.expressionStatement(callRuntime(\"register\", t28.assignmentExpression(\"=\", ifRendererIdentifier, t28.arrowFunctionExpression([], t28.blockStatement([]))), t28.stringLiteral(getResumeRegisterId(sectionId2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t28.expressionStatement(t28.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdIdentifier(sectionId2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t28.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          t28.variableDeclaration(\"let\", [\n            singleNodeOptimization && t28.variableDeclarator(ifScopeIdIdentifier),\n            t28.variableDeclarator(ifScopeIdentifier),\n            t28.variableDeclarator(ifRendererIdentifier)\n          ].filter(Boolean)),\n          statement\n        ]);\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t28.stringLiteral(getNodeLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t29.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const references = defaultAttr.extra?.valueReferences;\n      const derivation = getTagVarSignal(tag.get(\"var\"));\n      addValue(sectionId, references, derivation, defaultAttr.value);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t31.isFunctionExpression(value) || t31.isArrowFunctionExpression(value) && t31.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t31.traverse(value.body, (node2) => {\n            if (t31.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"effect\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t31.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLEffectCall(sectionId, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const sectionId = getSectionId(tag);\n      reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferences(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"effect\", sectionId, node.extra.attrsReferences, t32.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLEffectCall(sectionId, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t33.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t33.variableDeclaration(\"const\", [t33.variableDeclarator(node.var, id)]));\n    } else {\n      const source = initValue(tagVar.extra.reserve);\n      addValue(getSectionId(tag), void 0, source, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferences(sectionId, tag.node.attributes.filter((attr2) => t34.isMarkoAttribute(attr2) && attr2.extra?.valueReferences !== void 0).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      tag.node.extra.isStateful = !!tag.node.extra.attrsReferences && !Object.keys(tag.node.extra.nestedAttributeTags).length;\n      tag.node.extra.singleNodeOptimization = tag.node.body.body.length === 1;\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild, attrsReferences }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    setSubscriberBuilder(tag, (signal2) => {\n      return t34.expressionStatement(callRuntime(\"inLoopScope\", scopeIdentifier, dirtyIdentifier, signal2, getNodeLiteral(reserve)));\n    });\n    tag.remove();\n    const rendererId = getRenderer(bodySectionId);\n    const ofAttr = findName(attributes, \"of\");\n    const toAttr = findName(attributes, \"to\");\n    const inAttr = findName(attributes, \"in\");\n    let loopFunctionBody = t34.nullLiteral();\n    let tagParams = params;\n    if (ofAttr) {\n      const byAttr = findName(attributes, \"by\");\n      loopFunctionBody = t34.arrayExpression([\n        ofAttr.value,\n        byAttr ? byAttr.value : t34.nullLiteral()\n      ]);\n    } else if (toAttr) {\n      const fromAttr = findName(attributes, \"from\");\n      const stepAttr = findName(attributes, \"step\");\n      loopFunctionBody = callRuntime(\"computeLoopToFrom\", toAttr.value, fromAttr ? fromAttr.value : t34.numericLiteral(0), stepAttr ? stepAttr.value : t34.numericLiteral(1));\n    } else if (inAttr) {\n      loopFunctionBody = callRuntime(\"computeLoopIn\", inAttr.value);\n      tagParams = [t34.arrayPattern(params)];\n    }\n    const signal = getSignal(sectionId, reserve);\n    const paramsSignal = getTagParamsSignal(paramsPath, t34.arrayPattern(tagParams));\n    signal.build = () => {\n      return callRuntime(\"loop\", getNodeLiteral(reserve), rendererId, paramsSignal?.build());\n    };\n    signal.hasDownstreamIntersections = () => paramsSignal?.hasDownstreamIntersections() || getClosures(bodySectionId).length > 0;\n    addValue(sectionId, attrsReferences, signal, loopFunctionBody);\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const sectionId = getSectionId(tag);\n    const tagBody = tag.get(\"body\");\n    const bodySectionId = getSectionId(tagBody);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params },\n      extra: { isStateful, singleNodeOptimization, isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const toAttr = findName(attributes, \"to\");\n    const byAttr = findName(attributes, \"by\");\n    const block = t34.blockStatement(body);\n    const write2 = writeTo(tag);\n    const replacement = [];\n    let byParams;\n    let keyExpression = t34.identifier(\"NOO\");\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySectionId))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        const tempScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"s\");\n        return t34.callExpression(t34.arrowFunctionExpression([tempScopeIdentifier], t34.sequenceExpression([\n          t34.callExpression(t34.memberExpression(getScopeIdentifier(bodySectionId), t34.identifier(\"set\")), [keyExpression, tempScopeIdentifier]),\n          tempScopeIdentifier\n        ])), [scope]);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(sectionId));\n    }\n    if (byAttr && isStateful) {\n      const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n      replacement.push(t34.variableDeclaration(\"const\", [\n        t34.variableDeclarator(byIdentifier, byAttr.value)\n      ]));\n      byParams = [];\n      keyExpression = t34.callExpression(byIdentifier, byParams);\n    }\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      keyExpression = keyParam;\n      if (valParam) {\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(valParam, t34.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      replacement.push(t34.forInStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(keyParam)]), inAttr.value, block));\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      let [valParam, indexParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      if (!t34.isIdentifier(valParam) && byParams) {\n        const tempValParam = currentProgramPath.scope.generateUidIdentifier(\"v\");\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(valParam, tempValParam)\n        ]));\n        valParam = tempValParam;\n      }\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(indexParam, \"i\");\n        replacement.push(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(indexName, t34.numericLiteral(0))\n        ]));\n        block.body.unshift(t34.variableDeclaration(\"let\", [\n          t34.variableDeclarator(indexParam, t34.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t34.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        replacement.push(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      if (byParams) {\n        byParams.push(valParam, indexParam);\n      } else {\n        keyExpression = indexParam;\n      }\n      replacement.push(t34.forOfStatement(t34.variableDeclaration(\"const\", [t34.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (toAttr) {\n      const stepValue = findName(attributes, \"step\")?.value ?? t34.numericLiteral(1);\n      const fromValue = findName(attributes, \"from\")?.value ?? t34.numericLiteral(0);\n      let [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const indexName = tag.scope.generateUidIdentifier(\"i\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      const fromName = tag.scope.generateUidIdentifier(\"from\");\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        keyExpression = indexParam;\n        block.body.unshift(t34.variableDeclaration(\"const\", [\n          t34.variableDeclarator(indexParam, t34.binaryExpression(\"+\", fromName, t34.binaryExpression(\"*\", indexName, stepName)))\n        ]));\n      }\n      replacement.push(t34.forStatement(t34.variableDeclaration(\"let\", [\n        t34.variableDeclarator(fromName, t34.logicalExpression(\"??\", fromValue, t34.numericLiteral(0))),\n        t34.variableDeclarator(stepName, t34.logicalExpression(\"??\", stepValue, t34.numericLiteral(1))),\n        t34.variableDeclarator(stepsName, t34.binaryExpression(\"/\", t34.binaryExpression(\"-\", toAttr.value, fromName), stepName)),\n        t34.variableDeclarator(indexName, t34.numericLiteral(0))\n      ]), t34.binaryExpression(\"<=\", indexName, stepsName), t34.updateExpression(\"++\", indexName), block));\n    }\n    if (isStateful) {\n      const forScopeIdsIdentifier = tag.scope.generateUidIdentifier(\"forScopeIds\");\n      const forScopesIdentifier = getScopeIdentifier(bodySectionId);\n      replacement.unshift(t34.variableDeclaration(\"const\", [\n        singleNodeOptimization && t34.variableDeclarator(forScopeIdsIdentifier, t34.arrayExpression([])),\n        t34.variableDeclarator(forScopesIdentifier, t34.newExpression(t34.identifier(\"Map\"), []))\n      ].filter(Boolean)));\n      if (singleNodeOptimization) {\n        block.body.push(t34.expressionStatement(t34.callExpression(t34.memberExpression(forScopeIdsIdentifier, t34.identifier(\"push\")), [getScopeIdIdentifier(bodySectionId)])));\n        write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve), forScopeIdsIdentifier)}`;\n      } else {\n        write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve))}`;\n      }\n      getSerializedScopeProperties(sectionId).set(t34.stringLiteral(getNodeLiteral(reserve).value + \"(\"), t34.conditionalExpression(t34.memberExpression(forScopesIdentifier, t34.identifier(\"size\")), forScopesIdentifier, t34.identifier(\"undefined\")));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n    block.body.push(t34.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple(replacement);\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t34.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t34.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId4,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const sectionId = getOrCreateSectionId(tag);\n      if (sectionId === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t35.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t35.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId4(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(node.var, callRuntime(\"getInContext\", t35.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t36 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const defaultAttr = node.attributes.find((attr2) => t36.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")) ?? t36.markoAttribute(\"value\", t36.identifier(\"undefined\"));\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t36.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initValue(binding);\n      const references = defaultAttr.extra?.valueReferences;\n      const isSetup = !references;\n      if (!isSetup) {\n      } else {\n        addValue(sectionId, references, source, defaultAttr.value);\n      }\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t37.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t37.expressionStatement(callRuntime(\"pushContext\", t37.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySectionId);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertAfter(t37.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t38 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([], t38.stringLiteral(importPath)));\n      } else if (t38.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t38.importDeclaration([t38.importDefaultSpecifier(tag.node.var)], t38.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t38.variableDeclaration(\"const\", [\n          t38.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t39 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t39.variableDeclaration(\"const\", [\n        t39.variableDeclarator(tag.node.var, t39.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t40 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t40.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t40.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t41 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t41.markoTag(t41.stringLiteral(\"attrs\"), void 0, t41.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t41.isMemberExpression(identifier.parent) && t41.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t41.markoTag(t41.stringLiteral(\"get\"), void 0, t41.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["_selectedIndexChange","_filesChange","files","externalFiles","selectedIndex","externalSelected","input","_filesSet","_files","_component","setState","_state","_selectedIndexSet","_selectedIndex","selectedFile","out","be","_component4","nextId","_nextIdSet","_nextId","_index","file","index","_keyScope","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_componentDef","editing","_editingSet","_editing","selected","mutable","_marko_class_merge","d","_assign","_nestedComponentDef2","_component3","_state3","name","finishRename","_cache","_cached","modifiedFile","path","replace","slice","nameInput","_createRef","_valueChange","_name","e","length","pa","code","target","value","_lifecycle","focus","setSelectionRange","indexOf","t","window","confirm","stopPropagation","ee","newFile","content","newIndex","concat","_end","_marko_componentType","_marko_component","_marko_template","Component","_marko_defineComponent","_","actions","body","_marko_dynamic_tag","i","valueChange","class","className","el","_effect","_marko_node","_marko_createElement","_marko_registerComponent","_marko_renderer","state","_begin","attrs","_meta","_marko_attrs","_extractHandlers","compressToEncodedURIComponent","JSON","stringify","n","query","fallback","isMatch","matchMedia","matches","_isMatchSet","_isMatch","mq","listener","addEventListener","removeEventListener","_return","left","right","editorSize","_editorSizeSet","_editorSize","resizing","_resizingSet","_resizing","_matchMediaReturn","_matchMedia","isVertical","container","preventDefault","_meta2","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","_marko_node2","_marko_node3","onCreate","_component5","getCompilerOptions","previewType","_previewTypeSet","_previewType","debounce","_debounceSet","_debounce","_resizablePanes","_pane","_fileTabs","activeEditor","_activeEditorSet","_activeEditor","_assign2","loading","_controllableSelect","_playgroundLink","_nestedComponentDef3","_state4","preview","_previewSet","_preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","getInitialValue","_valueSet","_value","this","isUpdating","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","tagNameDynamic","startSection","sectionId","programExtra","sectionNameNode","sectionName","nextSectionId","sectionNames","generateUid","getOrCreateSectionId","cur","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","getScopeIdIdentifier","generateUidIdentifier","_getScopeIdentifier","t2","getScopeIdentifier","ignoreDefault","scopeId","forEachSectionId","fn","SortedRepeatable","constructor","compare","add","data","item","Array","isArray","insertSorted","joinItems","addAll","items","find","pos","mid","compareResult","clone","size","toArray","map","a","b","len","next","getReservesByType","reserveScope","debugKey","arguments","undefined","reserve","reserve2","reservesByType","id","getNodeLiteral","optimize","t3","repeatableReserves","toString","val","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","pureFunctions","Symbol","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","importRuntime","importNamed","getRuntimePath","callRuntime","_len","args","_key","callExpression2","t4","filteredArgs","arg","filterArguments","includes","leadingComments","getHTMLRuntime","callRead","reference","targetSectionId","getScopeExpression","diff","scopeIdentifier","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t5","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","appendLiteral","arr","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","depth","step","lastIndexOf","current","count","walk","nCodeString","writeTo","fromCharCode","number","toCharString","Error","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t6","join","getRenderer","t7","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","writePrependTo","unshift","consumeHTML","flushBefore","expr","skip","flushInto","isProgram","pushContainer","getSectionMeta","setup","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","defaultAttr","attributes","t8","default","loc","end","msg","buildError","returnId2","replaceWith","addValue","valueReferences","identifier","hasDownstreamIntersections","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","setSubscriberBuilder","builder","getClosures","forceResumeScope","_setForceResumeScope","getSerializedScopeProperties","getRegisterScopeBuilder","_setRegisterScopeBuilder","setRegisterScopeBuilder","getSignal","signals","signal","set","t9","generateSignalName","values","intersectionDeclarations","intersection","render","effect","effectInlineReferences","subscribers","closures","subscribe","build","getSignalFn","provider","initValue","valueAccessor","addIntersectionWithGuardedValue","getStatement","valueIdentifier","params","references","isSetup","needsDirty","statements","callee","dirtyIdentifier","closureEntries","from","entries","sort","_ref","_ref2","closureSectionId","closureSignal","hasDynamicSubscribers","dynamicSubscribersKey","getDestructureSignal","bindingsByName","destructurePattern","bindings","bindingSignals","declarations","canCallOnlyWhenDirty","subscriber","forEach","p","ref","addStatement","statement","originalNodes","isInlined","addEffectReferences","expression","getResumeRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","_ref3","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","tagVarIdentifier","intersections","intersectionsBySection","allSignals","scopeIdIdentifier","scopeIdentifier2","unshiftContainer","serializedReferences","signalRefs","serializedProperties","reduce","acc","additionalProperties","isRoot","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","_ref4","root","functionIdentifier","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t10","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","getTemplateId2","dom_default","templateIdentifier","t11","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionIdReverse","childSectionId","flatMap","effectDeclarator","effectIdentifier","finalizeSignalArgs","signalDeclarator","newPath","traverse","writeSignals","writes2","setup2","register2","closures2","renderer","exportSpecifiers","isIdentity","bindingIdentifier","signalIdentifier","getTemplateId3","intersectionSubscribeCounts","WeakMap","repeatableIntersections","lenDelta","getIntersectionsBySection","setIntersectionsBySection","trackReferencesForBindings","getBindingIdentifiers","referencePaths","constantViolations","filter","path4","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","addBindingToReferences","listKey","referencesKey","prevReferences","addSubscriber","getIntersection","isIntersection","removeSubscriber","mergeReferences","groupEntries","newReferences","curPath","isMarkoPath","isFunctionExpression","previousProgramPath","program_default","migrate","crawl","analyze","curIndex","reserves","finalizeIntersections","t12","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment","assignment_expression_default","t13","update_expression_default","t14","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t15","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t16","exit2","Boolean","IDENTIFIER_REG","attrsToObject","withRenderBody","t18","resultExtra","properties","t17","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t19","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t20","varName","createElFunction","referenceSectionId","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childFile","loadFileForTag","childProgramExtra","ast","attrsReferences","tagBody","tagIdentifier","t21","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceResumeScope","translateHTML","tagSectionId","tagBodySectionId","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","_len2","_key2","_len3","_key3","toFirstExpressionOrBlock","nodes","t22","dynamic_tag_default","t23","dynamicScopeIdentifier","dynamicTagExpr","bodySectionId","renderBodyIdentifier","tagNameReserve","nameReferences","attrsIdentifier","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t24","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","lookup","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t25","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","prev","getPrevSibling","noOutput","t26","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","_ref5","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t27","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t28","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","_ref6","tag2","_ref7","isStateful","singleNodeOptimization","every","_ref8","sectionId2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t29","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t30","effect_default","assertNoParams6","t31","inlineStatements","node2","lifecycle_default","assertNoParams7","t32","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t33","for_default","isOnlyChild","t34","getTagDef5","html","checkOnlyChild","parentTagName","keys","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","translateHTML2","translateDOM2","of","in","to","paramsPath","signal2","ofAttr","toAttr","inAttr","loopFunctionBody","tagParams","byAttr","fromAttr","stepAttr","paramsSignal","paramsPaths","pattern","bindingsLookup","assign","getTagParamsSignal","namePath","block","byParams","keyExpression","tempScopeIdentifier","byIdentifier","keyParam","valParam","ofAttrValue","indexParam","loopParam","tempValParam","indexName","generateUidIdentifierBasedOnNode","stepValue","fromValue","stepsName","stepName","fromName","forScopeIdsIdentifier","forScopesIdentifier","obj","get_default","assertNoParams9","refId","t35","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId4","templateId","initContextConsumer","put_default","t37","providers","compute","scopeAccessor","subscribersAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","t36","assertNoParams11","registerAssignmentReplacer","ownerSectionId","getScopeExpression2","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t39","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t38","importDefault2","enum","trim","parseScript3","t40","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","t41","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","visitor","_ref9","taglibs","_hashValueReturn","_hashValue","_repl","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","legacy","_resolveExportsOptions","browser","env","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}