{"version":3,"file":"548.b07040fc.js","mappings":"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","sources":["webpack:///iframe-swap.marko","webpack:///preview.marko"],"sourcesContent":["<attrs/iframeAttrs/>\n\n<iframe/first ...iframeAttrs/>\n<iframe/second ...iframeAttrs style=\"display:none\"/>\n\n<return={\n  clear() {\n    const firstHidden = first().style.display === \"none\";\n    const current = firstHidden ? second() : first();\n    const next = firstHidden ? first() : second();\n    current.srcdoc = current.srcdoc;\n    current.style.display = \"none\";\n    next.style.display = \"\";\n    return next;\n  }\n}/>","import path from \"path\"\nimport { format } from \"prettier/standalone\"\nimport prettierHTML from \"prettier/parser-html\"\nimport prettierBabel from \"prettier/parser-babel\"\nimport highlight from \"../../../utils/highlight\"\nimport { bundle, compile } from \"../../../utils/compiler\"\nimport fs, { vol } from \"memfs\"\n\n<attrs/{ type, files, selectedFile, onSelectError, onSyntaxError }/>\n<id/examplePath/>\n<const/selectedPath = path.join(\"/\", examplePath, selectedFile.path)/>\n<const/defaultPath = path.join(\"/\", examplePath, files[0].path)/>\n\n<let/error = null/>\n<let/result = null/>\n<const/SYNTAX_ERROR_REG = /(.+?)(?:\\((\\d+),(\\d+)\\)|:(\\d+)): (.*(?=\\s+\\d+ | ))/ />\n\n<style>\n  .preview-error,\n  .preview-output,\n  .preview-compiled {\n    position: relative;\n    display: block;\n    min-height: 100%;\n    width: 100%;\n    padding-top: 8px;\n    padding-left: 16px;\n  }\n\n  .preview-compiled {\n    background: #202134;\n  }\n\n  .preview-output {\n    padding: 0;\n    border: 0;\n  }\n\n  .preview-output,\n  .preview-error {\n    background: #fff;\n  }\n  .preview-compiled pre.highlighted {\n    padding: 0;\n    font-family: Menlo, Monaco, \"Courier New\", monospace;\n    font-weight: normal;\n    font-size: 12px;\n    font-feature-settings: \"liga\" 0, \"calt\" 0;\n    line-height: 18px;\n    letter-spacing: 0px;\n  }\n\n  .preview-error .error-name {\n    background: #f92672;\n    color: #f8f8f0;\n    margin-left: -16px;\n    margin-top: -8px;\n    padding-top: 8px;\n    padding-bottom: 12px;\n    padding-left: 16px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n\n  .preview-error a {\n    color: #66d9ef;\n    font-weight: normal;\n  }\n\n  .preview-error pre {\n    width: 100%;\n    overflow: auto;\n  }\n\n  .preview-error small {\n    font-style: italic;\n    font-size: 0.75 rem;\n  }\n</style>\n\n\n<if=error>\n  <div.preview-error>\n    <h1.error-name>\n      ${error.name}\n      <if=error.file>\n        &nbsp;:&nbsp;\n        <a onClick() { onSelectError(error) }>\n          ${error.file.slice(1)}(${error.line},${error.column})\n        </a>\n      </if>\n    </h1>\n    <div>${error.message}</div>\n    <if=(selectedPath !== error.file)>\n      <if=error.codeFrame>\n        <pre><code>${error.codeFrame}</code></pre>\n      </if>\n      <else>\n        <small>Open the dev tools to view the full error.</small>\n      </else>\n    </if>\n  </div>\n</if>\n<else>\n  <if=(type === \"preview\")>\n    <iframe-swap/outputEl class=\"preview-output\"/>\n  </if>\n  <else>\n    <div.preview-compiled>$!{result}</div>\n  </else>\n</else>\n\n<effect() {\n  const previewTargetEl = !error && type === \"preview\" && outputEl;\n  const syncTimeout = setTimeout(async () => {\n    for (const file of files) {\n      const filePath = path.join(\"/\", examplePath, file.path);\n      vol.mkdirSync(path.dirname(filePath), { recursive: true });\n      vol.writeFileSync(filePath, file.content);\n    }\n    \n    try {\n      if (type === \"preview\" || type === \"html\") {\n        const bundleResult = await bundle({\n          entry: defaultPath,\n          markoOptions: { output: \"vdom\" }\n        });\n\n        if (type === \"preview\" && previewTargetEl) {\n          const { contentWindow, contentDocument } = previewTargetEl.clear();\n          contentWindow.__INTERNAL_MODULES__ = window.__INTERNAL_MODULES__;\n          const template = (0, contentWindow.eval)(bundleResult.js);\n          const renderResult = await template.render({});\n\n          const style = contentDocument.createElement(\"style\");\n          style.innerHTML = bundleResult.css;\n\n          contentDocument.head.appendChild(style);\n          renderResult.appendTo(contentDocument.body);\n        } else {\n          const template = (0, eval)(bundleResult.js);\n          const renderResult = await template.render({});\n          result = highlight(\n            \"html\",\n            format(String(renderResult), {\n              parser: \"html\",\n              plugins: [prettierHTML]\n            })\n          );\n        }\n      } else {\n        const output = type === \"compiled-html\" ? \"html\" : \"vdom\";\n        const code = await compile({\n          entry: selectedPath,\n          markoOptions: { output }\n        });\n        result = highlight(\n          \"javascript\",\n          format(\n            code.replaceAll(`${examplePath}/`, \"\"),\n            {\n              parser: \"babel\",\n              plugins: [prettierBabel]\n            }\n          )\n        );\n      }\n\n      error = null;\n    } catch (err) {\n      result = null;\n\n      const errorWithLocationMatch =\n        err.name === \"SyntaxError\" && SYNTAX_ERROR_REG.exec(err.message);\n      if (errorWithLocationMatch) {\n        let [match, file, line, column, lineOnly, message] = errorWithLocationMatch;\n        if (lineOnly) {\n          line = lineOnly;\n          column = 0;\n        }\n\n        file = path.resolve(file);\n        line = parseInt(line, 10);\n        column = parseInt(column, 10) + 1;\n        const codeFrame = err.message.slice(match.length);\n        error = {\n          name: err.name,\n          file,\n          message,\n          line,\n          column,\n          codeFrame\n        };\n\n        if (file === selectedPath && onSyntaxError) {\n          onSyntaxError(error);\n        }\n      } else {\n        error = err;\n        console.error(err);\n      }\n    }\n  }, 150);\n  return () => {\n    clearTimeout(syncTimeout);\n    try {\n      vol.rmdirSync(examplePath, { recursive: true });\n    } catch (e) {}\n  }\n}/>"],"names":["iframeAttrs","first","second","clear","firstHidden","style","display","current","next","srcdoc","outputEl","type","files","selectedFile","onSelectError","onSyntaxError","examplePath","selectedPath","path","defaultPath","error","result","SYNTAX_ERROR_REG","name","file","slice","line","column","message","codeFrame","previewTargetEl","syncTimeout","setTimeout","filePath","vol","recursive","content","bundleResult","bundle","entry","markoOptions","output","contentWindow","contentDocument","__INTERNAL_MODULES__","window","template","eval","js","renderResult","render","createElement","innerHTML","css","head","appendChild","appendTo","body","highlight","format","String","parser","plugins","prettierHTML","code","compile","replaceAll","prettierBabel","err","errorWithLocationMatch","exec","match","lineOnly","parseInt","length","console","clearTimeout","e"],"sourceRoot":""}