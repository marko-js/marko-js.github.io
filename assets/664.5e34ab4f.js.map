{"version":3,"file":"664.5e34ab4f.js","mappings":"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","sources":["webpack:///../../browser-shims|sync","webpack:///../../browser-shims/translator.js","webpack:///playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/compiler/modules.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/process.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../browser-shims sync recursive\";\nmodule.exports = webpackEmptyContext;","var __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n});\n\n// src/visitors/program/index.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\n\n// src/visitors/program/html.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/apply-hydrate.ts\nimport { types as t4 } from \"@marko/compiler\";\n\n// src/util/references.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/sorted-arr.ts\nfunction insertInArray(compare, arr, val) {\n  const len = arr.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return arr;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = val;\n  while (pos < len) {\n    const next = cur;\n    cur = arr[pos];\n    arr[pos++] = next;\n  }\n  arr[len] = cur;\n  return arr;\n}\nfunction findIndex(compare, arr, val) {\n  let max = arr.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return mid;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  return -1;\n}\nfunction createSortedCollection(compare) {\n  return {\n    insert(data, val, immutable = false) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return insertInArray(compare, immutable ? [...data] : data, val);\n        } else {\n          const compareResult = compare(data, val);\n          if (compareResult !== 0) {\n            return compareResult < 0 ? [data, val] : [val, data];\n          }\n        }\n      }\n      return val;\n    },\n    find(data, val) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return data[findIndex(compare, data, val)];\n        } else {\n          return data === val ? data : void 0;\n        }\n      }\n    }\n  };\n}\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              const defaultAttr = bindingTag.get(\"attributes\")[0];\n              if (defaultAttr.node) {\n                pending.push(defaultAttr.get(\"value\"));\n              } else {\n                nullable = true;\n              }\n              const assignments = binding.constantViolations;\n              for (let i = assignments.length; i--; ) {\n                const assignment = assignments[i];\n                const { operator } = assignment.node;\n                if (operator === \"=\") {\n                  pending.push(assignment.get(\"right\"));\n                } else if (operator === \"+=\") {\n                  type = type !== void 0 && type !== 0 /* NativeTag */ ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n                } else {\n                  type = 2 /* DynamicTag */;\n                  break;\n                }\n              }\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init();\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, size = 0) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    if (size && reserve2.size) {\n      throw new Error(\"Unable to reserve multiple scopes for a node\");\n    } else {\n      reserve2.size = size;\n      reserve2.name += \"_\" + name;\n    }\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    size,\n    name,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += reserve.size + 1;\n        }\n      }\n    }\n  });\n}\nfunction compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n}\nvar { insert: insertReserve } = createSortedCollection(compareReserves);\n\n// src/util/references.ts\nvar [getReferenceGroups] = createSectionState(\"apply\", () => [\n  {\n    sectionId: 0,\n    index: 0,\n    count: 0,\n    references: void 0,\n    apply: t2.identifier(\"\"),\n    hydrate: t2.identifier(\"\")\n  }\n]);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3, reserveType = 1 /* Store */) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths;\n    const identifier = bindings[name];\n    const binding = reserveScope(reserveType, sectionId, identifier, name);\n    insertReferenceGroup(getReferenceGroups(sectionId), {\n      sectionId,\n      index: 0,\n      count: 0,\n      references: binding,\n      apply: t2.identifier(\"\"),\n      hydrate: t2.identifier(\"\")\n    });\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      if (fnRoot) {\n        const name2 = fnRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (fnRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        updateReferenceGroup(fnRoot, \"references\", binding);\n      }\n      updateReferenceGroup(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction updateReferenceGroup(path3, extraKey, newBinding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const currentGroup = (path3.node.extra ??= {})[extraKey];\n  const newReferences = insertReserve(currentGroup?.references, newBinding, true);\n  if (currentGroup) {\n    currentGroup.count--;\n  }\n  getOrCreateReferenceGroup(sectionId, newBinding);\n  path3.node.extra[extraKey] = getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction mergeReferenceGroups(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const group = extra[key];\n    const references = group.references;\n    delete extra[key];\n    group.count--;\n    sectionId = group.sectionId;\n    if (references) {\n      if (Array.isArray(references)) {\n        for (const binding of references) {\n          newReferences = insertReserve(newReferences, binding);\n        }\n      } else {\n        newReferences = insertReserve(newReferences, references);\n      }\n    }\n  }\n  return getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction getOrCreateReferenceGroup(sectionId, references) {\n  const newGroup = {\n    sectionId,\n    index: 0,\n    count: 1,\n    references,\n    apply: t2.identifier(\"\"),\n    hydrate: t2.identifier(\"\")\n  };\n  const referenceGroups = getReferenceGroups(sectionId);\n  const existingGroup = findReferenceGroup(referenceGroups, newGroup);\n  if (existingGroup) {\n    existingGroup.count++;\n  } else {\n    insertReferenceGroup(referenceGroups, newGroup);\n  }\n  return existingGroup ?? newGroup;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nvar { insert: insertReferenceGroup, find: findReferenceGroup } = createSortedCollection(function compareReferenceGroups({ references: a }, { references: b }) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        if (Array.isArray(b)) {\n          const len = a.length;\n          const lenDelta = len - b.length;\n          if (lenDelta !== 0) {\n            return lenDelta;\n          }\n          for (let i = 0; i < len; i++) {\n            const compareResult = compareReserves(a[i], b[i]);\n            if (compareResult !== 0) {\n              return compareResult;\n            }\n          }\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (Array.isArray(b)) {\n        return -1;\n      } else {\n        return compareReserves(a, b);\n      }\n    } else {\n      return 1;\n    }\n  } else {\n    return b ? -1 : 0;\n  }\n});\nfunction finalizeReferences() {\n  const allReferenceGroups = [];\n  forEachSectionId((sectionId) => {\n    const referenceGroups = getReferenceGroups(sectionId).filter((g) => g.count > 0 || !Array.isArray(g.references));\n    referenceGroups.forEach((g, i) => {\n      g.index = i;\n      g.apply.name = generateReferenceGroupName(\"apply\", sectionId, g.references);\n      g.hydrate.name = generateReferenceGroupName(\"hydrate\", sectionId, g.references);\n    });\n    allReferenceGroups[sectionId] = referenceGroups;\n  });\n  (currentProgramPath.node.extra ??= {}).referenceGroups = allReferenceGroups;\n}\nfunction getReferenceGroup(sectionId, lookup, analyze2 = false) {\n  const referenceGroups = analyze2 ? getReferenceGroups(sectionId) : currentProgramPath.node.extra.referenceGroups[sectionId];\n  let found;\n  if (typeof lookup === \"number\") {\n    found = referenceGroups[lookup];\n  } else {\n    found = findReferenceGroup(referenceGroups, {\n      references: lookup\n    });\n  }\n  if (!found) {\n    throw new Error(`Reference group not found for section ${sectionId}: ${lookup}`);\n  }\n  return found;\n}\nfunction generateReferenceGroupName(type, sectionId, references) {\n  let name = type + (sectionId || \"\");\n  if (references) {\n    if (Array.isArray(references)) {\n      name += \"With\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return currentProgramPath.scope.generateUid(name);\n}\n\n// src/util/runtime.ts\nimport { types as t3 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  return t3.callExpression(importRuntime(name), args.filter(Boolean));\n}\nfunction getHTMLRuntime() {\n  return getRuntime(\"html\");\n}\nfunction getRuntime(output) {\n  return __require(getRuntimePath(output));\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t3.memberExpression(getScopeExpression(reference, targetSectionId), t3.numericLiteral(reference.id), true);\n}\nfunction callQueue({ apply, index }, reference, value, targetSectionId) {\n  return callRuntime(\"queue\", getScopeExpression(reference, targetSectionId), apply, t3.numericLiteral(index - 1), value);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t3.memberExpression(scope, t3.identifier(\"_\"));\n  }\n  return scope;\n}\n\n// src/util/apply-hydrate.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\nvar [getApplyStatements] = createSectionState(\"applyStatements\", () => []);\nvar [getHydrateStatements] = createSectionState(\"hydrateStatements\", () => []);\nvar [getQueueBuilder, _setQueueBuilder] = createSectionState(\"queue\");\nfunction setQueueBuilder(tag, builder) {\n  _setQueueBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction addStatement(type, targetSectionId, references, statement) {\n  const statementsIndex = references?.index ?? 0;\n  const allStatements = type === \"apply\" ? getApplyStatements(targetSectionId) : getHydrateStatements(targetSectionId);\n  const statements = allStatements[statementsIndex] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n}\nfunction getHydrateRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeAllStatementGroups() {\n  forEachSectionIdReverse((sectionId) => {\n    writeHydrateGroups(sectionId);\n    writeApplyGroups(sectionId);\n  });\n}\nvar [getClosurePriorities] = createSectionState(\"closurePriorities\", () => []);\nfunction writeApplyGroups(sectionId) {\n  const allStatements = getApplyStatements(sectionId);\n  const numReferenceGroups = currentProgramPath.node.extra.referenceGroups[sectionId].length;\n  if (!numReferenceGroups)\n    return;\n  for (let i = numReferenceGroups; i--; ) {\n    const statements = allStatements[i] ?? [];\n    if (i === 0 && !statements.length)\n      continue;\n    const referenceGroup = getReferenceGroup(sectionId, i);\n    const { references, apply: identifier } = referenceGroup;\n    const queuePriority = t4.numericLiteral(i - 1);\n    let params;\n    let body;\n    if (references) {\n      if (Array.isArray(references)) {\n        params = references.map((binding) => t4.assignmentPattern(t4.identifier(binding.name), callRead(binding, sectionId)));\n        body = t4.blockStatement(statements);\n        for (const binding of references) {\n          addStatement(\"apply\", sectionId, getReferenceGroup(sectionId, binding), t4.expressionStatement(callRuntime(\"queue\", scopeIdentifier, identifier, queuePriority)));\n        }\n      } else if (references.sectionId !== sectionId) {\n        params = [\n          t4.assignmentPattern(t4.identifier(references.name), callRead(references, sectionId))\n        ];\n        body = t4.blockStatement(statements);\n        const factory = getQueueBuilder(sectionId);\n        if (factory) {\n          const closurePriority = t4.numericLiteral(NaN);\n          getClosurePriorities(references.sectionId).push(closurePriority);\n          addStatement(\"apply\", references.sectionId, getReferenceGroup(references.sectionId, references), t4.expressionStatement(factory(referenceGroup, closurePriority)));\n          addStatement(\"apply\", sectionId, void 0, t4.expressionStatement(callRuntime(\"queue\", scopeIdentifier, identifier, queuePriority)));\n        }\n      } else {\n        const param = t4.identifier(references.name);\n        params = [param];\n        body = t4.blockStatement([\n          t4.ifStatement(callRuntime(\"write\", scopeIdentifier, t4.numericLiteral(references.id), param), t4.blockStatement(statements))\n        ]);\n      }\n    } else {\n      params = [];\n      body = t4.blockStatement(statements);\n    }\n    const [fnPath] = currentProgramPath.pushContainer(\"body\", t4.functionDeclaration(identifier, [scopeIdentifier, ...params], body));\n    fnPath.traverse(bindFunctionsVisitor, { root: fnPath, sectionId });\n  }\n  const closurePriorities = getClosurePriorities(sectionId);\n  for (let i = 0; i < closurePriorities.length; i++) {\n    closurePriorities[i].value = i + allStatements.length;\n  }\n}\nfunction writeHydrateGroups(sectionId) {\n  const allStatements = getHydrateStatements(sectionId);\n  for (let i = allStatements.length; i--; ) {\n    const statements = allStatements[i];\n    if (!statements?.length)\n      continue;\n    const referenceGroup = getReferenceGroup(sectionId, i);\n    const { references, hydrate: identifier } = referenceGroup;\n    const params = references ? (Array.isArray(references) ? references : [references]).map((binding) => t4.assignmentPattern(t4.identifier(binding.name), callRead(binding, sectionId))) : [];\n    const [fnPath] = currentProgramPath.pushContainer(\"body\", [\n      t4.functionDeclaration(identifier, [scopeIdentifier, ...params], t4.blockStatement(statements)),\n      t4.expressionStatement(callRuntime(\"register\", t4.stringLiteral(getHydrateRegisterId(sectionId, references)), identifier))\n    ]);\n    fnPath.traverse(bindFunctionsVisitor, { root: fnPath, sectionId });\n    addStatement(\"apply\", sectionId, getReferenceGroup(sectionId, references), t4.expressionStatement(callRuntime(\"queueHydrate\", scopeIdentifier, identifier)));\n  }\n}\nfunction addHTMLHydrateCall(sectionId, references) {\n  addStatement(\"hydrate\", sectionId, references, void 0);\n}\nfunction writeHTMLHydrateStatements(path3) {\n  const sectionId = getOrCreateSectionId(path3);\n  const allStatements = getHydrateStatements(sectionId);\n  path3.unshiftContainer(\"body\", t4.variableDeclaration(\"const\", [\n    t4.variableDeclarator(scopeIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  if (!allStatements.length)\n    return;\n  const refs = [];\n  for (let i = allStatements.length; i--; ) {\n    if (allStatements[i]?.length) {\n      const { references } = getReferenceGroup(sectionId, i);\n      if (references) {\n        if (Array.isArray(references)) {\n          for (const ref of references) {\n            insertReserve(refs, ref);\n          }\n        } else {\n          insertReserve(refs, references);\n        }\n      }\n      path3.pushContainer(\"body\", t4.expressionStatement(callRuntime(\"writeHydrateCall\", scopeIdentifier, t4.stringLiteral(getHydrateRegisterId(sectionId, references)))));\n    }\n  }\n  path3.pushContainer(\"body\", t4.expressionStatement(callRuntime(\"writeHydrateScope\", scopeIdentifier, t4.objectExpression(refs.reduce((acc, ref) => {\n    acc.push(t4.objectProperty(t4.numericLiteral(ref.id), t4.identifier(ref.name)));\n    return acc;\n  }, [])))));\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t4.blockStatement([t4.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t4.variableDeclaration(\"const\", (Array.isArray(references) ? references : [references]).map((binding) => t4.variableDeclarator(t4.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  root.insertBefore(t4.variableDeclaration(\"const\", [\n    t4.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bind\", scopeIdentifier, functionIdentifier));\n}\nfunction getDefaultApply(sectionId) {\n  const [firstApplyStatements] = getApplyStatements(sectionId);\n  return firstApplyStatements ? getReferenceGroup(sectionId, 0).apply : t4.nullLiteral();\n}\n\n// src/util/writer.ts\nimport { types as t7 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t5 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t5.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t5.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t5.templateLiteral(strs.map((raw) => t5.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t5.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t6 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [40 /* Skip */]: \"skip\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [46 /* SkipEnd */]: \"skipEnd\",\n  [66 /* BeginChildEnd */]: \"beginChildEnd\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, childIndex, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}(${childIndex})`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, nCodeString(47 /* BeginChild */, childIndex));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  if (code && isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markHydrateNode\", scopeIdentifier, t6.numericLiteral(reserve.id))}`;\n  } else {\n    let walkString = \"\";\n    if (steps.length) {\n      const walks2 = [];\n      let depth = 0;\n      for (const step of steps) {\n        if (step === 0 /* enter */) {\n          depth++;\n          walks2.push(67 /* Next */);\n        } else {\n          depth--;\n          if (depth >= 0) {\n            walks2.length = walks2.lastIndexOf(67 /* Next */);\n            walks2.push(97 /* Over */);\n          } else {\n            walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n            walks2.push(107 /* Out */);\n            depth = 0;\n          }\n        }\n      }\n      let current = walks2[0];\n      let count = 0;\n      for (const walk of walks2) {\n        if (walk !== current) {\n          walkComment.push(`${walkCodeToName[current]}(${count})`);\n          walkString += nCodeString(current, count);\n          current = walk;\n          count = 1;\n        } else {\n          count++;\n        }\n      }\n      walkComment.push(`${walkCodeToName[current]}(${count})`);\n      walkString += nCodeString(current, count);\n      steps.length = 0;\n    }\n    if (code !== void 0) {\n      if (code !== 32 /* Get */) {\n        writeTo(path3)`<!>`;\n      }\n      walkComment.push(`${walkCodeToName[code]}`);\n      walkString += String.fromCharCode(code);\n    }\n    if (reserve?.size) {\n      walkComment.push(`${walkCodeToName[40 /* Skip */]}(${reserve.size})`);\n      walkString += nCodeString(40 /* Skip */, reserve.size);\n    }\n    appendLiteral(walks, walkString);\n  }\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    case 47 /* BeginChild */:\n      return toCharString(number, code, 20 /* BeginChild */);\n    case 40 /* Skip */:\n      return toCharString(number, code, 7 /* Skip */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t6.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [_getRenderer] = createSectionState(\"renderer\", () => currentProgramPath.scope.generateUidIdentifier());\nfunction getRenderer(sectionId, name) {\n  const renderer = _getRenderer(sectionId);\n  if (name) {\n    renderer.name = currentProgramPath.scope.generateUid(name);\n  }\n  return renderer;\n}\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t7.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    apply: getDefaultApply(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t7.stringLiteral(\"\")\n  };\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      flushInto(program);\n      writeHTMLHydrateStatements(program);\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs } = program.node.extra;\n      program.pushContainer(\"body\", [\n        t8.variableDeclaration(\"const\", [\n          t8.variableDeclarator(rendererId, t8.arrowFunctionExpression([attrs ? attrs.var : t8.identifier(\"input\")], t8.blockStatement(renderContent)))\n        ]),\n        t8.exportDefaultDeclaration(rendererId),\n        t8.exportNamedDeclaration(t8.variableDeclaration(\"const\", [\n          t8.variableDeclarator(t8.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t9 } from \"@marko/compiler\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t9.identifier(\"template\");\n      const walksIdentifier = t9.identifier(\"walks\");\n      const applyIdentifier = t9.identifier(\"apply\");\n      const applyAttrsIdentifier = t9.identifier(\"applyAttrs\");\n      const { attrs } = program.node.extra;\n      const { walks, writes, apply } = getSectionMeta(sectionId);\n      writeAllStatementGroups();\n      const childRendererDeclarators = [];\n      forEachSectionId((childSectionId) => {\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, apply: apply2 } = getSectionMeta(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          childRendererDeclarators.push(t9.variableDeclarator(identifier, callRuntime(\"createRenderer\", writes2, walks2, apply2)));\n        }\n      });\n      if (attrs) {\n        const exportSpecifiers = [];\n        program.node.body.push(t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n          t9.variableDeclarator(applyAttrsIdentifier, t9.functionExpression(null, [scopeIdentifier, attrs.var], t9.blockStatement(Object.keys(attrs.bindings).map((name) => {\n            const bindingIdentifier = attrs.bindings[name];\n            const { apply: applyIdentifier2 } = getReferenceGroup(sectionId, bindingIdentifier.extra.reserve);\n            exportSpecifiers.push(t9.exportSpecifier(applyIdentifier2, bindingIdentifier.extra.reserve.exportIdentifier));\n            return t9.expressionStatement(t9.callExpression(applyIdentifier2, [\n              scopeIdentifier,\n              bindingIdentifier\n            ]));\n          }))))\n        ])), t9.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      program.node.body.push(t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(templateIdentifier, writes || t9.stringLiteral(\"\"))\n      ])), t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(walksIdentifier, walks || t9.stringLiteral(\"\"))\n      ])), t9.exportNamedDeclaration(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(applyIdentifier, t9.isNullLiteral(apply) ? t9.functionExpression(null, [], t9.blockStatement([])) : apply)\n      ])));\n      if (childRendererDeclarators.length) {\n        program.node.body.push(t9.variableDeclaration(\"const\", childRendererDeclarators));\n      }\n      program.node.body.push(t9.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, applyIdentifier, attrs && applyAttrsIdentifier)));\n    }\n  }\n};\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeReferences();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = program.scope.generateUidIdentifier(\"scope\");\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t10.importDeclaration([], t10.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t10.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nvar text_default = {\n  translate(text) {\n    writeTo(text)`${text.node.value}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t20 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t11 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t11);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t11);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t11);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t15 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t12 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t12.identifier(name) : t12.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t13.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr of node.attributes) {\n    const value = attr.value;\n    if (t13.isMarkoSpreadAttribute(attr)) {\n      result.properties.push(t13.spreadElement(value));\n    } else {\n      result.properties.push(t13.objectProperty(toPropertyName(attr.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t13.objectMethod(\"method\", t13.identifier(\"renderBody\"), params, t13.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t13.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t13.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t13.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t14 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t14.variableDeclaration(kind, [\n    t14.variableDeclarator(t14.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs.some(isSpreadAttr)) {\n      } else {\n        for (const attr of attrs) {\n          const attrNode = attr.node;\n          const { name } = attrNode;\n          if (name.startsWith(\"on\")) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, node.name.value);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs.some((attr) => attr.isMarkoSpreadAttribute());\n      const write = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML) {\n        if (extra.tagNameNullable) {\n          flushBefore(tag);\n        }\n        translateVar(tag, t15.unaryExpression(\"void\", t15.numericLiteral(0)));\n      }\n      let visitIndex;\n      if (extra.reserve) {\n        visitIndex = t15.numericLiteral(extra.reserve.id);\n        visit(tag, 32 /* Get */);\n      }\n      write`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t15.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr of attrs) {\n          const name2 = attr.node.name;\n          const extra2 = attr.node.extra ?? {};\n          const value = attr.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t15.expressionStatement(callRuntime(helper, t15.memberExpression(scopeIdentifier, visitIndex, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (name2.startsWith(\"on\")) {\n                  addHTMLHydrateCall(sectionId, extra2.valueReferences);\n                } else {\n                  write`${callRuntime(\"attr\", t15.stringLiteral(name2), value.node)}`;\n                }\n              } else if (name2.startsWith(\"on\")) {\n                addStatement(\"hydrate\", sectionId, extra2.valueReferences, t15.expressionStatement(callRuntime(\"on\", t15.memberExpression(scopeIdentifier, visitIndex, true), t15.stringLiteral(name2.slice(2)), value.node)));\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t15.expressionStatement(callRuntime(\"attr\", t15.memberExpression(scopeIdentifier, visitIndex, true), t15.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      let emptyBody = false;\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write`/>`;\n            break;\n          default:\n            write`>`;\n            break;\n        }\n        emptyBody = true;\n      } else if (tag.node.body.body.length) {\n        write`>`;\n      } else {\n        write`></${name.node}>`;\n        emptyBody = true;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t15.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      if (emptyBody) {\n        enterShallow(tag);\n        tag.remove();\n      } else {\n        enter(tag);\n      }\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      writeTo(tag)`</${tag.node.name}>`;\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t15.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr) {\n  return attr.type === \"MarkoSpreadAttribute\";\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t16 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(1 /* Store */, getOrCreateSectionId(tag), tag.node, \"child\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr) => attr.extra?.valueReferences).map((attr) => [attr.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const tagSectionId = getSectionId(tag);\n      const tagBody = tag.get(\"body\");\n      const tagBodySectionId = getSectionId(tagBody);\n      const isHTML = isOutputHTML();\n      const { node } = tag;\n      const write = writeTo(tag);\n      const binding = node.extra.reserve;\n      let tagIdentifier;\n      let tagAttrsIdentifier;\n      if (isHTML) {\n        flushInto(tag);\n        writeHTMLHydrateStatements(tagBody);\n      }\n      if (t16.isStringLiteral(node.name)) {\n        const { file } = tag.hub;\n        const tagName = node.name.value;\n        const tags = file.metadata.marko.tags;\n        const tagDef = getTagDef2(tag);\n        const template = tagDef?.template;\n        const relativePath = template && resolveRelativePath(file, template);\n        const childFile = loadFileForTag(tag);\n        const childProgram = childFile.ast.program;\n        if (!relativePath) {\n          throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${tagName}>.`);\n        }\n        if (isHTML) {\n          tagIdentifier = importDefault(file, relativePath, tagName);\n        } else {\n          tagIdentifier = importNamed2(file, relativePath, \"apply\", tagName);\n          if (childProgram.extra.attrs) {\n            tagAttrsIdentifier = importNamed2(file, relativePath, \"applyAttrs\", `${tagName}_attrs`);\n          }\n          write`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n          injectWalks(tag, binding.id, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n        }\n        if (!tags.includes(relativePath)) {\n          tags.push(relativePath);\n        }\n      } else {\n        tagIdentifier = node.name;\n      }\n      const tagVar = node.var;\n      const attrsObject = attrsToObject(tag, true);\n      const renderBodyProp = getRenderBodyProp(attrsObject);\n      if (isHTML && node.extra.tagNameNullable) {\n        let renderBodyId = void 0;\n        let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n        if (renderBodyProp) {\n          renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n          const [renderBodyPath] = tag.insertBefore(t16.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n          renderBodyPath.skip();\n          attrsObject.properties[attrsObject.properties.length - 1] = t16.objectProperty(t16.identifier(\"renderBody\"), renderBodyId);\n        }\n        if (tagVar) {\n          translateVar(tag, t16.unaryExpression(\"void\", t16.numericLiteral(0)), \"let\");\n          renderTagExpr = t16.assignmentExpression(\"=\", tagVar, renderTagExpr);\n        }\n        tag.replaceWith(t16.ifStatement(tagIdentifier, t16.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n      } else {\n        if (isHTML) {\n          if (tagVar) {\n            translateVar(tag, callExpression(tagIdentifier, attrsObject));\n            tag.remove();\n          } else {\n            tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n          }\n        } else {\n          if (renderBodyProp) {\n            const { walks, writes } = getSectionMeta(tagBodySectionId);\n            attrsObject.properties.pop();\n            attrsObject.properties.push(t16.objectProperty(t16.identifier(\"renderBody\"), callRuntime(\"createRenderer\", writes || t16.stringLiteral(\"\"), walks || t16.stringLiteral(\"\"), t16.arrowFunctionExpression(renderBodyProp.params, renderBodyProp.body))));\n          }\n          addStatement(\"apply\", tagSectionId, void 0, t16.expressionStatement(t16.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n          if (attrsObject && tagAttrsIdentifier) {\n            addStatement(\"apply\", tagSectionId, tag.node.extra.attrsReferences, t16.expressionStatement(t16.callExpression(tagAttrsIdentifier, [\n              callRead(binding, tagSectionId),\n              attrsObject\n            ])));\n          }\n          tag.remove();\n        }\n      }\n    }\n  }\n};\nfunction callStatement(id, ...args) {\n  return t16.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t16.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t18 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t17 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t17.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t17.isBlockStatement(body)) {\n    return body;\n  }\n  return t17.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const tagBodySectionId = getSectionId(tag.get(\"body\"));\n      const attrsObject = attrsToObject(tag, true);\n      const renderBodyProp = getRenderBodyProp(attrsObject);\n      const args = [node.name, attrsObject || t18.nullLiteral()];\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      } else {\n        args.unshift(scopeIdentifier);\n      }\n      if (renderBodyProp) {\n        attrsObject.properties.pop();\n        let fnExpr = t18.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body));\n        if (isOutputDOM()) {\n          const { walks, writes } = getSectionMeta(tagBodySectionId);\n          fnExpr = callRuntime(\"createRenderer\", writes || t18.stringLiteral(\"\"), walks || t18.stringLiteral(\"\"), fnExpr);\n        }\n        args.push(fnExpr);\n      }\n      const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n      if (node.var) {\n        translateVar(tag, dynamicTagExpr);\n        tag.remove();\n      } else if (isOutputHTML()) {\n        tag.replaceWith(t18.expressionStatement(dynamicTagExpr))[0].skip();\n      } else {\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t19 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t19.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t19.variableDeclaration(\"const\", [\n            t19.variableDeclarator(info.identifier, t19.arrayExpression([]))\n          ]) : t19.variableDeclaration(\"let\", [\n            t19.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t19.expressionStatement(info.repeated ? t19.callExpression(t19.memberExpression(info.identifier, t19.identifier(\"push\")), [attrsObject]) : t19.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr) => attr.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, t19.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t19.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (analyzeTagNameType(tag)) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr of tag.get(\"attributes\")) {\n        if (attr.isMarkoAttribute()) {\n          if (attr.node.arguments) {\n            throw attr.buildCodeFrameError(`Unsupported arguments on the \"${attr.node.name}\" attribute.`);\n          }\n          if (attr.node.modifier) {\n            if (isNativeTag2(attr.parentPath)) {\n              attr.node.name += `:${attr.node.modifier}`;\n            } else {\n              throw attr.buildCodeFrameError(`Unsupported modifier \"${attr.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      let { tagNameType } = extra;\n      if (extra.tagNameDynamic) {\n        if (extra.tagNameNullable && !tag.get(\"name\").isIdentifier()) {\n          const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n          const [tagNameVarPath] = tag.insertBefore(t20.variableDeclaration(\"const\", [\n            t20.variableDeclarator(tagNameId, tag.node.name)\n          ]));\n          tagNameVarPath.skip();\n          tag.set(\"name\", tagNameId);\n        }\n        if (tagNameType !== 2 /* DynamicTag */ && !isOutputHTML()) {\n          tagNameType = 2 /* DynamicTag */;\n        }\n      }\n      switch (tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      const { extra } = tag.node;\n      let { tagNameType } = extra;\n      if (extra.tagNameDynamic && tagNameType !== 2 /* DynamicTag */ && (!isOutputHTML() || tagNameType === void 0)) {\n        tagNameType = 2 /* DynamicTag */;\n      }\n      switch (tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write`${callRuntime(method, placeholder.node.value)}`;\n      } else {\n        addStatement(\"apply\", getSectionId(placeholder), valueReferences, t21.expressionStatement(callRuntime(method, t21.memberExpression(scopeIdentifier, t21.numericLiteral(reserve.id), true), placeholder.node.value)));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t21.isMarkoComment(path3) || t21.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t21.isProgram(placeholder.parentPath)) && !(t21.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t21.isProgram(placeholder.parentPath)) && !(t21.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"apply\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      const sectionId = getOrCreateSectionId(tag);\n      trackReferencesForBindings(sectionId, varPath, 2 /* Attr */);\n      for (const key in bindings) {\n        const binding = bindings[key].extra.reserve;\n        binding.exportIdentifier = getReferenceGroup(sectionId, binding, true).apply;\n      }\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t23 } from \"@marko/compiler\";\nimport { assertNoParams, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t22 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t22.isBlockStatement(body)) {\n    return body;\n  }\n  return t22.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", 3);\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar2(tag);\n      assertNoParams(tag);\n      if (!t23.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    branches[0].tag.node.extra.conditionalReferences = mergeReferenceGroups(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isOutputHTML()) {\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n  }\n  if (isLast) {\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const { extra } = branches[0].tag.node;\n      let expr = t23.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2, \"if\");\n        setQueueBuilder(tag2, ({ apply, index }, closurePriority) => {\n          return callRuntime(\"queueInBranch\", scopeIdentifier, t23.numericLiteral(extra.reserve.id), getRenderer(sectionId2), apply, t23.numericLiteral(index), closurePriority);\n        });\n        tag2.remove();\n        if (testAttr) {\n          expr = t23.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      addStatement(\"apply\", sectionId, extra.conditionalReferences, t23.expressionStatement(callRuntime(\"setConditionalRenderer\", scopeIdentifier, t23.numericLiteral(extra.reserve.id), expr)));\n    } else {\n      const nextTag = tag.getNextSibling();\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t23.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      nextTag.insertBefore(statement);\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t24 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t24.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams4 } from \"@marko/babel-utils\";\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr of tag.get(\"attributes\")) {\n    if (attr.isMarkoSpreadAttribute()) {\n      throw attr.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/const.ts\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams4(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t25.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, identifiers.length === 1 ? t25.expressionStatement(t25.callExpression(getReferenceGroup(sectionId, identifiers[0].extra.reserve).apply, [scopeIdentifier, defaultAttr.value])) : [\n        t25.variableDeclaration(\"const\", [\n          t25.variableDeclarator(node.var, defaultAttr.value)\n        ]),\n        ...identifiers.map((identifier) => t25.expressionStatement(t25.callExpression(getReferenceGroup(sectionId, identifier.extra.reserve).apply, [t25.identifier(identifier.name)])))\n      ]);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t26.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n    }\n    const sectionId = getSectionId(tag);\n    if (isOutputDOM()) {\n      const cleanupIndex = tag.node.extra.reserve.id;\n      const { value } = defaultAttr;\n      let inlineStatements = null;\n      if (t26.isFunctionExpression(value) || t26.isArrowFunctionExpression(value) && t26.isBlockStatement(value.body)) {\n        inlineStatements = value.body.body;\n        t26.traverse(value.body, (node2) => {\n          if (t26.isReturnStatement(node2)) {\n            inlineStatements = null;\n          }\n        });\n      }\n      addStatement(\"hydrate\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t26.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, t26.numericLiteral(cleanupIndex), defaultAttr.value)));\n    } else {\n      addHTMLHydrateCall(sectionId, defaultAttr.extra?.valueReferences);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t27 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar5,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? tag.parentPath.parent : tag.node, \"for\", 3);\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML.exit(tag);\n      } else {\n        translateDOM.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    const ofAttr = findName(attributes, \"of\");\n    const byAttr = findName(attributes, \"by\");\n    setQueueBuilder(tag, ({ apply, index }, closurePriority) => {\n      return callRuntime(\"queueForEach\", scopeIdentifier, t27.numericLiteral(reserve.id), apply, t27.numericLiteral(index), closurePriority);\n    });\n    if (ofAttr) {\n      const ofAttrValue = ofAttr.value;\n      const [valParam] = params;\n      if (!t27.isIdentifier(valParam)) {\n        throw tag.buildCodeFrameError(`Invalid 'for of' tag, |value| parameter must be an identifier.`);\n      }\n      const rendererId = getRenderer(bodySectionId, \"for\");\n      tag.remove();\n      addStatement(\"apply\", sectionId, ofAttr.extra?.valueReferences, t27.expressionStatement(callRuntime(\"setLoopOf\", scopeIdentifier, t27.numericLiteral(reserve.id), ofAttrValue, rendererId, byAttr ? byAttr.value : t27.nullLiteral(), getReferenceGroup(bodySectionId, valParam.extra.reserve).apply)));\n    }\n  }\n};\nvar translateHTML = {\n  exit(tag) {\n    const tagBody = tag.get(\"body\");\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params }\n    } = node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const fromAttr = findName(attributes, \"from\");\n    const toAttr = findName(attributes, \"to\");\n    const block = t27.blockStatement(body);\n    let forNode;\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      if (valParam) {\n        block.body.unshift(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(valParam, t27.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      forNode = t27.forInStatement(t27.variableDeclaration(\"const\", [t27.variableDeclarator(keyParam)]), inAttr.value, block);\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      const [valParam, keyParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      forNode = [];\n      if (keyParam) {\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(keyParam, \"i\");\n        forNode.push(t27.variableDeclaration(\"let\", [\n          t27.variableDeclarator(indexName, t27.numericLiteral(0))\n        ]));\n        block.body.unshift(t27.variableDeclaration(\"let\", [\n          t27.variableDeclarator(keyParam, t27.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t27.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        forNode.push(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      forNode.push(t27.forOfStatement(t27.variableDeclaration(\"const\", [t27.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (fromAttr && toAttr) {\n      const stepAttr = findName(attributes, \"step\") || {\n        value: t27.numericLiteral(1)\n      };\n      const stepValue = stepAttr ? stepAttr.value : t27.numericLiteral(1);\n      const [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      if (indexParam) {\n        block.body.unshift(t27.variableDeclaration(\"const\", [\n          t27.variableDeclarator(indexParam, t27.binaryExpression(\"+\", fromAttr.value, t27.binaryExpression(\"*\", stepName, stepValue)))\n        ]));\n      }\n      forNode = t27.forStatement(t27.variableDeclaration(\"let\", [\n        t27.variableDeclarator(stepsName, t27.binaryExpression(\"/\", t27.binaryExpression(\"-\", toAttr.value, fromAttr.value), stepValue)),\n        t27.variableDeclarator(stepName, t27.numericLiteral(0))\n      ]), t27.binaryExpression(\"<=\", stepName, stepsName), t27.updateExpression(\"++\", stepName), block);\n    }\n    block.body.push(t27.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple([].concat(forNode));\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t27.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar5(tag);\n  if (findName(attrs, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs, \"from\") && findName(attrs, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t27.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t28 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId2,\n  assertNoParams as assertNoParams6\n} from \"@marko/babel-utils\";\nvar get_default = {\n  translate(tag) {\n    assertNoParams6(tag);\n    assertNoBodyContent(tag);\n    flushBefore(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t28.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t28.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId2(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t28.variableDeclaration(\"const\", [\n        t28.variableDeclarator(node.var, callRuntime(\"getInContext\", t28.stringLiteral(refId)))\n      ]));\n    } else {\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes,\n  assertNoParams as assertNoParams7,\n  assertNoVar as assertNoVar6\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar6(tag);\n      assertNoParams7(tag);\n      assertNoAttributes(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    state: \"parsed-text\"\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams8 } from \"@marko/babel-utils\";\n\n// src/util/replace-assignments.ts\nimport { types as t29 } from \"@marko/compiler\";\nfunction replaceAssignments(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    let value;\n    if (assignment.isUpdateExpression()) {\n      value = t29.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", binding.identifier, t29.numericLiteral(1));\n    } else if (assignment.isAssignmentExpression()) {\n      value = assignment.node.operator === \"=\" ? assignment.node.right : t29.binaryExpression(assignment.node.operator.slice(0, -1), binding.identifier, assignment.node.right);\n    }\n    if (value) {\n      assignment.parentPath.replaceWith(map(assignment, value));\n    }\n  }\n}\n\n// src/core/let.ts\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const [defaultAttr] = node.attributes;\n    assertNoParams8(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t30.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"default\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const referenceGroup = getReferenceGroup(sectionId, binding);\n      addStatement(\"apply\", sectionId, defaultAttr.extra?.valueReferences, t30.expressionStatement(t30.callExpression(referenceGroup.apply, [\n        scopeIdentifier,\n        defaultAttr.value\n      ])));\n      replaceAssignments(tag.scope.getBinding(binding.name), (assignment, value) => callQueue(referenceGroup, binding, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/set.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams9, assertNoVar as assertNoVar7 } from \"@marko/babel-utils\";\nvar set_default = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<set>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<set>' tag requires default attribute like '<set=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<set>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      tag.insertBefore(t31.expressionStatement(callRuntime(\"pushContext\", t31.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n    },\n    exit(tag) {\n      assertNoParams9(tag);\n      assertNoVar7(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.insertAfter(t31.expressionStatement(callRuntime(\"popContext\")));\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"set=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"set=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#set\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams10, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nimport { types as t32 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoVar8(tag);\n    assertNoParams10(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs.find((attr) => attr.isMarkoAttribute() && attr.node.name === \"type\");\n    if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      currentProgramPath.pushContainer(\"body\", t32.importDeclaration([], t32.stringLiteral(importPath)));\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t33 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t33.variableDeclaration(\"const\", [\n        t33.variableDeclarator(tag.node.var, t33.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/yield.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport { assertNoVar as assertNoVar9, assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar RETURN_IDENTIFIERS = /* @__PURE__ */ new WeakMap();\nvar yield_default = {\n  translate(tag) {\n    assertNoVar9(tag);\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    flushBefore(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr, onNextAttr] = node.attributes;\n    if (!t34.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<yield>' tag requires default attribute like '<yield=VALUE>'.`);\n    }\n    if (onNextAttr && onNextAttr.name === \"onnext\") {\n      if (isOutputHTML()) {\n        tag.get(\"attributes\")[1].remove();\n      }\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<yield>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    let returnId = RETURN_IDENTIFIERS.get(file);\n    if (!returnId) {\n      const program = file.path;\n      RETURN_IDENTIFIERS.set(file, returnId = program.scope.generateDeclaredUidIdentifier(\"return\"));\n      program.pushContainer(\"body\", t34.returnStatement(returnId))[0].skip();\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t34.assignmentExpression(\"=\", returnId, defaultAttr.value))[0].skip();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"yield=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"yield=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#yield\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t35 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t35.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t35.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<set>\": set_default,\n  \"<get>\": get_default,\n  \"<yield>\": yield_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t36 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t36.markoTag(t36.stringLiteral(\"attrs\"), void 0, t36.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t36.isMemberExpression(identifier.parent) && t36.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t36.markoTag(t36.stringLiteral(\"get\"), void 0, t36.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/translator\"\n\n<hash-value/files = [{ \n  name:\"index.marko\", \n  path:\"/components/index.marko\", \n  content:\"<let/count=0/>\\n<button onclick() { count++ }>\\n  ${count}\\n</button>\"\n}]/>\n<repl getTranslator() { return fluurtTranslator } files:=files/>","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport \"../../../components/app-layout/components/layout-search/search.png\";\nimport component_0 from \"../../../components/app-layout/components/layout-search/component-browser.js\";\nregister(\"HkYzEWAp\", component_0);\nimport component_1 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_1);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_2);\nimport component_3 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_3);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.png\";\nimport \"../../../components/app-footer/osi.png\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"../../node_modules/@marko/compiler/modules\");\n","module.exports = require(\"memfs\");\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","__require","require","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","file","markoOpts","createSortedCollection","compare","insert","data","val","immutable","Array","isArray","arr","len","length","max","pos","mid","compareResult","cur","next","insertInArray","find","findIndex","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","name","get","isStringLiteral","value","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","path","parent","test","source","specifiers","some","it","t","bindingTag","isMarkoTag","bindingTagName","defaultAttr","assignments","constantViolations","i","assignment","tagNameDynamic","startSection","sectionId","programExtra","nextSectionId","getOrCreateSectionId","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","state","forEachSectionId","fn","getReservesByType","reserveScope","size","reserve","reserve2","reservesByType","compareReserves","a","b","insertReserve","getReferenceGroups","index","count","references","apply","t2","hydrate","trackReferencesForBindings","reserveType","bindings","getBindingIdentifiers","referencePaths","insertReferenceGroup","reference","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","name2","isMarkoAttribute","default","updateReferenceGroup","listKey","extraKey","newBinding","currentGroup","newReferences","getOrCreateReferenceGroup","mergeReferenceGroups","groupEntries","group","newGroup","referenceGroups","existingGroup","findReferenceGroup","curPath","isMarkoPath","isProgram","isFunctionExpression","lenDelta","getReferenceGroup","lookup","analyze2","found","generateReferenceGroupName","ref","generateUid","importRuntime","importNamed","getRuntimePath","callRuntime","args","t3","filter","Boolean","getHTMLRuntime","optimize","callRead","targetSectionId","getScopeExpression","diff","scopeIdentifier","getApplyStatements","getHydrateStatements","getQueueBuilder","_setQueueBuilder","setQueueBuilder","builder","addStatement","statement","statementsIndex","allStatements","statements","getHydrateRegisterId","opts","filename","getTemplateId","getClosurePriorities","addHTMLHydrateCall","writeHTMLHydrateStatements","unshiftContainer","t4","refs","pushContainer","reduce","acc","bindFunctionsVisitor","FunctionExpression","exit","bindFunction","ArrowFunctionExpression","root","functionIdentifier","generateUidIdentifier","body","unshift","map","insertBefore","params","replaceWith","getDefaultApply","firstApplyStatements","toTemplateOrStringLiteral","parts","strs","exprs","curStr","content","t5","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","appendLiteral","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","writeTo","t6","walkString","walks2","depth","step","lastIndexOf","current","walk","nCodeString","String","fromCharCode","number","toCharString","startCode","rangeSize","result","multiplier","Math","floor","getWalkString","walkLiteral","leadingComments","join","_getRenderer","getRenderer","renderer","getWrites","exprsLen","writes","consumeHTML","t7","flushBefore","expr","skip","flushInto","target","getSectionMeta","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","translate","program","renderContent","child","replaceWithMultiple","remove","rendererId","attrs","t8","var","dom_default","templateIdentifier","t9","walksIdentifier","applyIdentifier","applyAttrsIdentifier","forEachSectionIdReverse","referenceGroup","identifier","fnPath","traverse","writeHydrateGroups","numReferenceGroups","queuePriority","factory","closurePriority","NaN","param","closurePriorities","writeApplyGroups","childRendererDeclarators","childSectionId","writes2","apply2","exportSpecifiers","Object","bindingIdentifier","applyIdentifier2","exportIdentifier","previousProgramPath","WeakMap","program_default","migrate","set","crawl","analyze","curIndex","reserves","allReferenceGroups","g","forEach","finalizeReferences","t10","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","declaration_default","declaration","cdata_default","cdata","text_default","text","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t11","exit2","IDENTIFIER_REG","toPropertyName","t12","attrsToObject","withRenderBody","t13","resultExtra","attr","attributes","properties","hoistedControlFlows","isConditional","isLoop","prop","argument","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t14","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","startsWith","isHTML","tagDef","getTagDef","hasSpread","isMarkoSpreadAttribute","write","visitIndex","t15","attrsCallExpr","extra2","valueReferences","helper","slice","emptyBody","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childProgramExtra","loadFileForTag","ast","attrsReferences","tagSectionId","tagBody","tagBodySectionId","tagIdentifier","tagAttrsIdentifier","t16","tagName","tags","metadata","marko","relativePath","resolveRelativePath","childProgram","importDefault","importNamed2","childIndex","injectWalks","includes","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","toFirstExpressionOrBlock","nodes","t17","expression","dynamic_tag_default","t18","fnExpr","dynamicTagExpr","attribute_tag_default","hasPendingHTML","assertNoVar","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t19","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","existing","tag_default","hook","getTagDef3","analyzer","assertNoArgs","translator","watchFiles","arguments","modifier","isNativeTag2","tagNameId","tagNameVarPath","t20","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","escape","prev","getPrevSibling","noOutput","t21","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parse","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","autocomplete","displayText","description","snippet","descriptionMoreURL","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t22","if_default","exitBranchAnalyze","testAttr","assertNoVar2","assertNoParams","t23","loc","end","msg","buildError","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","bodySectionId","branches","nextTag","isLast","conditionalReferences","tag2","sectionId2","curStatement","else_if_default","assertNoVar3","assertNoParams2","t24","else_default","assertNoVar4","assertNoParams3","assertNoSpreadAttrs","assertNoBodyContent","const_default","assertNoParams4","t25","identifiers","values","effect_default","assertNoParams5","t26","cleanupIndex","inlineStatements","node2","for_default","isOnlyChild","t27","getTagDef5","html","checkOnlyChild","hasParams","assertNoVar5","findName","assertAllowedAttributes","validateFor","translateHTML","translateDOM","of","in","to","from","ofAttr","byAttr","ofAttrValue","valParam","namePath","inAttr","fromAttr","toAttr","block","forNode","keyParam","loopParam","indexName","generateUidIdentifierBasedOnNode","stepAttr","stepValue","indexParam","stepsName","stepName","concat","obj","get_default","assertNoParams6","refId","t28","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId2","html_comment_default","assertNoVar6","assertNoParams7","assertNoAttributes","assertNoAttributeTags","let_default","assertNoParams8","t30","isUpdateExpression","t29","right","replaceAssignments","callQueue","set_default","t31","assertNoParams9","assertNoVar7","insertAfter","style_default","assertNoVar8","assertNoParams10","base","path2","sourceFileName","typeAttr","typeValue","markoText","isMarkoText","resolveVirtualDependency","importPath","startPos","endPos","virtualPath","t32","enum","tag_default2","t33","RETURN_IDENTIFIERS","noop_default","core_default","assertNoVar9","assertNoParams11","onNextAttr","t34","returnId","generateDeclaredUidIdentifier","replace","trim","parseScript3","t35","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","ReferencedIdentifier","hasBinding","add","t36","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","entries","visitor","taglibs","files","fluurtTranslator","register","types","env","browser","cwd"],"sourceRoot":""}