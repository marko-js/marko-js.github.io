{"version":3,"file":"664.048dc40f.js","mappings":"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","sources":["webpack:///../components/repl/components/file-tabs.marko","webpack:///../components/repl/components/pane.marko","webpack:///../components/repl/components/controllable-select.marko","webpack:///../components/repl/components/playground-link.marko","webpack:///../components/repl/components/match-media.marko","webpack:///../components/repl/components/resizable-panes.marko","webpack:///../components/repl/index.marko","webpack:///./playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ value: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <if=activeEditor>\n          <activeEditor\n            value=selectedFile.content \n            filename=selectedFile.path \n            valueChange(content) {\n              const modifiedFile = { ...selectedFile, content };\n              files = [\n                ...files.slice(0, selectedIndex), \n                modifiedFile,\n                ...files.slice(selectedIndex+1)\n              ];\n              debounce = true;\n            }/>\n        </if>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nstatic function getInitialValue() {\n  try {\n    if (typeof window !== \"undefined\") {\n      return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\n<attrs/{ value:defaultValue }/>\n<let/value = getInitialValue() || defaultValue/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removeEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","// src/visitors/program/index.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t11 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/sections.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"test\"));\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              type = 2 /* DynamicTag */;\n              continue;\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let section = extra.section;\n  if (!section) {\n    const parentSection = path3.parentPath ? getOrCreateSection(path3.parentPath) : void 0;\n    const sectionNamePath = path3.parentPath?.get(\"name\");\n    const sectionName = path3.isProgram() ? \"\" : currentProgramPath.scope.generateUid(sectionNamePath.toString() + \"Body\");\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSection(path3) {\n  let section;\n  let currentPath = path3;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\nvar [getScopeIdIdentifier] = createSectionState(\"scopeIdIdentifier\", (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`));\nvar [_getScopeIdentifier] = createSectionState(\"scopeIdentifier\", () => t2.identifier(\"undefined\"));\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t3 } from \"@marko/compiler\";\n\n// src/util/sorted-repeatable.ts\nvar SortedRepeatable = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? insertSorted(this.compare, data, item) : joinItems(this.compare, data, item) : item;\n  }\n  addAll(data, items) {\n    if (data) {\n      if (Array.isArray(data)) {\n        if (items) {\n          if (Array.isArray(items)) {\n            for (const item of items) {\n              insertSorted(this.compare, data, item);\n            }\n          } else {\n            insertSorted(this.compare, data, items);\n          }\n        }\n        return data;\n      }\n      if (items) {\n        if (Array.isArray(items)) {\n          return insertSorted(this.compare, [...items], data);\n        }\n        return joinItems(this.compare, items, data);\n      }\n      return data;\n    }\n    if (Array.isArray(items)) {\n      return [...items];\n    }\n    return items;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        let max = data.length;\n        let pos = 0;\n        while (pos < max) {\n          const mid = pos + max >>> 1;\n          const cur = data[mid];\n          const compareResult = this.compare(cur, item);\n          if (compareResult === 0)\n            return cur;\n          if (compareResult > 0)\n            max = mid;\n          else\n            pos = mid + 1;\n        }\n      } else {\n        return this.compare(data, item) === 0 ? data : void 0;\n      }\n    }\n  }\n  clone(item) {\n    return Array.isArray(item) ? [...item] : item;\n  }\n  size(data) {\n    return data ? Array.isArray(data) ? data.length : 1 : 0;\n  }\n  toArray(data, map) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return data.map(map);\n      }\n      return [map(data)];\n    }\n    return [];\n  }\n  *iterate(data) {\n    if (data) {\n      if (Array.isArray(data)) {\n        for (const item of data) {\n          yield item;\n        }\n      } else {\n        yield data;\n      }\n    }\n  }\n};\nfunction joinItems(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\nfunction insertSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0)\n      return data;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    data[pos++] = next;\n  }\n  data[len] = cur;\n  return data;\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, section, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(section);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    section\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSection((section) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(section)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getScopeAccessorLiteral(reserve) {\n  if (isOptimize()) {\n    return t3.numericLiteral(reserve.id);\n  }\n  return t3.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n}\nvar repeatableReserves = new SortedRepeatable(function compareReserves(a, b) {\n  return a.section.id - b.section.id || a.type - b.type || a.id - b.id;\n});\n\n// src/util/runtime.ts\nimport { types as t5 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val || val === 0 ? val + \"\" : \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (!val && val !== 0) {\n      return \"&zwj;\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n        return \"true\";\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/scope-read.ts\nimport { types as t4 } from \"@marko/compiler\";\nfunction createScopeReadPattern(section, references) {\n  const rootDepth = section.depth;\n  const rootPattern = t4.objectPattern([]);\n  let nestedPatterns;\n  for (const ref of repeatableReserves.iterate(references)) {\n    const propertyKey = getScopeAccessorLiteral(ref);\n    const propertyValue = t4.identifier(ref.name);\n    const isShorthand = propertyKey.value === propertyValue.name;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns)\n        nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = t4.objectPattern([]);\n        prev.properties.push(t4.objectProperty(t4.identifier(\"_\"), nestedPattern));\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(t4.objectProperty(isShorthand ? propertyValue : propertyKey, propertyValue, false, isShorthand));\n  }\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier;\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = t4.memberExpression(scope, t4.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  return t4.memberExpression(getScopeExpression(section, reference.section), getScopeAccessorLiteral(reference), true);\n}\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"value\",\n  \"intersection\",\n  \"closure\",\n  \"dynamicClosure\",\n  \"contextClosure\",\n  \"loop\",\n  \"conditional\",\n  \"bindFunction\",\n  \"bindRenderer\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t5.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t5.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t9 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t6 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t6.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t6.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t6.templateLiteral(strs.map((raw) => t6.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t6.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t7 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSection(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSection(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSection(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSection(path3));\n  const walkComment = getWalkComment(getSection(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path3);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(section)) || t7.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (section) => t8.identifier(section.name));\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const section = getSection(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const section = getSection(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(section);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSection(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t8.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSection(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: toTemplateOrStringLiteral(writes) || t8.stringLiteral(\"\"),\n    register: getRegisterRenderer(section)\n  };\n}\nfunction markNode(path3) {\n  const section = getSection(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markResumeNode\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const section = getSection(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t9.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(section, returnId2);\n      tag.replaceWith(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      addValue(section, defaultAttr.extra?.valueReferences, {\n        identifier: importRuntime(\"tagVarSignal\"),\n        hasDownstreamIntersections: () => true\n      }, defaultAttr.value);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSection(tag.get(\"body\")), builder);\n}\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar addClosure = (fromSection, toSection, closure) => {\n  let currentSection = fromSection;\n  while (currentSection !== void 0 && currentSection !== toSection) {\n    getClosures(currentSection).push(closure);\n    currentSection = currentSection.parent;\n  }\n};\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getRegisterScopeBuilder, _setRegisterScopeBuilder] = createSectionState(\"register\");\nfunction setRegisterScopeBuilder(tag, builder) {\n  _setRegisterScopeBuilder(getSection(tag.get(\"body\")), builder);\n}\nvar unimplementedBuild = () => {\n  return t10.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, reserve) {\n  const signals = getSignals(section);\n  let signal = signals.get(reserve);\n  if (!signal) {\n    signals.set(reserve, signal = {\n      identifier: t10.identifier(generateSignalName(section, reserve)),\n      reserve,\n      section,\n      values: [],\n      intersection: void 0,\n      render: [],\n      effect: [],\n      effectInlineReferences: void 0,\n      subscribers: [],\n      closures: /* @__PURE__ */ new Map(),\n      hasDownstreamIntersections: () => {\n        if (signal.intersection || signal.closures.size || signal.values.some((v) => v.signal.hasDownstreamIntersections())) {\n          signal.hasDownstreamIntersections = () => true;\n          return true;\n        } else {\n          signal.hasDownstreamIntersections = () => false;\n          return false;\n        }\n      },\n      build: unimplementedBuild\n    });\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!reserve) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"intersection\", t10.numericLiteral(reserve.length), getSignalFn(signal, [scopeIdentifier], reserve));\n      };\n    } else if (reserve.section !== section) {\n      const provider = getSignal(reserve.section, reserve);\n      addClosure(section, reserve.section, signal.identifier);\n      provider.closures.set(section, signal);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(section);\n        const ownerScope = getScopeExpression(section, reserve.section);\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        return callRuntime(builder && isImmediateOwner ? \"closure\" : \"dynamicClosure\", getScopeAccessorLiteral(reserve), getSignalFn(signal, [scopeIdentifier, t10.identifier(reserve.name)]), isImmediateOwner ? null : t10.arrowFunctionExpression([scopeIdentifier], ownerScope), buildSignalIntersections(signal), buildSignalValuesWithIntersections(signal));\n      };\n    }\n  }\n  return signal;\n}\nfunction initValue(reserve, valueAccessor = getScopeAccessorLiteral(reserve)) {\n  const section = reserve.section;\n  const signal = getSignal(section, reserve);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      t10.identifier(reserve.name)\n    ]);\n    const intersections = buildSignalIntersections(signal);\n    const valuesWithIntersections = buildSignalValuesWithIntersections(signal);\n    if (fn.body.body.length > 0 || intersections || valuesWithIntersections) {\n      return callRuntime(\"value\", valueAccessor, fn, intersections, valuesWithIntersections);\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = valueAccessor;\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const section = reserve.section;\n  const scopeAccessor = getScopeAccessorLiteral(reserve);\n  const valueAccessor = t10.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const signal = initValue(reserve, valueAccessor);\n  addValue(section, providers, signal, compute);\n  signal.hasDynamicSubscribers = true;\n  signal.hasDownstreamIntersections = () => true;\n  addStatement(\"render\", reserve.section, void 0, t10.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t10.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const section = reserve.section;\n  const signal = getSignal(section, reserve);\n  getClosures(section).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getScopeAccessorLiteral(reserve), t10.stringLiteral(templateId), getSignalFn(signal, [scopeIdentifier, t10.identifier(reserve.name)]));\n  };\n  return signal;\n}\nfunction getSignalFn(signal, params, references) {\n  const section = signal.section;\n  for (const value of signal.values) {\n    signal.render.push(t10.expressionStatement(t10.callExpression(value.signal.identifier, [value.scope, value.value])));\n  }\n  if (references) {\n    signal.render.unshift(t10.variableDeclaration(\"const\", [\n      t10.variableDeclarator(createScopeReadPattern(section, references), scopeIdentifier)\n    ]));\n  }\n  return t10.arrowFunctionExpression(params, t10.blockStatement(signal.render));\n}\nfunction buildSignalIntersections(signal) {\n  let intersections = signal.intersection;\n  const section = signal.section;\n  const closureEntries = Array.from(signal.closures.entries()).sort(([a], [b]) => a.id - b.id);\n  for (const [closureSection, closureSignal] of closureEntries) {\n    const builder = getSubscribeBuilder(closureSection);\n    const isImmediateOwner = closureSection.parent === section;\n    if (builder && isImmediateOwner) {\n      intersections = pushRepeatable(intersections, builder(closureSignal.identifier));\n    } else if (!signal.hasDynamicSubscribers) {\n      signal.hasDynamicSubscribers = true;\n    }\n  }\n  if (signal.hasDynamicSubscribers) {\n    signal.hasDynamicSubscribers = true;\n    intersections = pushRepeatable(intersections, callRuntime(\"dynamicSubscribers\", signal.valueAccessor));\n  }\n  return Array.isArray(intersections) ? callRuntime(\"intersections\", t10.arrayExpression(intersections)) : intersections;\n}\nfunction buildSignalValuesWithIntersections(signal) {\n  let valuesWithIntersections;\n  for (const value of signal.values) {\n    if (value.signal.hasDownstreamIntersections()) {\n      valuesWithIntersections = pushRepeatable(valuesWithIntersections, value.intersectionExpression ?? t10.identifier(value.signal.identifier.name));\n    }\n  }\n  return Array.isArray(valuesWithIntersections) ? callRuntime(\"values\", t10.arrayExpression(valuesWithIntersections)) : valuesWithIntersections;\n}\nfunction pushRepeatable(repeatable, value) {\n  if (!repeatable) {\n    return value;\n  } else if (Array.isArray(repeatable)) {\n    repeatable.push(value);\n    return repeatable;\n  } else {\n    return [repeatable, value];\n  }\n}\nfunction getTagVarSignal(varPath) {\n  if (varPath.isIdentifier()) {\n    return initValue(varPath.node.extra.reserve);\n  } else {\n    return getDestructureSignal(Object.values(varPath.getBindingIdentifiers()), varPath.node);\n  }\n}\nfunction getTagParamsSignal(paramsPaths, pattern = t10.arrayPattern(paramsPaths.map((path3) => path3.node))) {\n  const parameterBindings = paramsPaths.reduce((bindingsLookup, path3) => {\n    return Object.assign(bindingsLookup, path3.getBindingIdentifiers());\n  }, {});\n  return getDestructureSignal(parameterBindings, pattern);\n}\nfunction getDestructureSignal(bindingsByName, destructurePattern) {\n  const bindings = Array.isArray(bindingsByName) ? bindingsByName : Object.values(bindingsByName);\n  if (bindings.length) {\n    const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n    const bindingSignals = bindings.map((binding) => initValue(binding.extra?.reserve));\n    const declarations = t10.variableDeclaration(\"let\", bindings.map((binding) => t10.variableDeclarator(binding)));\n    return {\n      get identifier() {\n        const name = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n        currentProgramPath.pushContainer(\"body\", [\n          t10.variableDeclaration(\"const\", [\n            t10.variableDeclarator(name, this.build(true))\n          ])\n        ]);\n        return name;\n      },\n      build(canCallOnlyWhenDirty) {\n        if (canCallOnlyWhenDirty && !this.hasDownstreamIntersections()) {\n          return t10.arrowFunctionExpression([scopeIdentifier, destructurePattern], t10.blockStatement(bindingSignals.map((signal, i) => t10.expressionStatement(t10.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i]\n          ])))));\n        }\n        return t10.arrowFunctionExpression([scopeIdentifier, valueIdentifier, cleanIdentifier], t10.blockStatement([\n          declarations,\n          t10.ifStatement(t10.unaryExpression(\"!\", cleanIdentifier), t10.expressionStatement(t10.assignmentExpression(\"=\", destructurePattern, valueIdentifier))),\n          ...bindingSignals.map((signal, i) => t10.expressionStatement(t10.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i],\n            cleanIdentifier\n          ])))\n        ]));\n      },\n      hasDownstreamIntersections() {\n        return bindings.some((binding) => {\n          const reserve = binding.extra?.reserve;\n          const signal = getSignal(reserve.section, reserve);\n          return signal.hasDownstreamIntersections();\n        });\n      }\n    };\n  }\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = pushRepeatable(providerSignal.intersection, subscriber.identifier);\n}\nfunction generateSignalName(section, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += section.name.replace(\"_\", \"$\");\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSection) {\n  return callRuntime(\"queueSource\", getScopeExpression(targetSection, source.section), source.identifier, value);\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t10.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t10.nullLiteral();\n        } else if (body.length === 1 && t10.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t10.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSection, references, statement, originalNodes, isInlined) {\n  const signal = getSignal(targetSection, references);\n  const statements = signal[type] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"effect\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t10.isFunction(node)) {\n          addEffectReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t10.isFunction(originalNodes)) {\n        addEffectReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addValue(targetSection, references, signal, value, scope = scopeIdentifier, intersectionExpression) {\n  getSignal(targetSection, references).values.push({\n    signal,\n    value,\n    scope,\n    intersectionExpression\n  });\n}\nfunction addEffectReferences(signal, expression) {\n  signal.effectInlineReferences = repeatableReserves.addAll(signal.effectInlineReferences, expression.extra?.references);\n}\nfunction getResumeRegisterId(section, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${section.id}${name}`);\n}\nfunction writeSignals(section) {\n  const signals = getSignals(section);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let effectDeclarator;\n    if (signal.effect.length) {\n      const effectIdentifier = t10.identifier(`${signal.identifier.name}_effect`);\n      if (signal.effectInlineReferences) {\n        signal.effect.unshift(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(createScopeReadPattern(section, signal.effectInlineReferences), scopeIdentifier)\n        ]));\n      }\n      effectDeclarator = t10.variableDeclarator(effectIdentifier, callRuntime(\"register\", t10.stringLiteral(getResumeRegisterId(section, signal.reserve)), t10.arrowFunctionExpression([scopeIdentifier], signal.effect.length === 1 && t10.isExpressionStatement(signal.effect[0]) ? signal.effect[0].expression : t10.blockStatement(signal.effect))));\n      signal.render.push(t10.expressionStatement(callRuntime(\"queueEffect\", scopeIdentifier, effectIdentifier)));\n    }\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t10.stringLiteral(getResumeRegisterId(section, signal.reserve)), value);\n    }\n    if (t10.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    const signalDeclarator = t10.variableDeclarator(signal.identifier, value);\n    return effectDeclarator ? [\n      t10.variableDeclaration(\"const\", [effectDeclarator]),\n      t10.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t10.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, section }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLEffectCall(section, references) {\n  addStatement(\"effect\", section, references, void 0, []);\n}\nfunction writeHTMLResumeStatements(path3, tagVarIdentifier) {\n  const section = getOrCreateSection(path3);\n  const intersections = currentProgramPath.node.extra.intersectionsBySection?.[section.id] ?? [];\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  const scopeIdentifier2 = getScopeIdentifier(section, true);\n  path3.unshiftContainer(\"body\", t10.variableDeclaration(\"const\", [\n    t10.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  const serializedReferences = [];\n  for (const intersection of intersections) {\n    for (const reference of intersection) {\n      if (reference.type !== 0 /* Visit */) {\n        repeatableReserves.add(serializedReferences, reference);\n      }\n    }\n  }\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].reserve;\n      repeatableReserves.addAll(serializedReferences, signalRefs);\n      path3.pushContainer(\"body\", t10.expressionStatement(callRuntime(\"writeEffect\", scopeIdIdentifier, t10.stringLiteral(getResumeRegisterId(section, signalRefs)))));\n    }\n  }\n  const serializedProperties = serializedReferences.reduce((acc, ref) => {\n    acc.push(t10.objectProperty(getScopeAccessorLiteral(ref), t10.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(section) !== void 0) {\n    serializedProperties.push(t10.objectProperty(t10.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(section);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t10.objectProperty(key, value, !t10.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceResumeScope(section)) {\n    const isRoot = path3.isProgram();\n    const builder = getRegisterScopeBuilder(section);\n    path3.pushContainer(\"body\", t10.expressionStatement(callRuntime(\"writeScope\", scopeIdIdentifier, builder ? builder(t10.objectExpression(serializedProperties)) : t10.objectExpression(serializedProperties), isRoot ? scopeIdentifier2 : null)));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, section }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t10.blockStatement([t10.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t10.variableDeclaration(\"const\", [\n      t10.variableDeclarator(createScopeReadPattern(section, references), scopeIdentifier)\n    ]));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t10.variableDeclaration(\"const\", [\n    t10.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bindFunction\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nimport { getTemplateId as getTemplateId2 } from \"@marko/babel-utils\";\nvar html_default = {\n  translate: {\n    exit(program) {\n      const section = getSection(program);\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLResumeStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(section);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t11.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.pushContainer(\"body\", [\n        t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(rendererId, callRuntime(\"register\", t11.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t11.identifier(\"input\"),\n            tagVarIdentifier,\n            getScopeIdentifier(getSection(program))\n          ], t11.blockStatement(renderContent)), t11.stringLiteral(getTemplateId2(optimize, `${filename}`))))\n        ]),\n        t11.exportDefaultDeclaration(rendererId),\n        t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(t11.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t12 } from \"@marko/compiler\";\nimport { getTemplateId as getTemplateId3 } from \"@marko/babel-utils\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSection(program);\n      const templateIdentifier = t12.identifier(\"template\");\n      const walksIdentifier = t12.identifier(\"walks\");\n      const setupIdentifier = t12.identifier(\"setup\");\n      const attrsSignalIdentifier = t12.identifier(\"attrs\");\n      const closuresIdentifier = t12.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, setup } = getSectionMeta(section);\n      forEachSectionReverse((childSection) => {\n        writeSignals(childSection);\n        if (childSection !== section) {\n          const { walks: walks2, writes: writes2, setup: setup2, register: register2 } = getSectionMeta(childSection);\n          const closures2 = getClosures(childSection);\n          const identifier = getRenderer(childSection);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, setup2, closures2.length && t12.arrayExpression(closures2));\n          program.node.body.push(t12.variableDeclaration(\"const\", [\n            t12.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t12.stringLiteral(getResumeRegisterId(childSection, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const isIdentity = t12.isIdentifier(attrs2.var);\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(section, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t12.exportSpecifier(signalIdentifier, signalIdentifier));\n        }\n        program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n          t12.variableDeclarator(attrsSignalIdentifier, isIdentity ? getSignal(section, attrs2.var.extra.reserve).identifier : getDestructureSignal(attrs2.bindings, attrs2.var)?.build())\n        ])), t12.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(section);\n      program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(templateIdentifier, writes || t12.stringLiteral(\"\"))\n      ])), t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(walksIdentifier, walks || t12.stringLiteral(\"\"))\n      ])), t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(setupIdentifier, t12.isNullLiteral(setup) || !setup ? t12.functionExpression(null, [], t12.blockStatement([])) : setup)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n          t12.variableDeclarator(closuresIdentifier, t12.arrayExpression(closures))\n        ])));\n      }\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.node.body.push(t12.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier, t12.stringLiteral(getTemplateId3(optimize, `${filename}`)))));\n    }\n  }\n};\n\n// src/util/references.ts\nvar intersectionSubscribeCounts = /* @__PURE__ */ new WeakMap();\nvar repeatableIntersections = new SortedRepeatable(compareIntersections);\nvar [getIntersectionsBySection, setIntersectionsBySection] = createSectionState(\"intersectionsBySection\", () => []);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSection(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSection(body), body);\n  }\n}\nfunction trackReferencesForBindings(section, path3) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(1 /* Store */, section, identifier, name);\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        addBindingToReferences(immediateRoot, \"references\", binding);\n      }\n      addBindingToReferences(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction addBindingToReferences(path3, referencesKey, binding) {\n  const section = getOrCreateSection(path3);\n  const extra = path3.node.extra ??= {};\n  const prevReferences = extra[referencesKey];\n  if (prevReferences) {\n    if (prevReferences !== binding) {\n      extra[referencesKey] = addSubscriber(getIntersection(section, repeatableReserves.add(repeatableReserves.clone(prevReferences), binding)));\n      if (isIntersection(prevReferences)) {\n        removeSubscriber(getIntersection(section, prevReferences));\n      }\n    }\n  } else {\n    extra[referencesKey] = binding;\n  }\n}\nfunction mergeReferences(section, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const references = extra[key];\n    if (isIntersection(references)) {\n      removeSubscriber(getIntersection(section, references));\n    }\n    newReferences = repeatableReserves.addAll(newReferences, references);\n    delete extra[key];\n  }\n  if (isIntersection(newReferences)) {\n    newReferences = addSubscriber(getIntersection(section, newReferences));\n  }\n  return newReferences;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = repeatableReserves.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeIntersections() {\n  const intersectionsBySection = (currentProgramPath.node.extra ??= {}).intersectionsBySection = {};\n  forEachSection((section) => {\n    intersectionsBySection[section.id] = getIntersectionsBySection(section).filter((intersection) => intersectionSubscribeCounts.get(intersection) > 0);\n  });\n}\nfunction getIntersection(section, references) {\n  const intersections = getIntersectionsBySection(section);\n  let intersection = repeatableIntersections.find(intersections, references);\n  if (!intersection) {\n    intersection = references;\n    setIntersectionsBySection(section, repeatableIntersections.add(intersections, references));\n  }\n  return intersection;\n}\nfunction addSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, (intersectionSubscribeCounts.get(intersection) || 0) + 1);\n  return intersection;\n}\nfunction removeSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, intersectionSubscribeCounts.get(intersection) - 1);\n  return intersection;\n}\nfunction isIntersection(references) {\n  return Array.isArray(references);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar cleanIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeIntersections();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t13.importDeclaration([], t13.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t13.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t14.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t15.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t15.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t15.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t16 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t16.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t16.isMarkoTag(sibling) || t16.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t17 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t17);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t19 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t18 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t18.identifier(name) : t18.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t19.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t19.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t19.spreadElement(value));\n    } else {\n      result.properties.push(t19.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t19.objectMethod(\"method\", t19.identifier(\"renderBody\"), params, t19.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t19.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t19.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t19.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t20 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t20.variableDeclaration(kind, [\n    t20.variableDeclarator(t20.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let section = tag.has(\"var\") ? getOrCreateSection(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            section ??= getOrCreateSection(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            section ??= getOrCreateSection(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (section !== void 0) {\n        reserveScope(0 /* Visit */, section, node, name, `#${tag.get(\"name\").evaluate().value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t21.arrowFunctionExpression([], t21.blockStatement([\n            t21.throwStatement(t21.newExpression(t21.identifier(\"Error\"), [\n              t21.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSection = getSection(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t21.expressionStatement(createScopeReadExpression(referenceSection, extra.reserve)));\n            } else {\n              createElFunction ??= t21.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bindFunction\", getScopeExpression(referenceSection, extra.reserve.section), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t21.variableDeclaration(\"const\", [\n              t21.variableDeclarator(createElFunction, t21.arrowFunctionExpression([scopeIdentifier], t21.memberExpression(scopeIdentifier, getScopeAccessorLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getScopeAccessorLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t21.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"render\", section, valueReferences, t21.expressionStatement(callRuntime(helper, t21.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLEffectCall(section, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t21.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"effect\", section, valueReferences, t21.expressionStatement(callRuntime(\"on\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"render\", section, valueReferences, t21.expressionStatement(callRuntime(\"attr\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t22 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const section = getOrCreateSection(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (t22.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t22.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t22.objectProperty(t22.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t22.unaryExpression(\"void\", t22.numericLiteral(0)), \"let\");\n      renderTagExpr = t22.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t22.ifStatement(tagIdentifier, t22.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const section = getSection(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t22.arrowFunctionExpression([], t22.blockStatement([])), t22.stringLiteral(getResumeRegisterId(section, node.var.extra?.reserve)), getScopeIdIdentifier(section))));\n    setForceResumeScope(section);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySection = getSection(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSection).push(callRuntime(\"childClosures\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getScopeAccessorLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySection !== tagSection) {\n    attrsObject ??= t22.objectExpression([]);\n    attrsObject.properties.push(t22.objectProperty(t22.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySection))));\n  }\n  if (node.var) {\n    const source = initValue(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"render\", tagSection, void 0, t22.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getScopeAccessorLiteral(binding), source.identifier)));\n  }\n  addStatement(\"render\", tagSection, void 0, t22.expressionStatement(t22.callExpression(tagIdentifier, [\n    createScopeReadExpression(tagSection, binding)\n  ])));\n  if (attrsObject && tagAttrsIdentifier) {\n    addValue(tagSection, tag.node.extra.attrsReferences, {\n      identifier: tagAttrsIdentifier,\n      hasDownstreamIntersections: () => true\n    }, attrsObject, createScopeReadExpression(tagSection, binding), callRuntime(\"inChild\", getScopeAccessorLiteral(binding), t22.identifier(tagAttrsIdentifier.name)));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t22.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t22.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t22.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t23 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t23.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t23.isBlockStatement(body)) {\n    return body;\n  }\n  return t23.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferences(getOrCreateSection(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      addBindingToReferences(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t24.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t24.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(dynamicScopeIdentifier, dynamicTagExpr)\n          ]))[0].skip();\n        }\n        const section = getSection(tag);\n        writeTo(tag)`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(node.extra.reserve))}`;\n        getSerializedScopeProperties(section).set(t24.stringLiteral(getScopeAccessorLiteral(node.extra.reserve).value + \"!\"), dynamicScopeIdentifier);\n        getSerializedScopeProperties(section).set(t24.stringLiteral(getScopeAccessorLiteral(node.extra.reserve).value + \"(\"), node.name);\n      } else {\n        const section = getSection(tag);\n        const bodySection = getSection(tag.get(\"body\"));\n        const hasBody = section !== bodySection;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySection);\n        const tagNameReserve = node.extra?.reserve;\n        const signal = getSignal(section, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getScopeAccessorLiteral(tagNameReserve), getSignalFn(signal, [scopeIdentifier]), buildSignalIntersections(signal), buildSignalValuesWithIntersections(signal));\n        };\n        signal.hasDownstreamIntersections = () => true;\n        addValue(section, node.extra?.nameReferences, signal, renderBodyIdentifier ? t24.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const attrsGetter = t24.arrowFunctionExpression([], attrsObject ?? t24.objectExpression([]));\n          const id = currentProgramPath.scope.generateUidIdentifier(tag.get(\"name\").toString() + \"_input\");\n          let added = false;\n          addValue(section, node.extra?.attrsReferences, {\n            get identifier() {\n              if (!added) {\n                currentProgramPath.pushContainer(\"body\", t24.variableDeclaration(\"const\", [\n                  t24.variableDeclarator(id, callRuntime(\"dynamicTagAttrs\", getScopeAccessorLiteral(tagNameReserve), renderBodyIdentifier))\n                ]));\n                added = true;\n              }\n              return id;\n            },\n            hasDownstreamIntersections: () => true\n          }, attrsGetter);\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t25.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t25.variableDeclaration(\"const\", [\n            t25.variableDeclarator(info.identifier, t25.arrayExpression([]))\n          ]) : t25.variableDeclaration(\"let\", [\n            t25.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t25.expressionStatement(info.repeated ? t25.callExpression(t25.memberExpression(info.identifier, t25.identifier(\"push\")), [attrsObject]) : t25.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, t25.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t26.variableDeclaration(\"const\", [\n          t26.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t27 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSection(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"render\", getSection(placeholder), valueReferences, t27.expressionStatement(method === \"data\" ? callRuntime(\"data\", t27.memberExpression(scopeIdentifier, getScopeAccessorLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getScopeAccessorLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t27.isMarkoComment(path3) || t27.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"render\", getSection(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      trackReferencesForBindings(getOrCreateSection(tag), varPath);\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initValue(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t28 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t28.isBlockStatement(body)) {\n    return body;\n  }\n  return t28.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t29.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    section: bodySection\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const section = getOrCreateSection(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySection = getOrCreateSection(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySection);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferences(section, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences;\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const section = getSection(tag);\n  const bodySection = getSection(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySection);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySection))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        return t29.assignmentExpression(\"=\", getScopeIdentifier(bodySection), scope);\n      });\n      getSerializedScopeProperties(bodySection).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(section));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t29.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, section: section2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(section2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return callRuntime(\"inConditionalScope\", subscriber, getScopeAccessorLiteral(extra.reserve));\n        });\n        if (isStateful) {\n          setRegisterRenderer(section2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t29.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const signal = getSignal(section, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getScopeAccessorLiteral(extra.reserve), getSignalFn(signal, [scopeIdentifier]));\n      };\n      signal.hasDownstreamIntersections = () => branches.some((b) => getClosures(b.section).length > 0);\n      addValue(section, extra.conditionalReferences, signal, expr);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = getScopeIdentifier(branches[0].section);\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, section: section2 } = branches[i];\n        const branchScopeIdentifier = getScopeIdentifier(section2, true);\n        branchScopeIdentifier.name = ifScopeIdentifier.name;\n        if (isStateful) {\n          tag2.node.body.body.push(t29.expressionStatement(callRuntime(\"register\", t29.assignmentExpression(\"=\", ifRendererIdentifier, t29.arrowFunctionExpression([], t29.blockStatement([]))), t29.stringLiteral(getResumeRegisterId(section2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t29.expressionStatement(t29.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdIdentifier(section2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t29.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          t29.variableDeclaration(\"let\", [\n            singleNodeOptimization && t29.variableDeclarator(ifScopeIdIdentifier),\n            t29.variableDeclarator(ifScopeIdentifier),\n            t29.variableDeclarator(ifRendererIdentifier)\n          ].filter(Boolean)),\n          statement\n        ]);\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(section).set(t29.stringLiteral(getScopeAccessorLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(section).set(t29.stringLiteral(getScopeAccessorLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const section = getSection(tag);\n      const references = defaultAttr.extra?.valueReferences;\n      const derivation = getTagVarSignal(tag.get(\"var\"));\n      addValue(section, references, derivation, defaultAttr.value);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const section = getSection(tag);\n    reserveScope(1 /* Store */, section, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t32.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const section = getSection(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t32.isFunctionExpression(value) || t32.isArrowFunctionExpression(value) && t32.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t32.traverse(value.body, (node2) => {\n            if (t32.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"effect\", section, defaultAttr.extra?.valueReferences, inlineStatements || t32.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getScopeAccessorLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLEffectCall(section, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const section = getSection(tag);\n      reserveScope(1 /* Store */, section, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const section = getOrCreateSection(tag);\n      tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const section = getSection(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"effect\", section, node.extra.attrsReferences, t33.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getScopeAccessorLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLEffectCall(section, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t34.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t34.variableDeclaration(\"const\", [t34.variableDeclarator(node.var, id)]));\n    } else {\n      const source = initValue(tagVar.extra.reserve);\n      addValue(getSection(tag), void 0, source, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => t35.isMarkoAttribute(attr2) && attr2.extra?.valueReferences !== void 0).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      tag.node.extra.isStateful = !!tag.node.extra.attrsReferences && !Object.keys(tag.node.extra.nestedAttributeTags).length;\n      tag.node.extra.singleNodeOptimization = tag.node.body.body.length === 1;\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySection = getSection(tag.get(\"body\"));\n    const section = getSection(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild, attrsReferences }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    setSubscriberBuilder(tag, (signal2) => {\n      return callRuntime(\"inLoopScope\", signal2, getScopeAccessorLiteral(reserve));\n    });\n    tag.remove();\n    const rendererId = getRenderer(bodySection);\n    const ofAttr = findName(attributes, \"of\");\n    const toAttr = findName(attributes, \"to\");\n    const inAttr = findName(attributes, \"in\");\n    let loopFunctionBody = t35.nullLiteral();\n    let tagParams = params;\n    if (ofAttr) {\n      const byAttr = findName(attributes, \"by\");\n      loopFunctionBody = t35.arrayExpression([\n        ofAttr.value,\n        byAttr ? byAttr.value : t35.nullLiteral()\n      ]);\n    } else if (toAttr) {\n      const fromAttr = findName(attributes, \"from\");\n      const stepAttr = findName(attributes, \"step\");\n      loopFunctionBody = callRuntime(\"computeLoopToFrom\", toAttr.value, fromAttr ? fromAttr.value : t35.numericLiteral(0), stepAttr ? stepAttr.value : t35.numericLiteral(1));\n    } else if (inAttr) {\n      loopFunctionBody = callRuntime(\"computeLoopIn\", inAttr.value);\n      tagParams = [t35.arrayPattern(params)];\n    }\n    const signal = getSignal(section, reserve);\n    const paramsSignal = getTagParamsSignal(paramsPath, t35.arrayPattern(tagParams));\n    signal.build = () => {\n      return callRuntime(\"loop\", getScopeAccessorLiteral(reserve), rendererId, paramsSignal?.build());\n    };\n    signal.hasDownstreamIntersections = () => paramsSignal?.hasDownstreamIntersections() || getClosures(bodySection).length > 0;\n    addValue(section, attrsReferences, signal, loopFunctionBody);\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const section = getSection(tag);\n    const tagBody = tag.get(\"body\");\n    const bodySection = getSection(tagBody);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params },\n      extra: { isStateful, singleNodeOptimization, isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const toAttr = findName(attributes, \"to\");\n    const byAttr = findName(attributes, \"by\");\n    const block = t35.blockStatement(body);\n    const write2 = writeTo(tag);\n    const replacement = [];\n    let byParams;\n    let keyExpression = t35.identifier(\"NOO\");\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySection))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        const tempScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"s\");\n        return t35.callExpression(t35.arrowFunctionExpression([tempScopeIdentifier], t35.sequenceExpression([\n          t35.callExpression(t35.memberExpression(getScopeIdentifier(bodySection), t35.identifier(\"set\")), [keyExpression, tempScopeIdentifier]),\n          tempScopeIdentifier\n        ])), [scope]);\n      });\n      getSerializedScopeProperties(bodySection).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(section));\n    }\n    if (byAttr && isStateful) {\n      const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n      replacement.push(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(byIdentifier, byAttr.value)\n      ]));\n      byParams = [];\n      keyExpression = t35.callExpression(byIdentifier, byParams);\n    }\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      keyExpression = keyParam;\n      if (valParam) {\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, t35.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      replacement.push(t35.forInStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(keyParam)]), inAttr.value, block));\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      let [valParam, indexParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      if (!t35.isIdentifier(valParam) && byParams) {\n        const tempValParam = currentProgramPath.scope.generateUidIdentifier(\"v\");\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, tempValParam)\n        ]));\n        valParam = tempValParam;\n      }\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(indexParam, \"i\");\n        replacement.push(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexName, t35.numericLiteral(0))\n        ]));\n        block.body.unshift(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexParam, t35.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t35.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        replacement.push(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      if (byParams) {\n        byParams.push(valParam, indexParam);\n      } else {\n        keyExpression = indexParam;\n      }\n      replacement.push(t35.forOfStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (toAttr) {\n      const stepValue = findName(attributes, \"step\")?.value ?? t35.numericLiteral(1);\n      const fromValue = findName(attributes, \"from\")?.value ?? t35.numericLiteral(0);\n      let [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const indexName = tag.scope.generateUidIdentifier(\"i\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      const fromName = tag.scope.generateUidIdentifier(\"from\");\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        keyExpression = indexParam;\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(indexParam, t35.binaryExpression(\"+\", fromName, t35.binaryExpression(\"*\", indexName, stepName)))\n        ]));\n      }\n      replacement.push(t35.forStatement(t35.variableDeclaration(\"let\", [\n        t35.variableDeclarator(fromName, t35.logicalExpression(\"??\", fromValue, t35.numericLiteral(0))),\n        t35.variableDeclarator(stepName, t35.logicalExpression(\"??\", stepValue, t35.numericLiteral(1))),\n        t35.variableDeclarator(stepsName, t35.binaryExpression(\"/\", t35.binaryExpression(\"-\", toAttr.value, fromName), stepName)),\n        t35.variableDeclarator(indexName, t35.numericLiteral(0))\n      ]), t35.binaryExpression(\"<=\", indexName, stepsName), t35.updateExpression(\"++\", indexName), block));\n    }\n    if (isStateful) {\n      const forScopeIdsIdentifier = tag.scope.generateUidIdentifier(\"forScopeIds\");\n      const forScopesIdentifier = getScopeIdentifier(bodySection);\n      replacement.unshift(t35.variableDeclaration(\"const\", [\n        singleNodeOptimization && t35.variableDeclarator(forScopeIdsIdentifier, t35.arrayExpression([])),\n        t35.variableDeclarator(forScopesIdentifier, t35.newExpression(t35.identifier(\"Map\"), []))\n      ].filter(Boolean)));\n      if (singleNodeOptimization) {\n        block.body.push(t35.expressionStatement(t35.callExpression(t35.memberExpression(forScopeIdsIdentifier, t35.identifier(\"push\")), [getScopeIdIdentifier(bodySection)])));\n        write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve), forScopeIdsIdentifier)}`;\n      } else {\n        write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve))}`;\n      }\n      getSerializedScopeProperties(section).set(t35.stringLiteral(getScopeAccessorLiteral(reserve).value + \"(\"), t35.conditionalExpression(t35.memberExpression(forScopesIdentifier, t35.identifier(\"size\")), forScopesIdentifier, t35.identifier(\"undefined\")));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n    block.body.push(t35.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple(replacement);\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t35.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t35.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t36 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId4,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const section = getOrCreateSection(tag);\n      if (section.id === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t36.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t36.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId4(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t36.variableDeclaration(\"const\", [\n        t36.variableDeclarator(node.var, callRuntime(\"getInContext\", t36.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const defaultAttr = node.attributes.find((attr2) => t37.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")) ?? t37.markoAttribute(\"value\", t37.identifier(\"undefined\"));\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t37.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (isOutputDOM()) {\n      const section = getSection(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initValue(binding);\n      const references = defaultAttr.extra?.valueReferences;\n      const isSetup = !references;\n      if (!isSetup) {\n      } else {\n        addValue(section, references, source, defaultAttr.value);\n      }\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSection(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t38 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t38.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t38.expressionStatement(callRuntime(\"pushContext\", t38.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySection = getSection(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySection);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertAfter(t38.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t39 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([], t39.stringLiteral(importPath)));\n      } else if (t39.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([t39.importDefaultSpecifier(tag.node.var)], t39.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t39.variableDeclaration(\"const\", [\n          t39.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t40 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t40.variableDeclaration(\"const\", [\n        t40.variableDeclarator(tag.node.var, t40.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t41 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t41.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t41.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t42 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t42.markoTag(t42.stringLiteral(\"attrs\"), void 0, t42.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t42.isMemberExpression(identifier.parent) && t42.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t42.markoTag(t42.stringLiteral(\"get\"), void 0, t42.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["_selectedIndexChange","_filesChange","files","externalFiles","selectedIndex","externalSelected","input","_filesSet","_files","_component","setState","_state","_selectedIndexSet","_selectedIndex","selectedFile","out","be","_component4","nextId","_nextIdSet","_nextId","_index","file","index","_keyScope","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_componentDef","editing","_editingSet","_editing","selected","mutable","_marko_class_merge","d","_assign","_nestedComponentDef2","_component3","_state3","name","finishRename","_cache","_cached","modifiedFile","path","replace","slice","nameInput","_createRef","_valueChange","_name","e","length","pa","code","target","value","_lifecycle","focus","setSelectionRange","indexOf","t","window","confirm","stopPropagation","ee","newFile","content","newIndex","concat","_end","_marko_componentType","_marko_component","_marko_template","Component","_marko_defineComponent","_","actions","body","_marko_dynamic_tag","i","valueChange","class","className","el","_effect","_marko_node","_marko_createElement","_marko_registerComponent","_marko_renderer","state","_begin","attrs","_meta","_marko_attrs","_extractHandlers","compressToEncodedURIComponent","JSON","stringify","n","query","fallback","isMatch","matchMedia","matches","_isMatchSet","_isMatch","mq","listener","addEventListener","removeEventListener","_return","left","right","editorSize","_editorSizeSet","_editorSize","resizing","_resizingSet","_resizing","_matchMediaReturn","_matchMedia","isVertical","container","preventDefault","_meta2","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","_marko_node2","_marko_node3","onCreate","_component5","getCompilerOptions","previewType","_previewTypeSet","_previewType","debounce","_debounceSet","_debounce","_resizablePanes","_pane","_fileTabs","activeEditor","_activeEditorSet","_activeEditor","_assign2","loading","_controllableSelect","_playgroundLink","_nestedComponentDef3","_state4","preview","_previewSet","_preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","getInitialValue","_valueSet","_value","this","isUpdating","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","tagNameDynamic","startSection","section","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","toString","programExtra","sections","id","depth","cur","getSection","currentPath","createSectionState","key","init","arrayOfSectionData","getScopeIdIdentifier","generateUidIdentifier","_getScopeIdentifier","t2","getScopeIdentifier","ignoreDefault","scopeId","forEachSection","fn","forEach","SortedRepeatable","constructor","compare","add","data","item","Array","isArray","insertSorted","joinItems","addAll","items","find","pos","mid","compareResult","clone","size","toArray","map","a","b","len","next","getReservesByType","reserveScope","debugKey","arguments","undefined","reserve","reserve2","reservesByType","getScopeAccessorLiteral","optimize","t3","repeatableReserves","val","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","createScopeReadPattern","references","rootDepth","rootPattern","t4","nestedPatterns","ref","iterate","propertyKey","propertyValue","isShorthand","pattern","relativeDepth","prev","nestedPattern","properties","getScopeExpression","targetSection","scopeIdentifier","diff","Error","createScopeReadExpression","reference","Symbol","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","pureFunctions","importRuntime","importNamed","getRuntimePath","callRuntime","_len","args","_key","callExpression2","t5","filteredArgs","arg","filterArguments","includes","leadingComments","getHTMLRuntime","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t6","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","appendLiteral","arr","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","step","lastIndexOf","current","count","walk","nCodeString","writeTo","fromCharCode","number","toCharString","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t7","join","getRenderer","t8","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","writePrependTo","unshift","consumeHTML","flushBefore","expr","skip","flushInto","pushContainer","getSectionMeta","setup","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","defaultAttr","attributes","t9","default","loc","end","msg","buildError","returnId2","replaceWith","addValue","valueReferences","identifier","hasDownstreamIntersections","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","setSubscriberBuilder","builder","getClosures","addClosure","fromSection","toSection","closure","currentSection","forceResumeScope","_setForceResumeScope","getSerializedScopeProperties","getRegisterScopeBuilder","_setRegisterScopeBuilder","setRegisterScopeBuilder","unimplementedBuild","t10","getSignal","signals","signal","set","generateSignalName","values","intersection","render","effect","effectInlineReferences","subscribers","closures","build","subscribe","getSignalFn","provider","ownerScope","isImmediateOwner","object","buildSignalIntersections","buildSignalValuesWithIntersections","initValue","valueAccessor","intersections","valuesWithIntersections","params","closureEntries","from","entries","sort","_ref","_ref2","closureSection","closureSignal","pushRepeatable","hasDynamicSubscribers","intersectionExpression","repeatable","getDestructureSignal","bindingsByName","destructurePattern","bindings","valueIdentifier","bindingSignals","declarations","canCallOnlyWhenDirty","cleanIdentifier","subscriber","p","providerSignal","addStatement","statement","originalNodes","isInlined","statements","addEffectReferences","expression","getResumeRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","_ref3","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","tagVarIdentifier","intersectionsBySection","allSignals","scopeIdIdentifier","scopeIdentifier2","unshiftContainer","serializedReferences","signalRefs","serializedProperties","reduce","acc","additionalProperties","isRoot","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","_ref4","root","functionIdentifier","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t11","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","getTemplateId2","dom_default","templateIdentifier","t12","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionReverse","childSection","flatMap","effectDeclarator","effectIdentifier","finalizeSignalArgs","signalDeclarator","newPath","traverse","writeSignals","writes2","setup2","register2","closures2","renderer","exportSpecifiers","isIdentity","bindingIdentifier","signalIdentifier","getTemplateId3","intersectionSubscribeCounts","WeakMap","repeatableIntersections","lenDelta","getIntersectionsBySection","setIntersectionsBySection","trackReferencesForBindings","getBindingIdentifiers","referencePaths","constantViolations","filter","path4","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","addBindingToReferences","listKey","referencesKey","prevReferences","addSubscriber","getIntersection","isIntersection","removeSubscriber","mergeReferences","groupEntries","newReferences","curPath","isMarkoPath","isFunctionExpression","previousProgramPath","program_default","migrate","crawl","analyze","curIndex","reserves","finalizeIntersections","t13","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment","assignment_expression_default","t14","update_expression_default","t15","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t16","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t17","exit2","Boolean","IDENTIFIER_REG","attrsToObject","withRenderBody","t19","resultExtra","t18","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t20","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t21","varName","createElFunction","referenceSection","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childFile","loadFileForTag","childProgramExtra","ast","attrsReferences","tagBody","tagIdentifier","t22","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceResumeScope","translateHTML","tagSection","tagBodySection","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","_len2","_key2","_len3","_key3","toFirstExpressionOrBlock","nodes","t23","dynamic_tag_default","t24","dynamicScopeIdentifier","dynamicTagExpr","bodySection","renderBodyIdentifier","tagNameReserve","nameReferences","attrsGetter","added","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t25","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","lookup","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t26","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","getPrevSibling","noOutput","t27","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","_ref5","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t28","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t29","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","_ref6","tag2","_ref7","isStateful","singleNodeOptimization","every","_ref8","section2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t30","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t31","effect_default","assertNoParams6","t32","inlineStatements","node2","lifecycle_default","assertNoParams7","t33","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t34","for_default","isOnlyChild","t35","getTagDef5","html","checkOnlyChild","parentTagName","keys","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","translateHTML2","translateDOM2","of","in","to","paramsPath","signal2","ofAttr","toAttr","inAttr","loopFunctionBody","tagParams","byAttr","fromAttr","stepAttr","paramsSignal","paramsPaths","bindingsLookup","assign","getTagParamsSignal","namePath","block","byParams","keyExpression","tempScopeIdentifier","byIdentifier","keyParam","valParam","ofAttrValue","indexParam","loopParam","tempValParam","indexName","generateUidIdentifierBasedOnNode","stepValue","fromValue","stepsName","stepName","fromName","forScopeIdsIdentifier","forScopesIdentifier","obj","get_default","assertNoParams9","refId","t36","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId4","templateId","initContextConsumer","put_default","t38","providers","compute","scopeAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","t37","assertNoParams11","registerAssignmentReplacer","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t40","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t39","importDefault2","enum","trim","parseScript3","t41","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","t42","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","visitor","_ref9","taglibs","_hashValueReturn","_hashValue","_repl","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","legacy","_resolveExportsOptions","browser","env","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}