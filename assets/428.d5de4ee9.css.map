{"version":3,"file":"428.d5de4ee9.css","mappings":"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","sources":["webpack:///./try-online/components/root/style.css","webpack:///./try-online/components/example-select/index.marko","webpack:///./try-online/components/file-explorer/style.css","webpack:///./try-online/components/file-explorer/components/file/style.css","webpack:///./try-online/components/file-explorer/components/dir/style.css","webpack:///./try-online/components/editor/index.marko","webpack:///./try-online/components/pane/style.css","webpack:///./try-online/components/preview/index.marko"],"sourcesContent":[".try-online {\n  display: flex;\n  flex:1;\n  width: 100%;\n  text-align: left;\n}\n\n.workspace {\n  display: flex;\n  flex:1;\n  flex-direction: row;\n  width: 100%;\n  background-color: #21252b;\n  justify-content: flex-start;\n  align-items: stretch;\n  padding: 3px;\n}\n\n.file-explorer-container {\n  display: flex;\n  height: 100%;\n  flex-basis: 250px;\n  flex-direction: column;\n  position: relative;\n}\n\n.editors-container {\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n}\n\n.inputs-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-basis: 55%;\n}\n\n.inputs-container:only-child {\n  flex-basis: 100%;\n}\n\n.divider {\n  display: flex;\n  flex-basis: 3px;\n}\n\n.outputs-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n\n","class {\n  handleChange(_, el) {\n    this.emit(\"change\", el.selectedIndex, el);\n  }\n}\n\nstyle {\n  .example-select {\n    display: flex;\n    flex-direction: column;\n    padding: 0.25em;\n  }\n\n  .example-select select {\n    border: 1px solid #202428;\n    background: #44484c;\n    color: #d4d8dc;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 100%;\n  }\n}\n\n<div.example-select>\n  <select on-change(\"handleChange\")>\n    $ const activeExample = input.examples[input.selectedIndex || 0];\n\n    <for|example| of=input.examples>\n      <option selected=(example === activeExample)>${example.description}</option>\n    </for>\n  </select>\n</div>\n",".file-explorer {\n  font-size: .8em;\n  background-color: #21252b;\n  user-select: none;\n}\n\n.file-explorer li {\n  list-style: none;\n  list-style-image: none;\n  list-style-type: none;\n  line-height: 1.7em;\n  color: #9da5b4;\n  cursor: default;\n}\n\n.file-explorer li:hover,\n.file-explorer li.selected {\n  color: #adb5c4;\n}\n\n.file-explorer li:before{\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 1.7em;\n}\n\n.file-explorer li.selected:before{\n  background-color: #3a3f4b;\n}\n\n.file-explorer li.selected > span{\n  color: #d7dae0;\n}\n\n.file-explorer ul {\n  padding-left: 1.5em;\n}",".file-explorer .file > span  {\n    position: relative;\n}\n\n.file-explorer .file > span:before {\n    width: 20px;\n    height: 16px;\n    background-size: contain;\n    display: inline-block;\n    line-height: 16px;\n    vertical-align: middle;\n    content: '';\n    background-repeat: no-repeat;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n\n.file-explorer .file.marko > span:before {\n    background-image: url('./marko.svg');\n}\n\n.file-explorer .file.css > span:before {\n    background-size: 14px;\n    background-image: url('./css.svg');\n}\n\n.file-explorer .file.less > span:before {\n    background-size: 14px;\n    background-image: url('./css.svg');\n}\n\n.file-explorer .file.json > span:before {\n    background-size: 16px;\n    background-image: url('./json.svg');\n}\n\n.file-explorer .file.js > span:before {\n    background-size: 16px;\n    background-image: url('./js.svg');\n}\n","\n.file-explorer .dir > label {\n    position: relative;\n}\n\n.file-explorer .dir > ul {\n    display: none;\n}\n\n.file-explorer .dir.expanded > ul {\n    display: block;\n}\n\n.file-explorer .dir > label:before {\n    width: 16px;\n    height: 16px;\n    display: inline-block;\n    line-height: 1;\n    vertical-align: middle;\n    background-image: url('~octicons/build/svg/chevron-up.svg');\n    background-size: contain;\n    filter: invert(1) brightness(.6);\n    content: '';\n    background-repeat: no-repeat;\n    position: relative;\n}\n\n.file-explorer .dir.expanded > label:before {\n    background-image: url('~octicons/build/svg/chevron-down.svg');\n}","import { setModelMarkers, createEditor, createModel } from \"../../../../utils/monaco\"\n\nclass {\n  onMount() {\n    this.editor = createEditor(this.getEl(\"editor\"));\n    this.sync();\n  }\n\n  onUpdate() {\n    this.sync();\n  }\n\n  onDestroy() {\n    this.editor.dispose();\n  }\n\n  sync() {\n    if (this.prevLanguage !== this.input.language) {\n      if (this.model) {\n        this.model.dispose();\n      }\n\n      this.model = createModel(this.input.value, this.input.language);\n      this.editor.setModel(this.model);\n      this.editor.layout();\n      this.model.onDidChangeContent(() => {\n        const value = this.model.getValue();\n        if (value !== this.prevValue) {\n          this.prevValue = value;\n          this.emit(\"change\", value);\n        }\n\n        if (this.hasErrorMarkers) {\n          setModelMarkers(this.model, null, []);\n          this.hasErrorMarkers = false;\n        }\n      });\n    } else if (this.prevValue !== this.input.value) {\n      this.model.setValue(this.input.value);\n    }\n\n    this.prevLanguage = this.input.language;\n    this.prevValue = this.input.value;\n  }\n\n  focus(lineNumber, column) {\n    this.editor.focus();\n    this.editor.setPosition({\n      lineNumber,\n      column\n    });\n  }\n\n  showError({ line, column, message }) {\n    this.hasErrorMarkers = true;\n    setModelMarkers(this.model, null, [\n      {\n        startLineNumber: line,\n        startColumn: column,\n        endLineNumber: line,\n        endColumn: column,\n        message,\n        severity: 8\n      }\n    ]);\n  }\n\n  handleResize() {\n    this.editor.layout();\n  }\n}\n\nstyle {\n  .editor {\n    display: block;\n    height: 100%;\n    padding-top: 8px;\n  }\n}\n\n<subscribe to=window on-resize(\"handleResize\")/>\n<div.editor key=\"editor\" no-update/>\n",".pane {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n\n.pane > div.tabs {\n  display: flex;\n  flex-basis: 2em;\n  flex-shrink: 0;\n  position: relative;\n}\n\n.pane > .pane-body {\n  position: relative;\n  background-color: #282c34;\n  border: 1px solid #16191d;\n  margin-top: -1px;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n}\n\n.pane ul.tabs {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n  overflow: auto;\n}\n\n.pane li.tab {\n  position: relative;\n  background-color: #21252b;\n  top: 0;\n  max-width: 22em;\n  min-width: 7em;\n  height: 2em;\n  font-size: inherit;\n  color: rgba(157, 165, 180, 0.6);\n  line-height: 2em;\n  text-align: center;\n  margin: 0;\n  background-clip: content-box;\n  border-top-left-radius: 0.2em;\n  border-top-right-radius: 0.2em;\n  border: 1px solid transparent;\n  border-left: 2px solid transparent;\n  cursor: pointer;\n  user-select:none;\n  white-space: nowrap;\n}\n\n.pane li.tab.selected {\n  background-color: #282c34;\n  background-image: linear-gradient(to bottom, #383c44 0%, #282c34 8%);\n  border: 1px solid #16191d;\n  border-bottom: 1px solid #282c34;\n  border-left: 2px solid #598cef;\n  color: #d7dae0;\n}\n\n.pane .tab-label {\n  padding-left: 8px;\n  padding-right: 8px;\n  font-size: 0.75em;\n}\n","import path from \"path\"\nimport { format } from \"prettier/standalone\"\nimport prettierHTML from \"prettier/parser-html\"\nimport prettierBabel from \"prettier/parser-babel\"\nimport highlight from \"../../../../utils/highlight\"\nimport { bundle, compile } from \"../../../../utils/compiler\"\n\nstatic const SYNTAX_ERROR_REG = /(.+?)(?:\\((\\d+),(\\d+)\\)|:(\\d+)): (.*(?=\\s+\\d+ | ))/;\n\nstatic const TABS = [\n  {\n    name: \"Preview\",\n    output: \"vdom\"\n  },\n  {\n    name: \"HTML\",\n    output: \"vdom\"\n  },\n  {\n    name: \"Compiled (VDOM)\",\n    output: \"vdom\"\n  },\n  {\n    name: \"Compiled (HTML)\",\n    output: \"html\"\n  }\n];\n\nclass {\n  onCreate(input) {\n    this.state = {\n      tabIndex: 0,\n      error: null,\n      result: null\n    };\n\n    this.sync = this.sync.bind(this);\n  }\n\n  onInput(input) {\n    this.state.error = null;\n    if (\n      path.extname(input.selectedFilePath) !== \".marko\" &&\n      this.state.tabIndex >= 2\n    ) {\n      this.state.tabIndex = 0;\n    }\n  }\n\n  onMount() {\n    this.sync();\n  }\n\n  onUpdate() {\n    this.cleanup();\n    this.sync();\n  }\n\n  onDestroy() {\n    this.cleanup();\n  }\n\n  cleanup() {\n    clearTimeout(this.syncTimeout);\n  }\n\n  handleTabChange(newIndex) {\n    this.state.tabIndex = newIndex;\n    this.state.error = null;\n  }\n\n  sync() {\n    if (this.state.error) {\n      return;\n    }\n\n    this.syncTimeout = setTimeout(async () => {\n      const { name, output } = TABS[this.state.tabIndex];\n      const markoOptions = { output };\n\n      try {\n        if (!name.startsWith(\"Compiled\")) {\n          const bundleResult = await bundle({\n            entry: this.input.previewFilePath,\n            markoOptions\n          });\n          const template = (0, eval)(bundleResult.js);\n\n          const renderResult = await template.render({});\n\n          if (name === \"Preview\") {\n            const outputEl = this.getEl(\"output\");\n            let shadowRoot = outputEl.shadowRoot;\n\n            if (shadowRoot) {\n              while (shadowRoot.firstChild) {\n                shadowRoot.removeChild(shadowRoot.firstChild);\n              }\n            } else {\n              shadowRoot = outputEl.attachShadow({ mode: \"open\" });\n            }\n\n            const style = document.createElement(\"style\");\n            style.innerHTML = bundleResult.css;\n            // TODO: this is because of bug in Marko when rendering in shadow roots that\n            // should be removed once fixed.\n            shadowRoot.createElementNS = document.createElementNS.bind(document);\n            shadowRoot.createTextNode = document.createTextNode.bind(document);\n\n            shadowRoot.appendChild(style);\n            renderResult.appendTo(shadowRoot);\n          } else {\n            this.state.result = highlight(\n              \"html\",\n              format(String(renderResult), {\n                parser: \"html\",\n                plugins: [prettierHTML]\n              })\n            );\n          }\n        } else {\n          this.state.result = highlight(\n            \"javascript\",\n            format(\n              await compile({\n                entry: this.input.selectedFilePath,\n                markoOptions\n              }),\n              {\n                parser: \"babel\",\n                plugins: [prettierBabel]\n              }\n            )\n          );\n        }\n\n        this.state.error = null;\n      } catch (err) {\n        this.state.result = null;\n\n        const errorWithLocationMatch =\n          err.name === \"SyntaxError\" && SYNTAX_ERROR_REG.exec(err.message);\n        if (errorWithLocationMatch) {\n          let [match, file, line, column, lineOnly, message] = errorWithLocationMatch;\n          if (lineOnly) {\n            line = lineOnly;\n            column = 0;\n          }\n\n          file = path.resolve(file);\n          line = parseInt(line, 10);\n          column = parseInt(column, 10) + 1;\n          const codeFrame = err.message.slice(match.length);\n          this.state.error = {\n            name: err.name,\n            file,\n            message,\n            line,\n            column,\n            codeFrame\n          };\n\n          if (file === this.input.selectedFilePath) {\n            this.emit(\"syntax-error\", this.state.error);\n          }\n        } else {\n          this.state.error = err;\n          setTimeout(() => {\n            throw err;\n          });\n        }\n      }\n    }, 150);\n  }\n}\n\nstyle {\n  .preview-error,\n  .preview-output,\n  .preview-compiled {\n    position: relative;\n    display: block;\n    min-height: 100%;\n    width: 100%;\n    padding-top: 8px;\n    padding-left: 16px;\n  }\n\n  .preview-output {\n    padding-right: 16px;\n  }\n\n  .preview-output,\n  .preview-error {\n    background: #fff;\n  }\n  .preview-compiled pre.highlighted {\n    padding: 0;\n    font-family: Menlo, Monaco, \"Courier New\", monospace;\n    font-weight: normal;\n    font-size: 12px;\n    font-feature-settings: \"liga\" 0, \"calt\" 0;\n    line-height: 18px;\n    letter-spacing: 0px;\n  }\n\n  .preview-error .error-name {\n    background: #f92672;\n    color: #f8f8f0;\n    margin-left: -16px;\n    margin-top: -8px;\n    padding-top: 8px;\n    padding-bottom: 12px;\n    padding-left: 16px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n\n  .preview-error a {\n    color: #66d9ef;\n    font-weight: normal;\n  }\n\n  .preview-error pre {\n    width: 100%;\n    overflow: auto;\n  }\n\n  .preview-error small {\n    font-style: italic;\n    font-size: 0.75 rem;\n  }\n}\n\n<pane selected-value=state.tabIndex on-change(\"handleTabChange\")>\n  <for|tab, i| of=TABS>\n    <if(\n      path.extname(input.selectedFilePath) === \".marko\" ||\n      !tab.name.startsWith(\"Compiled\")\n    )>\n      <@tab value=i selected=(i === state.tabIndex)>${tab.name}</@tab>\n    </if>\n  </for>\n  <@body>\n    <if(state.error)>\n      <div.preview-error>\n        <h1.error-name>\n          ${state.error.name}<if(state.error.file)>\n            &nbsp;:&nbsp;\n            <a on-click(\"emit\", \"focus-file\", state.error)>\n              ${state.error.file.slice(1)}(${state.error.line},${state.error.column})\n            </a>\n          </if>\n        </h1>\n        <div>${state.error.message}</div>\n        <if(input.selectedFilePath !== state.error.file)>\n          <if(state.error.codeFrame)>\n            <pre><code>${state.error.codeFrame}</code></pre>\n          </if>\n          <else>\n            <small>Open the dev tools to view the full error.</small>\n          </else>\n        </if>\n      </div>\n    </if>\n    <else>\n      <if(state.tabIndex === 0)>\n        <div.preview-output key=\"output\" no-update/>\n      </if>\n      <else>\n        <div.preview-compiled>$!{state.result}</div>\n      </else>\n    </else>\n  </@body>\n</pane>\n"],"names":[],"sourceRoot":""}