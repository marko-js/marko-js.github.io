{"version":3,"file":"420.18b0f96f.js","mappings":"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","sources":["webpack:///../../node_modules/@marko/runtime-tags/dist/translator/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name2 in all)\n    __defProp(target, name2, { get: all[name2], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/translator/index.ts\nvar translator_exports = {};\n__export(translator_exports, {\n  analyze: () => analyze,\n  getRuntimeEntryFiles: () => getRuntimeEntryFiles,\n  internalEntryBuilder: () => entry_builder_default,\n  preferAPI: () => preferAPI,\n  tagDiscoveryDirs: () => tagDiscoveryDirs,\n  taglibs: () => taglibs,\n  transform: () => transform,\n  translate: () => translate\n});\nmodule.exports = __toCommonJS(translator_exports);\n\n// src/translator/util/runtime-info.ts\nvar import_package = require(\"../../package.json\");\nvar runtime_info_default = {\n  name: import_package.name,\n  taglibId: \"marko-core\"\n};\n\n// src/translator/core/attrs.ts\nvar import_compiler = require(\"@marko/compiler\");\nvar import_babel_utils = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(\n        `The \\`${tag.get(\"name\").node.value}\\` tag does not support \\`...spread\\` attributes.`\n      );\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${tag.get(\"name\").node.value}\\` tag does not support body content.`\n    );\n  }\n}\n\n// src/translator/core/attrs.ts\nvar attrs_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils.assertNoArgs)(tag);\n      (0, import_babel_utils.assertNoParams)(tag);\n      (0, import_babel_utils.assertNoAttributes)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils.assertNoAttributeTags)(tag);\n      (0, import_babel_utils.diagnosticDeprecate)(tag, {\n        label: \"The `attrs` tag is deprecated, prefer destructuring `input` via the `const` tag.\",\n        fix() {\n          const tagVar = tag.node.var;\n          if (tagVar && !(tagVar.type === \"Identifier\" && tagVar.name === \"input\")) {\n            const constTag = import_compiler.types.markoTag(\n              import_compiler.types.stringLiteral(\"const\"),\n              [import_compiler.types.markoAttribute(\"value\", import_compiler.types.identifier(\"input\"))],\n              import_compiler.types.markoTagBody([])\n            );\n            constTag.var = tagVar;\n            tag.replaceWith(constTag);\n          } else {\n            tag.remove();\n          }\n        }\n      });\n    }\n  ],\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/translator/core/await.ts\nvar import_compiler22 = require(\"@marko/compiler\");\nvar import_babel_utils12 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/evaluate.ts\nvar import_babel_utils2 = require(\"@marko/compiler/babel-utils\");\nfunction evaluate(value) {\n  let { extra } = value;\n  if (!extra) {\n    extra = value.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const computed = (0, import_babel_utils2.computeNode)(value);\n    if (computed) {\n      extra.computed = computed.value;\n      extra.confident = true;\n    } else {\n      extra.computed = void 0;\n      extra.confident = false;\n    }\n  }\n  return extra;\n}\n\n// src/translator/util/references.ts\nvar import_compiler21 = require(\"@marko/compiler\");\n\n// src/translator/visitors/program/index.ts\nvar import_compiler20 = require(\"@marko/compiler\");\nvar import_babel_utils11 = require(\"@marko/compiler/babel-utils\");\nvar import_path2 = __toESM(require(\"path\"));\n\n// src/translator/util/binding-has-downstream-expressions.ts\nfunction bindingHasDownstreamExpressions(binding) {\n  if (binding.downstreamExpressions.size) return true;\n  for (const alias of binding.aliases) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    if (bindingHasDownstreamExpressions(alias)) return true;\n  }\n  return false;\n}\n\n// src/translator/util/entry-builder.ts\nvar import_compiler2 = require(\"@marko/compiler\");\nvar import_babel_utils3 = require(\"@marko/compiler/babel-utils\");\nvar kState = Symbol();\nvar entry_builder_default = {\n  build(entryFile) {\n    const state = entryFile[kState];\n    if (!state) {\n      throw entryFile.path.buildCodeFrameError(\n        \"Unable to build hydrate code, no files were visited before finalizing the build\"\n      );\n    }\n    const body = state.imports.map(\n      (it) => import_compiler2.types.importDeclaration([], import_compiler2.types.stringLiteral(it))\n    );\n    if (state.init) {\n      body.unshift(\n        import_compiler2.types.importDeclaration(\n          [import_compiler2.types.importSpecifier(import_compiler2.types.identifier(\"init\"), import_compiler2.types.identifier(\"init\"))],\n          import_compiler2.types.stringLiteral(\n            `${runtime_info_default.name}/${entryFile.markoOpts.optimize ? \"\" : \"debug/\"}dom`\n          )\n        )\n      );\n      body.push(\n        import_compiler2.types.expressionStatement(import_compiler2.types.callExpression(import_compiler2.types.identifier(\"init\"), []))\n      );\n    }\n    return body;\n  },\n  visit(file, entryFile, visitChild) {\n    const state = entryFile[kState] ||= {\n      imports: [],\n      init: false\n    };\n    const { analyzedTags } = file.metadata.marko;\n    state.imports.push(\n      (0, import_babel_utils3.resolveRelativePath)(entryFile, file.opts.filename)\n    );\n    state.init ||= file.path.node.extra.hasInteractiveChild || file.path.node.extra.isInteractive || false;\n    for (const tag of analyzedTags || []) {\n      visitChild(tag);\n    }\n  }\n};\n\n// src/translator/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/translator/util/runtime.ts\nvar import_compiler4 = require(\"@marko/compiler\");\nvar import_babel_utils4 = require(\"@marko/compiler/babel-utils\");\n\n// src/common/attr-tag.ts\nvar rest = false ? Symbol(\"Attribute Tag\") : Symbol();\n\n// src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name2, value) {\n  return value ? name2 : \"\";\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name2, value) {\n  return value || value === 0 ? `${name2}:${typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name2) ? value + \"px\" : value}` : \"\";\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name2 in val) {\n            const v = val[name2];\n            const part = stringify(name2, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isEventHandler(name2) {\n  return /^on[A-Z-]/.test(name2);\n}\nfunction getEventHandlerName(name2) {\n  return name2[2] === \"-\" ? name2.slice(3) : name2.slice(2).toLowerCase();\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// src/html/content.ts\nfunction toString(val) {\n  return val ? val + \"\" : val === 0 ? \"0\" : \"\";\n}\nvar unsafeXMLReg = /[<&]/g;\nvar replaceUnsafeXML = (c) => c === \"&\" ? \"&amp;\" : \"&lt;\";\nvar escapeXMLStr = (str) => unsafeXMLReg.test(str) ? str.replace(unsafeXMLReg, replaceUnsafeXML) : str;\nfunction escapeXML(val) {\n  return val ? escapeXMLStr(val + \"\") : val === 0 ? \"0\" : \"&zwj;\";\n}\nvar unsafeScriptReg = /<\\/script/g;\nvar escapeScriptStr = (str) => unsafeScriptReg.test(str) ? str.replace(unsafeScriptReg, \"\\\\x3C/script\") : str;\nfunction escapeScript(val) {\n  return val ? escapeScriptStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\nvar unsafeStyleReg = /<\\/style/g;\nvar escapeStyleStr = (str) => unsafeStyleReg.test(str) ? str.replace(unsafeStyleReg, \"\\\\3C/style\") : str;\nfunction escapeStyle(val) {\n  return val ? escapeStyleStr(val + \"\") : val === 0 ? \"0\" : \"\";\n}\n\n// src/html/serializer.ts\nvar { hasOwnProperty } = {};\nvar Generator = function* () {\n}().constructor;\nvar AsyncGenerator = async function* () {\n}().constructor;\nvar KNOWN_SYMBOLS = (() => {\n  const KNOWN_SYMBOLS2 = /* @__PURE__ */ new Map();\n  for (const name2 of Object.getOwnPropertyNames(Symbol)) {\n    const symbol = Symbol[name2];\n    if (typeof symbol === \"symbol\") {\n      KNOWN_SYMBOLS2.set(symbol, \"Symbol.\" + name2);\n    }\n  }\n  return KNOWN_SYMBOLS2;\n})();\nvar KNOWN_FUNCTIONS = /* @__PURE__ */ new Map([\n  // This is by no means an exhaustive list,\n  // but it should cover most of the built-in functions.\n  [AggregateError, \"AggregateError\"],\n  [Array, \"Array\"],\n  [Array.from, \"Array.from\"],\n  [Array.isArray, \"Array.isArray\"],\n  [Array.of, \"Array.of\"],\n  [ArrayBuffer, \"ArrayBuffer\"],\n  [ArrayBuffer.isView, \"ArrayBuffer.isView\"],\n  [Atomics.add, \"Atomics.add\"],\n  [Atomics.and, \"Atomics.and\"],\n  [Atomics.compareExchange, \"Atomics.compareExchange\"],\n  [Atomics.exchange, \"Atomics.exchange\"],\n  [Atomics.isLockFree, \"Atomics.isLockFree\"],\n  [Atomics.load, \"Atomics.load\"],\n  [Atomics.notify, \"Atomics.notify\"],\n  [Atomics.or, \"Atomics.or\"],\n  [Atomics.store, \"Atomics.store\"],\n  [Atomics.sub, \"Atomics.sub\"],\n  [Atomics.wait, \"Atomics.wait\"],\n  [BigInt, \"BigInt\"],\n  [BigInt.asIntN, \"BigInt.asIntN\"],\n  [BigInt.asUintN, \"BigInt.asUintN\"],\n  [BigInt64Array, \"BigInt64Array\"],\n  [BigInt64Array.from, \"BigInt64Array.from\"],\n  [BigInt64Array.of, \"BigInt64Array.of\"],\n  [BigUint64Array, \"BigUint64Array\"],\n  [BigUint64Array.from, \"BigUint64Array.from\"],\n  [BigUint64Array.of, \"BigUint64Array.of\"],\n  [Boolean, \"Boolean\"],\n  [console.assert, \"console.assert\"],\n  [console.clear, \"console.clear\"],\n  [console.count, \"console.count\"],\n  [console.countReset, \"console.countReset\"],\n  [console.debug, \"console.debug\"],\n  [console.dir, \"console.dir\"],\n  [console.dirxml, \"console.dirxml\"],\n  [console.error, \"console.error\"],\n  [console.group, \"console.group\"],\n  [console.groupCollapsed, \"console.groupCollapsed\"],\n  [console.groupEnd, \"console.groupEnd\"],\n  [console.info, \"console.info\"],\n  [console.log, \"console.log\"],\n  [console.table, \"console.table\"],\n  [console.time, \"console.time\"],\n  [console.timeEnd, \"console.timeEnd\"],\n  [console.timeLog, \"console.timeLog\"],\n  [console.timeStamp, \"console.timeStamp\"],\n  [console.trace, \"console.trace\"],\n  [console.warn, \"console.warn\"],\n  [DataView, \"DataView\"],\n  [Date, \"Date\"],\n  [Date.now, \"Date.now\"],\n  [Date.parse, \"Date.parse\"],\n  [Date.UTC, \"Date.UTC\"],\n  [decodeURI, \"decodeURI\"],\n  [decodeURIComponent, \"decodeURIComponent\"],\n  [encodeURI, \"encodeURI\"],\n  [encodeURIComponent, \"encodeURIComponent\"],\n  [Error, \"Error\"],\n  [EvalError, \"EvalError\"],\n  [Float32Array, \"Float32Array\"],\n  [Float32Array.from, \"Float32Array.from\"],\n  [Float32Array.of, \"Float32Array.of\"],\n  [Float64Array, \"Float64Array\"],\n  [Float64Array.from, \"Float64Array.from\"],\n  [Float64Array.of, \"Float64Array.of\"],\n  [Function, \"Function\"],\n  [globalThis.atob, \"atob\"],\n  [globalThis.btoa, \"btoa\"],\n  [globalThis.clearImmediate, \"clearImmediate\"],\n  [globalThis.clearInterval, \"clearInterval\"],\n  [globalThis.clearTimeout, \"clearTimeout\"],\n  [globalThis.crypto?.getRandomValues, \"crypto.getRandomValues\"],\n  [globalThis.crypto?.randomUUID, \"crypto.randomUUID\"],\n  [globalThis.fetch, \"fetch\"],\n  [globalThis.performance?.now, \"performance.now\"],\n  [globalThis.queueMicrotask, \"queueMicrotask\"],\n  [globalThis.setImmediate, \"setImmediate\"],\n  [globalThis.setInterval, \"setInterval\"],\n  [globalThis.setTimeout, \"setTimeout\"],\n  [globalThis.structuredClone, \"structuredClone\"],\n  [globalThis.URL, \"URL\"],\n  [globalThis.URLSearchParams, \"URLSearchParams\"],\n  [globalThis.WritableStream, \"WritableStream\"],\n  [Int16Array, \"Int16Array\"],\n  [Int16Array.from, \"Int16Array.from\"],\n  [Int16Array.of, \"Int16Array.of\"],\n  [Int32Array, \"Int32Array\"],\n  [Int32Array.from, \"Int32Array.from\"],\n  [Int32Array.of, \"Int32Array.of\"],\n  [Int8Array, \"Int8Array\"],\n  [Int8Array.from, \"Int8Array.from\"],\n  [Int8Array.of, \"Int8Array.of\"],\n  [Intl.Collator, \"Intl.Collator\"],\n  [Intl.DateTimeFormat, \"Intl.DateTimeFormat\"],\n  [Intl.DisplayNames, \"Intl.DisplayNames\"],\n  [Intl.getCanonicalLocales, \"Intl.getCanonicalLocales\"],\n  [Intl.ListFormat, \"Intl.ListFormat\"],\n  [Intl.Locale, \"Intl.Locale\"],\n  [Intl.NumberFormat, \"Intl.NumberFormat\"],\n  [Intl.PluralRules, \"Intl.PluralRules\"],\n  [Intl.RelativeTimeFormat, \"Intl.RelativeTimeFormat\"],\n  [Intl.Segmenter, \"Intl.Segmenter\"],\n  [Intl.supportedValuesOf, \"Intl.supportedValuesOf\"],\n  [isFinite, \"isFinite\"],\n  [isNaN, \"isNaN\"],\n  [JSON.parse, \"JSON.parse\"],\n  [JSON.stringify, \"JSON.stringify\"],\n  [Map, \"Map\"],\n  [Map.groupBy, \"Map.groupBy\"],\n  [Math.abs, \"Math.abs\"],\n  [Math.acos, \"Math.acos\"],\n  [Math.acosh, \"Math.acosh\"],\n  [Math.asin, \"Math.asin\"],\n  [Math.asinh, \"Math.asinh\"],\n  [Math.atan, \"Math.atan\"],\n  [Math.atan2, \"Math.atan2\"],\n  [Math.atanh, \"Math.atanh\"],\n  [Math.cbrt, \"Math.cbrt\"],\n  [Math.ceil, \"Math.ceil\"],\n  [Math.clz32, \"Math.clz32\"],\n  [Math.cos, \"Math.cos\"],\n  [Math.cosh, \"Math.cosh\"],\n  [Math.exp, \"Math.exp\"],\n  [Math.expm1, \"Math.expm1\"],\n  [Math.floor, \"Math.floor\"],\n  [Math.fround, \"Math.fround\"],\n  [Math.hypot, \"Math.hypot\"],\n  [Math.imul, \"Math.imul\"],\n  [Math.log, \"Math.log\"],\n  [Math.log10, \"Math.log10\"],\n  [Math.log1p, \"Math.log1p\"],\n  [Math.log2, \"Math.log2\"],\n  [Math.max, \"Math.max\"],\n  [Math.min, \"Math.min\"],\n  [Math.pow, \"Math.pow\"],\n  [Math.random, \"Math.random\"],\n  [Math.round, \"Math.round\"],\n  [Math.sign, \"Math.sign\"],\n  [Math.sin, \"Math.sin\"],\n  [Math.sinh, \"Math.sinh\"],\n  [Math.sqrt, \"Math.sqrt\"],\n  [Math.tan, \"Math.tan\"],\n  [Math.tanh, \"Math.tanh\"],\n  [Math.trunc, \"Math.trunc\"],\n  [Number, \"Number\"],\n  [Number.isFinite, \"Number.isFinite\"],\n  [Number.isInteger, \"Number.isInteger\"],\n  [Number.isNaN, \"Number.isNaN\"],\n  [Number.isSafeInteger, \"Number.isSafeInteger\"],\n  [Number.parseFloat, \"Number.parseFloat\"],\n  [Number.parseInt, \"Number.parseInt\"],\n  [Object, \"Object\"],\n  [Object.assign, \"Object.assign\"],\n  [Object.create, \"Object.create\"],\n  [Object.defineProperties, \"Object.defineProperties\"],\n  [Object.defineProperty, \"Object.defineProperty\"],\n  [Object.entries, \"Object.entries\"],\n  [Object.freeze, \"Object.freeze\"],\n  [Object.fromEntries, \"Object.fromEntries\"],\n  [Object.getOwnPropertyDescriptor, \"Object.getOwnPropertyDescriptor\"],\n  [Object.getOwnPropertyDescriptors, \"Object.getOwnPropertyDescriptors\"],\n  [Object.getOwnPropertyNames, \"Object.getOwnPropertyNames\"],\n  [Object.getOwnPropertySymbols, \"Object.getOwnPropertySymbols\"],\n  [Object.getPrototypeOf, \"Object.getPrototypeOf\"],\n  [Object.is, \"Object.is\"],\n  [Object.isExtensible, \"Object.isExtensible\"],\n  [Object.isFrozen, \"Object.isFrozen\"],\n  [Object.isSealed, \"Object.isSealed\"],\n  [Object.keys, \"Object.keys\"],\n  [Object.preventExtensions, \"Object.preventExtensions\"],\n  [Object.seal, \"Object.seal\"],\n  [Object.setPrototypeOf, \"Object.setPrototypeOf\"],\n  [Object.values, \"Object.values\"],\n  [parseFloat, \"parseFloat\"],\n  [parseInt, \"parseInt\"],\n  [Promise, \"Promise\"],\n  [Proxy, \"Proxy\"],\n  [RangeError, \"RangeError\"],\n  [ReferenceError, \"ReferenceError\"],\n  [Reflect.apply, \"Reflect.apply\"],\n  [Reflect.construct, \"Reflect.construct\"],\n  [Reflect.defineProperty, \"Reflect.defineProperty\"],\n  [Reflect.deleteProperty, \"Reflect.deleteProperty\"],\n  [Reflect.get, \"Reflect.get\"],\n  [Reflect.getOwnPropertyDescriptor, \"Reflect.getOwnPropertyDescriptor\"],\n  [Reflect.getPrototypeOf, \"Reflect.getPrototypeOf\"],\n  [Reflect.has, \"Reflect.has\"],\n  [Reflect.isExtensible, \"Reflect.isExtensible\"],\n  [Reflect.ownKeys, \"Reflect.ownKeys\"],\n  [Reflect.preventExtensions, \"Reflect.preventExtensions\"],\n  [Reflect.set, \"Reflect.set\"],\n  [Reflect.setPrototypeOf, \"Reflect.setPrototypeOf\"],\n  [RegExp, \"RegExp\"],\n  [Set, \"Set\"],\n  [String, \"String\"],\n  [String.fromCharCode, \"String.fromCharCode\"],\n  [String.fromCodePoint, \"String.fromCodePoint\"],\n  [String.raw, \"String.raw\"],\n  [Symbol, \"Symbol\"],\n  [Symbol.for, \"Symbol.for\"],\n  [SyntaxError, \"SyntaxError\"],\n  [TypeError, \"TypeError\"],\n  [Uint16Array, \"Uint16Array\"],\n  [Uint16Array.from, \"Uint16Array.from\"],\n  [Uint16Array.of, \"Uint16Array.of\"],\n  [Uint32Array, \"Uint32Array\"],\n  [Uint32Array.from, \"Uint32Array.from\"],\n  [Uint32Array.of, \"Uint32Array.of\"],\n  [Uint8Array, \"Uint8Array\"],\n  [Uint8Array.from, \"Uint8Array.from\"],\n  [Uint8Array.of, \"Uint8Array.of\"],\n  [Uint8ClampedArray, \"Uint8ClampedArray\"],\n  [Uint8ClampedArray.from, \"Uint8ClampedArray.from\"],\n  [Uint8ClampedArray.of, \"Uint8ClampedArray.of\"],\n  [URIError, \"URIError\"],\n  [WeakMap, \"WeakMap\"],\n  [WeakSet, \"WeakSet\"]\n]);\nvar KNOWN_OBJECTS = /* @__PURE__ */ new Map([\n  [Atomics, \"Atomics\"],\n  [console, \"console\"],\n  [globalThis, \"globalThis\"],\n  [globalThis.crypto, \"crypto\"],\n  [Intl, \"Intl\"],\n  [JSON, \"JSON\"],\n  [Math, \"Math\"],\n  [Reflect, \"Reflect\"]\n]);\nfunction toAccess(accessor) {\n  const start = accessor[0];\n  return start === '\"' || start >= \"0\" && start <= \"9\" ? \"[\" + accessor + \"]\" : \".\" + accessor;\n}\n\n// src/html/writer.ts\nvar K_SCOPE_ID = Symbol(\"Scope ID\");\nvar kPendingContexts = Symbol(\"Pending Contexts\");\nvar branchIdKey = Symbol();\nvar tick = globalThis.setImmediate || globalThis.setTimeout || globalThis.queueMicrotask || ((cb) => Promise.resolve().then(cb));\n\n// src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nvar kSelectedValue = Symbol(\"selectedValue\");\nfunction attr(name2, val) {\n  return isVoid(val) ? \"\" : nonVoidAttr(name2, val);\n}\nfunction stringAttr(name2, val) {\n  return val && ` ${name2}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidAttr(name2, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name2 + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name2}`;\n    case \"number\":\n      return ` ${name2}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name2 + attrAssignment(val.source)}`;\n      }\n      break;\n  }\n  return ` ${name2 + attrAssignment(val + \"\")}`;\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\nvar unsafeAttrChars = /[\"'>\\s]/g;\nfunction escapeAttrValue(str) {\n  if (unsafeAttrChars.test(str)) {\n    const c = str[unsafeAttrChars.lastIndex - 1];\n    unsafeAttrChars.lastIndex = 0;\n    return c === '\"' ? `'${str.replace(/'/g, \"&#39;\")}'` : `\"${str.replace(/\"/g, \"&#34;\")}\"`;\n  }\n  return str;\n}\n\n// src/common/compat-meta.ts\nvar prefix = false ? \"$compat_\" : \"$C_\";\nvar RENDERER_REGISTER_ID = prefix + (false ? \"renderer\" : \"r\");\nvar SET_SCOPE_REGISTER_ID = prefix + (false ? \"setScope\" : \"s\");\nvar RENDER_BODY_ID = prefix + (false ? \"renderBody\" : \"b\");\n\n// src/html/compat.ts\nvar K_TAGS_API_STATE = Symbol();\n\n// src/translator/util/to-property-name.ts\nvar import_compiler3 = require(\"@marko/compiler\");\nfunction toPropertyName(name2) {\n  if (/^[a-z_$][a-z0-9_$]*$/i.test(name2)) {\n    return import_compiler3.types.identifier(name2);\n  } else if (/^(?:0|[1-9][0-9]*)$/.test(name2)) {\n    return import_compiler3.types.numericLiteral(parseInt(name2, 10));\n  }\n  return import_compiler3.types.stringLiteral(name2);\n}\nfunction toObjectProperty(name2, value) {\n  return import_compiler3.types.objectProperty(toPropertyName(name2), value);\n}\nfunction toMemberExpression(object, key, optional) {\n  const prop = toPropertyName(key);\n  const computed = prop.type !== \"Identifier\";\n  return optional ? import_compiler3.types.optionalMemberExpression(object, prop, computed, true) : import_compiler3.types.memberExpression(object, prop, computed);\n}\n\n// src/translator/util/runtime.ts\nvar pureFunctions = [\n  \"conditional\",\n  \"conditionalClosure\",\n  \"dynamicTag\",\n  \"createRenderer\",\n  \"createRendererWithOwner\",\n  \"createTemplate\",\n  \"dynamicClosure\",\n  \"dynamicTagAttrs\",\n  \"inChild\",\n  \"intersection\",\n  \"loopClosure\",\n  \"loopIn\",\n  \"loopOf\",\n  \"loopTo\",\n  \"state\",\n  \"value\"\n];\nfunction importRuntime(name2) {\n  const { output } = getMarkoOpts();\n  return toMemberExpression(\n    (0, import_babel_utils4.importStar)(currentProgramPath.hub.file, getRuntimePath(output), \"$\"),\n    name2\n  );\n}\nfunction callRuntime(name2, ...args) {\n  const callExpression2 = import_compiler4.types.callExpression(\n    importRuntime(name2),\n    filterArguments(args)\n  );\n  if (pureFunctions.includes(name2)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `${runtime_info_default.name}/${optimize ? \"\" : \"debug/\"}${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || import_compiler4.types.unaryExpression(\"void\", import_compiler4.types.numericLiteral(0));\n    }\n  }\n  return filteredArgs;\n}\nfunction getCompatRuntimeFile() {\n  const markoOpts = getMarkoOpts();\n  return `marko/src/runtime/helpers/tags-compat/${isOutputHTML() ? \"html\" : \"dom\"}${markoOpts.optimize ? \"\" : \"-debug\"}.${markoOpts.modules === \"esm\" ? \"mjs\" : \"js\"}`;\n}\n\n// src/translator/util/sections.ts\nvar import_compiler6 = require(\"@marko/compiler\");\nvar import_babel_utils7 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-core-tag.ts\nvar import_babel_utils5 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-tag-name.ts\nfunction getTagName(tag) {\n  return tag.node.name.value;\n}\n\n// src/translator/util/is-core-tag.ts\nvar { taglibId } = runtime_info_default;\nvar htmlTaglibId = \"marko-html\";\nvar interopTaglibId = \"@marko/translator-interop-class-tags\";\nfunction isCoreTag(tag) {\n  if (tag.isMarkoTag()) {\n    const tagDef = (0, import_babel_utils5.getTagDef)(tag);\n    if (tagDef) {\n      switch (tagDef.taglibId) {\n        case taglibId:\n        case interopTaglibId:\n          return true;\n        case htmlTaglibId:\n          switch (tagDef.name) {\n            case \"script\":\n            case \"style\":\n              return true;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction isCoreTagName(tag, name2) {\n  return isCoreTag(tag) && getTagName(tag) === name2;\n}\nfunction isConditionTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n        return true;\n    }\n  }\n  return false;\n}\nfunction isControlFlowTag(tag) {\n  if (isCoreTag(tag)) {\n    switch (getTagName(tag)) {\n      case \"if\":\n      case \"else-if\":\n      case \"else\":\n      case \"for\":\n      case \"await\":\n      case \"try\":\n        return true;\n    }\n  }\n  return false;\n}\n\n// src/translator/util/optional.ts\nvar Sorted = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? addSorted(this.compare, data, item) : joinRepeatable(this.compare, data, item) : item;\n  }\n  union(a, b) {\n    if (a) {\n      if (Array.isArray(a)) {\n        if (b) {\n          if (Array.isArray(b)) {\n            return unionSortedRepeatable(this.compare, a, b);\n          } else {\n            return addSorted(this.compare, a, b);\n          }\n        }\n        return a;\n      }\n      if (b) {\n        if (Array.isArray(b)) {\n          return addSorted(this.compare, [...b], a);\n        }\n        return joinRepeatable(this.compare, b, a);\n      }\n      return a;\n    }\n    return b;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return findSorted(this.compare, data, item);\n      } else if (this.compare(data, item) === 0) {\n        return data;\n      }\n    }\n  }\n};\nfunction push(data, item) {\n  if (data) {\n    if (Array.isArray(data)) {\n      data.push(item);\n      return data;\n    }\n    return [data, item];\n  }\n  return item;\n}\nfunction concat(a, b) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        return a.concat(b);\n      } else if (Array.isArray(b)) {\n        return [a, ...b];\n      } else {\n        return [a, b];\n      }\n    }\n    return a;\n  }\n  return b;\n}\nfunction filter(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      const len = data.length;\n      let result;\n      let i = 0;\n      while (i < len) {\n        let item = data[i++];\n        if (cb(item)) {\n          result = item;\n          while (i < len) {\n            item = data[i++];\n            if (cb(item)) {\n              result = [result, item];\n              while (i < len) {\n                item = data[i++];\n                if (cb(item)) {\n                  result.push(item);\n                }\n              }\n              return result;\n            }\n          }\n          return result;\n        }\n      }\n      return result;\n    }\n    if (cb(data)) {\n      return data;\n    }\n  }\n  return void 0;\n}\nfunction forEach(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      let i = 0;\n      for (const item of data) {\n        cb(item, i++);\n      }\n    } else {\n      cb(data, 0);\n    }\n  }\n}\nfunction find(data, cb) {\n  if (data) {\n    if (Array.isArray(data)) {\n      return data.find(cb);\n    }\n    if (cb(data, 0)) {\n      return data;\n    }\n  }\n}\nfunction findSorted(compare, data, item) {\n  let max = data.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const cur = data[mid];\n    const compareResult = compare(cur, item);\n    if (compareResult === 0) return cur;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n}\nfunction addSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0) return data;\n    if (compareResult > 0) max = mid;\n    else pos = mid + 1;\n  }\n  const result = new Array(len + 1);\n  for (let i = 0; i < pos; i++) {\n    result[i] = data[i];\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    result[pos++] = next;\n  }\n  result[len] = cur;\n  return result;\n}\nfunction unionSortedRepeatable(compare, a, b) {\n  const aLen = a.length;\n  const bLen = b.length;\n  let aIndex = 0;\n  let bIndex = 0;\n  const result = [];\n  while (aIndex < aLen && bIndex < bLen) {\n    const aValue = a[aIndex];\n    const bValue = b[bIndex];\n    const delta = compare(aValue, bValue);\n    if (delta === 0) {\n      aIndex++;\n      bIndex++;\n      result.push(aValue);\n    } else if (delta < 0) {\n      aIndex++;\n      result.push(aValue);\n    } else {\n      bIndex++;\n      result.push(bValue);\n    }\n  }\n  if (aLen === bLen && aIndex === aLen) {\n    return a;\n  }\n  while (aIndex < aLen) {\n    result.push(a[aIndex++]);\n  }\n  while (bIndex < bLen) {\n    result.push(b[bIndex++]);\n  }\n  return result;\n}\nfunction joinRepeatable(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\n\n// src/translator/util/state.ts\nvar createProgramState = (init) => {\n  const map = /* @__PURE__ */ new WeakMap();\n  return [\n    () => {\n      let state = map.get(currentProgramPath);\n      if (!state) {\n        map.set(currentProgramPath, state = init());\n      }\n      return state;\n    },\n    (value) => {\n      map.set(currentProgramPath, value);\n    }\n  ];\n};\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= {};\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\n\n// src/translator/util/tag-name-type.ts\nvar import_compiler5 = require(\"@marko/compiler\");\nvar import_babel_utils6 = require(\"@marko/compiler/babel-utils\");\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name2 = tag.get(\"name\");\n    if (name2.isStringLiteral()) {\n      extra.tagNameType = name2.node.value[0] === \"@\" ? 3 /* AttributeTag */ : (0, import_babel_utils6.isNativeTag)(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else if (name2.isIdentifier()) {\n      analyzeExpressionTagName(name2, extra);\n      if (extra.tagNameType === 0 /* NativeTag */) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      }\n    } else if (name2.isTemplateLiteral() && !name2.node.expressions.length) {\n      extra.tagNameType = 0 /* NativeTag */;\n    } else {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n    if (extra.tagNameType === 1 /* CustomTag */) {\n      const childFile = (0, import_babel_utils6.loadFileForTag)(tag);\n      if (!childFile) {\n        extra.tagNameType = 2 /* DynamicTag */;\n      } else if (childFile.ast.program.extra.featureType === \"class\") {\n        extra.tagNameType = 2 /* DynamicTag */;\n        extra.featureType = \"class\";\n        (currentProgramPath.node.extra ??= {}).needsCompat = true;\n      }\n    }\n  }\n  return extra.tagNameType;\n}\nfunction analyzeExpressionTagName(name2, extra) {\n  const pending = [name2];\n  let path5;\n  let type;\n  let nullable = false;\n  let tagNameImported;\n  while ((path5 = pending.pop()) && type !== 2 /* DynamicTag */) {\n    if (path5.isConditionalExpression()) {\n      pending.push(path5.get(\"consequent\"));\n      if (path5.node.alternate) {\n        pending.push(path5.get(\"alternate\"));\n      }\n    } else if (path5.isLogicalExpression()) {\n      if (path5.node.operator === \"||\") {\n        pending.push(path5.get(\"left\"));\n      } else {\n        nullable = true;\n      }\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isAssignmentExpression()) {\n      pending.push(path5.get(\"right\"));\n    } else if (path5.isBinaryExpression()) {\n      type = path5.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isStringLiteral() || path5.isTemplateLiteral()) {\n      type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n    } else if (path5.isNullLiteral()) {\n      nullable = true;\n    } else if (path5.isIdentifier()) {\n      if (path5.node.name === \"undefined\") {\n        nullable = true;\n        continue;\n      }\n      const binding = path5.scope.getBinding(path5.node.name);\n      if (!binding) {\n        type = 2 /* DynamicTag */;\n        continue;\n      }\n      if (binding.kind === \"module\") {\n        const decl = binding.path.parent;\n        if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => import_compiler5.types.isImportDefaultSpecifier(it))) {\n          const resolvedImport = (0, import_babel_utils6.resolveTagImport)(name2, decl.source.value) || decl.source.value;\n          if (type === 0 /* NativeTag */ || tagNameImported && tagNameImported !== resolvedImport) {\n            type = 2 /* DynamicTag */;\n            tagNameImported = void 0;\n          } else {\n            type = 1 /* CustomTag */;\n            tagNameImported = resolvedImport;\n          }\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n        continue;\n      }\n      const bindingTag = binding.path;\n      if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n        const bindingTagName = bindingTag.get(\"name\").node.value;\n        if (bindingTagName === \"const\") {\n          pending.push(\n            bindingTag.get(\"attributes\")[0].get(\"value\")\n          );\n          continue;\n        }\n        if (bindingTagName === \"let\") {\n          type = 2 /* DynamicTag */;\n          continue;\n        }\n        continue;\n      }\n      type = 2 /* DynamicTag */;\n    } else {\n      type = 2 /* DynamicTag */;\n    }\n  }\n  extra.tagNameType = type;\n  extra.tagNameNullable = nullable;\n  extra.tagNameDynamic = true;\n  if (type === 1 /* CustomTag */ && tagNameImported) {\n    extra.tagNameImported = tagNameImported;\n  }\n}\n\n// src/translator/util/sections.ts\nfunction startSection(path5) {\n  const extra = path5.node.extra ??= {};\n  let section = extra.section;\n  if (!section && (path5.type === \"Program\" || path5.get(\"body\").length)) {\n    const parentSection = path5.parentPath ? getOrCreateSection(path5.parentPath) : void 0;\n    const sectionNamePath = path5.parentPath?.get(\n      \"name\"\n    );\n    const sectionName = path5.isProgram() ? \"\" : currentProgramPath.scope.generateUid(\n      sectionNamePath.toString() + \"_content\"\n    );\n    const programExtra = path5.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      loc: sectionNamePath?.node.loc || void 0,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection,\n      params: void 0,\n      closures: void 0,\n      bindings: void 0,\n      assignments: void 0,\n      content: getContentInfo(path5),\n      upstreamExpression: void 0,\n      hasAbortSignal: false,\n      isBranch: false\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path5) {\n  let cur = path5;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && !cur.node.attributeTags && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */ && cur.parent.name.value !== \"html-comment\") {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionForBody(body) {\n  return body.node.extra?.section;\n}\nfunction getSection(path5) {\n  let section;\n  let currentPath = path5;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nvar [getScopeIdIdentifier] = createSectionState(\n  \"scopeIdIdentifier\",\n  (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`)\n);\nvar [getSectionParentIsOwner, setSectionParentIsOwner] = createSectionState(\"parentIsOwner\", () => false);\nvar [_getScopeIdentifier] = createSectionState(\n  \"scopeIdentifier\",\n  () => import_compiler6.types.identifier(\"undefined\")\n);\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\nfunction getContentInfo(path5) {\n  const body = path5.get(\"body\");\n  const contentInfo = {\n    startType: null,\n    endType: null,\n    singleChild: true\n  };\n  for (let endIndex = body.length; endIndex--; ) {\n    const endType = getNodeContentType(body[endIndex], \"endType\", contentInfo);\n    if (endType !== null) {\n      contentInfo.endType = endType;\n      for (let startIndex = 0; startIndex < endIndex; startIndex++) {\n        const startType = getNodeContentType(body[startIndex], \"startType\");\n        if (startType !== null) {\n          contentInfo.startType = startType;\n          contentInfo.singleChild = false;\n          return contentInfo;\n        }\n      }\n      contentInfo.startType = getNodeContentType(body[endIndex], \"startType\");\n      return contentInfo;\n    }\n  }\n  return null;\n}\nfunction getNodeContentType(path5, extraMember, contentInfo) {\n  switch (path5.type) {\n    case \"MarkoText\":\n      return 4 /* Text */;\n    case \"MarkoPlaceholder\":\n      return 2 /* Placeholder */;\n    case \"MarkoScriptlet\":\n    case \"MarkoComment\":\n    case \"ImportDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportNamedDeclaration\":\n      return null;\n    case \"MarkoTag\": {\n      const tag = path5;\n      if (isCoreTag(tag)) {\n        switch (tag.node.name.value) {\n          case \"html-comment\":\n            return 0 /* Comment */;\n          case \"html-script\":\n          case \"html-style\":\n            return 3 /* Tag */;\n          case \"for\":\n          case \"if\":\n            return 1 /* Dynamic */;\n          default:\n            return null;\n        }\n      } else if ((0, import_babel_utils7.isNativeTag)(tag)) {\n        return 3 /* Tag */;\n      } else if ((0, import_babel_utils7.isAttributeTag)(tag)) {\n        return null;\n      } else if (import_compiler6.types.isStringLiteral(tag.node.name)) {\n        const tagSection = (0, import_babel_utils7.loadFileForTag)(tag)?.ast.program.extra.section;\n        if (tagSection) {\n          if (tagSection.content) {\n            if (contentInfo && !tagSection.content.singleChild) {\n              if (extraMember === \"endType\") {\n                contentInfo.startType = tagSection.content.startType;\n                contentInfo.singleChild = false;\n              }\n            }\n            return tagSection.content[extraMember];\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  return 1 /* Dynamic */;\n}\nvar isStatefulSection = (section) => {\n  const upstreamExpression = section.upstreamExpression;\n  return !upstreamExpression || isStatefulReferences(upstreamExpression.referencedBindings);\n};\nvar checkStatefulClosures = (section, immediateOnly) => {\n  return !!find(\n    section.closures,\n    (closure) => (!immediateOnly || section.parent === closure.section) && isStatefulReferences(closure)\n  );\n};\n\n// src/translator/visitors/program/dom.ts\nvar import_compiler18 = require(\"@marko/compiler\");\nvar import_babel_utils10 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-style-file.ts\nvar import_path = __toESM(require(\"path\"));\nfunction getStyleFile(file) {\n  const { filename } = file.opts;\n  const fs = file.markoOpts.fileSystem;\n  const base = getBase(filename);\n  const styleMatch = new RegExp(\n    `^(${escapeRegExp(base)}\\\\.${\"index\" === base ? \"|\" : \"\"})style\\\\.\\\\w+$`\n  );\n  for (const file2 of fs.readdirSync(import_path.default.dirname(filename)).sort()) {\n    if (styleMatch.test(file2)) {\n      return `./${file2}`;\n    }\n  }\n}\nfunction getBase(filename) {\n  const start = filename.lastIndexOf(import_path.default.sep) + 1;\n  const leftDot = filename.indexOf(\".\", start);\n  if (leftDot === -1) {\n    return filename.slice(start);\n  }\n  const rightDot = filename.lastIndexOf(\".\");\n  const closeBracket = leftDot - 1;\n  if (filename[closeBracket] === \"]\") {\n    const openBracket = filename.lastIndexOf(\"[\", closeBracket);\n    if (openBracket > start) {\n      return filename.slice(start, openBracket) + filename.slice(leftDot, rightDot);\n    }\n  }\n  return filename.slice(start, rightDot);\n}\nvar regexpCharsReg = /[\\\\^$.*+?()[\\]{}|]/g;\nfunction escapeRegExp(str) {\n  return str.replace(regexpCharsReg, \"\\\\$&\");\n}\n\n// src/translator/util/signals.ts\nvar import_compiler17 = require(\"@marko/compiler\");\nvar import_babel_utils9 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/return.ts\nvar import_compiler11 = require(\"@marko/compiler\");\nvar import_babel_utils8 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/get-known-attr-values.ts\nfunction getKnownAttrValues(tag) {\n  const attrs2 = {};\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      attrs2[attr2.name] = attr2.value;\n    }\n  }\n  return attrs2;\n}\n\n// src/translator/util/get-parent-tag.ts\nfunction getParentTag(tag) {\n  const parent = tag.parent.type === \"MarkoTagBody\" ? tag.parentPath.parentPath : tag.parentPath;\n  if (parent.type === \"MarkoTag\") {\n    return parent;\n  }\n}\n\n// src/translator/util/plugin-hooks.ts\nvar import_compiler7 = require(\"@marko/compiler\");\nfunction enter(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path5, import_compiler7.types);\n  } else if (plugin.enter) {\n    plugin.enter(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction exit(modulePlugin, path5) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path5;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path5, import_compiler7.types);\n  }\n  return node !== path5.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/translator/util/visitors.ts\nfunction extractVisitors(visitors2) {\n  const result = {\n    migrate: {},\n    transform: {},\n    analyze: {},\n    translate: {}\n  };\n  for (const _name in visitors2) {\n    const name2 = _name;\n    const value = visitors2[name2];\n    if (value.migrate) result.migrate[name2] = value.migrate;\n    if (value.transform) result.transform[name2] = value.transform;\n    if (value.analyze) result.analyze[name2] = value.analyze;\n    if (value.translate) result.translate[name2] = value.translate;\n  }\n  return result;\n}\nfunction translateByTarget({\n  html,\n  dom\n}) {\n  return {\n    enter(path5) {\n      enter(isOutputHTML() ? html : dom, path5);\n    },\n    exit(path5) {\n      exit(isOutputHTML() ? html : dom, path5);\n    }\n  };\n}\n\n// src/translator/util/writer.ts\nvar import_compiler10 = require(\"@marko/compiler\");\n\n// src/translator/util/normalize-string-expression.ts\nvar import_compiler8 = require(\"@marko/compiler\");\nfunction normalizeStringExpression(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (import_compiler8.types.isStringLiteral(content)) {\n        content = content.value;\n      } else if (import_compiler8.types.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    if (exprs.length === 1 && !curStr && !strs[0]) {\n      return exprs[0];\n    }\n    strs.push(curStr);\n    return import_compiler8.types.templateLiteral(\n      strs.map((raw) => import_compiler8.types.templateElement({ raw })),\n      exprs\n    );\n  } else if (curStr) {\n    return import_compiler8.types.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/translator/util/walks.ts\nvar import_compiler9 = require(\"@marko/compiler\");\nvar [getWalks] = createSectionState(\n  \"walks\",\n  () => [\"\"]\n);\nvar [getWalkComment] = createSectionState(\n  \"walkComment\",\n  () => []\n);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter2(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */);\n}\nfunction exit2(path5) {\n  getSteps(getSection(path5)).push(1 /* Exit */);\n}\nfunction enterShallow(path5) {\n  getSteps(getSection(path5)).push(0 /* Enter */, 1 /* Exit */);\n}\nfunction injectWalks(path5, expr) {\n  const walks = getWalks(getSection(path5));\n  const walkComment = getWalkComment(getSection(path5));\n  walkComment.push(\n    `${walkCodeToName[47 /* BeginChild */]}`,\n    expr.name,\n    walkCodeToName[38 /* EndChild */]\n  );\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path5, code) {\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path5);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walkCodes = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* Enter */) {\n        depth++;\n        walkCodes.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walkCodes.length = walkCodes.lastIndexOf(67 /* Next */);\n          walkCodes.push(97 /* Over */);\n        } else {\n          walkCodes.length = walkCodes.lastIndexOf(107 /* Out */) + 1;\n          walkCodes.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walkCodes[0];\n    let count = 0;\n    for (const walk of walkCodes) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path5)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(\n      multiplier,\n      117 /* Multiplier */,\n      10 /* Multiplier */\n    );\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const prefix2 = section.content?.startType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const postfix = section.content?.endType === 1 /* Dynamic */ ? String.fromCharCode(67 /* Next */ + 1) : \"\";\n  const walks = getWalks(section);\n  const walkLiteral = normalizeStringExpression([prefix2, ...walks, postfix]) || import_compiler9.types.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/translator/util/writer.ts\nvar [getWrites] = createSectionState(\n  \"writes\",\n  () => [\"\"]\n);\nvar [getTrailerWrites] = createSectionState(\n  \"trailerWrites\",\n  () => [\"\"]\n);\nfunction writeTo(path5, trailer) {\n  const section = getSection(path5);\n  const get = trailer ? getTrailerWrites : getWrites;\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = get(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction consumeHTML(path5) {\n  const section = getSection(path5);\n  const writes = getWrites(section);\n  const trailers = getTrailerWrites(section);\n  const writeResult = normalizeStringExpression(writes);\n  const trailerResult = normalizeStringExpression(trailers);\n  writes.length = 0;\n  writes[0] = \"\";\n  trailers.length = 0;\n  trailers[0] = \"\";\n  if (writeResult && trailerResult) {\n    return import_compiler10.types.expressionStatement(\n      import_compiler10.types.sequenceExpression([\n        callRuntime(\"write\", writeResult),\n        callRuntime(\"writeTrailers\", trailerResult)\n      ])\n    );\n  } else if (writeResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"write\", writeResult));\n  } else if (trailerResult) {\n    return import_compiler10.types.expressionStatement(callRuntime(\"writeTrailers\", trailerResult));\n  }\n}\nfunction flushBefore(path5) {\n  const expr = consumeHTML(path5);\n  if (expr) {\n    path5.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path5) {\n  const target = path5.isProgram() ? path5 : path5.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writePrefix = section.content?.startType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writePostfix = section.content?.endType === 1 /* Dynamic */ ? \"<!>\" : \"\";\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: normalizeStringExpression([writePrefix, ...writes, writePostfix]) || import_compiler10.types.stringLiteral(\"\")\n  };\n}\nfunction markNode(path5, binding) {\n  const section = getSection(path5);\n  if (binding.type !== 0 /* dom */) {\n    throw path5.buildCodeFrameError(\n      \"Tried to mark a node that was not determined to need a mark during analyze.\"\n    );\n  }\n  if (isOutputHTML()) {\n    writeTo(path5)`${callRuntime(\n      \"markResumeNode\",\n      getScopeIdIdentifier(section),\n      getScopeAccessorLiteral(binding)\n    )}`;\n  }\n}\n\n// src/translator/core/return.ts\nvar tagsWithReturn = /* @__PURE__ */ new WeakSet();\nvar [getSectionReturnValueIdentifier, setReturnValueIdentifier] = createSectionState(\"returnValue\");\nvar return_default = {\n  analyze(tag) {\n    (0, import_babel_utils8.assertNoArgs)(tag);\n    (0, import_babel_utils8.assertNoVar)(tag);\n    (0, import_babel_utils8.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils8.assertAllowedAttributes)(tag, [\"value\", \"valueChange\"]);\n    const parentTag = getParentTag(tag);\n    if (parentTag) {\n      if ((0, import_babel_utils8.isNativeTag)(parentTag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `return` tag can not be used in a native tag.\"\n        );\n      } else if (isControlFlowTag(parentTag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          `The \\`return\\` tag can not be used under an \\`${parentTag.get(\"name\").toString()}\\` tag.`\n        );\n      }\n    }\n    if (tagsWithReturn.has(tag.parentPath)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Cannot have multiple \\`return\\` tags ${tag.parent.type === \"Program\" ? \"for the template\" : \"within a tag's body content\"}.`\n      );\n    } else {\n      tagsWithReturn.add(tag.parentPath);\n    }\n    if (!getKnownAttrValues(tag.node).value) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `return` tag requires a value.\");\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        flushBefore(tag);\n        if (attrs2.valueChange) {\n          getSerializedScopeProperties(section).set(\n            import_compiler11.types.stringLiteral(\"@\" /* TagVariableChange */),\n            attrs2.valueChange\n          );\n        }\n        if (attrs2.value) {\n          const returnId = tag.scope.generateUidIdentifier(\"return\");\n          setReturnValueIdentifier(section, returnId);\n          tag.replaceWith(\n            import_compiler11.types.variableDeclaration(\"const\", [\n              import_compiler11.types.variableDeclarator(returnId, attrs2.value)\n            ])\n          )[0].skip();\n        }\n      }\n    },\n    dom: {\n      exit(tag) {\n        const section = getSection(tag);\n        const attrs2 = getKnownAttrValues(tag.node);\n        if (attrs2.value) {\n          addValue(\n            section,\n            attrs2.value.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"tagVarSignal\"),\n              hasDownstreamIntersections: () => true\n            },\n            attrs2.value\n          );\n        }\n        if (attrs2.valueChange) {\n          addValue(\n            section,\n            attrs2.valueChange.extra?.referencedBindings,\n            {\n              identifier: importRuntime(\"setTagVarChange\"),\n              hasDownstreamIntersections: () => false\n            },\n            attrs2.valueChange\n          );\n        }\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: {\n    openTagOnly: true\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/translator/util/for-each-identifier.ts\nfunction forEachIdentifier(node, cb) {\n  switch (node.type) {\n    case \"ObjectPattern\":\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case \"ObjectProperty\":\n            if (prop.value.type === \"AssignmentPattern\") {\n              forEachIdentifier(prop.value.left, cb);\n            } else {\n              forEachIdentifier(prop.value, cb);\n            }\n            break;\n          case \"RestElement\":\n            forEachIdentifier(prop.argument, cb);\n            break;\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      for (const el of node.elements) {\n        if (el != null) {\n          switch (el.type) {\n            case \"RestElement\":\n              forEachIdentifier(el.argument, cb);\n              break;\n            case \"AssignmentPattern\":\n              forEachIdentifier(el.left, cb);\n              break;\n            default:\n              forEachIdentifier(el, cb);\n              break;\n          }\n        }\n      }\n      break;\n    case \"Identifier\":\n      cb(node);\n      break;\n  }\n}\n\n// src/translator/util/get-defined-binding-expression.ts\nvar import_compiler12 = require(\"@marko/compiler\");\nfunction getDeclaredBindingExpression(binding) {\n  if (binding.declared || !binding.upstreamAlias) {\n    return import_compiler12.types.identifier(binding.name);\n  } else if (binding.property !== void 0) {\n    return toMemberExpression(\n      getDeclaredBindingExpression(binding.upstreamAlias),\n      binding.property,\n      binding.upstreamAlias.nullable\n    );\n  } else {\n    return getDeclaredBindingExpression(binding.upstreamAlias);\n  }\n}\n\n// src/translator/util/scope-read.ts\nvar import_compiler13 = require(\"@marko/compiler\");\nfunction createScopeReadPattern(section, referencedBindings) {\n  const rootDepth = section.depth;\n  const rootPattern = import_compiler13.types.objectPattern([]);\n  let nestedPatterns;\n  forEach(referencedBindings, (ref) => {\n    if (ref.name.includes(\"#\")) return;\n    const propertyKey = getScopeAccessorLiteral(ref);\n    const propertyValue = import_compiler13.types.identifier(ref.name);\n    const isShorthand = propertyKey.value === propertyValue.name;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns) nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = import_compiler13.types.objectPattern([]);\n        prev.properties.push(\n          import_compiler13.types.objectProperty(import_compiler13.types.identifier(\"_\"), nestedPattern)\n        );\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(\n      import_compiler13.types.objectProperty(\n        isShorthand ? propertyValue : propertyKey,\n        propertyValue,\n        false,\n        isShorthand\n      )\n    );\n  });\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier ?? import_compiler13.types.identifier(\"undefined\");\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = import_compiler13.types.memberExpression(scope, import_compiler13.types.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  return import_compiler13.types.memberExpression(\n    getScopeExpression(section, reference.section),\n    getScopeAccessorLiteral(reference),\n    true\n  );\n}\n\n// src/translator/util/simplify-fn.ts\nvar import_compiler14 = require(\"@marko/compiler\");\nfunction simplifyFunction(fn) {\n  switch (fn.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return fn;\n    default:\n      return import_compiler14.types.functionExpression(\n        null,\n        fn.params,\n        fn.body,\n        fn.async,\n        fn.generator\n      );\n  }\n}\n\n// src/translator/util/to-first-expression-or-block.ts\nvar import_compiler15 = require(\"@marko/compiler\");\nfunction toFirstExpressionOrBlock(stmts) {\n  if (stmts.length === 1 && import_compiler15.types.isExpressionStatement(stmts[0])) {\n    const { expression } = stmts[0];\n    switch (expression.type) {\n      case \"ObjectExpression\":\n      case \"AssignmentExpression\":\n        return toParenthesizedExpressionIfNeeded(expression);\n      default:\n        return expression;\n    }\n  }\n  return import_compiler15.types.blockStatement(stmts);\n}\nfunction toParenthesizedExpressionIfNeeded(expr) {\n  switch (expr.type) {\n    case \"ObjectExpression\":\n    case \"AssignmentExpression\":\n      return import_compiler15.types.parenthesizedExpression(expr);\n    default:\n      return expr;\n  }\n}\n\n// src/translator/util/traverse.ts\nvar import_compiler16 = require(\"@marko/compiler\");\nvar skip = Symbol(\"skip\");\nfunction traverseReplace(container, key, enter3) {\n  const node = container[key];\n  if (node) {\n    if (Array.isArray(node)) {\n      for (let i = node.length; i--; ) {\n        traverseReplace(node, i, enter3);\n      }\n    } else {\n      const keys = import_compiler16.types.VISITOR_KEYS[node.type];\n      for (let i = keys.length; i--; ) {\n        traverseReplace(node, keys[i], enter3);\n      }\n      const replacement = enter3(node, container, key);\n      if (replacement) container[key] = replacement;\n    }\n  }\n}\nfunction traverseContains(node, check) {\n  if (node) {\n    if (Array.isArray(node)) {\n      for (const item of node) {\n        if (traverseContains(item, check)) {\n          return true;\n        }\n      }\n    } else {\n      switch (check(node)) {\n        case true:\n          return true;\n        case skip:\n          return false;\n      }\n      for (const key of import_compiler16.types.VISITOR_KEYS[node.type]) {\n        if (traverseContains(node[key], check)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// src/translator/util/signals.ts\nvar [getSignals] = createSectionState(\n  \"signals\",\n  () => /* @__PURE__ */ new Map()\n);\nvar [getClosureSignalBuilder, _setClosureSignalBuilder] = createSectionState(\"queue\");\nfunction setClosureSignalBuilder(tag, builder) {\n  _setClosureSignalBuilder(getSectionForBody(tag.get(\"body\")), builder);\n}\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getHTMLSectionStatements] = createSectionState(\n  \"htmlScopeStatements\",\n  () => []\n);\nvar unimplementedBuild = () => {\n  return import_compiler17.types.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, referencedBindings, name2 = generateSignalName(referencedBindings)) {\n  const signals = getSignals(section);\n  let signal = signals.get(referencedBindings);\n  if (!signal) {\n    const exportName = referencedBindings ? !Array.isArray(referencedBindings) && referencedBindings.section === section && referencedBindings.export : !section.parent && currentProgramPath.node.extra.domExports?.setup;\n    signals.set(\n      referencedBindings,\n      signal = {\n        identifier: exportName ? import_compiler17.types.identifier(exportName) : currentProgramPath.scope.generateUidIdentifier(\n          name2 + section.name.replace(\"_\", \"$\")\n        ),\n        referencedBindings,\n        section,\n        values: [],\n        intersection: void 0,\n        render: [],\n        renderReferencedBindings: void 0,\n        effect: [],\n        effectReferencedBindings: void 0,\n        subscribers: [],\n        closures: /* @__PURE__ */ new Map(),\n        hasDownstreamIntersections: () => {\n          let hasDownstreamIntersections = !!signal.intersection;\n          if (!hasDownstreamIntersections) {\n            for (const value of signal.values) {\n              if (value.signal.hasDownstreamIntersections()) {\n                hasDownstreamIntersections = true;\n                break;\n              }\n            }\n          }\n          if (!hasDownstreamIntersections) {\n            if (!Array.isArray(referencedBindings) && referencedBindings) {\n              for (const alias of referencedBindings.aliases) {\n                if (getSignal(section, alias).hasDownstreamIntersections()) {\n                  hasDownstreamIntersections = true;\n                  break;\n                }\n              }\n              if (!hasDownstreamIntersections) {\n                for (const [, alias] of referencedBindings.propertyAliases) {\n                  if (getSignal(section, alias).hasDownstreamIntersections()) {\n                    hasDownstreamIntersections = true;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n          signal.hasDownstreamIntersections = () => hasDownstreamIntersections;\n          return hasDownstreamIntersections;\n        },\n        build: unimplementedBuild,\n        export: !!exportName\n      }\n    );\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!referencedBindings) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(referencedBindings)) {\n      subscribe(referencedBindings, signal);\n      signal.build = () => {\n        return callRuntime(\n          \"intersection\",\n          import_compiler17.types.numericLiteral(referencedBindings.length),\n          getSignalFn(signal, [scopeIdentifier], referencedBindings),\n          buildSignalIntersections(signal)\n        );\n      };\n    } else if (referencedBindings.section !== section && bindingUtil.find(section.closures, referencedBindings)) {\n      getSignal(referencedBindings.section, referencedBindings).closures.set(\n        section,\n        signal\n      );\n      signal.build = () => {\n        const builder = getClosureSignalBuilder(section);\n        const ownerScope = getScopeExpression(\n          section,\n          referencedBindings.section\n        );\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        const isDynamicClosure = !isImmediateOwner || !builder;\n        const render = getSignalFn(signal, [\n          scopeIdentifier,\n          import_compiler17.types.identifier(referencedBindings.name)\n        ]);\n        const intersection = buildSignalIntersections(signal);\n        return isDynamicClosure ? isStatefulReferences(referencedBindings) ? callRuntime(\n          \"registerDynamicClosure\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(\n              section,\n              signal.referencedBindings,\n              \"subscriber\"\n            )\n          ),\n          getScopeAccessorLiteral(referencedBindings),\n          render,\n          intersection,\n          isImmediateOwner ? void 0 : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope)\n        ) : callRuntime(\n          \"dynamicClosure\",\n          getScopeAccessorLiteral(referencedBindings),\n          render,\n          intersection,\n          isImmediateOwner ? void 0 : import_compiler17.types.arrowFunctionExpression([scopeIdentifier], ownerScope)\n        ) : builder(signal, render, intersection);\n      };\n      addStatement(\n        \"render\",\n        section,\n        void 0,\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(\n            import_compiler17.types.memberExpression(signal.identifier, import_compiler17.types.identifier(\"_\")),\n            [scopeIdentifier]\n          )\n        )\n      );\n    }\n  }\n  return signal;\n}\nfunction initValue(binding, runtimeHelper = \"value\") {\n  const valueAccessor = getScopeAccessorLiteral(binding);\n  const section = binding.section;\n  const signal = getSignal(section, binding);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      import_compiler17.types.identifier(binding.name)\n    ]);\n    const intersections = buildSignalIntersections(signal);\n    const isParamBinding = !binding.upstreamAlias && (binding.type === 3 /* param */ || binding.type === 2 /* input */);\n    const isNakedAlias = binding.upstreamAlias && !binding.property;\n    const needsGuard = !isNakedAlias && (binding.downstreamExpressions.size || fn.body.body.length > 0);\n    const needsCache = needsGuard || intersections;\n    const needsMarks = isParamBinding || intersections;\n    if (needsCache || needsMarks) {\n      return callRuntime(runtimeHelper, valueAccessor, fn, intersections);\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = valueAccessor;\n  for (const alias of binding.aliases) {\n    initValue(alias);\n  }\n  for (const alias of binding.propertyAliases.values()) {\n    initValue(alias);\n  }\n  return signal;\n}\nfunction getSignalFn(signal, params, referencedBindings) {\n  const section = signal.section;\n  const binding = signal.referencedBindings;\n  const [scopeIdentifier2, valueIdentifier] = params;\n  const isValueSignal = binding && !Array.isArray(binding) && binding.section === section;\n  if (isValueSignal) {\n    for (const alias of binding.aliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            valueIdentifier,\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n    for (const [key, alias] of binding.propertyAliases) {\n      const aliasSignal = getSignal(alias.section, alias);\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(aliasSignal.identifier, [\n            scopeIdentifier2,\n            toMemberExpression(valueIdentifier, key, binding.nullable),\n            ...getTranslatedExtraArgs(aliasSignal)\n          ])\n        )\n      );\n    }\n  }\n  for (const value of signal.values) {\n    signal.render.push(\n      import_compiler17.types.expressionStatement(\n        import_compiler17.types.callExpression(value.signal.identifier, [\n          value.scope,\n          value.value,\n          ...getTranslatedExtraArgs(value.signal)\n        ])\n      )\n    );\n  }\n  if (isValueSignal) {\n    const closureEntries = Array.from(signal.closures.entries()).sort(\n      ([a], [b]) => a.id - b.id\n    );\n    for (const [_closureSection, closureSignal] of closureEntries) {\n      if (isStatefulReferences(closureSignal.referencedBindings)) {\n        signal.render.push(\n          import_compiler17.types.expressionStatement(\n            import_compiler17.types.callExpression(closureSignal.identifier, [scopeIdentifier2])\n          )\n        );\n      }\n    }\n  }\n  if (referencedBindings) {\n    signal.render.unshift(\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(\n          createScopeReadPattern(section, referencedBindings),\n          scopeIdentifier2\n        )\n      ])\n    );\n  }\n  return import_compiler17.types.arrowFunctionExpression(params, import_compiler17.types.blockStatement(signal.render));\n}\nvar hasTranslatedExtraArgs = /* @__PURE__ */ new WeakSet();\nvar emptyExtraArgs = [];\nfunction getTranslatedExtraArgs(signal) {\n  if (signal.extraArgs) {\n    if (!hasTranslatedExtraArgs.has(signal)) {\n      hasTranslatedExtraArgs.add(signal);\n      traverseReplace(signal, \"extraArgs\", replaceRenderNode);\n    }\n    return signal.extraArgs;\n  }\n  return emptyExtraArgs;\n}\nfunction buildSignalIntersections(signal) {\n  let intersections = signal.intersection;\n  const binding = signal.referencedBindings;\n  if (binding && !Array.isArray(binding) && binding.section === signal.section) {\n    for (const alias of binding.aliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n    for (const [, alias] of binding.propertyAliases) {\n      const signal2 = getSignal(alias.section, alias);\n      if (signal2.hasDownstreamIntersections()) {\n        intersections = push(\n          intersections,\n          import_compiler17.types.identifier(signal2.identifier.name)\n        );\n      }\n    }\n  }\n  for (const value of signal.values) {\n    if (value.signal.hasDownstreamIntersections()) {\n      intersections = push(\n        intersections,\n        value.intersectionExpression ?? (import_compiler17.types.isMemberExpression(value.signal.identifier) ? value.signal.identifier : import_compiler17.types.identifier(value.signal.identifier.name))\n      );\n    }\n  }\n  return intersections && import_compiler17.types.arrowFunctionExpression(\n    [],\n    Array.isArray(intersections) ? callRuntime(\"intersections\", import_compiler17.types.arrayExpression(intersections)) : intersections\n  );\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = push(\n    providerSignal.intersection,\n    subscriber.identifier\n  );\n}\nfunction generateSignalName(referencedBindings) {\n  let name2;\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      name2 = \"expr\";\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 = referencedBindings.name;\n    }\n  } else {\n    name2 = \"setup\";\n  }\n  return name2;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (import_compiler17.types.isArrowFunctionExpression(arg) && import_compiler17.types.isBlockStatement(arg.body)) {\n      const body = arg.body.body;\n      if (body.length === 0) {\n        args[i] = import_compiler17.types.numericLiteral(0);\n      } else if (body.length === 1 && import_compiler17.types.isExpressionStatement(body[0])) {\n        arg.body = toParenthesizedExpressionIfNeeded(body[0].expression);\n      }\n    } else if (import_compiler17.types.isNullLiteral(arg) || import_compiler17.types.isUnaryExpression(arg) && arg.operator === \"void\") {\n      args[i] = import_compiler17.types.numericLiteral(0);\n    }\n  }\n  for (let i = args.length - 1; import_compiler17.types.isNumericLiteral(args[i]) && args[i].value === 0; ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSection, referencedBindings, statement, usedReferences) {\n  const signal = getSignal(targetSection, referencedBindings);\n  const statements = signal[type] ??= [];\n  const add = type === \"effect\" ? addEffectReferences : addRenderReferences;\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (usedReferences !== false) {\n    if (usedReferences) {\n      for (const ref of usedReferences) {\n        add(signal, ref);\n      }\n    } else {\n      add(signal, referencedBindings);\n    }\n  }\n}\nfunction addEffectReferences(signal, referencedBindings) {\n  signal.effectReferencedBindings = bindingUtil.union(\n    signal.effectReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addRenderReferences(signal, referencedBindings) {\n  signal.renderReferencedBindings = bindingUtil.union(\n    signal.renderReferencedBindings,\n    referencedBindings\n  );\n}\nfunction addValue(targetSection, referencedBindings, signal, value, scope = scopeIdentifier, intersectionExpression) {\n  getSignal(targetSection, referencedBindings).values.push({\n    signal,\n    value,\n    scope,\n    intersectionExpression\n  });\n}\nfunction getResumeRegisterId(section, referencedBindings, type) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name2 = \"\";\n  if (referencedBindings) {\n    if (typeof referencedBindings === \"string\") {\n      name2 += `_${referencedBindings}`;\n    } else if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        name2 += `_${ref.name}`;\n      }\n    } else {\n      name2 += `_${referencedBindings.name}`;\n    }\n  }\n  return (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}${name2}${type ? \"/\" + type : \"\"}`\n  );\n}\nvar usedRegisterIdsBySection = /* @__PURE__ */ new WeakMap();\nfunction getRegisterUID(section, name2) {\n  const {\n    markoOpts,\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let used = usedRegisterIdsBySection.get(section);\n  if (!used) usedRegisterIdsBySection.set(section, used = /* @__PURE__ */ new Set());\n  const baseId = (0, import_babel_utils9.getTemplateId)(\n    markoOpts,\n    filename,\n    `${section.id}/${name2}`\n  );\n  let count = 0;\n  let id = baseId;\n  while (used.has(id)) {\n    id = baseId + \"_\" + ++count;\n  }\n  used.add(id);\n  return id;\n}\nfunction writeSignals(section) {\n  const signals = [...getSignals(section).values()].sort(sortSignals);\n  for (const signal of signals) {\n    traverseReplace(signal, \"render\", replaceRenderNode);\n    for (const value2 of signal.values) {\n      traverseReplace(value2, \"value\", replaceRenderNode);\n    }\n    let effectDeclarator;\n    if (signal.effect.length) {\n      traverseReplace(signal, \"effect\", replaceEffectNode);\n      const effectIdentifier = import_compiler17.types.identifier(`${signal.identifier.name}_effect`);\n      const referencedBindings = signal.effectReferencedBindings;\n      const referencesScope = traverseContains(\n        signal.effect,\n        isScopeIdentifier\n      );\n      effectDeclarator = import_compiler17.types.variableDeclarator(\n        effectIdentifier,\n        callRuntime(\n          \"effect\",\n          import_compiler17.types.stringLiteral(\n            getResumeRegisterId(section, signal.referencedBindings)\n          ),\n          import_compiler17.types.arrowFunctionExpression(\n            referencedBindings ? referencesScope ? [\n              scopeIdentifier,\n              createScopeReadPattern(section, referencedBindings)\n            ] : [createScopeReadPattern(section, referencedBindings)] : referencesScope ? [scopeIdentifier] : [],\n            toFirstExpressionOrBlock(signal.effect)\n          )\n        )\n      );\n      signal.render.push(\n        import_compiler17.types.expressionStatement(\n          import_compiler17.types.callExpression(effectIdentifier, [scopeIdentifier])\n        )\n      );\n    }\n    let value = signal.build();\n    if (import_compiler17.types.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    if (signal.register) {\n      value = callRuntime(\n        \"registerBoundSignal\",\n        import_compiler17.types.stringLiteral(\n          getResumeRegisterId(section, signal.referencedBindings, \"var\")\n        ),\n        value\n      );\n    }\n    const signalDeclarator = import_compiler17.types.variableDeclarator(signal.identifier, value);\n    let signalDeclaration = !section.parent && !signal.referencedBindings && (import_compiler17.types.isFunctionExpression(value) || import_compiler17.types.isArrowFunctionExpression(value)) ? import_compiler17.types.functionDeclaration(\n      signal.identifier,\n      value.params,\n      import_compiler17.types.isExpression(value.body) ? import_compiler17.types.blockStatement([import_compiler17.types.expressionStatement(value.body)]) : value.body\n    ) : import_compiler17.types.variableDeclaration(\"const\", [signalDeclarator]);\n    if (signal.export) {\n      signalDeclaration = import_compiler17.types.exportNamedDeclaration(signalDeclaration);\n    }\n    currentProgramPath.pushContainer(\n      \"body\",\n      effectDeclarator ? [\n        import_compiler17.types.variableDeclaration(\"const\", [effectDeclarator]),\n        signalDeclaration\n      ] : signalDeclaration\n    );\n  }\n}\nfunction writeRegisteredFns() {\n  const registeredFns = registeredFnsForProgram.get(currentProgramPath.node);\n  const statements = [];\n  if (registeredFns) {\n    for (const registeredFn of registeredFns) {\n      let fn;\n      const params = registeredFn.referencedBindings ? registeredFn.referencesScope ? [\n        scopeIdentifier,\n        import_compiler17.types.assignmentPattern(\n          createScopeReadPattern(\n            registeredFn.section,\n            registeredFn.referencedBindings\n          ),\n          scopeIdentifier\n        )\n      ] : [\n        createScopeReadPattern(\n          registeredFn.section,\n          registeredFn.referencedBindings\n        )\n      ] : registeredFn.referencesScope ? [scopeIdentifier] : void 0;\n      if (params) {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          params,\n          import_compiler17.types.blockStatement(toReturnedFunction(registeredFn.node))\n        );\n      } else if (registeredFn.node.type === \"FunctionDeclaration\" && registeredFn.node.id?.name === registeredFn.id) {\n        fn = registeredFn.node;\n      } else {\n        fn = import_compiler17.types.functionDeclaration(\n          import_compiler17.types.identifier(registeredFn.id),\n          registeredFn.node.params,\n          registeredFn.node.body.type === \"BlockStatement\" ? registeredFn.node.body : import_compiler17.types.blockStatement([import_compiler17.types.returnStatement(registeredFn.node.body)]),\n          registeredFn.node.generator,\n          registeredFn.node.async\n        );\n      }\n      statements.push(fn);\n    }\n    for (const registeredFn of registeredFns) {\n      statements.push(\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler17.types.stringLiteral(registeredFn.registerId),\n            import_compiler17.types.identifier(registeredFn.id)\n          )\n        )\n      );\n    }\n    for (const stmt of currentProgramPath.pushContainer(\"body\", statements)) {\n      stmt.skip();\n    }\n  }\n}\nfunction toReturnedFunction(rawFn) {\n  const fn = simplifyFunction(rawFn);\n  return fn.type === \"FunctionDeclaration\" ? [fn, import_compiler17.types.returnStatement(fn.id)] : [import_compiler17.types.returnStatement(fn)];\n}\nfunction sortSignals(a, b) {\n  const aReferencedBindings = getReferencedBindings(a);\n  const bReferencedBindings = getReferencedBindings(b);\n  for (let i = Math.max(aReferencedBindings.length, bReferencedBindings.length) - 1; i >= 0; i--) {\n    const diff = (bReferencedBindings[i] ?? -1) - (aReferencedBindings[i] ?? -1);\n    if (diff !== 0) return diff;\n  }\n  return 0;\n}\nfunction getReferencedBindings({ referencedBindings: reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reference) {\n  return (reference.type === 0 /* dom */ ? 1 : 0) * 1e4 + reference.id;\n}\nfunction addHTMLEffectCall(section, referencedBindings) {\n  addStatement(\"effect\", section, referencedBindings, void 0, false);\n}\nfunction writeHTMLResumeStatements(path5) {\n  const section = getSectionForBody(path5);\n  if (!section) return;\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  forEach(section.assignments, (assignment) => {\n    let currentSection = section;\n    while (currentSection !== assignment.section) {\n      getSerializedScopeProperties(currentSection).set(\n        import_compiler17.types.stringLiteral(\"_\"),\n        callRuntime(\n          \"ensureScopeWithId\",\n          getScopeIdIdentifier(currentSection = currentSection.parent)\n        )\n      );\n    }\n  });\n  forEach(section.closures, (closure) => {\n    if (isStatefulReferences(closure)) {\n      let currentSection = section;\n      while (currentSection !== closure.section) {\n        getSerializedScopeProperties(currentSection).set(\n          import_compiler17.types.stringLiteral(\"_\"),\n          callRuntime(\n            \"ensureScopeWithId\",\n            getScopeIdIdentifier(currentSection = currentSection.parent)\n          )\n        );\n      }\n      setForceResumeScope(closure.section);\n      const isImmediateOwner = section.parent?.id === closure.section.id;\n      const isDynamicClosure = !getClosureSignalBuilder(section) || !isImmediateOwner;\n      if (isDynamicClosure) {\n        path5.pushContainer(\n          \"body\",\n          import_compiler17.types.expressionStatement(\n            callRuntime(\n              \"writeEffect\",\n              scopeIdIdentifier,\n              import_compiler17.types.stringLiteral(\n                getResumeRegisterId(section, closure, \"subscriber\")\n              )\n            )\n          )\n        );\n      }\n    }\n  });\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].referencedBindings;\n      path5.pushContainer(\n        \"body\",\n        import_compiler17.types.expressionStatement(\n          callRuntime(\n            \"writeEffect\",\n            scopeIdIdentifier,\n            import_compiler17.types.stringLiteral(getResumeRegisterId(section, signalRefs))\n          )\n        )\n      );\n    }\n  }\n  const accessors = /* @__PURE__ */ new Set();\n  const additionalProperties = getSerializedScopeProperties(section);\n  const serializedProperties = [];\n  forEach(section.bindings, (binding) => {\n    if (binding.serialize && binding.type !== 0 /* dom */) {\n      const accessor = getScopeAccessorLiteral(binding);\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(accessor, getDeclaredBindingExpression(binding))\n      );\n      accessors.add(accessor.value);\n    }\n  });\n  for (const [key, value] of additionalProperties) {\n    if (!accessors.has(key.value)) {\n      serializedProperties.push(\n        import_compiler17.types.objectProperty(key, value, !import_compiler17.types.isLiteral(key))\n      );\n      accessors.add(key.value);\n    }\n  }\n  if (serializedProperties.length || forceResumeScope(section)) {\n    let writeScope2 = callRuntime(\n      \"writeScope\",\n      scopeIdIdentifier,\n      import_compiler17.types.objectExpression(serializedProperties)\n    );\n    if (!isOptimize()) {\n      let debugVars;\n      forEach(section.bindings, (binding) => {\n        let root = binding;\n        let access = \"\";\n        while (!root.loc && root.upstreamAlias) {\n          if (root.property !== void 0) {\n            access = toAccess(root.property) + access;\n          }\n          root = root.upstreamAlias;\n        }\n        if (root.loc) {\n          const locStr = import_compiler17.types.stringLiteral(\n            `${root.loc.start.line}:${root.loc.start.column + 1}`\n          );\n          (debugVars ||= []).push(\n            import_compiler17.types.objectProperty(\n              getScopeAccessorLiteral(binding),\n              root !== binding ? import_compiler17.types.arrayExpression([\n                import_compiler17.types.stringLiteral(root.name + access),\n                locStr\n              ]) : locStr\n            )\n          );\n        }\n      });\n      writeScope2 = callRuntime(\n        \"debug\",\n        writeScope2,\n        import_compiler17.types.stringLiteral(path5.hub.file.opts.filenameRelative),\n        section.loc && section.loc.start.line != null ? import_compiler17.types.stringLiteral(\n          `${section.loc.start.line}:${section.loc.start.column + 1}`\n        ) : import_compiler17.types.numericLiteral(0),\n        debugVars && import_compiler17.types.objectExpression(debugVars)\n      );\n    }\n    path5.pushContainer(\"body\", import_compiler17.types.expressionStatement(writeScope2));\n  }\n  const resumeClosestBranch2 = !section.isBranch && (section.hasAbortSignal || !!section.closures || !!find(section.bindings, (binding) => binding.type === 1 /* let */));\n  if (resumeClosestBranch2) {\n    path5.pushContainer(\n      \"body\",\n      import_compiler17.types.expressionStatement(\n        callRuntime(\"resumeClosestBranch\", scopeIdIdentifier)\n      )\n    );\n  }\n  const additionalStatements = getHTMLSectionStatements(section);\n  if (path5.get(\"body\").length || additionalStatements.length) {\n    path5.unshiftContainer(\"body\", [\n      import_compiler17.types.variableDeclaration(\"const\", [\n        import_compiler17.types.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n      ]),\n      ...additionalStatements\n    ]);\n  }\n  const returnIdentifier = getSectionReturnValueIdentifier(section);\n  if (returnIdentifier !== void 0) {\n    path5.pushContainer(\"body\", import_compiler17.types.returnStatement(returnIdentifier));\n  }\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\nfunction replaceRenderNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node) || replaceRegisteredFunctionNode(node);\n}\nfunction replaceEffectNode(node) {\n  return replaceAssignedNode(node) || replaceBindingReadNode(node);\n}\nfunction replaceBindingReadNode(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      return getReadReplacement(node);\n    }\n  }\n}\nfunction replaceAssignedNode(node) {\n  switch (node.type) {\n    case \"UpdateExpression\": {\n      const { extra } = node.argument;\n      if (isAssignedBindingExtra(extra)) {\n        const { buildAssignment } = getSignal(\n          extra.assignment.section,\n          extra.assignment\n        );\n        if (buildAssignment) {\n          const replacement = buildAssignment(\n            extra.section,\n            import_compiler17.types.binaryExpression(\n              node.operator === \"++\" ? \"+\" : \"-\",\n              node.argument,\n              import_compiler17.types.numericLiteral(1)\n            )\n          );\n          if (!node.prefix) {\n            return import_compiler17.types.sequenceExpression([replacement, node.argument]);\n          }\n          return replacement;\n        }\n      }\n      break;\n    }\n    case \"AssignmentExpression\":\n      switch (node.left.type) {\n        case \"Identifier\": {\n          const { extra } = node.left;\n          if (isAssignedBindingExtra(extra)) {\n            const { buildAssignment } = getSignal(\n              extra.assignment.section,\n              extra.assignment\n            );\n            if (buildAssignment) {\n              return buildAssignment(\n                extra.section,\n                node.operator === \"=\" ? node.right : import_compiler17.types.binaryExpression(\n                  node.operator.slice(\n                    0,\n                    -1\n                  ),\n                  node.left,\n                  node.right\n                )\n              );\n            }\n          }\n          break;\n        }\n        case \"ArrayPattern\":\n        case \"ObjectPattern\": {\n          let params;\n          let assignments;\n          forEachIdentifier(node.left, (id) => {\n            const { extra } = id;\n            if (isAssignedBindingExtra(extra)) {\n              const signal = getSignal(\n                extra.assignment.section,\n                extra.assignment\n              );\n              if (signal?.buildAssignment) {\n                id.name = currentProgramPath.scope.generateUid(id.name);\n                (params ||= []).push(import_compiler17.types.identifier(id.name));\n                (assignments ||= []).push(\n                  signal.buildAssignment(extra.section, import_compiler17.types.identifier(id.name))\n                );\n              }\n            }\n          });\n          if (params && assignments) {\n            const resultId = currentProgramPath.scope.generateUid(\"result\");\n            return import_compiler17.types.callExpression(\n              import_compiler17.types.arrowFunctionExpression(\n                [import_compiler17.types.identifier(resultId), ...params],\n                import_compiler17.types.sequenceExpression([\n                  import_compiler17.types.assignmentExpression(\n                    \"=\",\n                    node.left,\n                    import_compiler17.types.identifier(resultId)\n                  ),\n                  ...assignments,\n                  import_compiler17.types.identifier(resultId)\n                ])\n              ),\n              [node.right]\n            );\n          }\n          break;\n        }\n      }\n      break;\n  }\n}\nvar registeredFnsForProgram = /* @__PURE__ */ new WeakMap();\nfunction replaceRegisteredFunctionNode(node) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression(node);\n      return replacement && import_compiler17.types.objectProperty(node.key, replacement);\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression(node);\n    }\n    case \"FunctionDeclaration\": {\n      const replacement = getRegisteredFnExpression(node);\n      if (replacement) {\n        return import_compiler17.types.variableDeclaration(\"const\", [\n          import_compiler17.types.variableDeclarator(node.id, replacement)\n        ]);\n      }\n      break;\n    }\n  }\n}\nfunction getRegisteredFnExpression(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    const id = currentProgramPath.scope.generateUid(extra.name);\n    const referencesScope = extra.referencesScope;\n    const referencedBindings = extra.referencedBindingsInFunction;\n    let registedFns = registeredFnsForProgram.get(currentProgramPath.node);\n    if (!registedFns) {\n      registeredFnsForProgram.set(currentProgramPath.node, registedFns = []);\n    }\n    registedFns.push({\n      id,\n      node,\n      registerId: extra.registerId,\n      section: extra.section,\n      referencesScope,\n      referencedBindings\n    });\n    if (referencesScope || referencedBindings) {\n      return import_compiler17.types.callExpression(import_compiler17.types.identifier(id), [scopeIdentifier]);\n    } else {\n      return import_compiler17.types.identifier(id);\n    }\n  }\n}\n\n// src/translator/visitors/program/dom.ts\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSectionForBody(program);\n      const { walks, writes, setup } = getSectionMeta(section);\n      const domExports = program.node.extra.domExports;\n      const templateIdentifier = import_compiler18.types.identifier(domExports.template);\n      const walksIdentifier = import_compiler18.types.identifier(domExports.walks);\n      const setupIdentifier = import_compiler18.types.identifier(domExports.setup);\n      const paramsBinding = program.node.extra.binding;\n      const programParamsSignal = paramsBinding && bindingHasDownstreamExpressions(paramsBinding) ? initValue(paramsBinding) : void 0;\n      const styleFile = getStyleFile(program.hub.file);\n      if (styleFile) {\n        (0, import_babel_utils10.importDefault)(program.hub.file, styleFile);\n      }\n      forEachSectionReverse((childSection) => {\n        if (childSection !== section) {\n          const tagParamsSignal = childSection.params && initValue(childSection.params);\n          const { walks: walks2, writes: writes2, setup: setup2 } = getSectionMeta(childSection);\n          const identifier = import_compiler18.types.identifier(childSection.name);\n          const renderer = callRuntime(\n            getSectionParentIsOwner(childSection) ? \"createRenderer\" : \"createRendererWithOwner\",\n            writes2,\n            walks2,\n            setup2,\n            tagParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], tagParamsSignal.identifier)\n          );\n          writeSignals(childSection);\n          program.node.body.push(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                identifier,\n                !childSection.isBranch && isStatefulSection(childSection) ? callRuntime(\n                  \"register\",\n                  import_compiler18.types.stringLiteral(\n                    getResumeRegisterId(childSection, \"renderer\")\n                  ),\n                  renderer\n                ) : renderer\n              )\n            ])\n          );\n        }\n      });\n      writeSignals(section);\n      writeRegisteredFns();\n      if (!setup) {\n        program.node.body.unshift(\n          import_compiler18.types.exportNamedDeclaration(\n            import_compiler18.types.variableDeclaration(\"const\", [\n              import_compiler18.types.variableDeclarator(\n                setupIdentifier,\n                import_compiler18.types.arrowFunctionExpression([], import_compiler18.types.blockStatement([]))\n              )\n            ])\n          )\n        );\n      }\n      program.node.body.unshift(\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(\n              templateIdentifier,\n              writes || import_compiler18.types.stringLiteral(\"\")\n            )\n          ])\n        ),\n        import_compiler18.types.exportNamedDeclaration(\n          import_compiler18.types.variableDeclaration(\"const\", [\n            import_compiler18.types.variableDeclarator(walksIdentifier, walks || import_compiler18.types.stringLiteral(\"\"))\n          ])\n        )\n      );\n      program.node.body.push(\n        import_compiler18.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler18.types.stringLiteral(program.hub.file.metadata.marko.id),\n            templateIdentifier,\n            walksIdentifier,\n            setupIdentifier,\n            programParamsSignal?.identifier && import_compiler18.types.arrowFunctionExpression([], programParamsSignal.identifier)\n          )\n        )\n      );\n    }\n  }\n};\n\n// src/translator/visitors/program/html.ts\nvar import_compiler19 = require(\"@marko/compiler\");\n\n// src/translator/util/is-static.ts\nfunction isStatic(path5) {\n  return path5.isImportDeclaration() || path5.isExportDeclaration() || path5.isMarkoScriptlet({ static: true });\n}\n\n// src/translator/visitors/program/html.ts\nvar html_default = {\n  translate: {\n    exit(program) {\n      flushInto(program);\n      writeHTMLResumeStatements(program);\n      traverseReplace(program.node, \"body\", replaceNode);\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          if (child.node.target && child.node.target !== \"server\") {\n            child.remove();\n          } else {\n            child.replaceWithMultiple(child.node.body);\n          }\n        }\n      }\n      program.pushContainer(\"body\", [\n        import_compiler19.types.variableDeclaration(\"const\", [\n          import_compiler19.types.variableDeclarator(\n            htmlRendererIdentifier,\n            callRuntime(\n              \"createRenderer\",\n              import_compiler19.types.arrowFunctionExpression(\n                [import_compiler19.types.identifier(\"input\")],\n                import_compiler19.types.blockStatement(renderContent)\n              )\n            )\n          )\n        ]),\n        import_compiler19.types.exportDefaultDeclaration(\n          callRuntime(\n            \"createTemplate\",\n            import_compiler19.types.stringLiteral(program.hub.file.metadata.marko.id),\n            htmlRendererIdentifier\n          )\n        )\n      ]);\n    }\n  }\n};\nfunction replaceNode(node, container) {\n  return replaceBindingReadNode2(node) || replaceRegisteredFunctionNode2(node, container);\n}\nfunction replaceBindingReadNode2(node) {\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\": {\n      const { extra } = node;\n      if (extra && !(extra.read && !extra.read.binding.declared || extra.binding && !extra.binding.declared)) {\n        return getReadReplacement(node);\n      }\n    }\n  }\n}\nfunction replaceRegisteredFunctionNode2(node, container) {\n  switch (node.type) {\n    case \"ClassMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classProperty(node.key, replacement);\n    }\n    case \"ClassPrivateMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.classPrivateProperty(node.key, replacement);\n    }\n    case \"ObjectMethod\": {\n      const replacement = getRegisteredFnExpression2(node);\n      return replacement && import_compiler19.types.objectProperty(node.key, replacement);\n    }\n    case \"FunctionDeclaration\": {\n      const { extra } = node;\n      if (isRegisteredFnExtra(extra)) {\n        let registeredFnDeclarations = registeredFnDeclarationsByBody.get(\n          container\n        );\n        if (!registeredFnDeclarations) {\n          registeredFnDeclarationsByBody.set(\n            container,\n            registeredFnDeclarations = []\n          );\n        }\n        registeredFnDeclarations.push({\n          id: node.id.name,\n          registerId: extra.registerId\n        });\n      }\n      break;\n    }\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\": {\n      return getRegisteredFnExpression2(node);\n    }\n    case \"BlockStatement\":\n    case \"MarkoScriptlet\":\n      addRegisteredDeclarations(node.body);\n      break;\n  }\n}\nvar registeredFnDeclarationsByBody = /* @__PURE__ */ new WeakMap();\nfunction addRegisteredDeclarations(body) {\n  const registeredFnDeclarations = registeredFnDeclarationsByBody.get(body);\n  if (registeredFnDeclarations) {\n    for (const { id, registerId } of registeredFnDeclarations) {\n      body.push(\n        import_compiler19.types.expressionStatement(\n          callRuntime(\n            \"register\",\n            import_compiler19.types.identifier(id),\n            import_compiler19.types.stringLiteral(registerId)\n          )\n        )\n      );\n    }\n  }\n}\nfunction getRegisteredFnExpression2(node) {\n  const { extra } = node;\n  if (isRegisteredFnExtra(extra)) {\n    return callRuntime(\n      \"register\",\n      simplifyFunction(node),\n      import_compiler19.types.stringLiteral(extra.registerId),\n      (extra.referencedBindingsInFunction || extra.referencesScope) && getScopeIdIdentifier(extra.section)\n    );\n  }\n}\n\n// src/translator/visitors/program/index.ts\nvar currentProgramPath;\nvar cleanIdentifier;\nvar htmlRendererIdentifier;\nvar scopeIdentifier;\nfunction isScopeIdentifier(node) {\n  return node === scopeIdentifier;\n}\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      program.node.params = [import_compiler20.types.identifier(\"input\")];\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n      trackParamsReferences(program, 2 /* input */);\n      if (program.node.params[0]?.extra?.binding) {\n        program.node.params[0].extra.binding.nullable = false;\n      }\n      const { scope } = program;\n      (program.node.extra ??= {}).domExports = {\n        template: scope.generateUid(\"template_\"),\n        walks: scope.generateUid(\"walks_\"),\n        setup: scope.generateUid(\"setup_\"),\n        params: void 0,\n        // TODO look into recursive components with fine grained params.\n        closures: scope.generateUid(\"closures_\")\n      };\n    },\n    exit(program) {\n      finalizeReferences();\n      const {\n        scope,\n        node: { extra }\n      } = program;\n      if (extra.binding && bindingHasDownstreamExpressions(extra.binding)) {\n        extra.domExports.params = buildTemplateExports(extra.binding, scope);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      htmlRendererIdentifier = isOutputHTML() ? program.scope.generateUidIdentifier(\"renderer\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        const entryFile = program.hub.file;\n        const visitedFiles = /* @__PURE__ */ new Set([\n          (0, import_babel_utils11.resolveRelativePath)(entryFile, entryFile.opts.filename)\n        ]);\n        entry_builder_default.visit(entryFile, entryFile, function visitChild(resolved) {\n          if (!visitedFiles.has(resolved)) {\n            visitedFiles.add(resolved);\n            const file = (0, import_babel_utils11.loadFileForImport)(entryFile, resolved);\n            if (file) {\n              entry_builder_default.visit(\n                file,\n                entryFile,\n                (id) => visitChild(resolveRelativeToEntry(entryFile, file, id))\n              );\n            }\n          }\n        });\n        program.node.body = entry_builder_default.build(entryFile);\n        program.skip();\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      if (program.node.extra?.needsCompat) {\n        const compatFile = getCompatRuntimeFile();\n        const body = [void 0];\n        for (const child of program.node.body) {\n          if (child.type === \"ImportDeclaration\" && child.source.value === compatFile) {\n            body[0] = child;\n          } else {\n            body.push(child);\n          }\n        }\n        body[0] ??= import_compiler20.types.importDeclaration([], import_compiler20.types.stringLiteral(compatFile));\n        program.node.body = body;\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\nfunction resolveRelativeToEntry(entryFile, file, req) {\n  return file === entryFile ? (0, import_babel_utils11.resolveRelativePath)(file, req) : (0, import_babel_utils11.resolveRelativePath)(\n    entryFile,\n    req[0] === \".\" ? import_path2.default.join(file.opts.filename, \"..\", req) : req\n  );\n}\nfunction buildTemplateExports(binding, scope) {\n  const templateExport = {\n    id: binding.export ??= scope.generateUid(binding.name + \"_\"),\n    props: void 0\n  };\n  const { aliases, propertyAliases, downstreamExpressions } = binding;\n  if (!downstreamExpressions.size) {\n    templateExport.props = {};\n    for (const [property, alias] of propertyAliases) {\n      templateExport.props[property] = buildTemplateExports(alias, scope);\n    }\n    for (const alias of aliases) {\n      const exports2 = buildTemplateExports(alias, scope);\n      if (exports2.props) {\n        templateExport.props = { ...templateExport.props, ...exports2.props };\n      } else {\n        templateExport.props = void 0;\n        return templateExport;\n      }\n    }\n  }\n  return templateExport;\n}\n\n// src/translator/util/get-root.ts\nfunction getMarkoRoot(path5) {\n  let curPath = path5;\n  do\n    curPath = curPath.parentPath;\n  while (curPath && !isMarko(curPath));\n  return curPath;\n}\nfunction getExprRoot(path5) {\n  let curPath = path5;\n  while (!isMarko(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path5) {\n  let curPath = path5;\n  let fnPath;\n  if (curPath.isProgram()) return;\n  while (!isMarko(curPath)) {\n    if (isFunction(curPath)) {\n      fnPath = curPath;\n    } else {\n      switch (curPath.type) {\n        case \"CallExpression\":\n        case \"NewExpression\":\n          fnPath = void 0;\n          break;\n      }\n    }\n    curPath = curPath.parentPath;\n  }\n  return fnPath;\n}\nfunction isMarko(path5) {\n  switch (path5.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunction(path5) {\n  switch (path5.type) {\n    case \"FunctionDeclaration\":\n      return !path5.node.declare;\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ObjectMethod\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/util/with-previous-location.ts\nfunction withPreviousLocation(newNode, originalNode) {\n  newNode.start = originalNode.start;\n  newNode.loc = originalNode.loc;\n  newNode.end = originalNode.end;\n  return newNode;\n}\n\n// src/translator/util/references.ts\nvar [getBindings] = createProgramState(() => /* @__PURE__ */ new Set());\nvar [getNextBindingId, setNextBindingId] = createProgramState(() => 0);\nfunction createBinding(name2, type, section, upstreamAlias, upstreamExpression, property, loc = null, declared = false) {\n  const id = getNextBindingId();\n  const binding = {\n    id,\n    name: name2,\n    type,\n    loc,\n    section,\n    property,\n    declared,\n    excludeProperties: void 0,\n    serialize: false,\n    aliases: /* @__PURE__ */ new Set(),\n    propertyAliases: /* @__PURE__ */ new Map(),\n    upstreamAlias,\n    upstreamExpression,\n    downstreamExpressions: /* @__PURE__ */ new Set(),\n    export: void 0,\n    nullable: !upstreamExpression?.confident || upstreamExpression.computed == null\n  };\n  if (property) {\n    if (declared) upstreamAlias.nullable = false;\n    const propBinding = upstreamAlias.propertyAliases.get(property);\n    if (propBinding) {\n      binding.property = void 0;\n      binding.upstreamAlias = propBinding;\n      propBinding.aliases.add(binding);\n    } else {\n      upstreamAlias.propertyAliases.set(property, binding);\n    }\n  } else if (upstreamAlias) {\n    upstreamAlias.aliases.add(binding);\n  }\n  setNextBindingId(id + 1);\n  getBindings().add(binding);\n  return binding;\n}\nfunction trackVarReferences(tag, type, upstreamAlias, upstreamExpression) {\n  const tagVar = tag.node.var;\n  if (tagVar) {\n    const section = getOrCreateSection(tag);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    createBindingsAndTrackReferences(\n      tagVar,\n      type,\n      tag.scope,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    );\n  }\n}\nfunction trackParamsReferences(body, type, upstreamAlias, upstreamExpression) {\n  const params = body.node.params;\n  if (body.node.body.length && params.length) {\n    if (upstreamAlias && upstreamExpression) upstreamExpression.pruned = true;\n    const section = getOrCreateSection(body);\n    const canonicalUpstreamAlias = getCanonicalBinding(upstreamAlias);\n    const paramsBinding = canonicalUpstreamAlias || ((body.node.extra ??= {}).binding = createBinding(\n      currentProgramPath.scope.generateUid(\"params_\"),\n      type,\n      section,\n      canonicalUpstreamAlias,\n      upstreamExpression,\n      void 0\n    ));\n    section.params = paramsBinding;\n    for (let i = 0; i < params.length; i++) {\n      createBindingsAndTrackReferences(\n        params[i],\n        type,\n        body.scope,\n        section,\n        paramsBinding,\n        upstreamExpression,\n        i + \"\"\n      );\n    }\n  }\n}\nfunction trackReferencesForBinding(babelBinding) {\n  const { identifier, referencePaths, constantViolations } = babelBinding;\n  const binding = identifier.extra.binding;\n  for (const referencePath of referencePaths) {\n    trackReference(referencePath, binding);\n  }\n  for (const ref of constantViolations) {\n    if (ref.isUpdateExpression()) {\n      trackAssignment(ref.get(\"argument\"), binding);\n    } else if (ref.isAssignmentExpression()) {\n      trackAssignment(ref.get(\"left\"), binding);\n      if (ref.node.operator !== \"=\") {\n        const left = ref.get(\"left\");\n        if (left.isIdentifier()) {\n          trackReference(left, binding);\n        }\n      }\n    }\n  }\n}\nfunction trackAssignment(assignment, binding) {\n  const section = getOrCreateSection(assignment);\n  setReferencesScope(assignment);\n  forEachIdentifier(assignment.node, (id) => {\n    if (id.name === binding.name) {\n      const extra = id.extra ??= {};\n      section.assignments = bindingUtil.add(section.assignments, binding);\n      extra.assignment = binding;\n      extra.section = section;\n    }\n  });\n}\nfunction setReferencesScope(path5) {\n  const fnRoot = getFnRoot(path5);\n  if (fnRoot) {\n    (fnRoot.node.extra ??= {}).referencesScope = true;\n  }\n}\nfunction createBindingsAndTrackReferences(lVal, type, scope, section, upstreamAlias, upstreamExpression, property) {\n  switch (lVal.type) {\n    case \"Identifier\":\n      (lVal.extra ??= {}).binding = createBinding(\n        lVal.name,\n        type,\n        section,\n        upstreamAlias,\n        upstreamExpression,\n        property,\n        lVal.loc,\n        true\n      );\n      trackReferencesForBinding(scope.getBinding(lVal.name));\n      break;\n    case \"ObjectPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      for (const prop of lVal.properties) {\n        if (prop.type === \"RestElement\") {\n          createBindingsAndTrackReferences(\n            prop.argument,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            property\n          );\n        } else {\n          let key;\n          if (prop.key.type === \"Identifier\") {\n            key = prop.key.name;\n          } else if (prop.key.type === \"StringLiteral\") {\n            key = prop.key.value;\n          } else {\n            throw new Error(\"computed keys not supported in object pattern\");\n          }\n          createBindingsAndTrackReferences(\n            prop.value,\n            type,\n            scope,\n            section,\n            patternBinding,\n            void 0,\n            key\n          );\n        }\n      }\n      break;\n    }\n    case \"ArrayPattern\": {\n      const patternBinding = (property ? upstreamAlias.propertyAliases.get(property) : upstreamAlias) || ((lVal.extra ??= {}).binding = createBinding(\n        currentProgramPath.scope.generateUid(\"pattern_\"),\n        type,\n        section,\n        upstreamAlias,\n        void 0,\n        property,\n        lVal.loc\n      ));\n      let i = -1;\n      for (const element of lVal.elements) {\n        i++;\n        if (element) {\n          if (element.type === \"RestElement\") {\n            createBindingsAndTrackReferences(\n              element.argument,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              property\n            );\n          } else {\n            createBindingsAndTrackReferences(\n              element,\n              type,\n              scope,\n              section,\n              patternBinding,\n              void 0,\n              `${i}`\n            );\n          }\n        }\n      }\n      break;\n    }\n    case \"AssignmentPattern\":\n      createBindingsAndTrackReferences(\n        lVal.left,\n        type,\n        scope,\n        section,\n        upstreamAlias,\n        void 0,\n        property\n      );\n      break;\n  }\n}\nfunction trackReference(referencePath, binding) {\n  let root = referencePath;\n  let reference = binding;\n  let propPath = binding.name;\n  while (true) {\n    const { parent } = root;\n    if (!import_compiler21.types.isMemberExpression(parent)) break;\n    const prop = getMemberExpressionPropString(parent);\n    if (prop === void 0) break;\n    if (reference.propertyAliases.has(prop)) {\n      root = root.parentPath;\n      reference = reference.propertyAliases.get(prop);\n      propPath = reference.name;\n      continue;\n    }\n    if (root.parentPath.parentPath.isCallExpression() && !isEventOrChangeHandler(prop)) {\n      break;\n    }\n    root = root.parentPath;\n    reference = createBinding(\n      propPath += `_${prop.replace(/[^a-zA-Z0-9_$]/g, \"_\")}`,\n      reference.type,\n      reference.section,\n      reference,\n      void 0,\n      prop\n    );\n  }\n  const fnRoot = getFnRoot(root);\n  const exprRoot = getExprRoot(fnRoot || root);\n  const { section } = addReadToExpression(exprRoot, reference, root.node);\n  if (fnRoot) {\n    const readsByFn = getReadsByFunction();\n    const fnExtra = fnRoot.node.extra ??= {};\n    fnExtra.section = section;\n    readsByFn.set(\n      fnExtra,\n      push(readsByFn.get(fnExtra), {\n        binding: reference,\n        node: root.node\n      })\n    );\n  }\n}\nvar [getMergedReferences] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction mergeReferences(section, target, nodes) {\n  (target.extra ??= {}).section = section;\n  getMergedReferences().set(target, nodes);\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = bindingUtil.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeReferences() {\n  const bindings = getBindings();\n  const readsByExpression = getReadsByExpression();\n  const readsByFn = getReadsByFunction();\n  const mergedReferences = getMergedReferences();\n  if (mergedReferences.size) {\n    for (const [target, nodes] of mergedReferences) {\n      const targetExtra = target.extra;\n      let reads = readsByExpression.get(targetExtra);\n      let { isEffect } = targetExtra;\n      for (const node of nodes) {\n        const extra = node?.extra;\n        if (isReferencedExtra(extra)) {\n          isEffect ||= extra.isEffect;\n          const additionalReads = readsByExpression.get(extra);\n          if (additionalReads) {\n            reads = concat(reads, additionalReads);\n            readsByExpression.delete(extra);\n          }\n        }\n      }\n      readsByExpression.set(targetExtra, reads);\n      targetExtra.isEffect = isEffect;\n    }\n  }\n  const intersectionsBySection = /* @__PURE__ */ new Map();\n  for (const [expr, reads] of readsByExpression) {\n    if (isReferencedExtra(expr)) {\n      expr.referencedBindings = resolveReferencedBindings(\n        expr,\n        reads,\n        intersectionsBySection\n      );\n      forEach(expr.referencedBindings, (binding) => {\n        binding.downstreamExpressions.add(expr);\n      });\n    }\n  }\n  for (const [fn, reads] of readsByFn) {\n    fn.referencedBindingsInFunction = resolveReferencedBindings(\n      fn,\n      reads,\n      intersectionsBySection\n    );\n    forEach(fn.referencedBindingsInFunction, (binding) => {\n      binding.serialize = true;\n    });\n  }\n  for (const binding of bindings) {\n    if (binding.type !== 0 /* dom */ && !binding.upstreamAlias) {\n      pruneBinding(bindings, binding);\n    }\n  }\n  for (const binding of bindings) {\n    const { name: name2, section } = binding;\n    if (binding.type !== 0 /* dom */) {\n      if (find(section.bindings, ({ name: name3 }) => name3 === binding.name)) {\n        binding.name = currentProgramPath.scope.generateUid(name2);\n      }\n    }\n    section.bindings = bindingUtil.add(section.bindings, binding);\n    for (const {\n      referencedBindings,\n      isEffect,\n      section: section2\n    } of binding.downstreamExpressions) {\n      if (section2 !== binding.section) {\n        section2.closures = bindingUtil.add(section2.closures, binding);\n      }\n      if (isEffect) {\n        forEach(referencedBindings, (bindingReference) => {\n          bindingReference.serialize = true;\n        });\n      }\n    }\n  }\n  forEachSection((section) => {\n    const intersections = intersectionsBySection.get(section);\n    if (intersections) {\n      for (const intersection of intersections) {\n        const numReferences = intersection.length;\n        for (let i = 0; i < numReferences - 1; i++) {\n          for (let j = i + 1; j < numReferences; j++) {\n            const binding1 = intersection[i];\n            const binding2 = intersection[j];\n            const sources1 = getSourceBindings(binding1);\n            const sources2 = getSourceBindings(binding2);\n            if (!binding1.serialize && !isSuperset(sources1, sources2)) {\n              binding1.serialize = true;\n            }\n            if (!binding2.serialize && !isSuperset(sources2, sources1)) {\n              binding2.serialize = true;\n            }\n          }\n        }\n      }\n    }\n    forEach(section.closures, (binding) => {\n      if (!binding.serialize) {\n        let serialize = false;\n        const sourceSection = binding.section;\n        let currentSection = section;\n        while (currentSection !== sourceSection && !(serialize = !currentSection.upstreamExpression || isStatefulReferences(\n          currentSection.upstreamExpression.referencedBindings\n        ))) {\n          currentSection = currentSection.parent;\n        }\n        binding.serialize = serialize;\n      }\n    });\n  });\n  forEachSection(({ id, bindings: bindings2 }) => {\n    forEach(\n      filter(bindings2, ({ section }) => section.id === id),\n      (binding, i) => {\n        binding.id = i;\n      }\n    );\n  });\n  mergedReferences.clear();\n  readsByExpression.clear();\n  readsByFn.clear();\n}\nfunction isSuperset(set, subset) {\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getSourceBindings(binding) {\n  const derived = /* @__PURE__ */ new Set();\n  const sources = /* @__PURE__ */ new Set();\n  crawl(binding);\n  return sources;\n  function crawl(binding2) {\n    if (binding2.type === 4 /* derived */ || binding2.type === 3 /* param */) {\n      let alias;\n      let curBinding = binding2;\n      while (alias = curBinding.upstreamAlias) {\n        curBinding = alias;\n      }\n      if (curBinding.upstreamExpression) {\n        if (derived.has(curBinding)) return;\n        derived.add(curBinding);\n        forEach(curBinding.upstreamExpression.referencedBindings, crawl);\n      } else {\n        sources.add(curBinding);\n      }\n    } else {\n      sources.add(binding2);\n    }\n  }\n}\nvar bindingUtil = new Sorted(function compareBindings(a, b) {\n  return a.section.id - b.section.id || a.type !== b.type && (a.type === 0 /* dom */ || b.type === 0 /* dom */) ? a.type - b.type || a.id - b.id : a.id - b.id;\n});\nvar [getReadsByExpression] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nvar [getReadsByFunction] = createProgramState(\n  () => /* @__PURE__ */ new Map()\n);\nfunction addReadToExpression(path5, binding, node) {\n  const exprExtra = path5.node.extra ??= {};\n  const readsByExpression = getReadsByExpression();\n  exprExtra.section = getOrCreateSection(path5);\n  readsByExpression.set(\n    exprExtra,\n    push(readsByExpression.get(exprExtra), { binding, node })\n  );\n  return exprExtra;\n}\nfunction dropReferences(node) {\n  if (Array.isArray(node)) {\n    for (const item of node) {\n      (item.extra ??= {}).pruned = true;\n    }\n  } else {\n    (node.extra ??= {}).pruned = true;\n  }\n}\nfunction getCanonicalBinding(binding) {\n  return binding && (binding.property ? binding : binding.upstreamAlias || binding);\n}\nfunction getAllTagReferenceNodes(tag, referenceNodes = []) {\n  if (tag.arguments) {\n    for (const arg of tag.arguments) {\n      referenceNodes.push(arg);\n    }\n  }\n  for (const attr2 of tag.attributes) {\n    referenceNodes.push(attr2.value);\n  }\n  for (const child of tag.body.attributeTags ? tag.body.body : tag.attributeTags) {\n    switch (child.type) {\n      case \"MarkoTag\":\n        getAllTagReferenceNodes(child, referenceNodes);\n        break;\n      case \"MarkoScriptlet\":\n        for (const statement of child.body) {\n          referenceNodes.push(statement);\n        }\n        break;\n    }\n  }\n  return referenceNodes;\n}\nfunction getScopeAccessorLiteral(binding) {\n  if (isOptimize()) {\n    return import_compiler21.types.numericLiteral(binding.id);\n  }\n  return import_compiler21.types.stringLiteral(\n    binding.name + (binding.type === 0 /* dom */ ? `/${binding.id}` : \"\")\n  );\n}\nfunction getReadReplacement(node) {\n  const { extra } = node;\n  if (!extra) return;\n  let { binding, read } = extra;\n  let replacement;\n  if (read) {\n    if (read.props === void 0) {\n      binding = read.binding;\n      read = void 0;\n    } else {\n      binding = void 0;\n    }\n  }\n  if (binding) {\n    if (node.type === \"Identifier\") {\n      if (binding.name !== node.name) {\n        node.name = binding.name;\n      }\n    } else {\n      replacement = import_compiler21.types.identifier(binding.name);\n    }\n  } else if (read) {\n    replacement = toMemberExpression(\n      import_compiler21.types.identifier(read.binding.name),\n      Array.isArray(read.props) ? read.props[0] : read.props\n    );\n    if (Array.isArray(read.props)) {\n      for (let i = 1; i < read.props.length; i++) {\n        replacement = toMemberExpression(replacement, read.props[i]);\n      }\n    }\n  }\n  return replacement && withPreviousLocation(replacement, node);\n}\nfunction pruneBinding(bindings, binding) {\n  let shouldPrune = !binding.downstreamExpressions.size;\n  for (const alias of binding.aliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.aliases.delete(alias);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  for (const [key, alias] of binding.propertyAliases) {\n    if (pruneBinding(bindings, alias)) {\n      binding.propertyAliases.delete(key);\n    } else {\n      shouldPrune = false;\n    }\n  }\n  if (shouldPrune) {\n    bindings.delete(binding);\n  }\n  return shouldPrune;\n}\nfunction resolveReferencedBindings(expr, reads, intersectionsBySection) {\n  let referencedBindings;\n  if (Array.isArray(reads)) {\n    for (const read of reads) {\n      let { binding } = read;\n      if (read.node) {\n        const exprReference = (read.node.extra ??= {}).read ??= resolveExpressionReference(reads, binding, void 0);\n        ({ binding } = (read.node.extra ??= {}).read = exprReference);\n      }\n      referencedBindings = bindingUtil.add(referencedBindings, binding);\n    }\n  } else if (reads) {\n    if (reads.node) {\n      (reads.node.extra ??= {}).read = createRead(reads.binding, void 0);\n    }\n    referencedBindings = reads.binding;\n  }\n  if (Array.isArray(referencedBindings)) {\n    const intersections = intersectionsBySection.get(expr.section) || [];\n    const intersection = findSorted(\n      compareIntersections,\n      intersections,\n      referencedBindings\n    );\n    if (intersection) {\n      referencedBindings = intersection;\n    } else {\n      intersectionsBySection.set(\n        expr.section,\n        addSorted(compareIntersections, intersections, referencedBindings)\n      );\n    }\n  }\n  return referencedBindings;\n}\nfunction resolveExpressionReference(reads, readBinding, readProps) {\n  const { upstreamAlias } = readBinding;\n  if (upstreamAlias && Array.isArray(reads)) {\n    const prop = getCanonicalProperty(readBinding);\n    const aliasProps = prop === void 0 ? readProps : push(readProps, prop);\n    for (const { binding } of reads) {\n      if (binding !== readBinding) {\n        let alias = upstreamAlias;\n        while (alias) {\n          if (binding === alias) {\n            return resolveExpressionReference(reads, alias, aliasProps);\n          }\n          alias = alias.upstreamAlias;\n        }\n      }\n    }\n  }\n  return createRead(readBinding, readProps);\n}\nfunction getCanonicalProperty(binding) {\n  return binding.property ?? binding.upstreamAlias?.property;\n}\nfunction createRead(binding, props) {\n  return { binding, props };\n}\nfunction getMemberExpressionPropString(expr) {\n  switch (expr.property.type) {\n    case \"StringLiteral\":\n      return expr.property.value;\n    case \"NumericLiteral\":\n      return \"\" + expr.property.value;\n    case \"Identifier\":\n      if (expr.computed) return;\n      return expr.property.name;\n  }\n}\nfunction isEventOrChangeHandler(prop) {\n  return /^on[-A-Z][a-zA-Z0-9_$]|[a-zA-Z_$][a-zA-Z0-9_$]*Change$/.test(prop);\n}\nfunction isReferencedExtra(extra) {\n  return !!(extra && !extra.pruned && extra.section);\n}\nfunction isAssignedBindingExtra(extra) {\n  return isReferencedExtra(extra) && extra.assignment !== void 0;\n}\nfunction isRegisteredFnExtra(extra) {\n  return isReferencedExtra(extra) && extra.registerId !== void 0;\n}\n\n// src/translator/util/is-stateful.ts\nfunction isStatefulReferences(referencedBindings) {\n  if (referencedBindings) {\n    if (Array.isArray(referencedBindings)) {\n      for (const ref of referencedBindings) {\n        if (isStatefulBinding(ref)) {\n          return true;\n        }\n      }\n    } else {\n      return isStatefulBinding(referencedBindings);\n    }\n  }\n  return false;\n}\nfunction isStatefulBinding(binding) {\n  switch (binding.type) {\n    case 1 /* let */:\n    case 2 /* input */:\n      return true;\n    default:\n      return binding.upstreamAlias ? isStatefulBinding(binding.upstreamAlias) : !binding.upstreamExpression || isStatefulReferences(binding.upstreamExpression.referencedBindings);\n  }\n}\n\n// src/translator/core/await.ts\nvar await_default = {\n  analyze(tag) {\n    (0, import_babel_utils12.assertNoVar)(tag);\n    (0, import_babel_utils12.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    (0, import_babel_utils12.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler22.types.isMarkoAttribute(valueAttr) || valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports the `value` attribute.\"\n      );\n    }\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `await` tag requires body content.\");\n    }\n    if (node.body.params.length && (node.body.params.length > 1 || import_compiler22.types.isSpreadElement(node.body.params[0]))) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `await` tag only supports a single parameter.\"\n      );\n    }\n    getOrCreateSection(tag);\n    trackParamsReferences(\n      tag.get(\"body\"),\n      4 /* derived */,\n      void 0,\n      evaluate(valueAttr.value)\n    );\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const { node } = tag;\n        const [valueAttr] = node.attributes;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isStatefulReferences(valueAttr.extra?.referencedBindings) || checkStatefulClosures(bodySection, true)) {\n          setForceResumeScope(bodySection);\n        }\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.replaceWith(\n          import_compiler22.types.expressionStatement(\n            callRuntime(\n              \"fork\",\n              valueAttr.value,\n              import_compiler22.types.arrowFunctionExpression(\n                node.body.params,\n                toFirstExpressionOrBlock(node.body.body)\n              )\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to consume asynchronous an data.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#await\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/await.d.marko\"\n};\n\n// src/translator/core/client.ts\nvar import_compiler23 = require(\"@marko/compiler\");\nvar import_babel_utils13 = require(\"@marko/compiler/babel-utils\");\nvar client_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^client\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils13.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler23.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler23.types.markoScriptlet(body, true, \"client\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"client <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the client.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#client-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/const.ts\nvar import_compiler25 = require(\"@marko/compiler\");\nvar import_babel_utils14 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/translate-var.ts\nvar import_compiler24 = require(\"@marko/compiler\");\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.insertBefore(\n    import_compiler24.types.variableDeclaration(kind, [import_compiler24.types.variableDeclarator(tagVar, initialValue)])\n  );\n}\n\n// src/translator/core/const.ts\nvar const_default = {\n  analyze(tag) {\n    (0, import_babel_utils14.assertNoArgs)(tag);\n    (0, import_babel_utils14.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const [valueAttr] = node.attributes;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a tag variable.\");\n    }\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `const` tag requires a value.\");\n    }\n    if (node.attributes.length > 1 || !import_compiler25.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `const` tag only supports the `value` attribute.\"\n      );\n    }\n    const upstreamAlias = import_compiler25.types.isIdentifier(valueAttr.value) ? tag.scope.getBinding(valueAttr.value.name)?.identifier.extra?.binding : void 0;\n    trackVarReferences(\n      tag,\n      4 /* derived */,\n      upstreamAlias,\n      evaluate(valueAttr.value)\n      // TODO could perform a more extensive \"nullable\" check.\n    );\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      const { value } = valueAttr;\n      if (isOutputDOM()) {\n        const section = getSection(tag);\n        const varBinding = node.var.extra?.binding;\n        if (varBinding && !varBinding.upstreamAlias) {\n          const derivation = initValue(varBinding);\n          addValue(section, value.extra?.referencedBindings, derivation, value);\n        }\n      } else {\n        translateVar(tag, value);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/const.d.marko\"\n};\n\n// src/translator/core/debug.ts\nvar import_compiler26 = require(\"@marko/compiler\");\nvar import_babel_utils15 = require(\"@marko/compiler/babel-utils\");\nvar debug_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils15.assertNoVar)(tag);\n    (0, import_babel_utils15.assertNoArgs)(tag);\n    (0, import_babel_utils15.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (tag.node.attributes.length > 1 || tag.node.attributes.length === 1 && (!import_compiler26.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\")) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `debug` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const referencedBindings = valueAttr?.value.extra?.referencedBindings;\n      const statement = withPreviousLocation(import_compiler26.types.debuggerStatement(), tag.node);\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Debug on value change.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#debug\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/debug.d.marko\"\n};\n\n// src/translator/core/define.ts\nvar import_compiler32 = require(\"@marko/compiler\");\nvar import_babel_utils21 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/nested-attribute-tags.ts\nvar import_compiler27 = require(\"@marko/compiler\");\nvar import_babel_utils16 = require(\"@marko/compiler/babel-utils\");\nvar attrTagToIdentifierLookup = /* @__PURE__ */ new WeakMap();\nfunction getAttrTagIdentifier(meta) {\n  let name2 = attrTagToIdentifierLookup.get(meta);\n  if (!name2) {\n    name2 = currentProgramPath.scope.generateUid(meta.name);\n    attrTagToIdentifierLookup.set(meta, name2);\n  }\n  return import_compiler27.types.identifier(name2);\n}\nfunction analyzeAttributeTags(tag) {\n  if (tag.node.extra?.attributeTags) return tag.node.extra.attributeTags;\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  if (!attrTags2.length) return;\n  const tagExtra = tag.node.extra ??= {};\n  const lookup = tagExtra.attributeTags = {};\n  const attrTagNodesByName = {};\n  const sampleAttrTagsForControlFlow = /* @__PURE__ */ new Map();\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const name2 = getTagName(child);\n        lookup[name2] ||= createAttrTagMeta(name2, [name2]);\n        (attrTagNodesByName[name2] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        const isRepeated = (0, import_babel_utils16.isLoopTag)(child);\n        let curGroup;\n        for (const name2 of crawlAttrTags(child, attrTagNodesByName)) {\n          const oldMeta = lookup[name2];\n          if (oldMeta) {\n            if (!curGroup) {\n              curGroup = oldMeta.group;\n            } else if (curGroup !== oldMeta.group) {\n              for (const name3 of oldMeta.group) {\n                lookup[name3].group = curGroup;\n                curGroup.push(name3);\n              }\n            }\n          }\n          let attrTagMeta = lookup[name2];\n          if (!attrTagMeta) {\n            attrTagMeta = lookup[name2] = createAttrTagMeta(name2, []);\n            curGroup = attrTagMeta.group;\n            curGroup.push(name2);\n          }\n          attrTagMeta.dynamic = true;\n          if (isRepeated) {\n            attrTagMeta.repeated = true;\n          }\n          sampleAttrTagsForControlFlow.set(child, name2);\n        }\n      }\n    }\n  }\n  for (const [controlFlowTag, sampleAttrName] of sampleAttrTagsForControlFlow) {\n    (controlFlowTag.node.extra ??= {}).attributeTagGroup = lookup[sampleAttrName].group;\n  }\n  for (const name2 in attrTagNodesByName) {\n    const attrTagMeta = lookup[name2];\n    if (!attrTagMeta.repeated) {\n      const attrTagNodes = attrTagNodesByName[name2];\n      if (attrTagNodes.length > 1) {\n        attrTagMeta.repeated = !attrTagMeta.dynamic || hasRepeatedDynamicAttrTags(attrTagNodes);\n      }\n    }\n  }\n  return lookup;\n}\nfunction createAttrTagMeta(name2, group) {\n  return {\n    name: name2.slice(1),\n    dynamic: false,\n    repeated: false,\n    group\n  };\n}\nfunction crawlAttrTags(tag, attrTagNodesByName, attrTagNames = /* @__PURE__ */ new Set()) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (const child of attrTags2) {\n    if (child.isMarkoTag()) {\n      if ((0, import_babel_utils16.isAttributeTag)(child)) {\n        const tagName = getTagName(child);\n        attrTagNames.add(tagName);\n        (attrTagNodesByName[tagName] ||= []).push(child);\n        analyzeAttributeTags(child);\n      } else {\n        crawlAttrTags(child, attrTagNodesByName, attrTagNames);\n      }\n    }\n  }\n  return attrTagNames;\n}\nfunction hasRepeatedDynamicAttrTags(attrTags2) {\n  let conditionRoot;\n  const seenBranches = /* @__PURE__ */ new Set();\n  for (const attrTag2 of attrTags2) {\n    const parentTag = getParentTag(attrTag2);\n    if (seenBranches.has(parentTag) || !isConditionTag(parentTag)) {\n      return true;\n    }\n    const curConditionRoot = getConditionRoot(parentTag);\n    if (curConditionRoot && curConditionRoot !== (conditionRoot ||= curConditionRoot)) {\n      return true;\n    }\n    seenBranches.add(parentTag);\n  }\n  return false;\n}\nfunction getConditionRoot(tag) {\n  if (getTagName(tag) === \"if\") return tag;\n  let prev = tag.getPrevSibling();\n  while (prev.node) {\n    if (prev.isMarkoTag() && getTagName(prev) === \"if\") {\n      return prev;\n    }\n    prev = prev.getPrevSibling();\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar import_compiler31 = require(\"@marko/compiler\");\nvar import_babel_utils20 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/core/for.ts\nvar import_compiler30 = require(\"@marko/compiler\");\nvar import_babel_utils19 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/is-only-child-in-parent.ts\nvar import_compiler29 = require(\"@marko/compiler\");\nvar import_babel_utils18 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/native-tag.ts\nvar import_compiler28 = require(\"@marko/compiler\");\nvar import_babel_utils17 = require(\"@marko/compiler/babel-utils\");\nvar kNativeTagBinding = Symbol(\"native tag binding\");\nvar kSerializeMarker = Symbol(\"serialize marker\");\nvar kGetterId = Symbol(\"node getter id\");\nvar htmlSelectArgs = /* @__PURE__ */ new WeakMap();\nfunction assertExclusiveControllableGroups(tag, attrs2) {\n  const exclusiveGroups = [\n    attrs2.open || attrs2.openChange,\n    attrs2.checked || attrs2.checkedChange,\n    attrs2.checkedValue || attrs2.checkedValueChange,\n    attrs2.valueChange\n  ].filter(Boolean);\n  if (exclusiveGroups.length > 1) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The attributes ${exclusiveGroups.map((attr2) => `\"${attr2.name}\"`).join(\", \")} are mutually exclusive.`\n    );\n  }\n}\nfunction getRelatedControllable(tagName, attrs2) {\n  switch (tagName) {\n    case \"input\":\n      if (attrs2.checked || attrs2.checkedChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_checked\",\n          attrs: [attrs2.checked, attrs2.checkedChange]\n        };\n      }\n      if (attrs2.checkedValue || attrs2.checkedValueChange) {\n        return {\n          special: true,\n          helper: \"controllable_input_checkedValue\",\n          attrs: [attrs2.checkedValue, attrs2.checkedValueChange, attrs2.value]\n        };\n      }\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: false,\n          helper: \"controllable_input_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"select\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_select_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"textarea\":\n      if (attrs2.value || attrs2.valueChange) {\n        return {\n          special: true,\n          helper: \"controllable_textarea_value\",\n          attrs: [attrs2.value, attrs2.valueChange]\n        };\n      }\n      break;\n    case \"details\":\n    case \"dialog\":\n      if (attrs2.open || attrs2.openChange) {\n        return {\n          special: false,\n          helper: \"controllable_detailsOrDialog_open\",\n          attrs: [attrs2.open, attrs2.openChange]\n        };\n      }\n      break;\n  }\n}\nvar native_tag_default = {\n  transform: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      if (tagName === \"textarea\" && tag.node.body.body.length) {\n        const parts = [];\n        for (const child of tag.node.body.body) {\n          if (child.type === \"MarkoText\" || child.type === \"MarkoPlaceholder\" && child.escape) {\n            parts.push(child.value);\n          } else {\n            throw tag.hub.file.hub.buildError(\n              child,\n              \"Unexpected content in textarea, only text and placeholders are supported.\",\n              SyntaxError\n            );\n          }\n        }\n        tag.node.attributes.push(\n          import_compiler28.types.markoAttribute(\n            \"value\",\n            normalizeStringExpression(parts) || buildUndefined()\n          )\n        );\n        tag.node.body.body = [];\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils17.assertNoArgs)(tag);\n      (0, import_babel_utils17.assertNoParams)(tag);\n      (0, import_babel_utils17.assertNoAttributeTags)(tag);\n      const { node } = tag;\n      if (node.var && !import_compiler28.types.isIdentifier(node.var)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"Tag variables on native elements cannot be destructured.\"\n        );\n      }\n      const tagName = getTagName(tag);\n      const section = getOrCreateSection(tag);\n      let hasEventHandlers = false;\n      let hasDynamicAttributes = false;\n      const seen = {};\n      const { attributes } = tag.node;\n      let relatedControllable;\n      let spreadReferenceNodes;\n      for (let i = attributes.length; i--; ) {\n        const attr2 = attributes[i];\n        if (import_compiler28.types.isMarkoAttribute(attr2)) {\n          if (seen[attr2.name]) {\n            dropReferences(attr2.value);\n            continue;\n          }\n          seen[attr2.name] = attr2;\n          if (isEventHandler(attr2.name) || isChangeHandler(attr2.name)) {\n            (attr2.value.extra ??= {}).isEffect = true;\n            hasEventHandlers = true;\n          } else if (!evaluate(attr2.value).confident) {\n            hasDynamicAttributes = true;\n          }\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          hasEventHandlers = true;\n          hasDynamicAttributes = true;\n          (attr2.value.extra ??= {}).isEffect = true;\n        }\n        if (spreadReferenceNodes) {\n          spreadReferenceNodes.push(attr2.value);\n        } else if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n          spreadReferenceNodes = [attr2.value];\n          relatedControllable = getRelatedControllable(tagName, seen);\n        }\n      }\n      assertExclusiveControllableGroups(tag, seen);\n      if (spreadReferenceNodes) {\n        if (relatedControllable && !relatedControllable.attrs.every(Boolean)) {\n          for (const attr2 of relatedControllable.attrs) {\n            if (attr2) {\n              spreadReferenceNodes.push(attr2.value);\n            }\n          }\n          relatedControllable = void 0;\n        }\n        mergeReferences(section, tag.node, spreadReferenceNodes);\n      } else {\n        relatedControllable = getRelatedControllable(tagName, seen);\n      }\n      if (relatedControllable) {\n        mergeReferences(\n          section,\n          relatedControllable.attrs.find(Boolean).value,\n          relatedControllable.attrs.map((it) => it?.value)\n        );\n      }\n      if (node.var || hasEventHandlers || hasDynamicAttributes) {\n        currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n        const tagName2 = node.name.type === \"StringLiteral\" ? node.name.value : import_compiler28.types.toIdentifier(tag.get(\"name\"));\n        const tagExtra = node.extra ??= {};\n        const bindingName = \"#\" + tagName2;\n        if (hasEventHandlers || node.var) {\n          tagExtra[kSerializeMarker] = true;\n        }\n        tagExtra[kNativeTagBinding] = createBinding(\n          bindingName,\n          0 /* dom */,\n          section\n        );\n        if (node.var) {\n          for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n            setReferencesScope(ref);\n            if (!isInvokedFunction(ref)) {\n              tagExtra[kGetterId] = getRegisterUID(section, bindingName);\n              break;\n            }\n          }\n        }\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagName = getTagName(tag);\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const name2 = tag.get(\"name\");\n      const tagDef = (0, import_babel_utils17.getTagDef)(tag);\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        const getterId = extra[kGetterId];\n        if (isHTML) {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          for (const reference of references) {\n            let currentSection = getSection(reference);\n            while (currentSection !== section && currentSection.parent) {\n              getSerializedScopeProperties(currentSection).set(\n                import_compiler28.types.stringLiteral(\"_\"),\n                callRuntime(\n                  \"ensureScopeWithId\",\n                  getScopeIdIdentifier(\n                    currentSection = currentSection.parent\n                  )\n                )\n              );\n            }\n          }\n          setForceResumeScope(section);\n          translateVar(\n            tag,\n            callRuntime(\n              \"nodeRef\",\n              getterId && getScopeIdIdentifier(section),\n              getterId && import_compiler28.types.stringLiteral(getterId)\n            )\n          );\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let getterFnIdentifier;\n          if (getterId) {\n            getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n              `get_${varName}`\n            );\n            currentProgramPath.pushContainer(\n              \"body\",\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(\n                  getterFnIdentifier,\n                  callRuntime(\n                    \"nodeRef\",\n                    import_compiler28.types.stringLiteral(getterId),\n                    getScopeAccessorLiteral(nodeRef2)\n                  )\n                )\n              ])\n            );\n          }\n          for (const reference of references) {\n            const referenceSection = getSection(reference);\n            if (isInvokedFunction(reference)) {\n              reference.parentPath.replaceWith(\n                import_compiler28.types.expressionStatement(\n                  createScopeReadExpression(referenceSection, nodeRef2)\n                )\n              );\n            } else if (getterFnIdentifier) {\n              reference.replaceWith(\n                import_compiler28.types.callExpression(getterFnIdentifier, [\n                  getScopeExpression(referenceSection, getSection(tag))\n                ])\n              );\n            }\n          }\n        }\n      }\n      let visitAccessor;\n      if (nodeRef2) {\n        visitAccessor = getScopeAccessorLiteral(nodeRef2);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name2.node}`;\n      const usedAttrs = getUsedAttrs(tagName, tag.node);\n      const { staticAttrs, staticControllable, skipExpression } = usedAttrs;\n      let { spreadExpression } = usedAttrs;\n      if (staticControllable) {\n        const { helper, attrs: attrs2 } = staticControllable;\n        const firstAttr = attrs2.find(Boolean);\n        const referencedBindings = firstAttr.value.extra?.referencedBindings;\n        const values = attrs2.map((attr2) => attr2?.value);\n        if (isHTML) {\n          if (tagName !== \"select\" && tagName !== \"textarea\") {\n            write2`${callRuntime(helper, getScopeIdIdentifier(section), visitAccessor, ...values)}`;\n          }\n          addHTMLEffectCall(section, void 0);\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(helper, scopeIdentifier, visitAccessor, ...values)\n            )\n          );\n          addStatement(\n            \"effect\",\n            section,\n            void 0,\n            import_compiler28.types.expressionStatement(\n              callRuntime(`${helper}_effect`, scopeIdentifier, visitAccessor)\n            )\n          );\n        }\n      }\n      let writeAtStartOfBody;\n      if (isHTML) {\n        if (tagName === \"select\") {\n          if (staticControllable) {\n            htmlSelectArgs.set(tag.node, {\n              value: staticControllable.attrs[0]?.value || buildUndefined(),\n              valueChange: staticControllable.attrs[1]?.value || buildUndefined()\n            });\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"select_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            htmlSelectArgs.set(tag.node, {\n              value: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"value\")\n              ),\n              valueChange: import_compiler28.types.memberExpression(\n                spreadIdentifier,\n                import_compiler28.types.identifier(\"valueChange\")\n              )\n            });\n            spreadExpression = spreadIdentifier;\n          }\n        } else if (tagName === \"textarea\") {\n          let value;\n          let valueChange;\n          if (staticControllable) {\n            value = staticControllable.attrs[0]?.value;\n            valueChange = staticControllable.attrs[1]?.value;\n          } else if (spreadExpression) {\n            const spreadIdentifier = tag.scope.generateUidIdentifier(\"textarea_input\");\n            tag.insertBefore(\n              import_compiler28.types.variableDeclaration(\"const\", [\n                import_compiler28.types.variableDeclarator(spreadIdentifier, spreadExpression)\n              ])\n            );\n            value = import_compiler28.types.memberExpression(spreadIdentifier, import_compiler28.types.identifier(\"value\"));\n            valueChange = import_compiler28.types.memberExpression(\n              spreadIdentifier,\n              import_compiler28.types.identifier(\"valueChange\")\n            );\n            spreadExpression = spreadIdentifier;\n          }\n          if (value || valueChange) {\n            writeAtStartOfBody = callRuntime(\n              \"controllable_textarea_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              value,\n              valueChange\n            );\n          }\n        }\n      }\n      for (const attr2 of staticAttrs) {\n        const { name: name3, value } = attr2;\n        const { confident, computed } = value.extra || {};\n        const valueReferences = value.extra?.referencedBindings;\n        if (isHTML && tagName === \"option\" && name3 === \"value\") {\n          write2`${callRuntime(\"optionValueAttr\", value)}`;\n          continue;\n        }\n        switch (name3) {\n          case \"class\":\n          case \"style\": {\n            const helper = `${name3}Attr`;\n            if (confident) {\n              write2`${getHTMLRuntime()[helper](computed)}`;\n            } else if (isHTML) {\n              write2`${callRuntime(helper, value)}`;\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    helper,\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n          }\n          default:\n            if (confident) {\n              write2`${getHTMLRuntime().attr(name3, computed)}`;\n            } else if (isHTML) {\n              if (isEventHandler(name3)) {\n                addHTMLEffectCall(section, valueReferences);\n              } else {\n                write2`${callRuntime(\"attr\", import_compiler28.types.stringLiteral(name3), value)}`;\n              }\n            } else if (isEventHandler(name3)) {\n              addStatement(\n                \"effect\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"on\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(getEventHandlerName(name3)),\n                    value\n                  )\n                )\n              );\n            } else {\n              addStatement(\n                \"render\",\n                section,\n                valueReferences,\n                import_compiler28.types.expressionStatement(\n                  callRuntime(\n                    \"attr\",\n                    import_compiler28.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                    import_compiler28.types.stringLiteral(name3),\n                    value\n                  )\n                )\n              );\n            }\n            break;\n        }\n      }\n      if (spreadExpression) {\n        if (isHTML) {\n          addHTMLEffectCall(section, extra.referencedBindings);\n          if (skipExpression) {\n            write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          } else {\n            write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), name2.node)}`;\n          }\n        } else {\n          if (skipExpression) {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"partialAttrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression,\n                  skipExpression\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              extra.referencedBindings,\n              import_compiler28.types.expressionStatement(\n                callRuntime(\n                  \"attrs\",\n                  scopeIdentifier,\n                  visitAccessor,\n                  spreadExpression\n                )\n              )\n            );\n          }\n          addStatement(\n            \"effect\",\n            section,\n            extra.referencedBindings,\n            import_compiler28.types.expressionStatement(\n              callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n            ),\n            false\n          );\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(import_compiler28.types.ifStatement(name2.node, consumeHTML(tag)))[0].skip();\n      }\n      if (writeAtStartOfBody) {\n        write2`${writeAtStartOfBody}`;\n      }\n      enter2(tag);\n    },\n    exit(tag) {\n      const extra = tag.node.extra;\n      const nodeRef2 = extra[kNativeTagBinding];\n      const isHTML = isOutputHTML();\n      const openTagOnly = (0, import_babel_utils17.getTagDef)(tag)?.parseOptions?.openTagOnly;\n      const selectArgs = isHTML && htmlSelectArgs.get(tag.node);\n      const tagName = getTagName(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      if (selectArgs) {\n        writeTo(tag)`</${tag.node.name}>`;\n        flushInto(tag);\n        tag.insertBefore(\n          import_compiler28.types.expressionStatement(\n            callRuntime(\n              \"controllable_select_value\",\n              getScopeIdIdentifier(getSection(tag)),\n              getScopeAccessorLiteral(nodeRef2),\n              selectArgs.value,\n              selectArgs.valueChange,\n              import_compiler28.types.arrowFunctionExpression(\n                [],\n                import_compiler28.types.blockStatement(tag.node.body.body)\n              )\n            )\n          )\n        );\n      } else {\n        tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      }\n      if (!openTagOnly && !selectArgs) {\n        writeTo(\n          tag,\n          isHTML && (tagName === \"html\" || tagName === \"body\")\n        )`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(\n          import_compiler28.types.ifStatement(tag.node.name, consumeHTML(tag))\n        )[0].skip();\n      }\n      if (nodeRef2 && (extra[kSerializeMarker] || extra[kSerializeMarker] === void 0 && (isStatefulReferences(extra.referencedBindings) || tag.node.attributes.some(\n        (attr2) => isStatefulReferences(attr2.value.extra?.referencedBindings)\n      )))) {\n        markNode(tag, nodeRef2);\n      }\n      exit2(tag);\n      tag.remove();\n    }\n  }\n};\nfunction getUsedAttrs(tagName, tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  let staticControllable;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler28.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n        staticControllable = getRelatedControllable(tagName, seen);\n        if (staticControllable && !staticControllable.attrs.every(Boolean)) {\n          for (const attr3 of staticControllable.attrs) {\n            if (attr3) {\n              spreadProps.push(toObjectProperty(attr3.name, attr3.value));\n              maybeStaticAttrs.delete(attr3);\n            }\n          }\n          staticControllable = void 0;\n        }\n      }\n      spreadProps.push(import_compiler28.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  if (!spreadProps) {\n    staticControllable = getRelatedControllable(tagName, seen);\n    if (staticControllable?.special === false && !staticControllable.attrs[1]) {\n      staticControllable = void 0;\n    }\n  }\n  if (staticControllable) {\n    for (const attr2 of staticControllable.attrs) {\n      if (attr2) {\n        maybeStaticAttrs.delete(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    if (staticControllable) {\n      for (const attr2 of staticControllable.attrs) {\n        if (attr2) {\n          (skipProps ||= []).push(\n            toObjectProperty(attr2.name, import_compiler28.types.numericLiteral(1))\n          );\n        }\n      }\n    }\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler28.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler28.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    staticControllable,\n    spreadExpression,\n    skipExpression\n  };\n}\nfunction isChangeHandler(propName) {\n  return /^(?:value|checked(?:Value)?|open)Change/.test(propName);\n}\nfunction buildUndefined() {\n  return import_compiler28.types.unaryExpression(\"void\", import_compiler28.types.numericLiteral(0));\n}\nfunction isInvokedFunction(expr) {\n  const { parent, node } = expr;\n  return parent.type === \"CallExpression\" && parent.callee === node;\n}\n\n// src/translator/util/is-only-child-in-parent.ts\nvar kOnlyChildInParent = Symbol(\"only child in parent\");\nvar kNodeRef = Symbol(\"potential only child node ref\");\nfunction isOnlyChildInParent(tag, branchSize = 1) {\n  const extra = tag.node.extra;\n  if (extra[kOnlyChildInParent] !== void 0) {\n    return extra[kOnlyChildInParent];\n  }\n  const parentTag = getParentTag(tag);\n  if (parentTag && (0, import_babel_utils18.getTagDef)(parentTag)?.html) {\n    return extra[kOnlyChildInParent] = tag.parent.body.length === branchSize;\n  }\n  return extra[kOnlyChildInParent] = false;\n}\nfunction getOptimizedOnlyChildNodeRef(tag, section, branchSize = 1) {\n  if (isOnlyChildInParent(tag, branchSize)) {\n    const parentTag = getParentTag(tag).node;\n    const parentTagName = parentTag.name?.value;\n    return (parentTag.extra ??= {})[kNativeTagBinding] ??= createBinding(\n      \"#\" + parentTagName,\n      0 /* dom */,\n      section\n    );\n  } else {\n    return (tag.node.extra ??= {})[kNodeRef] ??= createBinding(\n      \"#text\",\n      0 /* dom */,\n      section\n    );\n  }\n}\n\n// src/translator/core/for.ts\nvar for_default = {\n  analyze(tag) {\n    const tagExtra = tag.node.extra ??= {};\n    const isAttrTag = tag.node.body.attributeTags;\n    let allowAttrs;\n    (0, import_babel_utils19.assertNoVar)(tag);\n    (0, import_babel_utils19.assertNoArgs)(tag);\n    assertNoSpreadAttrs(tag);\n    switch (getForType(tag.node)) {\n      case \"of\":\n        allowAttrs = [\"of\"];\n        break;\n      case \"in\":\n        allowAttrs = [\"in\"];\n        break;\n      case \"to\":\n        allowAttrs = [\"to\", \"from\", \"step\"];\n        break;\n      default:\n        throw tag.buildCodeFrameError(\n          \"Invalid `for` tag, missing an `of=`, `in=`, `to=` attribute.\"\n        );\n    }\n    if (!isAttrTag) {\n      allowAttrs.push(\"by\");\n    }\n    (0, import_babel_utils19.assertAllowedAttributes)(tag, allowAttrs);\n    if (isAttrTag) return;\n    const tagBody = tag.get(\"body\");\n    const bodySection = startSection(tagBody);\n    if (!bodySection) {\n      dropReferences(getAllTagReferenceNodes(tag.node));\n      return;\n    }\n    const section = getOrCreateSection(tag);\n    trackParamsReferences(tagBody, 3 /* param */, void 0, tagExtra);\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    getOptimizedOnlyChildNodeRef(tag, section);\n    bodySection.upstreamExpression = tagExtra;\n    bodySection.isBranch = true;\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const isStateful = isStatefulReferences(tagExtra.referencedBindings);\n        const onlyChildInParentOptimization = isOnlyChildInParent(tag);\n        const nodeRef2 = getOptimizedOnlyChildNodeRef(tag, tagSection);\n        const forAttrs = getKnownAttrValues(node);\n        const forType = getForType(node);\n        const params = node.body.params;\n        const statements = [];\n        const bodyStatements = node.body.body;\n        const hasStatefulClosures = checkStatefulClosures(bodySection, true);\n        const singleNodeOptimization = bodySection.content === null || bodySection.content.singleChild && bodySection.content.startType !== 4 /* Text */;\n        let keyExpression;\n        if (onlyChildInParentOptimization) {\n          getParentTag(tag).node.extra[kSerializeMarker] = false;\n        }\n        if (isStateful || hasStatefulClosures) {\n          const defaultParamNames = {\n            of: [\"list\", \"index\"],\n            in: [\"key\", \"value\"],\n            to: [\"value\"]\n          }[forType];\n          const defaultByParamIndex = forType === \"of\" ? 1 : 0;\n          const requiredParamsIndex = forAttrs.by ? defaultParamNames.length - 1 : defaultByParamIndex;\n          setForceResumeScope(bodySection);\n          for (let i = 0; i <= requiredParamsIndex; i++) {\n            const existingParam = params[i];\n            if (!existingParam || !import_compiler30.types.isIdentifier(existingParam)) {\n              const id = params[i] = currentProgramPath.scope.generateUidIdentifier(\n                defaultParamNames[i]\n              );\n              if (existingParam) {\n                bodyStatements.unshift(\n                  import_compiler30.types.variableDeclaration(\"let\", [\n                    import_compiler30.types.variableDeclarator(existingParam, id)\n                  ])\n                );\n              }\n            }\n          }\n          if (forAttrs.by) {\n            if (import_compiler30.types.isStringLiteral(forAttrs.by)) {\n              keyExpression = toMemberExpression(\n                params[0],\n                forAttrs.by.value\n              );\n            } else if (import_compiler30.types.isFunction(forAttrs.by)) {\n              const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n              statements.push(\n                import_compiler30.types.variableDeclaration(\"const\", [\n                  import_compiler30.types.variableDeclarator(byIdentifier, forAttrs.by)\n                ])\n              );\n              keyExpression = import_compiler30.types.callExpression(\n                byIdentifier,\n                params\n              );\n            } else {\n              keyExpression = callRuntime(\n                forTypeToHTMLByRuntime(forType),\n                forAttrs.by,\n                ...params\n              );\n            }\n          } else {\n            keyExpression = params[defaultByParamIndex];\n          }\n          const forScopesIdentifier = getScopeIdentifier(bodySection);\n          getHTMLSectionStatements(tagSection).push(\n            import_compiler30.types.variableDeclaration(\"const\", [\n              import_compiler30.types.variableDeclarator(\n                forScopesIdentifier,\n                import_compiler30.types.newExpression(import_compiler30.types.identifier(\"Map\"), [])\n              )\n            ])\n          );\n          if (keyExpression && (isStateful || hasStatefulClosures)) {\n            bodyStatements.push(\n              import_compiler30.types.expressionStatement(\n                import_compiler30.types.callExpression(\n                  import_compiler30.types.memberExpression(\n                    getScopeIdentifier(bodySection),\n                    import_compiler30.types.identifier(\"set\")\n                  ),\n                  [\n                    keyExpression,\n                    callRuntime(\n                      \"ensureScopeWithId\",\n                      getScopeIdIdentifier(bodySection)\n                    )\n                  ]\n                )\n              )\n            );\n          }\n          getSerializedScopeProperties(tagSection).set(\n            import_compiler30.types.stringLiteral(\n              getScopeAccessorLiteral(nodeRef2).value + \"(\" /* LoopScopeMap */\n            ),\n            import_compiler30.types.conditionalExpression(\n              import_compiler30.types.memberExpression(forScopesIdentifier, import_compiler30.types.identifier(\"size\")),\n              forScopesIdentifier,\n              import_compiler30.types.identifier(\"undefined\")\n            )\n          );\n        }\n        flushInto(tag);\n        setClosureSignalBuilder(tag, () => {\n        });\n        writeHTMLResumeStatements(tagBody);\n        const forTagArgs = getBaseArgsInForTag(forType, forAttrs);\n        const forTagHTMLRuntime = isStateful ? forTypeToHTMLResumeRuntime(forType, singleNodeOptimization) : forTypeToRuntime(forType);\n        forTagArgs.push(\n          import_compiler30.types.arrowFunctionExpression(params, import_compiler30.types.blockStatement(bodyStatements))\n        );\n        if (isStateful) {\n          forTagArgs.push(\n            getScopeIdIdentifier(tagSection),\n            getScopeAccessorLiteral(nodeRef2)\n          );\n        }\n        if (onlyChildInParentOptimization) {\n          forTagArgs.push(import_compiler30.types.numericLiteral(1));\n        }\n        statements.push(\n          import_compiler30.types.expressionStatement(callRuntime(forTagHTMLRuntime, ...forTagArgs))\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (!bodySection) {\n          tag.remove();\n          return;\n        }\n        setSectionParentIsOwner(bodySection, true);\n        if (!isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const tagSection = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const { node } = tag;\n        const tagExtra = node.extra;\n        const { referencedBindings } = tagExtra;\n        const nodeRef2 = getOptimizedOnlyChildNodeRef(tag, tagSection);\n        setClosureSignalBuilder(tag, (closureSignal, render, intersection) => {\n          return callRuntime(\n            \"loopClosure\",\n            getScopeAccessorLiteral(\n              closureSignal.referencedBindings\n            ),\n            getScopeAccessorLiteral(nodeRef2),\n            render,\n            intersection\n          );\n        });\n        const forType = getForType(node);\n        const signal = getSignal(tagSection, nodeRef2, \"for\");\n        signal.build = () => {\n          return callRuntime(\n            forTypeToDOMRuntime(forType),\n            getScopeAccessorLiteral(nodeRef2),\n            import_compiler30.types.identifier(bodySection.name)\n          );\n        };\n        const params = node.body.params;\n        signal.hasDownstreamIntersections = () => {\n          if (bodySection.closures) {\n            return true;\n          }\n          for (const param of params) {\n            const binding = param.extra?.binding;\n            if (binding) {\n              for (const {\n                referencedBindings: referencedBindings2\n              } of binding.downstreamExpressions) {\n                if (getSignal(\n                  bodySection,\n                  referencedBindings2\n                ).hasDownstreamIntersections()) {\n                  return true;\n                }\n              }\n            }\n          }\n          return false;\n        };\n        const forAttrs = getKnownAttrValues(node);\n        const loopArgs = getBaseArgsInForTag(forType, forAttrs);\n        if (forAttrs.by) {\n          loopArgs.push(forAttrs.by);\n        }\n        addValue(\n          tagSection,\n          referencedBindings,\n          signal,\n          import_compiler30.types.arrayExpression(loopArgs)\n        );\n        tag.remove();\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| to=${2:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nfunction buildForRuntimeCall(type, attrs2, params, statements) {\n  return import_compiler30.types.expressionStatement(\n    callRuntime(\n      forTypeToRuntime(type),\n      ...getBaseArgsInForTag(type, attrs2),\n      import_compiler30.types.arrowFunctionExpression(params, import_compiler30.types.blockStatement(statements))\n    )\n  );\n}\nfunction getForType(tag) {\n  for (const attr2 of tag.attributes) {\n    if (attr2.type === \"MarkoAttribute\") {\n      switch (attr2.name) {\n        case \"of\":\n        case \"in\":\n        case \"to\":\n          return attr2.name;\n      }\n    }\n  }\n}\nfunction forTypeToRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOf\";\n    case \"in\":\n      return \"forIn\";\n    case \"to\":\n      return \"forTo\";\n  }\n}\nfunction forTypeToHTMLResumeRuntime(type, singleNodeOptimization) {\n  if (singleNodeOptimization) {\n    switch (type) {\n      case \"of\":\n        return \"resumeSingleNodeForOf\";\n      case \"in\":\n        return \"resumeSingleNodeForIn\";\n      case \"to\":\n        return \"resumeSingleNodeForTo\";\n    }\n  } else {\n    switch (type) {\n      case \"of\":\n        return \"resumeForOf\";\n      case \"in\":\n        return \"resumeForIn\";\n      case \"to\":\n        return \"resumeForTo\";\n    }\n  }\n}\nfunction forTypeToDOMRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"loopOf\";\n    case \"in\":\n      return \"loopIn\";\n    case \"to\":\n      return \"loopTo\";\n  }\n}\nfunction forTypeToHTMLByRuntime(type) {\n  switch (type) {\n    case \"of\":\n      return \"forOfBy\";\n    case \"in\":\n      return \"forInBy\";\n    case \"to\":\n      return \"forToBy\";\n  }\n}\nfunction getBaseArgsInForTag(type, attrs2) {\n  switch (type) {\n    case \"in\":\n      return [attrs2.in];\n    case \"of\":\n      return [attrs2.of];\n    case \"to\":\n      return [\n        attrs2.to,\n        attrs2.from || import_compiler30.types.numericLiteral(0),\n        attrs2.step || import_compiler30.types.numericLiteral(1)\n      ];\n  }\n}\n\n// src/translator/util/translate-attrs.ts\nvar contentProps = /* @__PURE__ */ new WeakSet();\nfunction translateAttrs(tag, templateExports, statements = [], contentKey = \"content\") {\n  const seen = /* @__PURE__ */ new Set();\n  const properties = [];\n  const attrTagLookup = tag.node.extra?.attributeTags;\n  if (attrTagLookup) {\n    for (const name2 in attrTagLookup) {\n      const attrTagMeta = attrTagLookup[name2];\n      if (usesExport(templateExports, attrTagMeta.name)) {\n        seen.add(attrTagMeta.name);\n        if (attrTagMeta.dynamic) {\n          statements.push(\n            import_compiler31.types.variableDeclaration(\"let\", [\n              import_compiler31.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta))\n            ])\n          );\n          properties.push(\n            toObjectProperty(\n              attrTagMeta.name,\n              getAttrTagIdentifier(attrTagMeta)\n            )\n          );\n        }\n      }\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils20.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          if (attrTagMeta.dynamic) {\n            i = addDynamicAttrTagStatements(\n              attrTags2,\n              i,\n              attrTagLookup,\n              statements,\n              templateExports,\n              contentKey\n            );\n          } else {\n            const translatedAttrTag = translateAttrs(\n              child,\n              templateExports?.[attrTagMeta.name]?.props,\n              statements,\n              contentKey\n            );\n            if (attrTagMeta.repeated) {\n              const prevProp = findObjectProperty(attrTagMeta.name, properties);\n              if (prevProp) {\n                prevProp.value = callRuntime(\n                  \"attrTags\",\n                  prevProp.value,\n                  propsToExpression(translatedAttrTag.properties)\n                );\n              } else {\n                properties.push(\n                  toObjectProperty(\n                    attrTagMeta.name,\n                    callRuntime(\n                      \"attrTag\",\n                      propsToExpression(translatedAttrTag.properties)\n                    )\n                  )\n                );\n              }\n            } else {\n              properties.push(\n                toObjectProperty(\n                  attrTagMeta.name,\n                  callRuntime(\n                    \"attrTag\",\n                    propsToExpression(translatedAttrTag.properties)\n                  )\n                )\n              );\n            }\n          }\n        } else {\n          i = addDynamicAttrTagStatements(\n            attrTags2,\n            i,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  if (!seen.has(contentKey) && usesExport(templateExports, contentKey)) {\n    seen.add(contentKey);\n    const contentExpression = buildContent(tag.get(\"body\"));\n    if (contentExpression) {\n      const contentProp = import_compiler31.types.objectProperty(\n        import_compiler31.types.identifier(contentKey),\n        contentExpression\n      );\n      contentProps.add(contentProp);\n      properties.push(contentProp);\n    }\n  }\n  const { attributes } = tag.node;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler31.types.isMarkoSpreadAttribute(attr2)) {\n      properties.push(import_compiler31.types.spreadElement(value));\n    } else if (!seen.has(attr2.name) && usesExport(templateExports, attr2.name)) {\n      seen.add(attr2.name);\n      properties.push(toObjectProperty(attr2.name, value));\n    }\n  }\n  properties.reverse();\n  return { properties, statements };\n}\nfunction getTranslatedBodyContentProperty(props) {\n  for (const prop of props) {\n    if (contentProps.has(prop)) {\n      return prop;\n    }\n  }\n}\nfunction addDynamicAttrTagStatements(attrTags2, index, attrTagLookup, statements, templateExports, contentKey = \"content\") {\n  const tag = attrTags2[index];\n  if (tag.isMarkoTag()) {\n    if ((0, import_babel_utils20.isAttributeTag)(tag)) {\n      const attrTagMeta = attrTagLookup[getTagName(tag)];\n      if (usesExport(templateExports, attrTagMeta.name) && attrTagMeta.dynamic) {\n        const translatedAttrTag = translateAttrs(\n          tag,\n          templateExports?.[attrTagMeta.name]?.props,\n          statements,\n          contentKey\n        );\n        if (attrTagMeta.repeated) {\n          statements.push(\n            import_compiler31.types.expressionStatement(\n              import_compiler31.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTags\",\n                  getAttrTagIdentifier(attrTagMeta),\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        } else {\n          statements.push(\n            import_compiler31.types.expressionStatement(\n              import_compiler31.types.assignmentExpression(\n                \"=\",\n                getAttrTagIdentifier(attrTagMeta),\n                callRuntime(\n                  \"attrTag\",\n                  propsToExpression(translatedAttrTag.properties)\n                )\n              )\n            )\n          );\n        }\n      }\n    } else {\n      switch (getTagName(tag)) {\n        case \"if\":\n          return translateIfAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        case \"for\": {\n          return translateForAttrTag(\n            attrTags2,\n            index,\n            attrTagLookup,\n            statements,\n            templateExports,\n            contentKey\n          );\n        }\n      }\n    }\n  }\n  return index;\n}\nfunction propsToExpression(props) {\n  return props.length === 1 && import_compiler31.types.isSpreadElement(props[0]) ? props[0].argument : import_compiler31.types.objectExpression(props);\n}\nfunction translateForAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const forTag = attrTags2[index];\n  const bodyStatements = [];\n  addAllAttrTagsAsDynamic(\n    forTag,\n    attrTagLookup,\n    bodyStatements,\n    templateExports,\n    contentKey\n  );\n  statements.push(\n    buildForRuntimeCall(\n      getForType(forTag.node),\n      getKnownAttrValues(forTag.node),\n      forTag.node.body.params,\n      bodyStatements\n    )\n  );\n  return index;\n}\nfunction translateIfAttrTag(attrTags2, index, attrTagLookup, statements, templateExports, contentKey) {\n  const ifTag = attrTags2[index];\n  const consequentStatements = [];\n  let ifStatement = import_compiler31.types.ifStatement(\n    getConditionTestValue(ifTag),\n    import_compiler31.types.blockStatement(consequentStatements)\n  );\n  statements.push(ifStatement);\n  addAllAttrTagsAsDynamic(\n    ifTag,\n    attrTagLookup,\n    consequentStatements,\n    templateExports,\n    contentKey\n  );\n  let nextIndex = index + 1;\n  while (nextIndex < attrTags2.length) {\n    const nextTag = attrTags2[nextIndex];\n    if (nextTag.isMarkoTag()) {\n      switch (getTagName(nextTag)) {\n        case \"else-if\":\n        case \"else\": {\n          const testValue = getConditionTestValue(nextTag);\n          const alternateStatements = [];\n          addAllAttrTagsAsDynamic(\n            nextTag,\n            attrTagLookup,\n            alternateStatements,\n            templateExports,\n            contentKey\n          );\n          if (testValue) {\n            ifStatement.alternate = ifStatement = import_compiler31.types.ifStatement(\n              testValue,\n              import_compiler31.types.blockStatement(alternateStatements)\n            );\n            nextIndex++;\n            continue;\n          } else {\n            ifStatement.alternate = import_compiler31.types.blockStatement(alternateStatements);\n            break;\n          }\n        }\n      }\n    }\n    break;\n  }\n  return nextIndex - 1;\n}\nfunction addAllAttrTagsAsDynamic(tag, attrTagLookup, statements, templateExports, contentKey) {\n  const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n  for (let i = 0; i < attrTags2.length; i++) {\n    i = addDynamicAttrTagStatements(\n      attrTags2,\n      i,\n      attrTagLookup,\n      statements,\n      templateExports,\n      contentKey\n    );\n  }\n}\nfunction usesExport(templateExports, name2) {\n  return !templateExports || !!templateExports[name2];\n}\nfunction findObjectProperty(name2, props) {\n  for (const prop of props) {\n    if (prop.type === \"ObjectProperty\") {\n      switch (prop.key.type) {\n        case \"StringLiteral\":\n          if (prop.key.value === name2) {\n            return prop;\n          }\n          break;\n        case \"Identifier\":\n          if (prop.key.name === name2) {\n            return prop;\n          }\n          break;\n      }\n    }\n  }\n  return false;\n}\nfunction getConditionTestValue({\n  node: { attributes }\n}) {\n  return attributes.length === 1 ? attributes[0].value : void 0;\n}\nfunction buildContent(body) {\n  const bodySection = body.node.extra?.section;\n  if (bodySection) {\n    if (isOutputHTML()) {\n      return callRuntime(\n        \"register\",\n        callRuntime(\n          \"createRenderer\",\n          import_compiler31.types.arrowFunctionExpression(\n            body.node.params,\n            import_compiler31.types.blockStatement(body.node.body)\n          )\n        ),\n        import_compiler31.types.stringLiteral(getResumeRegisterId(bodySection, \"renderer\")),\n        getScopeIdIdentifier(\n          getSection(\n            getNonAttributeTagParent(body.parentPath)\n          )\n        )\n      );\n    } else {\n      return import_compiler31.types.callExpression(import_compiler31.types.identifier(bodySection.name), [\n        scopeIdentifier\n      ]);\n    }\n  }\n}\nfunction getNonAttributeTagParent(tag) {\n  let cur = tag;\n  while ((0, import_babel_utils20.isAttributeTag)(cur) || (0, import_babel_utils20.isTransparentTag)(cur)) {\n    cur = getParentTag(cur);\n  }\n  return cur;\n}\n\n// src/translator/core/define.ts\nvar define_default = {\n  analyze(tag) {\n    (0, import_babel_utils21.assertNoArgs)(tag);\n    if (!tag.node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `define` tag requires a tag variable.\");\n    }\n    const tagBody = tag.get(\"body\");\n    startSection(tagBody);\n    trackVarReferences(tag, 4 /* derived */);\n    trackParamsReferences(tagBody, 3 /* param */);\n    analyzeAttributeTags(tag);\n    mergeReferences(\n      getOrCreateSection(tag),\n      tag.node,\n      getAllTagReferenceNodes(tag.node)\n    );\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const translatedAttrs = translateAttrs(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertBefore(translatedAttrs.statements);\n        translateVar(tag, propsToExpression(translatedAttrs.properties));\n      } else {\n        const section = getSection(tag);\n        const referencedBindings = node.extra?.referencedBindings;\n        const derivation = initValue(tag.get(\"var\").node.extra.binding);\n        if (translatedAttrs.statements.length) {\n          addStatement(\n            \"render\",\n            section,\n            referencedBindings,\n            translatedAttrs.statements\n          );\n        }\n        addValue(\n          section,\n          referencedBindings,\n          derivation,\n          propsToExpression(translatedAttrs.properties)\n        );\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a constant object binding that can be rendered.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#define\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/define.d.marko\"\n};\n\n// src/translator/core/effect.ts\nvar import_compiler33 = require(\"@marko/compiler\");\nvar import_babel_utils22 = require(\"@marko/compiler/babel-utils\");\nvar effect_default = {\n  migrate: [\n    (tag) => {\n      (0, import_babel_utils22.assertNoArgs)(tag);\n      (0, import_babel_utils22.assertNoParams)(tag);\n      assertNoBodyContent(tag);\n      (0, import_babel_utils22.assertNoAttributeTags)(tag);\n      assertNoSpreadAttrs(tag);\n      (0, import_babel_utils22.assertAllowedAttributes)(tag, [\"value\"]);\n      (0, import_babel_utils22.diagnosticDeprecate)(tag, {\n        label: \"The 'effect' tag has been replaced by the 'script' tag.\",\n        fix() {\n          const { node } = tag;\n          tag.replaceWith(\n            import_compiler33.types.markoTag(\n              withPreviousLocation(import_compiler33.types.stringLiteral(\"script\"), node.name),\n              node.attributes,\n              node.body,\n              node.arguments,\n              node.var,\n              node.attributeTags\n            )\n          );\n        }\n      });\n    }\n  ],\n  attributes: {},\n  types: runtime_info_default.name + \"/tag-types/effect.d.marko\"\n};\n\n// src/translator/core/export.ts\nvar import_babel_utils23 = require(\"@marko/compiler/babel-utils\");\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils23.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/translator/core/html-comment.ts\nvar import_compiler34 = require(\"@marko/compiler\");\nvar import_babel_utils24 = require(\"@marko/compiler/babel-utils\");\nvar kCommentTagBinding = Symbol(\"comment tag binding\");\nvar kGetterId2 = Symbol(\"node getter id\");\nvar html_comment_default = {\n  analyze(tag) {\n    (0, import_babel_utils24.assertNoArgs)(tag);\n    (0, import_babel_utils24.assertNoParams)(tag);\n    (0, import_babel_utils24.assertNoAttributes)(tag);\n    const tagVar = tag.node.var;\n    let needsBinding = false;\n    let needsGetter = false;\n    if (tagVar) {\n      if (!import_compiler34.types.isIdentifier(tagVar)) {\n        throw tag.get(\"var\").buildCodeFrameError(\n          \"The `html-comment` tag variable cannot be destructured.\"\n        );\n      }\n      needsBinding = true;\n      for (const ref of tag.scope.getBinding(tagVar.name).referencePaths) {\n        if (!ref.parentPath?.isCallExpression()) {\n          needsGetter = true;\n          break;\n        }\n      }\n    }\n    const referenceNodes = [];\n    for (const child of tag.get(\"body\").get(\"body\")) {\n      if (child.isMarkoPlaceholder()) {\n        referenceNodes.push(child.node.value);\n        needsBinding = true;\n      } else if (!child.isMarkoText()) {\n        throw child.buildCodeFrameError(\n          \"Invalid child. Only text is allowed inside an html comment.\"\n        );\n      }\n    }\n    if (needsBinding) {\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      if (needsGetter) {\n        tagExtra[kGetterId2] = getRegisterUID(section, \"comment\");\n      }\n      tagExtra[kCommentTagBinding] = createBinding(\n        \"#comment\",\n        0 /* dom */,\n        section\n      );\n      mergeReferences(section, tag.node, referenceNodes);\n    }\n    tag.skip();\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const commentBinding = tagExtra[kCommentTagBinding];\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId2];\n      if (isOutputHTML()) {\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(getSection(tag)),\n            getterId && import_compiler34.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler34.types.variableDeclaration(\"const\", [\n              import_compiler34.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler34.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(commentBinding)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler34.types.expressionStatement(\n                createScopeReadExpression(referenceSection, commentBinding)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler34.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    if (tagExtra[kCommentTagBinding]) {\n      visit(tag, 32 /* Get */);\n    }\n    const write2 = writeTo(tag);\n    enter2(tag);\n    write2`<!--`;\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeXML\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      for (const child of tag.node.body.body) {\n        if (import_compiler34.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler34.types.isMarkoPlaceholder(child)) {\n          templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (templateExpressions.length === 0) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler34.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          tagExtra.referencedBindings,\n          import_compiler34.types.expressionStatement(\n            callRuntime(\n              \"data\",\n              import_compiler34.types.memberExpression(\n                scopeIdentifier,\n                getScopeAccessorLiteral(commentBinding),\n                true\n              ),\n              import_compiler34.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    exit2(tag);\n    write2`-->`;\n    if (commentBinding) {\n      markNode(tag, commentBinding);\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/translator/core/html-script.ts\nvar import_compiler35 = require(\"@marko/compiler\");\nvar import_babel_utils25 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId3 = Symbol(\"node getter id\");\nvar html_script_default = {\n  analyze(tag) {\n    (0, import_babel_utils25.assertNoArgs)(tag);\n    (0, import_babel_utils25.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler35.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler35.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler35.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler35.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-script.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#script\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId3] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId3];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler35.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler35.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler35.types.variableDeclaration(\"const\", [\n              import_compiler35.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler35.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler35.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler35.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<script`;\n    const usedAttrs = getUsedAttrs2(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler35.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler35.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler35.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"script\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler35.types.stringLiteral(\"script\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler35.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeScript\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler35.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler35.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler35.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler35.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler35.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler35.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</script>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@async\": \"#html-async\",\n  \"@crossorigin\": \"#html-crossorigin\",\n  \"@defer\": \"#html-defer\",\n  \"@integrity\": \"#html-integrity\",\n  \"@nomodule\": \"#html-nomodule\",\n  \"@nonce\": \"#html-nonce\",\n  \"@referrerpolicy\": \"#html-referrerpolicy\",\n  \"@src\": \"#html-src\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs2(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler35.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler35.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler35.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler35.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/html-style.ts\nvar import_compiler36 = require(\"@marko/compiler\");\nvar import_babel_utils26 = require(\"@marko/compiler/babel-utils\");\nvar kGetterId4 = Symbol(\"node getter id\");\nvar html_style_default = {\n  analyze(tag) {\n    (0, import_babel_utils26.assertNoArgs)(tag);\n    (0, import_babel_utils26.assertNoParams)(tag);\n    const { node } = tag;\n    if (node.var && !import_compiler36.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\n        \"Tag variables on native elements cannot be destructured.\"\n      );\n    }\n    const section = getOrCreateSection(tag);\n    let hasEventHandlers = false;\n    let hasDynamicAttributes = false;\n    const seen = {};\n    const { attributes } = tag.node;\n    let spreadReferenceNodes;\n    for (let i = attributes.length; i--; ) {\n      const attr2 = attributes[i];\n      if (import_compiler36.types.isMarkoAttribute(attr2)) {\n        if (seen[attr2.name]) {\n          dropReferences(attr2.value);\n          continue;\n        }\n        seen[attr2.name] = attr2;\n        if (isEventHandler(attr2.name)) {\n          (attr2.value.extra ??= {}).isEffect = true;\n          hasEventHandlers = true;\n        } else if (!evaluate(attr2.value).confident) {\n          hasDynamicAttributes = true;\n        }\n      } else if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n        hasEventHandlers = true;\n        hasDynamicAttributes = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n      }\n      if (spreadReferenceNodes) {\n        spreadReferenceNodes.push(attr2.value);\n      } else if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n        spreadReferenceNodes = [attr2.value];\n      }\n    }\n    if (spreadReferenceNodes) {\n      mergeReferences(section, tag.node, spreadReferenceNodes);\n    }\n    const bodyPlaceholderNodes = [];\n    let hasBodyPlaceholders = false;\n    for (const child of tag.node.body.body) {\n      if (import_compiler36.types.isMarkoPlaceholder(child)) {\n        bodyPlaceholderNodes.push(child.value);\n        hasBodyPlaceholders = true;\n      } else if (!import_compiler36.types.isMarkoText(child)) {\n        throw tag.hub.buildError(\n          child,\n          \"Invalid child. Only text is allowed inside an html-style.\"\n        );\n      }\n    }\n    if (bodyPlaceholderNodes.length > 1) {\n      mergeReferences(\n        section,\n        bodyPlaceholderNodes[0],\n        bodyPlaceholderNodes.slice(1)\n      );\n    }\n    if (node.var || hasEventHandlers || hasDynamicAttributes || hasBodyPlaceholders) {\n      currentProgramPath.node.extra.isInteractive ||= hasEventHandlers;\n      const tagExtra = node.extra ??= {};\n      const bindingName = \"#style\";\n      tagExtra[kSerializeMarker] = hasEventHandlers || !!node.var;\n      tagExtra[kNativeTagBinding] = createBinding(\n        bindingName,\n        0 /* dom */,\n        section\n      );\n      if (node.var) {\n        for (const ref of tag.scope.getBinding(node.var.name).referencePaths) {\n          if (!ref.parentPath?.isCallExpression()) {\n            tagExtra[kGetterId4] = getRegisterUID(section, bindingName);\n            break;\n          }\n        }\n      }\n    }\n  },\n  translate(tag) {\n    const tagExtra = tag.node.extra;\n    const nodeRef2 = tagExtra[kNativeTagBinding];\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(tag);\n    const section = getSection(tag);\n    const hasVar = !!tag.node.var;\n    if (hasVar) {\n      const getterId = tagExtra[kGetterId4];\n      if (isHTML) {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        for (const reference of references) {\n          let currentSection = getSection(reference);\n          while (currentSection !== section && currentSection.parent) {\n            getSerializedScopeProperties(currentSection).set(\n              import_compiler36.types.stringLiteral(\"_\"),\n              callRuntime(\n                \"ensureScopeWithId\",\n                getScopeIdIdentifier(currentSection = currentSection.parent)\n              )\n            );\n          }\n        }\n        translateVar(\n          tag,\n          callRuntime(\n            \"nodeRef\",\n            getterId && getScopeIdIdentifier(section),\n            getterId && import_compiler36.types.stringLiteral(getterId)\n          )\n        );\n      } else {\n        const varName = tag.node.var.name;\n        const references = tag.scope.getBinding(varName).referencePaths;\n        let getterFnIdentifier;\n        if (getterId) {\n          getterFnIdentifier = currentProgramPath.scope.generateUidIdentifier(\n            `get_${varName}`\n          );\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler36.types.variableDeclaration(\"const\", [\n              import_compiler36.types.variableDeclarator(\n                getterFnIdentifier,\n                callRuntime(\n                  \"nodeRef\",\n                  import_compiler36.types.stringLiteral(getterId),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              )\n            ])\n          );\n        }\n        for (const reference of references) {\n          const referenceSection = getSection(reference);\n          if (reference.parentPath?.isCallExpression()) {\n            reference.parentPath.replaceWith(\n              import_compiler36.types.expressionStatement(\n                createScopeReadExpression(referenceSection, nodeRef2)\n              )\n            );\n          } else if (getterFnIdentifier) {\n            reference.replaceWith(\n              import_compiler36.types.callExpression(getterFnIdentifier, [\n                getScopeExpression(referenceSection, getSection(tag))\n              ])\n            );\n          }\n        }\n      }\n    }\n    let visitAccessor;\n    if (nodeRef2) {\n      visitAccessor = getScopeAccessorLiteral(nodeRef2);\n      visit(tag, 32 /* Get */);\n    }\n    write2`<style`;\n    const usedAttrs = getUsedAttrs3(tag.node);\n    const { staticAttrs, skipExpression, spreadExpression } = usedAttrs;\n    for (const attr2 of staticAttrs) {\n      const { name: name2, value } = attr2;\n      const { confident, computed } = value.extra || {};\n      const valueReferences = value.extra?.referencedBindings;\n      switch (name2) {\n        case \"class\":\n        case \"style\": {\n          const helper = `${name2}Attr`;\n          if (confident) {\n            write2`${getHTMLRuntime()[helper](computed)}`;\n          } else if (isHTML) {\n            write2`${callRuntime(helper, value)}`;\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  helper,\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  value\n                )\n              )\n            );\n          }\n          break;\n        }\n        default:\n          if (confident) {\n            write2`${getHTMLRuntime().attr(name2, computed)}`;\n          } else if (isHTML) {\n            if (isEventHandler(name2)) {\n              addHTMLEffectCall(section, valueReferences);\n            } else {\n              write2`${callRuntime(\"attr\", import_compiler36.types.stringLiteral(name2), value)}`;\n            }\n          } else if (isEventHandler(name2)) {\n            addStatement(\n              \"effect\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  \"on\",\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler36.types.stringLiteral(getEventHandlerName(name2)),\n                  value\n                )\n              )\n            );\n          } else {\n            addStatement(\n              \"render\",\n              section,\n              valueReferences,\n              import_compiler36.types.expressionStatement(\n                callRuntime(\n                  \"attr\",\n                  import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n                  import_compiler36.types.stringLiteral(name2),\n                  value\n                )\n              )\n            );\n          }\n          break;\n      }\n    }\n    if (spreadExpression) {\n      if (isHTML) {\n        addHTMLEffectCall(section, tagExtra.referencedBindings);\n        if (skipExpression) {\n          write2`${callRuntime(\"partialAttrs\", spreadExpression, skipExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler36.types.stringLiteral(\"style\"))}`;\n        } else {\n          write2`${callRuntime(\"attrs\", spreadExpression, visitAccessor, getScopeIdIdentifier(section), import_compiler36.types.stringLiteral(\"style\"))}`;\n        }\n      } else {\n        if (skipExpression) {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler36.types.expressionStatement(\n              callRuntime(\n                \"partialAttrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression,\n                skipExpression\n              )\n            )\n          );\n        } else {\n          addStatement(\n            \"render\",\n            section,\n            tagExtra.referencedBindings,\n            import_compiler36.types.expressionStatement(\n              callRuntime(\n                \"attrs\",\n                scopeIdentifier,\n                visitAccessor,\n                spreadExpression\n              )\n            )\n          );\n        }\n        addStatement(\n          \"effect\",\n          section,\n          tagExtra.referencedBindings,\n          import_compiler36.types.expressionStatement(\n            callRuntime(\"attrsEvents\", scopeIdentifier, visitAccessor)\n          ),\n          false\n        );\n      }\n    }\n    write2`>`;\n    enter2(tag);\n    if (isOutputHTML()) {\n      for (const child of tag.node.body.body) {\n        if (import_compiler36.types.isMarkoText(child)) {\n          write2`${child.value}`;\n        } else if (import_compiler36.types.isMarkoPlaceholder(child)) {\n          write2`${callRuntime(\"escapeStyle\", child.value)}`;\n        }\n      }\n    } else {\n      const templateQuasis = [];\n      const templateExpressions = [];\n      let currentQuasi = \"\";\n      let referencePlaceholder;\n      for (const child of tag.node.body.body) {\n        if (import_compiler36.types.isMarkoText(child)) {\n          currentQuasi += child.value;\n        } else if (import_compiler36.types.isMarkoPlaceholder(child)) {\n          referencePlaceholder ||= child;\n          templateQuasis.push(import_compiler36.types.templateElement({ raw: currentQuasi }));\n          templateExpressions.push(child.value);\n          currentQuasi = \"\";\n        }\n      }\n      if (!referencePlaceholder) {\n        write2`${currentQuasi}`;\n      } else {\n        templateQuasis.push(import_compiler36.types.templateElement({ raw: currentQuasi }));\n        addStatement(\n          \"render\",\n          getSection(tag),\n          referencePlaceholder.value.extra?.referencedBindings,\n          import_compiler36.types.expressionStatement(\n            callRuntime(\n              \"textContent\",\n              import_compiler36.types.memberExpression(scopeIdentifier, visitAccessor, true),\n              import_compiler36.types.templateLiteral(templateQuasis, templateExpressions)\n            )\n          )\n        );\n      }\n    }\n    write2`</style>`;\n    if (nodeRef2) {\n      markNode(tag, nodeRef2);\n    }\n    exit2(tag);\n    tag.remove();\n  },\n  \"@disabled\": \"#html-disabled\",\n  \"@media\": \"#html-media\",\n  \"@nonce\": \"#html-nonce\",\n  \"@type\": \"#html-type\",\n  \"attribute-groups\": [\"html-attributes\"],\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  }\n};\nfunction getUsedAttrs3(tag) {\n  const seen = {};\n  const { attributes } = tag;\n  const maybeStaticAttrs = /* @__PURE__ */ new Set();\n  let spreadExpression;\n  let skipExpression;\n  let spreadProps;\n  let skipProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    const { value } = attr2;\n    if (import_compiler36.types.isMarkoSpreadAttribute(attr2)) {\n      if (!spreadProps) {\n        spreadProps = [];\n      }\n      spreadProps.push(import_compiler36.types.spreadElement(value));\n    } else if (!seen[attr2.name]) {\n      seen[attr2.name] = attr2;\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n      } else {\n        maybeStaticAttrs.add(attr2);\n      }\n    }\n  }\n  const staticAttrs = [...maybeStaticAttrs].reverse();\n  if (spreadProps) {\n    spreadProps.reverse();\n    for (const { name: name2 } of staticAttrs) {\n      (skipProps ||= []).push(toObjectProperty(name2, import_compiler36.types.numericLiteral(1)));\n    }\n    if (skipProps) {\n      skipExpression = import_compiler36.types.objectExpression(skipProps);\n    }\n    spreadExpression = propsToExpression(spreadProps);\n  }\n  return {\n    staticAttrs,\n    spreadExpression,\n    skipExpression\n  };\n}\n\n// src/translator/core/id.ts\nvar import_compiler37 = require(\"@marko/compiler\");\nvar import_babel_utils27 = require(\"@marko/compiler/babel-utils\");\nvar id_default = {\n  analyze(tag) {\n    (0, import_babel_utils27.assertNoArgs)(tag);\n    (0, import_babel_utils27.assertNoParams)(tag);\n    (0, import_babel_utils27.assertNoAttributes)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils27.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `id` tag requires a tag variable.\");\n    }\n    if (!import_compiler37.types.isIdentifier(node.var)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `id` tag cannot be destructured\");\n    }\n    trackVarReferences(tag, 4 /* derived */);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const id = isOutputHTML() ? callRuntime(\"nextTagId\") : callRuntime(\"nextTagId\", scopeIdentifier);\n      if (isOutputHTML()) {\n        tag.replaceWith(\n          import_compiler37.types.variableDeclaration(\"const\", [import_compiler37.types.variableDeclarator(node.var, id)])\n        );\n      } else {\n        const source = initValue(node.var.extra.binding);\n        addValue(getSection(tag), void 0, source, id);\n        tag.remove();\n      }\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/id.d.marko\"\n};\n\n// src/translator/core/if.ts\nvar import_compiler39 = require(\"@marko/compiler\");\nvar import_babel_utils28 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/util/to-first-statement-or-block.ts\nvar import_compiler38 = require(\"@marko/compiler\");\nfunction toFirstStatementOrBlock(body) {\n  if (Array.isArray(body)) {\n    if (body.length === 1) {\n      return body[0];\n    }\n    return import_compiler38.types.blockStatement(body);\n  }\n  return body;\n}\n\n// src/translator/core/if.ts\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nvar IfTag = {\n  analyze(tag) {\n    assertValidCondition(tag);\n    if (tag.node.body.attributeTags) return;\n    const [isLast, branches] = getBranches(tag, startSection(tag.get(\"body\")));\n    if (isLast) {\n      const [rootTag] = branches[0];\n      const rootExtra = rootTag.node.extra ??= {};\n      const mergeReferenceNodes = [];\n      let singleNodeOptimization = true;\n      for (const [branchTag, branchBodySection] of branches) {\n        if (branchBodySection) {\n          branchBodySection.isBranch = true;\n          branchBodySection.upstreamExpression = rootExtra;\n          if (!(branchBodySection.content === null || branchBodySection.content?.singleChild && branchBodySection.content.startType !== 4 /* Text */)) {\n            singleNodeOptimization = false;\n          }\n        }\n        if (branchTag.node.attributes.length) {\n          mergeReferenceNodes.push(branchTag.node.attributes[0].value);\n        }\n      }\n      const section = getOrCreateSection(tag);\n      mergeReferences(section, rootTag.node, mergeReferenceNodes);\n      getOptimizedOnlyChildNodeRef(rootTag, section, branches.length);\n      rootExtra.singleNodeOptimization = singleNodeOptimization;\n    }\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (isRoot(tag) && !isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n        flushBefore(tag);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const section = getSection(tag);\n        const bodySection = getSectionForBody(tagBody);\n        const [isLast, branches] = getBranches(tag, bodySection);\n        const [rootTag] = branches[0];\n        const rootExtra = rootTag.node.extra;\n        const isStateful = isStatefulReferences(rootExtra.referencedBindings);\n        const singleNodeOptimization = rootExtra.singleNodeOptimization;\n        const hasStatefulClosures = bodySection && checkStatefulClosures(bodySection, true);\n        if (bodySection) {\n          if (isStateful || hasStatefulClosures) {\n            setForceResumeScope(bodySection);\n          }\n          flushInto(tag);\n          setClosureSignalBuilder(tag, () => {\n          });\n          writeHTMLResumeStatements(tagBody);\n        }\n        if (isLast) {\n          const nodeRef2 = getOptimizedOnlyChildNodeRef(rootTag, section);\n          const onlyChildInParentOptimization = isOnlyChildInParent(rootTag);\n          const nextTag = tag.getNextSibling();\n          const ifScopeIdIdentifier = rootTag.scope.generateUidIdentifier(\"ifScopeId\");\n          const ifBranchIdentifier = rootTag.scope.generateUidIdentifier(\"ifBranch\");\n          let statement;\n          if (onlyChildInParentOptimization) {\n            getParentTag(rootTag).node.extra[kSerializeMarker] = false;\n          }\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const bodyStatements = branchTag.node.body.body;\n            if (branchBodySection) {\n              const branchHasStatefulClosures = checkStatefulClosures(\n                branchBodySection,\n                true\n              );\n              if (isStateful) {\n                bodyStatements.push(\n                  import_compiler39.types.expressionStatement(\n                    import_compiler39.types.assignmentExpression(\n                      \"=\",\n                      ifBranchIdentifier,\n                      import_compiler39.types.numericLiteral(i)\n                    )\n                  )\n                );\n              }\n              if (isStateful || branchHasStatefulClosures) {\n                bodyStatements.push(\n                  import_compiler39.types.expressionStatement(\n                    import_compiler39.types.assignmentExpression(\n                      \"=\",\n                      ifScopeIdIdentifier,\n                      getScopeIdIdentifier(branchBodySection)\n                    )\n                  )\n                );\n              }\n            }\n            const [testAttr] = branchTag.node.attributes;\n            const curStatement = toFirstStatementOrBlock(bodyStatements);\n            if (testAttr) {\n              statement = import_compiler39.types.ifStatement(\n                testAttr.value,\n                curStatement,\n                statement\n              );\n            } else {\n              statement = curStatement;\n            }\n            branchTag.remove();\n          }\n          if (!(isStateful || hasStatefulClosures)) {\n            nextTag.insertBefore(statement);\n          } else {\n            if (isStateful) {\n              getSerializedScopeProperties(section).set(\n                import_compiler39.types.stringLiteral(\n                  getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n                ),\n                ifBranchIdentifier\n              );\n              const cbNode = import_compiler39.types.arrowFunctionExpression(\n                [],\n                import_compiler39.types.blockStatement([statement])\n              );\n              statement = import_compiler39.types.expressionStatement(\n                singleNodeOptimization ? callRuntime(\n                  \"resumeSingleNodeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2),\n                  onlyChildInParentOptimization && import_compiler39.types.numericLiteral(1)\n                ) : callRuntime(\n                  \"resumeConditional\",\n                  cbNode,\n                  getScopeIdIdentifier(section),\n                  getScopeAccessorLiteral(nodeRef2)\n                )\n              );\n            }\n            nextTag.insertBefore(statement);\n            getHTMLSectionStatements(section).push(\n              import_compiler39.types.variableDeclaration(\n                \"let\",\n                [\n                  import_compiler39.types.variableDeclarator(ifScopeIdIdentifier),\n                  isStateful && import_compiler39.types.variableDeclarator(ifBranchIdentifier)\n                ].filter(Boolean)\n              )\n            );\n            getSerializedScopeProperties(section).set(\n              import_compiler39.types.stringLiteral(\n                getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n              ),\n              callRuntime(\"getScopeById\", ifScopeIdIdentifier)\n            );\n          }\n        }\n      }\n    },\n    dom: {\n      enter(tag) {\n        if (tag.node.body.attributeTags) return;\n        const tagBody = tag.get(\"body\");\n        const bodySection = getSectionForBody(tagBody);\n        if (bodySection) {\n          setSectionParentIsOwner(bodySection, true);\n        }\n        if (isRoot(tag) && !isOnlyChildInParent(tag)) {\n          visit(tag, 37 /* Replace */);\n          enterShallow(tag);\n        }\n      },\n      exit(tag) {\n        if (tag.node.body.attributeTags) return;\n        const [isLast, branches] = getBranches(\n          tag,\n          getSectionForBody(tag.get(\"body\"))\n        );\n        if (isLast) {\n          const [rootTag] = branches[0];\n          const section = getSection(rootTag);\n          const rootExtra = branches[0][0].node.extra;\n          const nodeRef2 = getOptimizedOnlyChildNodeRef(rootTag, section);\n          const rendererIdentifiers = [];\n          let expr = import_compiler39.types.numericLiteral(branches.length);\n          for (let i = branches.length; i--; ) {\n            const [branchTag, branchBodySection] = branches[i];\n            const [testAttr] = branchTag.node.attributes;\n            const consequent = import_compiler39.types.numericLiteral(branchBodySection ? i : -1);\n            if (branchBodySection) {\n              rendererIdentifiers.push(import_compiler39.types.identifier(branchBodySection.name));\n              setClosureSignalBuilder(\n                branchTag,\n                (closureSignal, render, intersection) => {\n                  return callRuntime(\n                    \"conditionalClosure\",\n                    getScopeAccessorLiteral(\n                      closureSignal.referencedBindings\n                    ),\n                    getScopeAccessorLiteral(nodeRef2),\n                    import_compiler39.types.numericLiteral(i),\n                    render,\n                    intersection\n                  );\n                }\n              );\n            }\n            branchTag.remove();\n            expr = testAttr ? import_compiler39.types.conditionalExpression(testAttr.value, consequent, expr) : consequent;\n          }\n          const signal = getSignal(section, nodeRef2, \"if\");\n          signal.build = () => {\n            return callRuntime(\n              \"conditional\",\n              getScopeAccessorLiteral(nodeRef2),\n              ...rendererIdentifiers.reverse()\n            );\n          };\n          signal.hasDownstreamIntersections = () => branches.some(([, bodySection]) => bodySection?.closures);\n          addValue(section, rootExtra.referencedBindings, signal, expr);\n        }\n      }\n    }\n  }),\n  parseOptions: { controlFlow: true },\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseIfTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar ElseTag = {\n  ...IfTag,\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nfunction assertValidCondition(tag) {\n  (0, import_babel_utils28.assertNoVar)(tag);\n  (0, import_babel_utils28.assertNoArgs)(tag);\n  (0, import_babel_utils28.assertNoParams)(tag);\n  assertHasBody(tag);\n  assertNoSpreadAttrs(tag);\n  switch (getTagName(tag)) {\n    case \"if\":\n      assertHasValueAttribute(tag);\n      break;\n    case \"else-if\":\n      assertHasValueAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n    case \"else\":\n      assertOptionalIfAttribute(tag);\n      assertHasPrecedingCondition(tag);\n      break;\n  }\n}\nfunction assertHasPrecedingCondition(tag) {\n  let prev = tag.getPrevSibling();\n  while (prev.node && prev.isMarkoComment()) prev = prev.getPrevSibling();\n  if (!isConditionTag(prev) || getTagName(prev) !== \"else\" && !prev.node.attributes.length) {\n    throw tag.buildCodeFrameError(\n      `The \\`<${getTagName(tag)}>\\` must have a preceding \\`<if=cond>\\`, \\`<else-if=cond>\\`, or \\`<else if=cond>\\`.`\n    );\n  }\n}\nfunction assertHasBody(tag) {\n  if (!(tag.node.body.body.length || tag.node.attributeTags.length)) {\n    throw tag.get(\"name\").buildCodeFrameError(\n      `The \\`${getTagName(tag)}\\` tag requires body content.`\n    );\n  }\n}\nfunction assertHasValueAttribute(tag) {\n  const { node } = tag;\n  const [valueAttr] = node.attributes;\n  if (!import_compiler39.types.isMarkoAttribute(valueAttr) || !valueAttr.default) {\n    throw tag.get(\"name\").buildCodeFrameError(`The \\`${getTagName(tag)}\\` tag requires a value.`);\n  }\n  if (node.attributes.length > 1) {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports the \\`value\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction assertOptionalIfAttribute(tag) {\n  const { node } = tag;\n  const [ifAttr] = node.attributes;\n  if (node.attributes.length > 1 || ifAttr && ifAttr.name !== \"if\") {\n    const start = node.attributes[1].loc?.start;\n    const end = node.attributes[node.attributes.length - 1].loc?.end;\n    const msg = `The \\`${getTagName(tag)}\\` tag only supports an \\`if=\\` attribute.`;\n    if (start == null || end == null) {\n      throw tag.get(\"name\").buildCodeFrameError(msg);\n    } else {\n      throw tag.hub.buildError(\n        { loc: { start, end } },\n        msg,\n        Error\n      );\n    }\n  }\n}\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  let nextTag = tag.getNextSibling();\n  while (nextTag.isMarkoComment()) nextTag = nextTag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push([tag, bodySection]);\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction isRoot(tag) {\n  return isCoreTagName(tag, \"if\");\n}\n\n// src/translator/core/import.ts\nvar import_babel_utils29 = require(\"@marko/compiler/babel-utils\");\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(\n      (0, import_babel_utils29.parseStatements)(tag.hub.file, node.rawValue, node.start, node.end)[0]\n    );\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/translator/core/let.ts\nvar import_compiler40 = require(\"@marko/compiler\");\nvar import_babel_utils30 = require(\"@marko/compiler/babel-utils\");\nvar let_default = {\n  analyze(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    let valueAttr;\n    let valueChangeAttr;\n    for (const attr2 of node.attributes) {\n      if (import_compiler40.types.isMarkoAttribute(attr2)) {\n        if (attr2.name === \"value\") {\n          valueAttr = attr2;\n        } else if (attr2.name === \"valueChange\") {\n          valueChangeAttr = attr2;\n        } else {\n          const start = attr2.loc?.start;\n          const end = attr2.loc?.end;\n          const msg = \"The `let` tag only supports the `value` attribute and its change handler.\";\n          if (start == null || end == null) {\n            throw tag.get(\"name\").buildCodeFrameError(msg);\n          } else {\n            throw tag.hub.buildError(\n              { loc: { start, end } },\n              msg,\n              Error\n            );\n          }\n        }\n      }\n    }\n    (0, import_babel_utils30.assertNoArgs)(tag);\n    (0, import_babel_utils30.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `let` tag requires a tag variable.\");\n    }\n    if (!import_compiler40.types.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The `let` tag variable cannot be destructured.\");\n    }\n    if (valueChangeAttr && (0, import_babel_utils30.computeNode)(valueChangeAttr.value)) {\n      throw tag.get(\"attributes\").find((attr2) => attr2.node === valueChangeAttr).get(\"value\").buildCodeFrameError(\n        \"The `let` tag `valueChange` attribute must be a function.\"\n      );\n    }\n    mergeReferences(getOrCreateSection(tag), tag.node, [\n      valueAttr?.value,\n      valueChangeAttr?.value\n    ]);\n    trackVarReferences(tag, 1 /* let */, void 0, tag.node.extra);\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const tagVar = node.var;\n      const valueAttr = node.attributes.find(\n        (attr2) => import_compiler40.types.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")\n      ) ?? import_compiler40.types.markoAttribute(\"value\", import_compiler40.types.identifier(\"undefined\"));\n      const valueChangeAttr = node.attributes.find(\n        (attr2) => import_compiler40.types.isMarkoAttribute(attr2) && attr2.name === \"valueChange\"\n      );\n      const section = getSection(tag);\n      const binding = tagVar.extra.binding;\n      if (isOutputDOM()) {\n        const signal = initValue(binding, \"state\");\n        const referencedBindings = tag.node.extra.referencedBindings;\n        addValue(section, referencedBindings, signal, valueAttr.value);\n        if (valueChangeAttr) {\n          signal.extraArgs = [valueChangeAttr.value];\n        }\n        signal.buildAssignment = (valueSection, value) => {\n          const scope = getScopeExpression(valueSection, signal.section);\n          return import_compiler40.types.callExpression(signal.identifier, [scope, value]);\n        };\n      } else {\n        translateVar(tag, valueAttr.value);\n        if (valueChangeAttr) {\n          getSerializedScopeProperties(section).set(\n            import_compiler40.types.stringLiteral(\n              getScopeAccessorLiteral(binding).value + \"@\" /* TagVariableChange */\n            ),\n            valueChangeAttr.value\n          );\n        }\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/let.d.marko\"\n};\n\n// src/translator/core/lifecycle.ts\nvar import_compiler41 = require(\"@marko/compiler\");\nvar import_babel_utils31 = require(\"@marko/compiler/babel-utils\");\nvar kRef = Symbol(\"lifecycle attrs reference\");\nvar lifecycle_default = {\n  analyze(tag) {\n    (0, import_babel_utils31.assertNoArgs)(tag);\n    (0, import_babel_utils31.assertNoVar)(tag);\n    (0, import_babel_utils31.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    const { node } = tag;\n    const tagExtra = node.extra ??= {};\n    const section = getOrCreateSection(tag);\n    tagExtra[kRef] = createBinding(\n      currentProgramPath.scope.generateUid(\"lifecycle\"),\n      4 /* derived */,\n      section,\n      void 0,\n      tagExtra\n    );\n    if (node.attributes.length === 0) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `lifecycle` tag requires at least one attribute.\"\n      );\n    }\n    for (const attr2 of node.attributes) {\n      if (import_compiler41.types.isMarkoSpreadAttribute(attr2)) {\n        throw tag.get(\"name\").buildCodeFrameError(\n          \"The `lifecycle` tag does not support `...spread` attributes.\"\n        );\n      }\n      (attr2.value.extra ??= {}).isEffect = true;\n    }\n    (currentProgramPath.node.extra ??= {}).isInteractive = true;\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const section = getSection(tag);\n      const tagExtra = node.extra;\n      const { referencedBindings } = tagExtra;\n      const lifecycleAttrsRef = tagExtra[kRef];\n      if (isOutputDOM()) {\n        const translatedAttrs = translateAttrs(tag);\n        translatedAttrs.statements.push(\n          import_compiler41.types.expressionStatement(\n            callRuntime(\n              \"lifecycle\",\n              scopeIdentifier,\n              getScopeAccessorLiteral(lifecycleAttrsRef),\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        );\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          translatedAttrs.statements\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/lifecycle.d.marko\"\n};\n\n// src/translator/core/log.ts\nvar import_compiler42 = require(\"@marko/compiler\");\nvar import_babel_utils32 = require(\"@marko/compiler/babel-utils\");\nvar log_default = {\n  analyze(tag) {\n    const [valueAttr] = tag.node.attributes;\n    (0, import_babel_utils32.assertNoArgs)(tag);\n    (0, import_babel_utils32.assertNoVar)(tag);\n    (0, import_babel_utils32.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    if (!valueAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `log` tag requires a value.\");\n    }\n    if (tag.node.attributes.length > 1 || !import_compiler42.types.isMarkoAttribute(valueAttr) || !valueAttr.default && valueAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\n        \"The `log` tag only supports the `value` attribute.\"\n      );\n    }\n  },\n  translate: {\n    exit(tag) {\n      const section = getSection(tag);\n      const [valueAttr] = tag.node.attributes;\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      const statement = import_compiler42.types.expressionStatement(\n        import_compiler42.types.callExpression(\n          import_compiler42.types.memberExpression(import_compiler42.types.identifier(\"console\"), import_compiler42.types.identifier(\"log\")),\n          [value]\n        )\n      );\n      if (isOutputHTML()) {\n        tag.insertBefore(statement);\n      } else {\n        addStatement(\"render\", section, referencedBindings, statement);\n      }\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    openTagOnly: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to log a value to the console.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#log\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/log.d.marko\"\n};\n\n// src/translator/core/script.ts\nvar import_compiler43 = require(\"@marko/compiler\");\nvar import_babel_utils33 = require(\"@marko/compiler/babel-utils\");\nvar htmlScriptTagAlternateMsg = \" For a native html `script` tag use the `html-script` core tag instead.\";\nvar script_default = {\n  parse(tag) {\n    const { node } = tag;\n    const { body } = node.body;\n    if (body.length) {\n      let code = \"\";\n      for (const child of body) {\n        if (child.type !== \"MarkoText\") {\n          throw tag.hub.file.hub.buildError(\n            child,\n            \"Unexpected content in `script` tag. Only javascript and typescript is supported.\" + htmlScriptTagAlternateMsg,\n            SyntaxError\n          );\n        }\n        code += child.value;\n      }\n      const start = body[0]?.start;\n      const end = body[body.length - 1]?.end;\n      const bodyStatements = (0, import_babel_utils33.parseStatements)(tag.hub.file, code, start, end);\n      const valueFn = import_compiler43.types.arrowFunctionExpression(\n        [],\n        import_compiler43.types.blockStatement(bodyStatements),\n        traverseContains(bodyStatements, isAwaitExpression)\n      );\n      node.attributes.push(import_compiler43.types.markoAttribute(\"value\", valueFn));\n      node.body.body = [];\n    }\n  },\n  analyze(tag) {\n    const { node } = tag;\n    (0, import_babel_utils33.assertNoArgs)(tag);\n    (0, import_babel_utils33.assertNoParams)(tag);\n    assertNoBodyContent(tag);\n    (0, import_babel_utils33.assertNoAttributeTags)(tag);\n    if (node.var) {\n      throw tag.hub.buildError(\n        node.var,\n        \"The `script` tag does not support a tag variable reference.\" + htmlScriptTagAlternateMsg\n      );\n    }\n    let seenValueAttr = false;\n    for (const attr2 of node.attributes) {\n      if (attr2.type === \"MarkoAttribute\" && attr2.name === \"value\") {\n        if (seenValueAttr) {\n          throw tag.hub.buildError(attr2, \"Invalid duplicate value attribute.\");\n        }\n        seenValueAttr = true;\n        (attr2.value.extra ??= {}).isEffect = true;\n        (currentProgramPath.node.extra ??= {}).isInteractive = true;\n      } else {\n        throw tag.hub.buildError(\n          attr2,\n          \"The `script` tag does not support html attributes.\" + htmlScriptTagAlternateMsg\n        );\n      }\n    }\n    if (!seenValueAttr) {\n      dropReferences(getAllTagReferenceNodes(node));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [valueAttr] = node.attributes;\n      if (!valueAttr) {\n        tag.remove();\n        return;\n      }\n      const section = getSection(tag);\n      const { value } = valueAttr;\n      const referencedBindings = value.extra?.referencedBindings;\n      if (isOutputDOM()) {\n        const { value: value2 } = valueAttr;\n        const isFunction2 = import_compiler43.types.isFunctionExpression(value2) || import_compiler43.types.isArrowFunctionExpression(value2);\n        let inlineBody = null;\n        if (isFunction2 && !(value2.async || value2.generator)) {\n          if (import_compiler43.types.isBlockStatement(value2.body)) {\n            let hasDeclaration = false;\n            for (const child of value2.body.body) {\n              if (import_compiler43.types.isDeclaration(child)) {\n                hasDeclaration = true;\n                break;\n              }\n            }\n            inlineBody = hasDeclaration ? value2.body : value2.body.body;\n          } else {\n            inlineBody = import_compiler43.types.expressionStatement(value2.body);\n          }\n        }\n        addStatement(\n          \"effect\",\n          section,\n          referencedBindings,\n          inlineBody || import_compiler43.types.expressionStatement(\n            import_compiler43.types.callExpression(value2, isFunction2 ? [] : [scopeIdentifier])\n          )\n        );\n      } else {\n        addHTMLEffectCall(section, referencedBindings);\n      }\n      tag.remove();\n    }\n  },\n  html: false,\n  parseOptions: {\n    text: true,\n    preserveWhitespace: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#script\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/script.d.marko\"\n};\nfunction isAwaitExpression(node) {\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ObjectMethod\":\n    case \"ClassPrivateMethod\":\n      return skip;\n    case \"AwaitExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n// src/translator/core/server.ts\nvar import_compiler44 = require(\"@marko/compiler\");\nvar import_babel_utils34 = require(\"@marko/compiler/babel-utils\");\nvar server_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^server\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils34.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler44.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler44.types.markoScriptlet(body, true, \"server\"));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"server <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded on the server.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#server-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/static.ts\nvar import_compiler45 = require(\"@marko/compiler\");\nvar import_babel_utils35 = require(\"@marko/compiler/babel-utils\");\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let body = (0, import_babel_utils35.parseStatements)(file, code, start, start + code.length);\n    if (body.length === 1 && import_compiler45.types.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(import_compiler45.types.markoScriptlet(body, true));\n  },\n  parseOptions: {\n    statement: true,\n    rawOpenTag: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/translator/core/style.ts\nvar import_compiler46 = require(\"@marko/compiler\");\nvar import_babel_utils36 = require(\"@marko/compiler/babel-utils\");\nvar import_magic_string = __toESM(require(\"magic-string\"));\nvar import_path3 = __toESM(require(\"path\"));\nvar STYLE_EXT_REG = /^style((?:\\.[a-zA-Z0-9$_-]+)+)?/;\nvar htmlStyleTagAlternateMsg = \" For a native html `style` tag use the `html-style` core tag instead.\";\nvar style_default = {\n  analyze(tag) {\n    (0, import_babel_utils36.assertNoArgs)(tag);\n    (0, import_babel_utils36.assertNoParams)(tag);\n    (0, import_babel_utils36.assertNoAttributeTags)(tag);\n    const { node } = tag;\n    const ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1]?.slice(1);\n    for (const attr2 of node.attributes) {\n      if (attr2.start == null && attr2.type === \"MarkoAttribute\" && attr2.name === \"class\" && attr2.value.type === \"StringLiteral\" && attr2.value.value === ext) {\n        continue;\n      }\n      throw tag.hub.buildError(\n        attr2.value,\n        \"The `style` does not support html attributes.\" + htmlStyleTagAlternateMsg\n      );\n    }\n    for (const child of node.body.body) {\n      if (child.type !== \"MarkoText\") {\n        throw tag.hub.buildError(\n          child,\n          \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n        );\n      }\n    }\n    if (node.body.body.length > 1) {\n      throw tag.hub.buildError(\n        node.name,\n        \"The `style` tag currently only supports static content.\" + htmlStyleTagAlternateMsg\n      );\n    }\n  },\n  translate(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const { filename, sourceMaps } = file.opts;\n    let ext = STYLE_EXT_REG.exec(node.rawValue || \"\")?.[1] || \".css\";\n    if (node.var && !/\\.module\\./.test(ext)) {\n      ext = \".module\" + ext;\n    }\n    const markoText = node.body.body[0];\n    const { resolveVirtualDependency } = getMarkoOpts();\n    const start = (0, import_babel_utils36.getStart)(file, markoText);\n    const end = (0, import_babel_utils36.getEnd)(file, markoText);\n    let code = markoText.value;\n    let map;\n    if (resolveVirtualDependency && sourceMaps && start !== null && end !== null) {\n      const magicString = new import_magic_string.default(file.code, { filename });\n      magicString.remove(0, start);\n      magicString.remove(end, file.code.length);\n      map = magicString.generateMap({\n        source: filename,\n        includeContent: true\n      });\n      if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n        code += `\n/*# sourceMappingURL=${map.toUrl()}*/`;\n        if (sourceMaps === \"inline\") {\n          map = void 0;\n        }\n      }\n    }\n    const importPath = resolveVirtualDependency?.(filename, {\n      virtualPath: `./${import_path3.default.basename(filename) + ext}`,\n      code,\n      map\n    });\n    if (importPath) {\n      if (!node.var) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler46.types.importDeclaration([], import_compiler46.types.stringLiteral(importPath))\n        );\n      } else if (import_compiler46.types.isIdentifier(node.var)) {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler46.types.importDeclaration(\n            [import_compiler46.types.importDefaultSpecifier(node.var)],\n            import_compiler46.types.stringLiteral(importPath)\n          )\n        );\n      } else {\n        currentProgramPath.pushContainer(\n          \"body\",\n          import_compiler46.types.variableDeclaration(\"const\", [\n            import_compiler46.types.variableDeclarator(\n              node.var,\n              (0, import_babel_utils36.importDefault)(file, importPath, \"style\")\n            )\n          ])\n        );\n      }\n    }\n    tag.remove();\n  },\n  parseOptions: {\n    html: false,\n    text: true,\n    rawOpenTag: true,\n    preserveWhitespace: true\n  },\n  attributes: {}\n};\n\n// src/translator/core/try.ts\nvar import_compiler47 = require(\"@marko/compiler\");\nvar import_babel_utils37 = require(\"@marko/compiler/babel-utils\");\nvar try_default = {\n  analyze(tag) {\n    (0, import_babel_utils37.assertNoVar)(tag);\n    (0, import_babel_utils37.assertNoArgs)(tag);\n    (0, import_babel_utils37.assertNoParams)(tag);\n    (0, import_babel_utils37.assertNoAttributes)(tag);\n    assertNoSpreadAttrs(tag);\n    analyzeAttributeTags(tag);\n    const { node } = tag;\n    const section = getOrCreateSection(tag);\n    if (!node.body.body.length) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The `try` tag requires body content.\");\n    }\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n  },\n  translate: translateByTarget({\n    html: {\n      enter(tag) {\n        if (!getSectionForBody(tag.get(\"body\"))) {\n          tag.remove();\n          return;\n        }\n        setAllSectionsParentIsOwner(tag);\n        flushBefore(tag);\n      },\n      exit(tag) {\n        const tagBody = tag.get(\"body\");\n        const translatedAttrs = translateAttrs(tag);\n        flushInto(tag);\n        writeHTMLResumeStatements(tagBody);\n        tag.insertBefore(translatedAttrs.statements);\n        tag.replaceWith(\n          import_compiler47.types.expressionStatement(\n            callRuntime(\n              \"tryContent\",\n              propsToExpression(translatedAttrs.properties)\n            )\n          )\n        )[0].skip();\n      }\n    },\n    dom: {\n      enter(tag) {\n        setAllSectionsParentIsOwner(tag);\n      },\n      exit(tag) {\n        tag.remove();\n      }\n    }\n  }),\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Used to capture errors and display placeholders for nested content.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#try\"\n    }\n  ],\n  types: runtime_info_default.name + \"/tag-types/try.d.marko\"\n};\nfunction setAllSectionsParentIsOwner(tag) {\n  for (const attrTag2 of tag.get(\"attributeTags\")) {\n    if (attrTag2.isMarkoTag()) {\n      setAllSectionsParentIsOwner(attrTag2);\n    }\n  }\n  const bodySection = getSectionForBody(tag.get(\"body\"));\n  if (bodySection) {\n    setSectionParentIsOwner(bodySection, true);\n  }\n}\n\n// src/translator/core/index.ts\nvar core_default = {\n  taglibId: runtime_info_default.taglibId,\n  \"<attrs>\": attrs_default,\n  \"<await>\": await_default,\n  \"<client>\": client_default,\n  \"<const>\": const_default,\n  \"<debug>\": debug_default,\n  \"<define>\": define_default,\n  \"<effect>\": effect_default,\n  \"<else-if>\": ElseIfTag,\n  \"<else>\": ElseTag,\n  \"<export>\": export_default,\n  \"<for>\": for_default,\n  \"<html-comment>\": html_comment_default,\n  \"<html-script>\": html_script_default,\n  \"<html-style>\": html_style_default,\n  \"<id>\": id_default,\n  \"<if>\": IfTag,\n  \"<import>\": import_default,\n  \"<let>\": let_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<log>\": log_default,\n  \"<return>\": return_default,\n  \"<script>\": script_default,\n  \"<server>\": server_default,\n  \"<static>\": static_default,\n  \"<style>\": style_default,\n  \"<try>\": try_default\n};\n\n// src/translator/visitors/cdata.ts\nvar cdata_default = {\n  translate: {\n    enter(cdata) {\n      throw cdata.buildCodeFrameError(\n        \"CDATA sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/comment.ts\nvar comment_default = {\n  translate: {\n    exit(comment) {\n      comment.remove();\n    }\n  }\n};\n\n// src/translator/visitors/declaration.ts\nvar declaration_default = {\n  translate: {\n    enter(decl) {\n      throw decl.buildCodeFrameError(\n        \"XML declarations sections are not supported in Marko.\"\n      );\n    }\n  }\n};\n\n// src/translator/visitors/document-type.ts\nvar document_type_default = {\n  translate: {\n    exit(documentType) {\n      if (isOutputHTML()) {\n        writeTo(documentType)`<!${documentType.node.value}>`;\n      }\n      documentType.remove();\n    }\n  }\n};\n\n// src/translator/visitors/function.ts\nvar import_compiler48 = require(\"@marko/compiler\");\nvar import_babel_utils38 = require(\"@marko/compiler/babel-utils\");\nvar functionIdsBySection = /* @__PURE__ */ new WeakMap();\nvar function_default = {\n  analyze(fn) {\n    if (fn !== getFnRoot(fn)) {\n      return;\n    }\n    const markoRoot = getMarkoRoot(fn);\n    if (markoRoot && (markoRoot.isMarkoPlaceholder() || markoRoot.isMarkoScriptlet() && markoRoot.node.target === \"server\")) {\n      return;\n    }\n    if (isMarkoAttribute(markoRoot) && ((0, import_babel_utils38.isNativeTag)(markoRoot.parentPath) && /^on[A-Z-]/.test(markoRoot.node.name) || isCoreTagName(markoRoot.parentPath, \"script\") || isCoreTagName(markoRoot.parentPath, \"lifecycle\") || isCoreTagName(markoRoot.parentPath, \"for\"))) {\n      return;\n    }\n    const { node } = fn;\n    const extra = node.extra ??= {};\n    const name2 = extra.name = fn.node.id?.name || (isMarkoAttribute(markoRoot) ? markoRoot.node.default ? import_compiler48.types.toIdentifier(\n      markoRoot.parentPath.has(\"var\") ? markoRoot.parentPath.get(\"var\") : markoRoot.parentPath.get(\"name\")\n    ) : markoRoot.node.name : import_compiler48.types.isVariableDeclarator(fn.parent) && import_compiler48.types.isIdentifier(fn.parent.id) ? fn.parent.id.name : import_compiler48.types.isObjectMethod(node) && import_compiler48.types.isIdentifier(node.key) ? node.key.name : \"anonymous\");\n    const {\n      markoOpts,\n      opts: { filename }\n    } = currentProgramPath.hub.file;\n    const section = getSection(fn);\n    let functionNameCounts = functionIdsBySection.get(section);\n    if (!functionNameCounts) {\n      functionNameCounts = /* @__PURE__ */ new Map();\n      functionIdsBySection.set(section, functionNameCounts);\n    }\n    const index = functionNameCounts.get(name2);\n    let id = \"\";\n    if (index === void 0) {\n      functionNameCounts.set(name2, 0);\n    } else {\n      functionNameCounts.set(name2, index + 1);\n      id = `_${index}`;\n    }\n    extra.section = section;\n    extra.registerId = (0, import_babel_utils38.getTemplateId)(\n      markoOpts,\n      filename,\n      `${section.id}/${name2 + id}`\n    );\n  }\n};\nfunction isMarkoAttribute(path5) {\n  return path5 ? path5.isMarkoAttribute() : false;\n}\n\n// src/translator/visitors/import-declaration.ts\nvar import_babel_utils39 = require(\"@marko/compiler/babel-utils\");\nvar import_declaration_default = {\n  analyze(importDecl) {\n    const { node } = importDecl;\n    const { source } = node;\n    const { value } = source;\n    const tagImport = (0, import_babel_utils39.resolveTagImport)(importDecl, value);\n    if (tagImport) {\n      node.extra ??= {};\n      node.extra.tagImport = tagImport;\n      const tags = importDecl.hub.file.metadata.marko.tags;\n      if (!tags.includes(tagImport)) {\n        tags.push(tagImport);\n      }\n    }\n  },\n  translate: {\n    exit(importDecl) {\n      const { node } = importDecl;\n      const { extra } = node;\n      const tagImport = extra?.tagImport;\n      if (tagImport) {\n        node.source.value = tagImport;\n      }\n    }\n  }\n};\n\n// src/translator/visitors/placeholder.ts\nvar import_compiler49 = require(\"@marko/compiler\");\nvar kBinding = Symbol(\"placeholder node binding\");\nvar kSiblingText = Symbol(\"placeholder has sibling text\");\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(node.value);\n    if (!(confident && (node.escape || isVoid2(computed)))) {\n      (node.extra ??= {})[kBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        getOrCreateSection(placeholder),\n        void 0,\n        node.value.extra\n      );\n      analyzeSiblingText(placeholder);\n    }\n  },\n  translate: {\n    exit(placeholder) {\n      const { node } = placeholder;\n      const { value } = node;\n      const { confident, computed, referencedBindings } = evaluate(value);\n      if (confident && isVoid2(computed)) {\n        placeholder.remove();\n        return;\n      }\n      const isHTML = isOutputHTML();\n      const write2 = writeTo(placeholder);\n      const extra = node.extra || {};\n      const nodeBinding = extra[kBinding];\n      const canWriteHTML = isHTML || confident && node.escape;\n      const method = canWriteHTML ? node.escape ? \"escapeXML\" : \"toString\" : node.escape ? \"data\" : \"html\";\n      const isStateful = isStatefulReferences(referencedBindings);\n      const siblingText = extra[kSiblingText];\n      if (confident && canWriteHTML) {\n        write2`${getHTMLRuntime()[method](computed)}`;\n      } else {\n        if (siblingText === 1 /* Before */) {\n          if (isHTML && isStateful) {\n            write2`<!>`;\n          }\n          visit(placeholder, 37 /* Replace */);\n        } else if (siblingText === 2 /* After */) {\n          visit(placeholder, 37 /* Replace */);\n        } else {\n          if (!isHTML) write2` `;\n          visit(placeholder, 32 /* Get */);\n        }\n        if (isHTML) {\n          write2`${callRuntime(method, value)}`;\n          if (isStateful) {\n            markNode(placeholder, nodeBinding);\n          }\n        } else {\n          addStatement(\n            \"render\",\n            getSection(placeholder),\n            value.extra?.referencedBindings,\n            import_compiler49.types.expressionStatement(\n              method === \"data\" ? callRuntime(\n                \"data\",\n                import_compiler49.types.memberExpression(\n                  scopeIdentifier,\n                  getScopeAccessorLiteral(nodeBinding),\n                  true\n                ),\n                value\n              ) : callRuntime(\n                \"html\",\n                scopeIdentifier,\n                value,\n                getScopeAccessorLiteral(nodeBinding)\n              )\n            )\n          );\n        }\n      }\n      enterShallow(placeholder);\n      placeholder.remove();\n    }\n  }\n};\nfunction analyzeSiblingText(placeholder) {\n  const placeholderExtra = placeholder.node.extra;\n  let prev = placeholder.getPrevSibling();\n  while (prev.node) {\n    const contentType = getNodeContentType(\n      prev,\n      \"endType\"\n    );\n    if (contentType === null) {\n      prev = prev.getPrevSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 1 /* Before */;\n    } else {\n      break;\n    }\n  }\n  if (!prev.node && import_compiler49.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 1 /* Before */;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node) {\n    const contentType = getNodeContentType(\n      next,\n      \"startType\"\n    );\n    if (contentType === null) {\n      next = next.getNextSibling();\n    } else if (contentType === 4 /* Text */ || contentType === 1 /* Dynamic */ || contentType === 2 /* Placeholder */) {\n      return placeholderExtra[kSiblingText] = 2 /* After */;\n    } else {\n      break;\n    }\n  }\n  if (!next.node && import_compiler49.types.isProgram(placeholder.parentPath)) {\n    return placeholderExtra[kSiblingText] = 2 /* After */;\n  }\n  return placeholderExtra[kSiblingText] = 0 /* None */;\n}\nfunction isVoid2(value) {\n  return value == null || value === false;\n}\n\n// src/translator/visitors/referenced-identifier.ts\nvar import_compiler50 = require(\"@marko/compiler\");\nvar abortIdsByExpressionForSection = /* @__PURE__ */ new WeakMap();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"out\":\n        if (import_compiler50.types.isMemberExpression(identifier.parent) && import_compiler50.types.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          identifier.parentPath.replaceWith(import_compiler50.types.identifier(\"$global\"));\n        } else {\n          throw identifier.buildCodeFrameError(\n            \"Only `out.global` is supported for compatibility.\"\n          );\n        }\n        break;\n    }\n  },\n  analyze(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    if (name2 === \"$global\") {\n      setReferencesScope(identifier);\n    } else if (name2 === \"$signal\") {\n      const section = getOrCreateSection(identifier);\n      section.hasAbortSignal = true;\n      setReferencesScope(identifier);\n    }\n  },\n  translate(identifier) {\n    const { name: name2 } = identifier.node;\n    if (identifier.scope.hasBinding(name2)) return;\n    switch (name2) {\n      case \"$global\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler50.types.callExpression(importRuntime(\"$global\"), [])\n          );\n        } else {\n          identifier.replaceWith(\n            import_compiler50.types.memberExpression(scopeIdentifier, import_compiler50.types.identifier(\"$global\"))\n          );\n        }\n        break;\n      case \"$signal\":\n        if (isOutputHTML()) {\n          identifier.replaceWith(\n            import_compiler50.types.callExpression(\n              import_compiler50.types.arrowFunctionExpression(\n                [],\n                import_compiler50.types.blockStatement([\n                  import_compiler50.types.throwStatement(\n                    import_compiler50.types.newExpression(import_compiler50.types.identifier(\"Error\"), [\n                      import_compiler50.types.stringLiteral(\"Cannot use $signal in a server render.\")\n                    ])\n                  )\n                ])\n              ),\n              []\n            )\n          );\n        } else {\n          const section = getSection(identifier);\n          const exprRoot = getExprRoot(identifier);\n          let abortIdsByExpression = abortIdsByExpressionForSection.get(section);\n          let exprId;\n          if (abortIdsByExpression) {\n            exprId = abortIdsByExpression.get(exprRoot);\n          } else {\n            abortIdsByExpression = /* @__PURE__ */ new Map();\n            abortIdsByExpressionForSection.set(section, abortIdsByExpression);\n          }\n          if (!exprId) {\n            exprId = abortIdsByExpression.size;\n            abortIdsByExpression.set(exprRoot, exprId);\n            addStatement(\n              \"render\",\n              section,\n              exprRoot.node.extra?.referencedBindings,\n              import_compiler50.types.expressionStatement(\n                import_compiler50.types.callExpression(importRuntime(\"resetAbortSignal\"), [\n                  scopeIdentifier,\n                  import_compiler50.types.numericLiteral(exprId)\n                ])\n              )\n            );\n          }\n          identifier.replaceWith(\n            import_compiler50.types.callExpression(importRuntime(\"getAbortSignal\"), [\n              scopeIdentifier,\n              import_compiler50.types.numericLiteral(exprId)\n            ])\n          );\n        }\n    }\n  }\n};\n\n// src/translator/visitors/scriptlet.ts\nvar scriptlet_default = {\n  analyze(scriptlet) {\n    if (!scriptlet.node.static) {\n      throw scriptlet.buildCodeFrameError(\n        \"Scriptlets are not supported when using the tags api.\"\n      );\n    }\n    mergeReferences(\n      getOrCreateSection(scriptlet),\n      scriptlet.node,\n      scriptlet.node.body\n    );\n  },\n  translate: {\n    exit(scriptlet) {\n      const { node } = scriptlet;\n      const isHTML = isOutputHTML();\n      if (node.target && node.target !== (isHTML ? \"server\" : \"client\")) {\n        scriptlet.remove();\n        return;\n      }\n      if (isHTML) {\n      } else {\n        traverseReplace(node, \"body\", replaceRegisteredFunctionNode);\n        scriptlet.replaceWithMultiple(node.body);\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar import_compiler54 = require(\"@marko/compiler\");\nvar import_babel_utils43 = require(\"@marko/compiler/babel-utils\");\n\n// src/translator/visitors/tag/attribute-tag.ts\nvar import_compiler51 = require(\"@marko/compiler\");\nvar import_babel_utils40 = require(\"@marko/compiler/babel-utils\");\nvar attribute_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils40.assertNoVar)(tag);\n      (0, import_babel_utils40.assertNoArgs)(tag);\n      const body = tag.get(\"body\");\n      startSection(body);\n      trackParamsReferences(body, 3 /* param */);\n      if (!(0, import_babel_utils40.findParentTag)(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/custom-tag.ts\nvar import_compiler52 = require(\"@marko/compiler\");\nvar import_babel_utils41 = require(\"@marko/compiler/babel-utils\");\nvar import_path4 = __toESM(require(\"path\"));\nvar kChildScopeBinding = Symbol(\"custom tag child scope\");\nvar kChildAttrExprs = Symbol(\"custom tag child attribute expressions\");\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils41.assertAttributesOrSingleArg)(tag);\n      analyzeAttributeTags(tag);\n      const templateFile = (0, import_babel_utils41.getTagTemplate)(tag);\n      if (!templateFile) {\n        const tagName = getTagName(tag);\n        if (tagName && tag.scope.hasBinding(tagName)) {\n          throw tag.get(\"name\").buildCodeFrameError(\n            `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n          );\n        }\n        throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n      }\n      const section = getOrCreateSection(tag);\n      const tagBody = tag.get(\"body\");\n      const tagExtra = tag.node.extra ??= {};\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      tagExtra[kChildScopeBinding] = createBinding(\n        \"#childScope\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      tagExtra[kChildAttrExprs] = /* @__PURE__ */ new Set([tagExtra]);\n      const childFile = (0, import_babel_utils41.loadFileForTag)(tag);\n      if (childFile.opts.filename === tag.hub.file.opts.filename) {\n        mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      } else {\n        const childProgramExtra = childFile.ast.program.extra;\n        analyzeAttrs(\n          tagExtra,\n          section,\n          tag,\n          childProgramExtra?.domExports.params?.props?.[0]\n        );\n        currentProgramPath.node.extra.hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild || false;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (import_compiler52.types.isStringLiteral(node.name)) {\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = isCircularRequest(tag.hub.file, relativePath) ? htmlRendererIdentifier : (0, import_babel_utils41.importDefault)(tag.hub.file, relativePath, getTagName(tag));\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const section = getSection(tag);\n  const inputExport = (0, import_babel_utils41.loadFileForTag)(tag)?.ast.program.extra?.domExports?.params?.props?.[0];\n  const { properties, statements } = inputExport ? translateAttrs(tag, inputExport.props) : {\n    properties: [],\n    statements: []\n  };\n  let providesStatefulAttrs = false;\n  for (const expr of tag.node.extra[kChildAttrExprs]) {\n    if (isReferencedExtra(expr) && isStatefulReferences(expr.referencedBindings)) {\n      providesStatefulAttrs = true;\n      break;\n    }\n  }\n  if (providesStatefulAttrs || tagVar) {\n    const childScopeBinding = node.extra[kChildScopeBinding];\n    const peekScopeId = tag.scope.generateUidIdentifier(\n      childScopeBinding?.name\n    );\n    tag.insertBefore(\n      import_compiler52.types.variableDeclaration(\"const\", [\n        import_compiler52.types.variableDeclarator(peekScopeId, callRuntime(\"peekNextScope\"))\n      ])\n    );\n    getSerializedScopeProperties(section).set(\n      getScopeAccessorLiteral(childScopeBinding),\n      callRuntime(\"writeExistingScope\", peekScopeId)\n    );\n    if (tagVar) {\n      statements.push(\n        import_compiler52.types.expressionStatement(\n          callRuntime(\n            \"setTagVar\",\n            getScopeIdIdentifier(section),\n            peekScopeId,\n            import_compiler52.types.stringLiteral(\n              getResumeRegisterId(\n                section,\n                node.var.extra?.binding,\n                // TODO: node.var is not always an identifier.\n                \"var\"\n              )\n            )\n          )\n        )\n      );\n    }\n  }\n  if (node.extra.tagNameNullable) {\n    const contentProp = getTranslatedBodyContentProperty(properties);\n    let contentId = void 0;\n    if (contentProp) {\n      const contentExpression = contentProp.value;\n      contentProp.value = contentId = tag.scope.generateUidIdentifier(\"content\");\n      const [contentPath] = tag.insertBefore(\n        import_compiler52.types.variableDeclaration(\"const\", [\n          import_compiler52.types.variableDeclarator(\n            contentId,\n            // TODO: only register if needed (child template analysis)\n            contentExpression\n          )\n        ])\n      );\n      contentPath.skip();\n    }\n    let renderTagExpr = callExpression(\n      tagIdentifier,\n      propsToExpression(properties)\n    );\n    if (tagVar) {\n      translateVar(tag, import_compiler52.types.unaryExpression(\"void\", import_compiler52.types.numericLiteral(0)), \"let\");\n      renderTagExpr = import_compiler52.types.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    statements.push(\n      import_compiler52.types.ifStatement(\n        tagIdentifier,\n        import_compiler52.types.expressionStatement(renderTagExpr),\n        contentId && callStatement(contentId)\n      )\n    );\n  } else if (tagVar) {\n    translateVar(\n      tag,\n      callExpression(tagIdentifier, propsToExpression(properties))\n    );\n    setForceResumeScope(section);\n  } else {\n    statements.push(\n      callStatement(tagIdentifier, propsToExpression(properties))\n    );\n  }\n  for (const replacement of tag.replaceWithMultiple(statements)) {\n    replacement.skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const { node } = tag;\n  const extra = node.extra;\n  const childScopeBinding = extra[kChildScopeBinding];\n  const write2 = writeTo(tag);\n  const { file } = tag.hub;\n  const tagName = import_compiler52.types.isIdentifier(node.name) ? node.name.name : import_compiler52.types.isStringLiteral(node.name) ? node.name.value : \"tag\";\n  const relativePath = getTagRelativePath(tag);\n  const childFile = (0, import_babel_utils41.loadFileForTag)(tag);\n  const childExports = childFile.ast.program.extra.domExports;\n  const tagIdentifier = importOrSelfReferenceName(\n    file,\n    relativePath,\n    childExports.setup,\n    tagName\n  );\n  const inputExport = childExports.params?.props?.[0];\n  if (inputExport) {\n    writeAttrsToExports(tag, inputExport, `${getTagName(tag) || \"tag\"}_input`, {\n      circular: childFile.opts.filename === file.opts.filename,\n      tagSection,\n      relativePath,\n      childScopeBinding,\n      attrTagCallsByTag: void 0\n    });\n  }\n  write2`${(0, import_babel_utils41.importNamed)(file, relativePath, childExports.template, `${tagName}_template`)}`;\n  injectWalks(\n    tag,\n    (0, import_babel_utils41.importNamed)(file, relativePath, childExports.walks, `${tagName}_walks`)\n  );\n  if (node.var) {\n    const source = initValue(\n      // TODO: support destructuring\n      node.var.extra.binding\n    );\n    source.register = true;\n    source.buildAssignment = (valueSection, value) => {\n      return import_compiler52.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n        createScopeReadExpression(valueSection, childScopeBinding),\n        value\n      ]);\n    };\n    addStatement(\n      \"render\",\n      tagSection,\n      void 0,\n      import_compiler52.types.expressionStatement(\n        callRuntime(\n          \"setTagVar\",\n          scopeIdentifier,\n          getScopeAccessorLiteral(childScopeBinding),\n          source.identifier\n        )\n      )\n    );\n  }\n  addStatement(\n    \"render\",\n    tagSection,\n    void 0,\n    import_compiler52.types.expressionStatement(\n      import_compiler52.types.callExpression(tagIdentifier, [\n        createScopeReadExpression(tagSection, childScopeBinding)\n      ])\n    )\n  );\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  let relativePath;\n  if (import_compiler52.types.isStringLiteral(node.name)) {\n    const template = (0, import_babel_utils41.getTagTemplate)(tag);\n    relativePath = template && (0, import_babel_utils41.resolveRelativePath)(file, template);\n  } else if (node.extra?.tagNameImported) {\n    relativePath = node.extra.tagNameImported;\n  }\n  if (!relativePath) {\n    const tagName = getTagName(tag);\n    if (tagName && tag.scope.hasBinding(tagName)) {\n      throw tag.get(\"name\").buildCodeFrameError(\n        `Local variables must be in a dynamic tag unless they are PascalCase. Use \\`<\\${${tagName}}/>\\` or rename to \\`${tagName.charAt(0).toUpperCase() + tagName.slice(1)}\\`.`\n      );\n    }\n    throw tag.get(\"name\").buildCodeFrameError(\"Unable to find entry point for custom tag.\");\n  }\n  return relativePath;\n}\nfunction analyzeAttrs(rootTagExtra, section, tag, templateExport) {\n  if (!templateExport) {\n    dropReferences(getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  if (!templateExport.props || tag.node.arguments?.length) {\n    mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n    return;\n  }\n  const attrTagLookup = analyzeAttributeTags(tag);\n  const seen = /* @__PURE__ */ new Set();\n  if (attrTagLookup) {\n    const nodeReferencesByGroup = /* @__PURE__ */ new Map();\n    const analyzeDynamicChildGroup = (group, child) => {\n      const referenceNodes = getAllTagReferenceNodes(child.node);\n      const groupReferences = nodeReferencesByGroup.get(group);\n      if (groupReferences) {\n        groupReferences.referenceNodes = groupReferences.referenceNodes.concat(referenceNodes);\n      } else {\n        nodeReferencesByGroup.set(group, {\n          firstTag: child,\n          referenceNodes\n        });\n      }\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    const attrTags2 = tag.node.body.attributeTags ? tag.get(\"body\").get(\"body\") : tag.get(\"attributeTags\");\n    for (const child of attrTags2) {\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils41.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExports = templateExport.props[attrTagMeta.name];\n          if (childAttrExports) {\n            if (childAttrExports.props && !attrTagMeta.dynamic) {\n              analyzeAttrs(rootTagExtra, section, child, childAttrExports);\n            } else {\n              analyzeDynamicChildGroup(attrTagMeta.group, child);\n            }\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        } else {\n          const group = child.node.extra.attributeTagGroup;\n          let childUsesGroupProp = false;\n          for (const name2 of group) {\n            if (templateExport.props[attrTagLookup[name2].name]) {\n              childUsesGroupProp = true;\n              break;\n            }\n          }\n          if (childUsesGroupProp) {\n            analyzeDynamicChildGroup(group, child);\n          } else {\n            dropReferences(getAllTagReferenceNodes(child.node));\n          }\n        }\n      }\n    }\n    for (const {\n      firstTag: { node },\n      referenceNodes\n    } of nodeReferencesByGroup.values()) {\n      mergeReferences(section, node, referenceNodes);\n      rootTagExtra[kChildAttrExprs].add(node.extra);\n    }\n  }\n  const { attributes } = tag.node;\n  let spreadReferenceNodes;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler52.types.isMarkoAttribute(attr2)) {\n      if (seen.has(attr2.name) || !templateExport.props[attr2.name]) {\n        dropReferences(attr2.value);\n        continue;\n      }\n      seen.add(attr2.name);\n    }\n    if (spreadReferenceNodes) {\n      spreadReferenceNodes.push(attr2.value);\n    } else if (import_compiler52.types.isMarkoSpreadAttribute(attr2)) {\n      spreadReferenceNodes = [attr2.value];\n    } else {\n      rootTagExtra[kChildAttrExprs].add(attr2.value.extra ??= {});\n    }\n  }\n  if (spreadReferenceNodes) {\n    mergeReferences(section, tag.node, spreadReferenceNodes);\n  }\n}\nfunction writeAttrsToExports(tag, templateExport, importAlias, info) {\n  if (tag.node.arguments?.length) {\n    const [arg] = tag.node.arguments;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    addValue(\n      info.tagSection,\n      // technically this should be `arg.extra?.referencedBindings`\n      // but we should probably ensure all other references are dropped in this case before we do that.\n      tag.node.extra?.referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      import_compiler52.types.isSpreadElement(arg) ? import_compiler52.types.memberExpression(arg.argument, import_compiler52.types.numericLiteral(0), true) : arg,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler52.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  if (!templateExport.props || info.circular) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    const tagInputIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      templateExport.id,\n      importAlias\n    );\n    const translatedAttrs = translateAttrs(tag);\n    if (translatedAttrs.statements.length) {\n      addStatement(\n        \"render\",\n        info.tagSection,\n        referencedBindings,\n        translatedAttrs.statements\n      );\n    }\n    let translatedProps = propsToExpression(translatedAttrs.properties);\n    if ((0, import_babel_utils41.isAttributeTag)(tag)) {\n      const attrTagName = getTagName(tag);\n      const parentTag = tag.parentPath;\n      const repeated = analyzeAttributeTags(parentTag)?.[attrTagName]?.repeated;\n      if (repeated) {\n        let attrTagCallsForTag = (info.attrTagCallsByTag ||= /* @__PURE__ */ new Map()).get(\n          parentTag\n        );\n        if (!attrTagCallsForTag) {\n          info.attrTagCallsByTag.set(\n            parentTag,\n            attrTagCallsForTag = /* @__PURE__ */ new Map()\n          );\n        }\n        const attrTagCall = attrTagCallsForTag.get(attrTagName);\n        if (attrTagCall) {\n          attrTagCall.expression = callRuntime(\n            \"attrTags\",\n            attrTagCall.expression,\n            translatedProps\n          );\n          return;\n        } else {\n          attrTagCallsForTag.set(\n            attrTagName,\n            translatedProps = import_compiler52.types.parenthesizedExpression(\n              callRuntime(\"attrTag\", translatedProps)\n            )\n          );\n        }\n      } else {\n        translatedProps = callRuntime(\"attrTag\", translatedProps);\n      }\n    }\n    addValue(\n      info.tagSection,\n      referencedBindings,\n      identifierToSignal(tagInputIdentifier),\n      translatedProps,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler52.types.identifier(tagInputIdentifier.name)\n      )\n    );\n    return;\n  }\n  const seen = /* @__PURE__ */ new Set();\n  const attrTagLookup = analyzeAttributeTags(tag);\n  if (attrTagLookup) {\n    const attrTags2 = tag.get(\"attributeTags\");\n    const statementsByGroup = /* @__PURE__ */ new Map();\n    const translateDynamicAttrTagChildInGroup = (group, index) => {\n      const child = attrTags2[index];\n      let statements = statementsByGroup.get(group)?.statements;\n      if (!statements) {\n        statements = [];\n        statementsByGroup.set(group, {\n          referencedBindings: child.node.extra?.referencedBindings,\n          statements\n        });\n      }\n      return addDynamicAttrTagStatements(\n        attrTags2,\n        index,\n        attrTagLookup,\n        statements,\n        templateExport.props\n      );\n    };\n    for (const attrTagName in attrTagLookup) {\n      seen.add(attrTagLookup[attrTagName].name);\n    }\n    for (let i = 0; i < attrTags2.length; i++) {\n      const child = attrTags2[i];\n      if (child.isMarkoTag()) {\n        if ((0, import_babel_utils41.isAttributeTag)(child)) {\n          const attrTagMeta = attrTagLookup[getTagName(child)];\n          const childAttrExport = templateExport.props[attrTagMeta.name];\n          if (childAttrExport) {\n            if (attrTagMeta.dynamic) {\n              i = translateDynamicAttrTagChildInGroup(attrTagMeta.group, i);\n            } else {\n              writeAttrsToExports(\n                child,\n                childAttrExport,\n                `${importAlias}_${attrTagMeta.name}`,\n                info\n              );\n            }\n          }\n        } else if (child.node.extra?.attributeTagGroup) {\n          i = translateDynamicAttrTagChildInGroup(\n            child.node.extra.attributeTagGroup,\n            i\n          );\n        }\n      }\n    }\n    for (const [\n      group,\n      { referencedBindings, statements }\n    ] of statementsByGroup) {\n      const decls = [];\n      for (const name2 of group) {\n        const attrTagMeta = attrTagLookup[name2];\n        const childAttrExports = templateExport.props[attrTagMeta.name];\n        if (!childAttrExports) continue;\n        const attrExportIdentifier = importOrSelfReferenceName(\n          tag.hub.file,\n          info.relativePath,\n          childAttrExports.id,\n          `${importAlias}_${attrTagMeta.name}`\n        );\n        decls.push(import_compiler52.types.variableDeclarator(getAttrTagIdentifier(attrTagMeta)));\n        addValue(\n          info.tagSection,\n          referencedBindings,\n          identifierToSignal(attrExportIdentifier),\n          getAttrTagIdentifier(attrTagMeta),\n          createScopeReadExpression(info.tagSection, info.childScopeBinding),\n          callRuntime(\n            \"inChild\",\n            getScopeAccessorLiteral(info.childScopeBinding),\n            import_compiler52.types.identifier(attrExportIdentifier.name)\n          )\n        );\n      }\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler52.types.variableDeclaration(\"let\", decls),\n        ...statements\n      ]);\n    }\n  }\n  const bodySection = tag.node.body.extra?.section;\n  if (bodySection && !seen.has(\"content\")) {\n    seen.add(\"content\");\n    if (templateExport.props.content) {\n      const contentExportIdentifier = (0, import_babel_utils41.importNamed)(\n        tag.hub.file,\n        info.relativePath,\n        templateExport.props.content.id,\n        `${importAlias}_content`\n      );\n      addValue(\n        info.tagSection,\n        void 0,\n        // TODO: pretty sure content needs to have the reference group of it's param defaults.\n        identifierToSignal(contentExportIdentifier),\n        import_compiler52.types.callExpression(import_compiler52.types.identifier(bodySection.name), [scopeIdentifier]),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler52.types.identifier(contentExportIdentifier.name)\n        )\n      );\n    }\n  }\n  const { attributes } = tag.node;\n  const staticAttrs = [];\n  let spreadProps;\n  for (let i = attributes.length; i--; ) {\n    const attr2 = attributes[i];\n    if (import_compiler52.types.isMarkoAttribute(attr2)) {\n      const childAttrExports = templateExport.props[attr2.name];\n      if (!childAttrExports || seen.has(attr2.name)) continue;\n      seen.add(attr2.name);\n      if (spreadProps) {\n        spreadProps.push(toObjectProperty(attr2.name, attr2.value));\n        continue;\n      }\n      staticAttrs.push(attr2);\n    } else if (spreadProps) {\n      spreadProps.push(import_compiler52.types.spreadElement(attr2.value));\n    } else {\n      spreadProps = [import_compiler52.types.spreadElement(attr2.value)];\n    }\n  }\n  for (const attr2 of staticAttrs.reverse()) {\n    const childAttrExports = templateExport.props[attr2.name];\n    const attrExportIdentifier = importOrSelfReferenceName(\n      tag.hub.file,\n      info.relativePath,\n      childAttrExports.id,\n      `${importAlias}_${attr2.name}`\n    );\n    addValue(\n      info.tagSection,\n      attr2.value.extra?.referencedBindings,\n      identifierToSignal(attrExportIdentifier),\n      attr2.value,\n      createScopeReadExpression(info.tagSection, info.childScopeBinding),\n      callRuntime(\n        \"inChild\",\n        getScopeAccessorLiteral(info.childScopeBinding),\n        import_compiler52.types.identifier(attrExportIdentifier.name)\n      )\n    );\n  }\n  const missing = new Set(Object.keys(templateExport.props));\n  for (const name2 of seen) missing.delete(name2);\n  if (missing.size) {\n    const referencedBindings = tag.node.extra?.referencedBindings;\n    let getMissingPropValue = buildUndefined2;\n    if (spreadProps) {\n      const spreadId = tag.scope.generateUidIdentifier(`${importAlias}_spread`);\n      spreadProps.reverse();\n      getMissingPropValue = (name2) => toMemberExpression(spreadId, name2);\n      addStatement(\"render\", info.tagSection, referencedBindings, [\n        import_compiler52.types.variableDeclaration(\"const\", [\n          import_compiler52.types.variableDeclarator(spreadId, propsToExpression(spreadProps))\n        ])\n      ]);\n    }\n    for (const name2 of missing) {\n      const childAttrExports = templateExport.props[name2];\n      const attrExportIdentifier = importOrSelfReferenceName(\n        tag.hub.file,\n        info.relativePath,\n        childAttrExports.id,\n        `${importAlias}_${name2}`\n      );\n      addValue(\n        info.tagSection,\n        referencedBindings,\n        identifierToSignal(attrExportIdentifier),\n        getMissingPropValue(name2),\n        createScopeReadExpression(info.tagSection, info.childScopeBinding),\n        callRuntime(\n          \"inChild\",\n          getScopeAccessorLiteral(info.childScopeBinding),\n          import_compiler52.types.identifier(attrExportIdentifier.name)\n        )\n      );\n    }\n  }\n}\nfunction importOrSelfReferenceName(file, request, name2, nameHint) {\n  if (isCircularRequest(file, request)) {\n    return import_compiler52.types.identifier(name2);\n  }\n  return (0, import_babel_utils41.importNamed)(file, request, name2, nameHint);\n}\nfunction isCircularRequest(file, request) {\n  const { filename } = file.opts;\n  return request === filename || request[0] === \".\" && import_path4.default.resolve(filename, \"..\", request) === filename;\n}\nfunction callStatement(id, ...args) {\n  return import_compiler52.types.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return import_compiler52.types.callExpression(id, args.filter(Boolean));\n}\nfunction identifierToSignal(identifier) {\n  return {\n    identifier,\n    hasDownstreamIntersections: always\n  };\n}\nfunction buildUndefined2() {\n  return import_compiler52.types.unaryExpression(\"void\", import_compiler52.types.numericLiteral(0));\n}\nfunction always() {\n  return true;\n}\n\n// src/translator/visitors/tag/dynamic-tag.ts\nvar import_compiler53 = require(\"@marko/compiler\");\nvar import_babel_utils42 = require(\"@marko/compiler/babel-utils\");\nvar kDOMBinding = Symbol(\"dynamic tag dom binding\");\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      (0, import_babel_utils42.assertAttributesOrArgs)(tag);\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      const tagExtra = tag.node.extra ??= {};\n      const tagBody = tag.get(\"body\");\n      const domBinding = tagExtra[kDOMBinding] = createBinding(\n        \"#text\",\n        0 /* dom */,\n        section,\n        void 0,\n        tagExtra\n      );\n      startSection(tagBody);\n      trackVarReferences(tag, 4 /* derived */);\n      trackParamsReferences(tagBody, 3 /* param */);\n      mergeReferences(section, tag.node, getAllTagReferenceNodes(tag.node));\n      addReadToExpression(tag, domBinding);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      const extra = node.extra;\n      const nodeRef2 = extra[kDOMBinding];\n      const section = getSection(tag);\n      const isClassAPI = extra.featureType === \"class\";\n      let tagExpression = node.name;\n      if (import_compiler53.types.isStringLiteral(tagExpression)) {\n        tagExpression = (0, import_babel_utils42.importDefault)(\n          tag.hub.file,\n          getTagRelativePath(tag),\n          tagExpression.value\n        );\n      }\n      if (isClassAPI) {\n        if (isOutputHTML()) {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler53.types.expressionStatement(\n              import_compiler53.types.callExpression(\n                (0, import_babel_utils42.importNamed)(tag.hub.file, getCompatRuntimeFile(), \"s\"),\n                [\n                  import_compiler53.types.identifier(tagExpression.name),\n                  import_compiler53.types.stringLiteral((0, import_babel_utils42.loadFileForTag)(tag).metadata.marko.id)\n                ]\n              )\n            )\n          );\n        } else {\n          currentProgramPath.pushContainer(\n            \"body\",\n            import_compiler53.types.expressionStatement(\n              callRuntime(\n                \"register\",\n                import_compiler53.types.stringLiteral((0, import_babel_utils42.loadFileForTag)(tag).metadata.marko.id),\n                import_compiler53.types.identifier(tagExpression.name)\n              )\n            )\n          );\n        }\n      }\n      const { properties, statements } = translateAttrs(\n        tag,\n        void 0,\n        void 0,\n        isClassAPI ? \"renderBody\" : \"content\"\n      );\n      const args = [];\n      let hasMultipleArgs = false;\n      if (node.arguments?.length) {\n        args.push(...node.arguments);\n        if (properties.length) {\n          hasMultipleArgs = true;\n          args.push(propsToExpression(properties));\n        } else {\n          hasMultipleArgs = node.arguments.length > 1 || import_compiler53.types.isSpreadElement(node.arguments[0]);\n        }\n      } else {\n        const contentProp = getTranslatedBodyContentProperty(properties);\n        if (contentProp) {\n          properties.splice(properties.indexOf(contentProp), 1);\n          args.push(propsToExpression(properties), contentProp.value);\n        } else {\n          args.push(propsToExpression(properties));\n        }\n      }\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        if (node.var) {\n          if (!hasMultipleArgs && args.length === 1) {\n            args.push(import_compiler53.types.unaryExpression(\"void\", import_compiler53.types.numericLiteral(0)));\n          }\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = hasMultipleArgs ? callRuntime(\n          \"dynamicTagArgs\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          import_compiler53.types.arrayExpression(args)\n        ) : callRuntime(\n          \"dynamicTagInput\",\n          getScopeIdIdentifier(section),\n          getScopeAccessorLiteral(nodeRef2),\n          tagExpression,\n          ...args\n        );\n        statements.push(\n          import_compiler53.types.variableDeclaration(\"const\", [\n            import_compiler53.types.variableDeclarator(\n              dynamicScopeIdentifier,\n              callRuntime(\"peekNextScope\")\n            )\n          ])\n        );\n        if (node.var) {\n          statements.push(\n            import_compiler53.types.expressionStatement(\n              callRuntime(\n                \"setTagVar\",\n                getScopeIdIdentifier(section),\n                dynamicScopeIdentifier,\n                import_compiler53.types.stringLiteral(\n                  getResumeRegisterId(\n                    section,\n                    node.var.extra?.binding,\n                    // TODO: node.var is not always an identifier.\n                    \"var\"\n                  )\n                )\n              )\n            ),\n            import_compiler53.types.variableDeclaration(\"const\", [\n              import_compiler53.types.variableDeclarator(node.var, dynamicTagExpr)\n            ])\n          );\n        } else {\n          statements.push(import_compiler53.types.expressionStatement(dynamicTagExpr));\n        }\n        getSerializedScopeProperties(section).set(\n          import_compiler53.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"!\" /* ConditionalScope */\n          ),\n          callRuntime(\"writeExistingScope\", dynamicScopeIdentifier)\n        );\n        getSerializedScopeProperties(section).set(\n          import_compiler53.types.stringLiteral(\n            getScopeAccessorLiteral(nodeRef2).value + \"(\" /* ConditionalRenderer */\n          ),\n          callRuntime(\n            \"normalizeDynamicRenderer\",\n            import_compiler53.types.isIdentifier(tagExpression) ? import_compiler53.types.identifier(tagExpression.name) : tagExpression\n          )\n        );\n        for (const replacement of tag.replaceWithMultiple(statements)) {\n          replacement.skip();\n        }\n      } else {\n        const section2 = getSection(tag);\n        const bodySection = getSectionForBody(tag.get(\"body\"));\n        const signal = getSignal(section2, nodeRef2, \"dynamicTag\");\n        signal.build = () => {\n          return callRuntime(\n            \"dynamicTag\",\n            getScopeAccessorLiteral(nodeRef2),\n            getSignalFn(signal, [scopeIdentifier]),\n            buildSignalIntersections(signal)\n          );\n        };\n        signal.hasDownstreamIntersections = () => true;\n        addValue(\n          section2,\n          node.name.extra?.referencedBindings,\n          signal,\n          bodySection ? import_compiler53.types.logicalExpression(\n            \"||\",\n            tagExpression,\n            import_compiler53.types.callExpression(import_compiler53.types.identifier(bodySection.name), [\n              scopeIdentifier\n            ])\n          ) : tagExpression\n        );\n        if (tag.node.var) {\n          const childScopeLiteral = import_compiler53.types.stringLiteral(\n            getScopeAccessorLiteral(extra[kDOMBinding]).value + \"!\" /* ConditionalScope */\n          );\n          const source = initValue(\n            // TODO: support destructuring\n            tag.node.var.extra.binding\n          );\n          source.register = true;\n          source.buildAssignment = (valueSection, value) => {\n            return import_compiler53.types.callExpression(importRuntime(\"tagVarSignalChange\"), [\n              import_compiler53.types.memberExpression(\n                getScopeExpression(source.section, valueSection),\n                childScopeLiteral,\n                true\n              ),\n              value\n            ]);\n          };\n          addStatement(\n            \"render\",\n            section2,\n            nodeRef2,\n            import_compiler53.types.expressionStatement(\n              callRuntime(\n                \"setTagVar\",\n                scopeIdentifier,\n                childScopeLiteral,\n                source.identifier\n              )\n            )\n          );\n        }\n        if (args.length) {\n          const argsOrInput = hasMultipleArgs ? import_compiler53.types.arrayExpression(args) : args[0];\n          const attrsGetter = import_compiler53.types.arrowFunctionExpression(\n            [],\n            statements.length ? import_compiler53.types.blockStatement(\n              statements.concat(import_compiler53.types.returnStatement(argsOrInput))\n            ) : argsOrInput\n          );\n          const id = currentProgramPath.scope.generateUidIdentifier(\n            tag.get(\"name\").toString() + \"_input\"\n          );\n          let added = false;\n          addValue(\n            section2,\n            node.extra?.referencedBindings,\n            {\n              get identifier() {\n                if (!added) {\n                  currentProgramPath.pushContainer(\n                    \"body\",\n                    import_compiler53.types.variableDeclaration(\"const\", [\n                      import_compiler53.types.variableDeclarator(\n                        id,\n                        callRuntime(\n                          \"dynamicTagAttrs\",\n                          getScopeAccessorLiteral(nodeRef2),\n                          bodySection && import_compiler53.types.identifier(bodySection.name),\n                          hasMultipleArgs && import_compiler53.types.numericLiteral(1)\n                        )\n                      )\n                    ])\n                  );\n                  added = true;\n                }\n                return id;\n              },\n              hasDownstreamIntersections: () => true\n            },\n            attrsGetter\n          );\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/translator/visitors/tag/index.ts\nvar TAG_NAME_IDENTIFIER_REG = /^[A-Z][a-zA-Z0-9_$]*$/;\nvar BINDING_CHANGE_HANDLER = /* @__PURE__ */ new WeakMap();\nvar tag_default = {\n  transform: {\n    enter(tag) {\n      const { node } = tag;\n      const { name: name2, attributes } = tag.node;\n      let crawl = false;\n      if (import_compiler54.types.isStringLiteral(name2)) {\n        const tagName = name2.value;\n        if (tag.scope.getBinding(tagName) && TAG_NAME_IDENTIFIER_REG.test(tagName)) {\n          node.name = withPreviousLocation(import_compiler54.types.identifier(tagName), name2);\n          crawl = true;\n        }\n      }\n      for (let i = 0; i < attributes.length; i++) {\n        const attr2 = attributes[i];\n        if (import_compiler54.types.isMarkoAttribute(attr2) && attr2.bound) {\n          attr2.bound = false;\n          attributes.splice(++i, 0, getChangeHandler(tag, attr2));\n          crawl = true;\n        }\n      }\n      if (crawl) {\n        tag.scope.crawl();\n      }\n    }\n  },\n  analyze: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils43.getTagDef)(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        native_tag_default.analyze.enter(tag);\n        return;\n      }\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.analyze.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const hook = (0, import_babel_utils43.getTagDef)(tag)?.analyzer?.hook;\n      if (hook) {\n        exit(hook, tag);\n        return;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = (0, import_babel_utils43.getTagDef)(tag);\n      const extra = tag.node.extra;\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(\n              `Unsupported arguments on the \\`${attr2.node.name}\\` attribute.`\n            );\n          }\n          if (attr2.node.modifier) {\n            if ((0, import_babel_utils43.isNativeTag)(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(\n                `Unsupported modifier \\`${attr2.node.modifier}\\`.`\n              );\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(\n          import_compiler54.types.variableDeclaration(\"const\", [\n            import_compiler54.types.variableDeclarator(tagNameId, tag.node.name)\n          ])\n        );\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = (0, import_babel_utils43.getTagDef)(tag)?.translator;\n      if (translator) {\n        exit(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\nfunction getChangeHandler(tag, attr2) {\n  const attrName = attr2.name;\n  const changeAttrName = attrName + \"Change\";\n  if (import_compiler54.types.isIdentifier(attr2.value)) {\n    const binding = tag.scope.getBinding(attr2.value.name);\n    if (!binding)\n      return import_compiler54.types.markoAttribute(\n        changeAttrName,\n        buildChangeHandlerFunction(attr2.value)\n      );\n    const existingChangedAttr = BINDING_CHANGE_HANDLER.get(binding.identifier);\n    if (!existingChangedAttr) {\n      const changeHandlerAttr = import_compiler54.types.markoAttribute(\n        changeAttrName,\n        buildChangeHandlerFunction(attr2.value)\n      );\n      BINDING_CHANGE_HANDLER.set(binding.identifier, changeHandlerAttr);\n      return changeHandlerAttr;\n    }\n    if (existingChangedAttr.type === \"Identifier\") {\n      return import_compiler54.types.markoAttribute(\n        changeAttrName,\n        withPreviousLocation(\n          import_compiler54.types.identifier(existingChangedAttr.name),\n          attr2.value\n        )\n      );\n    }\n    const markoRoot = isMarko(binding.path) ? binding.path : getMarkoRoot(binding.path);\n    if (!(markoRoot?.isMarkoTag() || markoRoot?.isMarkoTagBody())) {\n      throw tag.hub.buildError(attr2.value, \"Unable to bind to value.\");\n    }\n    const changeHandlerId = markoRoot.scope.generateUid(changeAttrName);\n    const changeHandlerConst = import_compiler54.types.markoTag(\n      import_compiler54.types.stringLiteral(\"const\"),\n      [import_compiler54.types.markoAttribute(\"value\", existingChangedAttr.value, null, null, true)],\n      import_compiler54.types.markoTagBody([]),\n      null,\n      import_compiler54.types.identifier(changeHandlerId)\n    );\n    BINDING_CHANGE_HANDLER.set(\n      binding.identifier,\n      existingChangedAttr.value = import_compiler54.types.identifier(changeHandlerId)\n    );\n    if (markoRoot.isMarkoTag()) {\n      markoRoot.insertAfter(changeHandlerConst);\n    } else {\n      markoRoot.unshiftContainer(\"body\", changeHandlerConst);\n    }\n    return import_compiler54.types.markoAttribute(\n      changeAttrName,\n      withPreviousLocation(import_compiler54.types.identifier(changeHandlerId), attr2.value)\n    );\n  } else if (import_compiler54.types.isMemberExpression(attr2.value)) {\n    const prop = attr2.value.property;\n    if (!import_compiler54.types.isPrivateName(attr2.value.property)) {\n      return import_compiler54.types.markoAttribute(\n        changeAttrName,\n        import_compiler54.types.memberExpression(\n          import_compiler54.types.cloneNode(attr2.value.object),\n          prop.type === \"Identifier\" ? withPreviousLocation(import_compiler54.types.identifier(prop.name + \"Change\"), prop) : import_compiler54.types.binaryExpression(\n            \"+\",\n            import_compiler54.types.cloneNode(prop),\n            import_compiler54.types.stringLiteral(\"Change\")\n          ),\n          prop.type !== \"Identifier\"\n        )\n      );\n    }\n  }\n  throw tag.hub.buildError(\n    attr2.value,\n    \"Attributes may only be bound to identifiers or member expressions\"\n  );\n}\nfunction buildChangeHandlerFunction(id) {\n  const newId = \"_new_\" + id.name;\n  return import_compiler54.types.arrowFunctionExpression(\n    [withPreviousLocation(import_compiler54.types.identifier(newId), id)],\n    import_compiler54.types.blockStatement([\n      import_compiler54.types.expressionStatement(\n        import_compiler54.types.assignmentExpression(\n          \"=\",\n          withPreviousLocation(import_compiler54.types.identifier(id.name), id),\n          withPreviousLocation(import_compiler54.types.identifier(newId), id)\n        )\n      )\n    ])\n  );\n}\n\n// src/translator/visitors/text.ts\nvar import_compiler55 = require(\"@marko/compiler\");\nvar text_default = {\n  translate: {\n    exit(text) {\n      writeTo(text)`${text.node.value}`;\n      enterShallow(text);\n      text.remove();\n    }\n  }\n};\n\n// src/translator/index.ts\nvar visitors = extractVisitors({\n  Program: program_default,\n  Function: function_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n});\nvar tagDiscoveryDirs = [\"tags\"];\nvar preferAPI = \"tags\";\nvar { transform, analyze, translate } = visitors;\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: visitors.migrate\n    }\n  ]\n];\nfunction getRuntimeEntryFiles(output, optimize) {\n  return [\n    `${runtime_info_default.name}${optimize ? \"\" : \"/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`\n  ];\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyze,\n  getRuntimeEntryFiles,\n  internalEntryBuilder,\n  preferAPI,\n  tagDiscoveryDirs,\n  taglibs,\n  transform,\n  translate\n});\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__toESM","isNodeMode","target","__esModule","value","translator_exports","__export","all","name2","analyze","getRuntimeEntryFiles","internalEntryBuilder","entry_builder_default","preferAPI","tagDiscoveryDirs","taglibs","transform","translate","module","exports","runtime_info_default","name","require","taglibId","import_compiler","import_babel_utils","assertNoSpreadAttrs","tag","attr2","isMarkoSpreadAttribute","buildCodeFrameError","node","assertNoBodyContent","body","length","attrs_default","migrate","assertNoArgs","assertNoParams","assertNoAttributes","assertNoAttributeTags","diagnosticDeprecate","label","fix","tagVar","var","type","remove","constTag","types","markoTag","stringLiteral","markoAttribute","identifier","markoTagBody","replaceWith","attributes","autocomplete","displayText","description","snippet","import_compiler22","import_babel_utils12","import_babel_utils2","evaluate","extra","confident","computed","computeNode","import_compiler21","import_compiler20","import_babel_utils11","import_path2","bindingHasDownstreamExpressions","binding","downstreamExpressions","size","alias","aliases","propertyAliases","values","import_compiler2","import_babel_utils3","kState","Symbol","build","entryFile","state","path","imports","map","it","importDeclaration","init","unshift","importSpecifier","markoOpts","optimize","push","expressionStatement","callExpression","visit","file","visitChild","analyzedTags","metadata","marko","resolveRelativePath","opts","filename","hasInteractiveChild","isInteractive","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","isOptimize","import_compiler4","import_babel_utils4","stringifyClassObject","NON_DIMENSIONAL","stringifyStyleObject","test","toDelimitedString","val","delimiter","stringify","result","curDelimiter","Array","isArray","v","part","isEventHandler","getEventHandlerName","slice","toLowerCase","toString","unsafeXMLReg","replaceUnsafeXML","c","escapeXML","str","replace","unsafeScriptReg","escapeScript","unsafeStyleReg","escapeStyle","toAccess","accessor","start","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","source","nonVoidAttr","escapeAttrValue","constructor","async","KNOWN_SYMBOLS2","Map","symbol","set","AggregateError","of","ArrayBuffer","isView","Atomics","add","and","compareExchange","exchange","isLockFree","load","notify","or","store","sub","wait","BigInt","asIntN","asUintN","BigInt64Array","BigUint64Array","Boolean","console","assert","clear","count","countReset","debug","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","table","time","timeEnd","timeLog","timeStamp","trace","warn","DataView","Date","now","parse","UTC","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Function","globalThis","atob","btoa","clearImmediate","clearInterval","clearTimeout","crypto","getRandomValues","randomUUID","fetch","performance","queueMicrotask","setImmediate","setInterval","setTimeout","structuredClone","URL","URLSearchParams","WritableStream","Int16Array","Int32Array","Int8Array","Intl","Collator","DateTimeFormat","DisplayNames","getCanonicalLocales","ListFormat","Locale","NumberFormat","PluralRules","RelativeTimeFormat","Segmenter","supportedValuesOf","isFinite","isNaN","JSON","groupBy","Math","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","Number","isInteger","isSafeInteger","parseFloat","parseInt","assign","defineProperties","entries","freeze","fromEntries","getOwnPropertyDescriptors","getOwnPropertySymbols","is","isExtensible","isFrozen","isSealed","keys","preventExtensions","seal","setPrototypeOf","Promise","Proxy","RangeError","ReferenceError","Reflect","apply","construct","deleteProperty","has","ownKeys","Set","String","fromCharCode","fromCodePoint","raw","for","SyntaxError","TypeError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","URIError","WeakMap","WeakSet","unsafeAttrChars","lastIndex","import_compiler3","toPropertyName","numericLiteral","toObjectProperty","objectProperty","toMemberExpression","object","optional","prop","optionalMemberExpression","memberExpression","pureFunctions","importRuntime","importStar","getRuntimePath","callRuntime","args","callExpression2","filteredArgs","i","arg","unaryExpression","filterArguments","includes","leadingComments","getHTMLRuntime","getCompatRuntimeFile","modules","import_compiler6","import_babel_utils7","import_babel_utils5","getTagName","isCoreTag","isMarkoTag","tagDef","getTagDef","isCoreTagName","isConditionTag","data","item","forEach","cb","find","findSorted","compare","pos","mid","cur","compareResult","addSorted","len","next","joinRepeatable","a","b","createProgramState","createSectionState","section","arrayOfSectionData","id","import_compiler5","import_babel_utils6","MARKO_FILE_REG","analyzeTagNameType","tagNameType","isStringLiteral","isNativeTag","tagNameNullable","isIdentifier","pending","path5","tagNameImported","nullable","pop","isConditionalExpression","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","scope","getBinding","kind","decl","parent","specifiers","some","isImportDefaultSpecifier","resolvedImport","resolveTagImport","bindingTag","bindingTagName","tagNameDynamic","analyzeExpressionTagName","expressions","childFile","loadFileForTag","ast","program","featureType","needsCompat","startSection","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","programExtra","sections","loc","depth","params","closures","bindings","assignments","content","getContentInfo","upstreamExpression","hasAbortSignal","isBranch","attributeTags","getSectionForBody","getSection","currentPath","getScopeIdIdentifier","generateUidIdentifier","getSectionParentIsOwner","setSectionParentIsOwner","_getScopeIdentifier","getScopeIdentifier","ignoreDefault","scopeId","forEachSection","fn","contentInfo","startType","endType","singleChild","endIndex","getNodeContentType","startIndex","extraMember","isAttributeTag","tagSection","isStatefulSection","isStatefulReferences","referencedBindings","checkStatefulClosures","immediateOnly","closure","import_compiler18","import_babel_utils10","import_path","regexpCharsReg","import_compiler17","import_babel_utils9","import_compiler11","import_babel_utils8","getKnownAttrValues","attrs2","getParentTag","import_compiler7","enter","modulePlugin","plugin","isModulePlugin","default","isFunctionPlugin","exit","translateByTarget","html","dom","import_compiler10","import_compiler8","normalizeStringExpression","parts","strs","exprs","curStr","nextIndex","exprLen","shiftItems","quasis","j","templateLiteral","templateElement","appendLiteral","arr","list","offset","import_compiler9","getWalks","getWalkComment","getSteps","walkCodeToName","enter2","exit2","enterShallow","code","steps","walks","walkComment","walkString","walkCodes","step","lastIndexOf","current","walk","nCodeString","writeTo","number","toCharString","startCode","rangeSize","multiplier","getWalkString","prefix2","postfix","walkLiteral","join","getWrites","getTrailerWrites","trailer","exprsLen","writes","consumeHTML","trailers","writeResult","trailerResult","sequenceExpression","flushBefore","expr","insertBefore","skip","flushInto","pushContainer","getSectionMeta","writePrefix","writePostfix","setup","getSetup","markNode","getScopeAccessorLiteral","tagsWithReturn","getSectionReturnValueIdentifier","setReturnValueIdentifier","return_default","assertNoVar","assertAllowedAttributes","parentTag","isControlFlowTag","valueChange","getSerializedScopeProperties","returnId","variableDeclaration","variableDeclarator","addValue","hasDownstreamIntersections","parseOptions","openTagOnly","descriptionMoreURL","forEachIdentifier","properties","left","argument","el","elements","import_compiler12","getDeclaredBindingExpression","declared","upstreamAlias","property","import_compiler13","createScopeReadPattern","rootDepth","rootPattern","objectPattern","nestedPatterns","ref","propertyKey","propertyValue","isShorthand","pattern","relativeDepth","prev","nestedPattern","getScopeExpression","targetSection","scopeIdentifier","diff","createScopeReadExpression","reference","import_compiler14","simplifyFunction","functionExpression","generator","import_compiler15","toFirstExpressionOrBlock","stmts","isExpressionStatement","expression","toParenthesizedExpressionIfNeeded","blockStatement","parenthesizedExpression","import_compiler16","traverseReplace","container","enter3","VISITOR_KEYS","replacement","traverseContains","check","getSignals","getClosureSignalBuilder","_setClosureSignalBuilder","setClosureSignalBuilder","builder","forceResumeScope","_setForceResumeScope","setForceResumeScope","getHTMLSectionStatements","unimplementedBuild","getSignal","generateSignalName","signals","signal","exportName","export","domExports","intersection","render","renderReferencedBindings","effect","effectReferencedBindings","subscribers","subscribe","getSignalFn","buildSignalIntersections","bindingUtil","ownerScope","isImmediateOwner","isDynamicClosure","getResumeRegisterId","arrowFunctionExpression","addStatement","initValue","runtimeHelper","valueAccessor","intersections","isParamBinding","scopeIdentifier2","valueIdentifier","isValueSignal","aliasSignal","getTranslatedExtraArgs","closureEntries","sort","_closureSection","closureSignal","hasTranslatedExtraArgs","emptyExtraArgs","extraArgs","replaceRenderNode","signal2","intersectionExpression","isMemberExpression","arrayExpression","provider","subscriber","p","providerSignal","finalizeSignalArgs","isArrowFunctionExpression","isBlockStatement","isUnaryExpression","isNumericLiteral","statement","usedReferences","statements","addEffectReferences","addRenderReferences","union","getTemplateId","usedRegisterIdsBySection","getRegisterUID","used","baseId","writeSignals","sortSignals","value2","effectDeclarator","replaceEffectNode","effectIdentifier","referencesScope","isScopeIdentifier","isCallExpression","arguments","register","signalDeclarator","signalDeclaration","isFunctionExpression","functionDeclaration","isExpression","exportNamedDeclaration","toReturnedFunction","rawFn","returnStatement","aReferencedBindings","getReferencedBindings","bReferencedBindings","reserve","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","allSignals","scopeIdIdentifier","assignment","currentSection","signalRefs","accessors","additionalProperties","serializedProperties","serialize","isLiteral","writeScope2","objectExpression","debugVars","root","access","locStr","line","column","filenameRelative","additionalStatements","unshiftContainer","returnIdentifier","replaceAssignedNode","replaceBindingReadNode","replaceRegisteredFunctionNode","getReadReplacement","isAssignedBindingExtra","buildAssignment","binaryExpression","prefix","right","resultId","assignmentExpression","registeredFnsForProgram","getRegisteredFnExpression","classProperty","classPrivateProperty","isRegisteredFnExtra","referencedBindingsInFunction","registedFns","registerId","dom_default","templateIdentifier","template","walksIdentifier","setupIdentifier","paramsBinding","programParamsSignal","styleFile","fs","fileSystem","base","sep","leftDot","indexOf","rightDot","closeBracket","openBracket","getBase","styleMatch","file2","readdirSync","dirname","getStyleFile","importDefault","forEachSectionReverse","childSection","tagParamsSignal","walks2","writes2","setup2","renderer","registeredFns","registeredFn","assignmentPattern","stmt","writeRegisteredFns","exportDefaultDeclaration","import_compiler19","html_default","replaceNode","renderContent","child","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","replaceWithMultiple","htmlRendererIdentifier","read","replaceBindingReadNode2","getRegisteredFnExpression2","registeredFnDeclarations","registeredFnDeclarationsByBody","addRegisteredDeclarations","replaceRegisteredFunctionNode2","previousProgramPath","program_default","crawl","trackParamsReferences","getBindings","readsByExpression","getReadsByExpression","readsByFn","getReadsByFunction","mergedReferences","getMergedReferences","nodes","targetExtra","reads","isEffect","isReferencedExtra","additionalReads","concat","delete","intersectionsBySection","resolveReferencedBindings","pruneBinding","name3","section2","bindingReference","numReferences","binding1","binding2","sources1","getSourceBindings","sources2","isSuperset","sourceSection","bindings2","filter","finalizeReferences","buildTemplateExports","visitedFiles","resolved","loadFileForImport","req","resolveRelativeToEntry","compatFile","templateExport","props","exports2","getMarkoRoot","curPath","isMarko","getExprRoot","getFnRoot","fnPath","isFunction","declare","withPreviousLocation","newNode","originalNode","end","getNextBindingId","setNextBindingId","createBinding","excludeProperties","propBinding","trackVarReferences","canonicalUpstreamAlias","getCanonicalBinding","pruned","createBindingsAndTrackReferences","trackAssignment","setReferencesScope","fnRoot","lVal","babelBinding","referencePaths","constantViolations","referencePath","trackReference","isUpdateExpression","trackReferencesForBinding","patternBinding","element","propPath","getMemberExpressionPropString","isEventOrChangeHandler","exprRoot","addReadToExpression","fnExtra","mergeReferences","compareIntersections","lenDelta","subset","elem","derived","sources","curBinding","this","aLen","bLen","aIndex","bIndex","aValue","bValue","delta","unionSortedRepeatable","exprExtra","dropReferences","getAllTagReferenceNodes","referenceNodes","shouldPrune","exprReference","resolveExpressionReference","createRead","readBinding","readProps","aliasProps","isStatefulBinding","await_default","valueAttr","isMarkoAttribute","isSpreadElement","bodySection","tagBody","import_compiler23","import_babel_utils13","client_default","rawValue","trim","parseStatements","markoScriptlet","rawOpenTag","import_compiler25","import_babel_utils14","import_compiler24","translateVar","initialValue","const_default","varBinding","derivation","import_compiler26","import_babel_utils15","debug_default","debuggerStatement","import_babel_utils21","import_compiler27","import_babel_utils16","attrTagToIdentifierLookup","getAttrTagIdentifier","meta","analyzeAttributeTags","attrTags2","lookup","attrTagNodesByName","sampleAttrTagsForControlFlow","createAttrTagMeta","isRepeated","isLoopTag","curGroup","crawlAttrTags","oldMeta","attrTagMeta","dynamic","repeated","controlFlowTag","sampleAttrName","attributeTagGroup","attrTagNodes","hasRepeatedDynamicAttrTags","attrTagNames","tagName","conditionRoot","seenBranches","attrTag2","curConditionRoot","getConditionRoot","getPrevSibling","import_compiler31","import_babel_utils20","import_compiler30","import_babel_utils19","import_babel_utils18","import_compiler28","import_babel_utils17","kNativeTagBinding","kSerializeMarker","kGetterId","htmlSelectArgs","getRelatedControllable","checked","checkedChange","special","helper","attrs","checkedValue","checkedValueChange","open","openChange","native_tag_default","escape","buildError","buildUndefined","hasEventHandlers","hasDynamicAttributes","seen","relatedControllable","spreadReferenceNodes","propName","exclusiveGroups","assertExclusiveControllableGroups","every","tagName2","toIdentifier","tagExtra","bindingName","isInvokedFunction","nodeRef2","isHTML","write2","getterId","varName","references","getterFnIdentifier","referenceSection","visitAccessor","usedAttrs","maybeStaticAttrs","spreadExpression","skipExpression","spreadProps","skipProps","staticControllable","attr3","spreadElement","staticAttrs","reverse","propsToExpression","getUsedAttrs","writeAtStartOfBody","firstAttr","spreadIdentifier","valueReferences","htmlType","ifStatement","selectArgs","callee","kOnlyChildInParent","kNodeRef","isOnlyChildInParent","branchSize","getOptimizedOnlyChildNodeRef","parentTagName","for_default","isAttrTag","allowAttrs","getForType","isStateful","onlyChildInParentOptimization","forAttrs","forType","bodyStatements","hasStatefulClosures","singleNodeOptimization","keyExpression","defaultParamNames","in","defaultByParamIndex","requiredParamsIndex","by","existingParam","byIdentifier","forTypeToHTMLByRuntime","forScopesIdentifier","newExpression","conditionalExpression","forTagArgs","getBaseArgsInForTag","forTagHTMLRuntime","forTypeToHTMLResumeRuntime","forTypeToRuntime","forTypeToDOMRuntime","param","referencedBindings2","loopArgs","controlFlow","contentProps","translateAttrs","templateExports","contentKey","attrTagLookup","usesExport","addDynamicAttrTagStatements","translatedAttrTag","prevProp","findObjectProperty","contentExpression","isTransparentTag","getNonAttributeTagParent","buildContent","contentProp","getTranslatedBodyContentProperty","index","ifTag","consequentStatements","getConditionTestValue","addAllAttrTagsAsDynamic","nextTag","testValue","alternateStatements","translateIfAttrTag","forTag","buildForRuntimeCall","translateForAttrTag","define_default","translatedAttrs","import_compiler33","import_babel_utils22","effect_default","import_babel_utils23","export_default","import_compiler34","import_babel_utils24","kCommentTagBinding","kGetterId2","html_comment_default","needsBinding","needsGetter","isMarkoPlaceholder","isMarkoText","commentBinding","templateQuasis","templateExpressions","currentQuasi","text","import_compiler35","import_babel_utils25","kGetterId3","html_script_default","bodyPlaceholderNodes","hasBodyPlaceholders","getUsedAttrs2","referencePlaceholder","preserveWhitespace","import_compiler36","import_babel_utils26","kGetterId4","html_style_default","getUsedAttrs3","import_compiler37","import_babel_utils27","id_default","import_compiler39","import_babel_utils28","import_compiler38","BRANCHES_LOOKUP","IfTag","assertHasBody","assertHasValueAttribute","assertHasPrecedingCondition","ifAttr","msg","assertOptionalIfAttribute","assertValidCondition","isLast","branches","getBranches","rootTag","rootExtra","mergeReferenceNodes","branchTag","branchBodySection","isRoot","getNextSibling","ifScopeIdIdentifier","ifBranchIdentifier","branchHasStatefulClosures","testAttr","curStatement","cbNode","rendererIdentifiers","consequent","ElseIfTag","ElseTag","isMarkoComment","import_babel_utils29","import_default","import_compiler40","import_babel_utils30","let_default","valueChangeAttr","valueSection","import_compiler41","import_babel_utils31","kRef","lifecycle_default","lifecycleAttrsRef","import_compiler42","import_babel_utils32","log_default","import_compiler43","import_babel_utils33","htmlScriptTagAlternateMsg","script_default","valueFn","isAwaitExpression","seenValueAttr","isFunction2","inlineBody","hasDeclaration","isDeclaration","import_compiler44","import_babel_utils34","server_default","import_compiler45","import_babel_utils35","static_default","import_compiler46","import_babel_utils36","import_magic_string","import_path3","STYLE_EXT_REG","htmlStyleTagAlternateMsg","style_default","ext","exec","sourceMaps","markoText","resolveVirtualDependency","getStart","getEnd","magicString","generateMap","includeContent","toUrl","importPath","virtualPath","basename","importDefaultSpecifier","import_compiler47","import_babel_utils37","try_default","setAllSectionsParentIsOwner","core_default","cdata_default","cdata","comment_default","comment","declaration_default","document_type_default","documentType","import_compiler48","import_babel_utils38","functionIdsBySection","function_default","markoRoot","isVariableDeclarator","isObjectMethod","functionNameCounts","import_babel_utils39","import_declaration_default","importDecl","tagImport","tags","import_compiler49","kBinding","kSiblingText","placeholder_default","placeholder","isVoid2","placeholderExtra","contentType","analyzeSiblingText","nodeBinding","canWriteHTML","method","siblingText","import_compiler50","abortIdsByExpressionForSection","referenced_identifier_default","hasBinding","throwStatement","exprId","abortIdsByExpression","scriptlet_default","scriptlet","import_compiler54","import_babel_utils43","import_babel_utils40","attribute_tag_default","findParentTag","import_compiler52","import_babel_utils41","import_path4","kChildScopeBinding","kChildAttrExprs","custom_tag_default","assertAttributesOrSingleArg","getTagTemplate","charAt","toUpperCase","childProgramExtra","analyzeAttrs","tagIdentifier","relativePath","getTagRelativePath","isCircularRequest","inputExport","providesStatefulAttrs","childScopeBinding","peekScopeId","contentId","contentPath","renderTagExpr","callStatement","translateHTML","childExports","importOrSelfReferenceName","writeAttrsToExports","circular","attrTagCallsByTag","importNamed","injectWalks","translateDOM","rootTagExtra","nodeReferencesByGroup","analyzeDynamicChildGroup","groupReferences","firstTag","attrTagName","childAttrExports","childUsesGroupProp","importAlias","tagInputIdentifier","identifierToSignal","translatedProps","attrTagCallsForTag","attrTagCall","statementsByGroup","translateDynamicAttrTagChildInGroup","childAttrExport","decls","attrExportIdentifier","contentExportIdentifier","missing","getMissingPropValue","buildUndefined2","spreadId","request","nameHint","resolve","always","import_compiler53","import_babel_utils42","kDOMBinding","dynamic_tag_default","assertAttributesOrArgs","domBinding","isClassAPI","tagExpression","hasMultipleArgs","splice","dynamicScopeIdentifier","dynamicTagExpr","logicalExpression","childScopeLiteral","argsOrInput","attrsGetter","added","TAG_NAME_IDENTIFIER_REG","BINDING_CHANGE_HANDLER","tag_default","bound","getChangeHandler","hook","analyzer","translator","watchFiles","modifier","tagNameId","tagNameVarPath","changeAttrName","buildChangeHandlerFunction","existingChangedAttr","changeHandlerAttr","isMarkoTagBody","changeHandlerId","changeHandlerConst","insertAfter","isPrivateName","cloneNode","newId","visitors","visitors2","_name","extractVisitors","Program","ReferencedIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment"],"sourceRoot":""}