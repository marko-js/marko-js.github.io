{"version":3,"file":"664.5ca511bd.js","mappings":"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","sources":["webpack:///../components/repl/components/file-tabs.marko","webpack:///../components/repl/components/pane.marko","webpack:///../components/repl/components/controllable-select.marko","webpack:///../components/repl/components/playground-link.marko","webpack:///../components/repl/components/match-media.marko","webpack:///../components/repl/components/resizable-panes.marko","webpack:///../components/repl/index.marko","webpack:///./playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ value: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <if=activeEditor>\n          <activeEditor\n            value=selectedFile.content \n            filename=selectedFile.path \n            valueChange(content) {\n              const modifiedFile = { ...selectedFile, content };\n              files = [\n                ...files.slice(0, selectedIndex), \n                modifiedFile,\n                ...files.slice(selectedIndex+1)\n              ];\n              debounce = true;\n            }/>\n        </if>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nstatic function getInitialValue() {\n  try {\n    if (typeof window !== \"undefined\") {\n      return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\n<attrs/{ value:defaultValue }/>\n<let/value = getInitialValue() || defaultValue/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removeEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>","// src/visitors/program/index.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t9 } from \"@marko/compiler\";\n\n// src/util/sections.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"test\"));\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              type = 2 /* DynamicTag */;\n              continue;\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let sectionId = extra.sectionId;\n  if (sectionId === void 0) {\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sectionNameNode = path3.parent?.name;\n    const sectionName = sectionNameNode?.value ?? sectionNameNode?.name ?? \"dynamic\";\n    sectionId = extra.sectionId = programExtra.nextSectionId || 0;\n    programExtra.nextSectionId = sectionId + 1;\n    programExtra.sectionNames = programExtra.sectionNames ?? [];\n    programExtra.sectionNames[sectionId] = currentProgramPath.scope.generateUid(sectionName + \"Body\");\n  }\n  return sectionId;\n}\nfunction getOrCreateSectionId(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSectionId(path3) {\n  let sectionId;\n  let currentPath = path3;\n  while ((sectionId = currentPath.node.extra?.sectionId) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return sectionId;\n}\nfunction createSectionState(key, init) {\n  return [\n    (sectionId) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[sectionId] ??= init && init(sectionId);\n      return sectionData;\n    },\n    (sectionId, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[sectionId] = value;\n    }\n  ];\n}\nvar [getScopeIdIdentifier] = createSectionState(\"scopeIdIdentifier\", (sectionId) => currentProgramPath.scope.generateUidIdentifier(`scope${sectionId}_id`));\nvar [_getScopeIdentifier] = createSectionState(\"scopeIdentifier\", () => t2.identifier(\"undefined\"));\nvar getScopeIdentifier = (sectionId, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(sectionId);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${sectionId}_`);\n  }\n  return scopeId;\n};\nfunction forEachSectionId(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = 0; sectionId < nextSectionId; sectionId++) {\n    fn(sectionId);\n  }\n}\nfunction forEachSectionIdReverse(fn) {\n  const { nextSectionId } = currentProgramPath.node.extra;\n  for (let sectionId = nextSectionId; sectionId--; ) {\n    fn(sectionId);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t3 } from \"@marko/compiler\";\n\n// src/util/sorted-arr.ts\nfunction insertInArray(compare, arr, val) {\n  const len = arr.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return arr;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = val;\n  while (pos < len) {\n    const next = cur;\n    cur = arr[pos];\n    arr[pos++] = next;\n  }\n  arr[len] = cur;\n  return arr;\n}\nfunction findIndex(compare, arr, val) {\n  let max = arr.length;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(arr[mid], val);\n    if (compareResult === 0)\n      return mid;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  return -1;\n}\nfunction createSortedCollection(compare) {\n  return {\n    insert(data, val, immutable = false) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return insertInArray(compare, immutable ? [...data] : data, val);\n        } else {\n          const compareResult = compare(data, val);\n          if (compareResult !== 0) {\n            return compareResult < 0 ? [data, val] : [val, data];\n          }\n        }\n      }\n      return val;\n    },\n    find(data, val) {\n      if (data) {\n        if (Array.isArray(data)) {\n          return data[findIndex(compare, data, val)];\n        } else {\n          return data === val ? data : void 0;\n        }\n      }\n    },\n    count(data) {\n      if (data === void 0)\n        return 0;\n      if (!Array.isArray(data))\n        return 1;\n      return data.length;\n    }\n  };\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, sectionId, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(sectionId);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    sectionId\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSectionId((sectionId) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(sectionId)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getNodeLiteral(reserve) {\n  if (!isOptimize()) {\n    return t3.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n  }\n  return t3.numericLiteral(reserve.id);\n}\nfunction compareReserves(a, b) {\n  return a.sectionId - b.sectionId || a.type - b.type || a.id - b.id;\n}\nvar { insert: insertReserve, count: countReserves } = createSortedCollection(compareReserves);\n\n// src/util/runtime.ts\nimport { types as t4 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val || val === 0 ? val + \"\" : \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (!val && val !== 0) {\n      return \"&zwj;\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n        return \"true\";\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"value\",\n  \"intersection\",\n  \"closure\",\n  \"dynamicClosure\",\n  \"contextClosure\",\n  \"loop\",\n  \"conditional\",\n  \"bindFunction\",\n  \"bindRenderer\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t4.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction callRead(reference, targetSectionId) {\n  return t4.memberExpression(getScopeExpression(reference, targetSectionId), getNodeLiteral(reference), true);\n}\nfunction getScopeExpression(reference, sectionId) {\n  const diff = reference.sectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t4.memberExpression(scope, t4.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t4.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t8 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t7 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t5 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t5.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t5.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t5.templateLiteral(strs.map((raw) => t5.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t5.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t6 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSectionId(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSectionId(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSectionId(path3));\n  const walkComment = getWalkComment(getSectionId(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const sectionId = getSectionId(path3);\n  const steps = getSteps(sectionId);\n  const walks = getWalks(sectionId);\n  const walkComment = getWalkComment(sectionId);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(sectionId) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(sectionId)) || t6.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(sectionId).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (sectionId) => {\n  const name = currentProgramPath.node.extra.sectionNames[sectionId];\n  return t7.identifier(name);\n});\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const sectionId = getSectionId(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(sectionId);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t7.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSectionId(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(sectionId) {\n  const writes = getWrites(sectionId);\n  return {\n    apply: getSetup(sectionId),\n    walks: getWalkString(sectionId),\n    writes: toTemplateOrStringLiteral(writes) || t7.stringLiteral(\"\"),\n    register: getRegisterRenderer(sectionId)\n  };\n}\nfunction markNode(path3) {\n  const sectionId = getSectionId(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markHydrateNode\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const sectionId = getSectionId(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t8.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(sectionId, returnId2);\n      tag.replaceWith(t8.variableDeclaration(\"const\", [\n        t8.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      addValue(sectionId, defaultAttr.extra?.valueReferences, {\n        identifier: importRuntime(\"tagVarSignal\"),\n        hasDownstreamIntersections: () => true\n      }, defaultAttr.value);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar [forceHydrateScope, _setForceHydrateScope] = createSectionState(\"forceHydrateScope\");\nfunction setForceHydrateScope(sectionId) {\n  _setForceHydrateScope(sectionId, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getRegisterScopeBuilder, _setRegisterScopeBuilder] = createSectionState(\"register\");\nfunction setRegisterScopeBuilder(tag, builder) {\n  _setRegisterScopeBuilder(getSectionId(tag.get(\"body\")), builder);\n}\nfunction getSignal(sectionId, reserve) {\n  const key = !Array.isArray(reserve) ? reserve : reserve.map((r) => `${r.sectionId}/${r.id}`).sort().join(\"-\");\n  const signals = getSignals(sectionId);\n  let signal = signals.get(key);\n  if (!signal) {\n    signals.set(key, signal = {\n      identifier: t9.identifier(generateSignalName(sectionId, reserve)),\n      reserve,\n      sectionId,\n      values: [],\n      intersectionDeclarations: [],\n      intersection: [],\n      render: [],\n      hydrate: [],\n      hydrateInlineReferences: void 0,\n      subscribers: [],\n      closures: /* @__PURE__ */ new Map(),\n      hasDownstreamIntersections: () => {\n        if (signal.intersection.length > 0 || signal.closures.size || signal.values.some((v) => v.signal.hasDownstreamIntersections())) {\n          signal.hasDownstreamIntersections = () => true;\n          return true;\n        } else {\n          signal.hasDownstreamIntersections = () => false;\n          return false;\n        }\n      }\n    });\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!reserve) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"intersection\", t9.numericLiteral(reserve.length), getSignalFn(signal, [scopeIdentifier], reserve));\n      };\n    } else if (reserve.sectionId !== sectionId) {\n      const provider = getSignal(reserve.sectionId, reserve);\n      getClosures(sectionId).push(signal.identifier);\n      provider.closures.set(sectionId, signal);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(sectionId);\n        return callRuntime(builder ? \"closure\" : \"dynamicClosure\", getNodeLiteral(reserve), getSignalFn(signal, [scopeIdentifier, t9.identifier(reserve.name)]));\n      };\n    } else {\n      signal.build = () => {\n        return t9.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n      };\n    }\n  }\n  return signal;\n}\nfunction initValue(reserve, valueAccessor = getNodeLiteral(reserve)) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      t9.identifier(reserve.name)\n    ]);\n    if (fn.body.body.length > 0) {\n      return callRuntime(\"value\", valueAccessor, fn);\n    } else {\n      return fn;\n    }\n  };\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const sectionId = reserve.sectionId;\n  const scopeAccessor = getNodeLiteral(reserve);\n  const valueAccessor = t9.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const subscribersAccessor = t9.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}${\"*\" /* SUBSCRIBERS */}`);\n  const signal = initValue(reserve, valueAccessor);\n  addValue(sectionId, providers, signal, compute);\n  signal.intersection.push(t9.expressionStatement(callRuntime(\"dynamicSubscribers\", t9.memberExpression(scopeIdentifier, subscribersAccessor, true), dirtyIdentifier)));\n  addStatement(\"apply\", reserve.sectionId, void 0, t9.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t9.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const sectionId = reserve.sectionId;\n  const signal = getSignal(sectionId, reserve);\n  getClosures(sectionId).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getNodeLiteral(reserve), t9.stringLiteral(templateId), getSignalFn(signal, [scopeIdentifier, t9.identifier(reserve.name)]));\n  };\n  return signal;\n}\nfunction addIntersectionWithGuardedValue(signal, name, value, getStatement) {\n  const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(name);\n  signal.render.push(t9.expressionStatement(t9.assignmentExpression(\"=\", valueIdentifier, value)));\n  signal.intersection.push(getStatement(valueIdentifier));\n  signal.intersectionDeclarations.push(t9.variableDeclarator(valueIdentifier));\n}\nfunction getSignalFn(signal, params, references) {\n  const isSetup = !signal.reserve;\n  const sectionId = signal.sectionId;\n  const needsDirty = !isSetup && signal.hasDownstreamIntersections();\n  let statements;\n  for (const value of signal.values) {\n    const callee = value.signal.identifier;\n    const needsDirty2 = !isSetup && value.signal.hasDownstreamIntersections();\n    if (needsDirty2) {\n      addIntersectionWithGuardedValue(signal, callee.name + \"_value\", value.value, (valueIdentifier) => {\n        return t9.expressionStatement(t9.callExpression(callee, [\n          value.scope,\n          valueIdentifier,\n          dirtyIdentifier\n        ]));\n      });\n    } else {\n      signal.render.push(t9.expressionStatement(t9.callExpression(callee, [value.scope, value.value])));\n    }\n  }\n  const closureEntries = Array.from(signal.closures.entries()).sort(([a], [b]) => a - b);\n  for (const [closureSectionId, closureSignal] of closureEntries) {\n    const builder = getSubscribeBuilder(closureSectionId);\n    if (builder) {\n      signal.intersection.push(builder(closureSignal.identifier));\n    } else if (!signal.hasDynamicSubscribers) {\n      const dynamicSubscribersKey = getNodeLiteral(closureSignal.reserve);\n      dynamicSubscribersKey.value += \"*\" /* SUBSCRIBERS */;\n      signal.hasDynamicSubscribers = true;\n      signal.intersection.push(t9.expressionStatement(callRuntime(\"dynamicSubscribers\", t9.memberExpression(scopeIdentifier, dynamicSubscribersKey, true), dirtyIdentifier)));\n    }\n  }\n  if (Array.isArray(references)) {\n    signal.render.unshift(t9.variableDeclaration(\"const\", references.map((binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n  } else if (references) {\n    signal.render.unshift(t9.variableDeclaration(\"const\", [\n      t9.variableDeclarator(t9.identifier(references.name), callRead(references, sectionId))\n    ]));\n  }\n  if (needsDirty) {\n    params.push(dirtyIdentifier);\n    if (signal.render.length) {\n      statements = [\n        t9.ifStatement(dirtyIdentifier, t9.blockStatement(signal.render)),\n        ...signal.intersection\n      ];\n      if (signal.intersectionDeclarations.length) {\n        statements.unshift(t9.variableDeclaration(\"let\", signal.intersectionDeclarations));\n      }\n    } else {\n      statements = signal.intersection;\n    }\n  } else {\n    statements = signal.render;\n  }\n  return t9.arrowFunctionExpression(params, t9.blockStatement(statements));\n}\nfunction getTagVarSignal(varPath) {\n  const identifiers = Object.values(varPath.getBindingIdentifiers());\n  if (identifiers.length === 1) {\n    return initValue(identifiers[0].extra.reserve);\n  } else if (identifiers.length > 1) {\n    return getDestructureSignal(identifiers, varPath.node);\n  }\n}\nfunction getTagParamsSignal(paramsPaths, pattern = t9.arrayPattern(paramsPaths.map((path3) => path3.node))) {\n  const parameterBindings = paramsPaths.reduce((bindingsLookup, path3) => {\n    return Object.assign(bindingsLookup, path3.getBindingIdentifiers());\n  }, {});\n  return getDestructureSignal(parameterBindings, pattern);\n}\nfunction getDestructureSignal(bindingsByName, destructurePattern) {\n  const bindings = Array.isArray(bindingsByName) ? bindingsByName : Object.values(bindingsByName);\n  if (bindings.length) {\n    const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n    const bindingSignals = bindings.map((binding) => initValue(binding.extra?.reserve));\n    const declarations = t9.variableDeclaration(\"let\", bindings.map((binding) => t9.variableDeclarator(binding)));\n    return {\n      get identifier() {\n        const name = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n        currentProgramPath.pushContainer(\"body\", [\n          t9.variableDeclaration(\"const\", [\n            t9.variableDeclarator(name, this.build(true))\n          ])\n        ]);\n        return name;\n      },\n      build(canCallOnlyWhenDirty) {\n        if (canCallOnlyWhenDirty && !this.hasDownstreamIntersections()) {\n          return t9.arrowFunctionExpression([scopeIdentifier, destructurePattern], t9.blockStatement(bindingSignals.map((signal, i) => t9.expressionStatement(t9.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i]\n          ])))));\n        }\n        return t9.arrowFunctionExpression([\n          scopeIdentifier,\n          valueIdentifier,\n          t9.assignmentPattern(dirtyIdentifier, t9.booleanLiteral(true))\n        ], t9.blockStatement([\n          declarations,\n          t9.ifStatement(dirtyIdentifier, t9.expressionStatement(t9.assignmentExpression(\"=\", destructurePattern, valueIdentifier))),\n          ...bindingSignals.map((signal, i) => t9.expressionStatement(t9.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i],\n            dirtyIdentifier\n          ])))\n        ]));\n      },\n      hasDownstreamIntersections() {\n        return bindings.some((binding) => {\n          const reserve = binding.extra?.reserve;\n          const signal = getSignal(reserve.sectionId, reserve);\n          return signal.hasDownstreamIntersections();\n        });\n      }\n    };\n  }\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.sectionId, provider);\n  providerSignal.intersection.push(t9.expressionStatement(t9.callExpression(subscriber.identifier, [\n    scopeIdentifier,\n    dirtyIdentifier\n  ])));\n}\nfunction generateSignalName(sectionId, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\";\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSectionId) {\n  return callRuntime(\"queueSource\", getScopeExpression2(source.sectionId, targetSectionId), source.identifier, value);\n}\nfunction getScopeExpression2(ownerSectionId, sectionId) {\n  const diff = ownerSectionId !== sectionId ? 1 : 0;\n  let scope = scopeIdentifier;\n  for (let i = 0; i < diff; i++) {\n    scope = t9.memberExpression(scope, t9.identifier(\"_\"));\n  }\n  return scope;\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t9.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t9.nullLiteral();\n        } else if (body.length === 1 && t9.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t9.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSectionId, references, statement, originalNodes, isInlined) {\n  const reserve = references?.references;\n  const signal = getSignal(targetSectionId, reserve);\n  const statements = signal[type === \"apply\" ? \"render\" : type] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"hydrate\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t9.isFunction(node)) {\n          addHydrateReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t9.isFunction(originalNodes)) {\n        addHydrateReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addValue(targetSectionId, references, signal, value, scope = scopeIdentifier) {\n  const reserve = references?.references;\n  const targetSignal = getSignal(targetSectionId, reserve);\n  targetSignal.values.push({ signal, value, scope });\n}\nfunction addHydrateReferences(signal, expression) {\n  const references = expression.extra?.references?.references;\n  let refs = signal.hydrateInlineReferences;\n  if (references) {\n    if (Array.isArray(references)) {\n      for (const ref of references) {\n        refs = insertReserve(refs, ref);\n      }\n    } else {\n      refs = insertReserve(refs, references);\n    }\n  }\n  signal.hydrateInlineReferences = refs;\n}\nfunction getHydrateRegisterId(sectionId, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${sectionId}${name}`);\n}\nfunction writeSignals(sectionId) {\n  const signals = getSignals(sectionId);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let hydrateDeclarator;\n    if (signal.hydrate.length) {\n      const hydrateIdentifier = t9.identifier(\"_hydrate\" + signal.identifier.name);\n      if (signal.hydrateInlineReferences) {\n        signal.hydrate.unshift(t9.variableDeclaration(\"const\", (Array.isArray(signal.hydrateInlineReferences) ? signal.hydrateInlineReferences : [signal.hydrateInlineReferences]).map((binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n      }\n      hydrateDeclarator = t9.variableDeclarator(hydrateIdentifier, callRuntime(\"register\", t9.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), t9.arrowFunctionExpression([scopeIdentifier], signal.hydrate.length === 1 && t9.isExpressionStatement(signal.hydrate[0]) ? signal.hydrate[0].expression : t9.blockStatement(signal.hydrate))));\n      signal.render.push(t9.expressionStatement(callRuntime(\"queueHydrate\", scopeIdentifier, hydrateIdentifier)));\n    }\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t9.stringLiteral(getHydrateRegisterId(sectionId, signal.reserve)), value);\n    }\n    if (t9.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    const signalDeclarator = t9.variableDeclarator(signal.identifier, value);\n    return hydrateDeclarator ? [\n      t9.variableDeclaration(\"const\", [hydrateDeclarator]),\n      t9.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t9.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, sectionId }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLHydrateCall(sectionId, references) {\n  addStatement(\"hydrate\", sectionId, references, void 0, []);\n}\nfunction writeHTMLHydrateStatements(path3, tagVarIdentifier) {\n  const sectionId = getOrCreateSectionId(path3);\n  const referenceGroups = currentProgramPath.node.extra.referenceGroups?.[sectionId] ?? [];\n  const allSignals = Array.from(getSignals(sectionId).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(sectionId);\n  const scopeIdentifier2 = getScopeIdentifier(sectionId, true);\n  path3.unshiftContainer(\"body\", t9.variableDeclaration(\"const\", [\n    t9.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  const refs = [];\n  for (const { references } of referenceGroups) {\n    if (Array.isArray(references)) {\n      for (const reference of references) {\n        if (reference.type !== 0 /* Visit */) {\n          insertReserve(refs, reference);\n        }\n      }\n    }\n  }\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].hydrate.length) {\n      const references = allSignals[i].reserve;\n      if (references) {\n        if (Array.isArray(references)) {\n          for (const ref of references) {\n            insertReserve(refs, ref);\n          }\n        } else {\n          insertReserve(refs, references);\n        }\n      }\n      path3.pushContainer(\"body\", t9.expressionStatement(callRuntime(\"writeHydrateCall\", scopeIdIdentifier, t9.stringLiteral(getHydrateRegisterId(sectionId, references)))));\n    }\n  }\n  const serializedProperties = refs.reduce((acc, ref) => {\n    acc.push(t9.objectProperty(getNodeLiteral(ref), t9.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(sectionId) !== void 0) {\n    serializedProperties.push(t9.objectProperty(t9.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(sectionId);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t9.objectProperty(key, value, !t9.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceHydrateScope(sectionId)) {\n    const isRoot = path3.isProgram();\n    const builder = getRegisterScopeBuilder(sectionId);\n    path3.pushContainer(\"body\", t9.expressionStatement(callRuntime(\"writeHydrateScope\", scopeIdIdentifier, builder ? builder(t9.objectExpression(serializedProperties)) : t9.objectExpression(serializedProperties), isRoot ? scopeIdentifier2 : null)));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, sectionId }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t9.blockStatement([t9.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t9.variableDeclaration(\"const\", (Array.isArray(references) ? references : [references]).map((binding) => t9.variableDeclarator(t9.identifier(binding.name), callRead(binding, sectionId)))));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t9.variableDeclaration(\"const\", [\n    t9.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bindFunction\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(sectionId) {\n  return getSignals(sectionId).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nimport { getTemplateId as getTemplateId2 } from \"@marko/babel-utils\";\nvar html_default = {\n  translate: {\n    exit(program) {\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLHydrateStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(0);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t10.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.pushContainer(\"body\", [\n        t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(rendererId, callRuntime(\"register\", t10.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t10.identifier(\"input\"),\n            tagVarIdentifier,\n            getScopeIdentifier(0)\n          ], t10.blockStatement(renderContent)), t10.stringLiteral(getTemplateId2(optimize, `${filename}`))))\n        ]),\n        t10.exportDefaultDeclaration(rendererId),\n        t10.exportNamedDeclaration(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(t10.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t11 } from \"@marko/compiler\";\nimport { getTemplateId as getTemplateId3 } from \"@marko/babel-utils\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const sectionId = getSectionId(program);\n      const templateIdentifier = t11.identifier(\"template\");\n      const walksIdentifier = t11.identifier(\"walks\");\n      const setupIdentifier = t11.identifier(\"setup\");\n      const attrsSignalIdentifier = t11.identifier(\"attrs\");\n      const closuresIdentifier = t11.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, apply } = getSectionMeta(sectionId);\n      forEachSectionIdReverse((childSectionId) => {\n        writeSignals(childSectionId);\n        if (childSectionId !== sectionId) {\n          const { walks: walks2, writes: writes2, apply: apply2, register: register2 } = getSectionMeta(childSectionId);\n          const closures2 = getClosures(childSectionId);\n          const identifier = getRenderer(childSectionId);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, apply2, closures2.length && t11.arrayExpression(closures2));\n          program.node.body.push(t11.variableDeclaration(\"const\", [\n            t11.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t11.stringLiteral(getHydrateRegisterId(childSectionId, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const isIdentity = t11.isIdentifier(attrs2.var);\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(sectionId, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t11.exportSpecifier(signalIdentifier, bindingIdentifier.extra.reserve.exportIdentifier));\n        }\n        program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(attrsSignalIdentifier, isIdentity ? getSignal(sectionId, attrs2.var.extra.reserve).identifier : getDestructureSignal(attrs2.bindings, attrs2.var)?.build())\n        ])), t11.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(sectionId);\n      program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(templateIdentifier, writes || t11.stringLiteral(\"\"))\n      ])), t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(walksIdentifier, walks || t11.stringLiteral(\"\"))\n      ])), t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n        t11.variableDeclarator(setupIdentifier, t11.isNullLiteral(apply) || !apply ? t11.functionExpression(null, [], t11.blockStatement([])) : apply)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(closuresIdentifier, t11.arrayExpression(closures))\n        ])));\n      }\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.node.body.push(t11.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier, t11.stringLiteral(getTemplateId3(optimize, `${filename}`)))));\n    }\n  }\n};\n\n// src/util/references.ts\nimport { types as t12 } from \"@marko/compiler\";\nvar [getReferenceGroups] = createSectionState(\"apply\", () => [\n  {\n    sectionId: 0,\n    index: 0,\n    count: 0,\n    references: void 0,\n    apply: t12.identifier(\"\"),\n    hydrate: t12.identifier(\"\")\n  }\n]);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSectionId(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSectionId(body), body);\n  }\n}\nfunction trackReferencesForBindings(sectionId, path3, reserveType = 1 /* Store */) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(reserveType, sectionId, identifier, name);\n    insertReferenceGroup(getReferenceGroups(sectionId), {\n      sectionId,\n      index: 0,\n      count: 0,\n      references: binding,\n      apply: t12.identifier(\"\"),\n      hydrate: t12.identifier(\"\")\n    });\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        updateReferenceGroup(immediateRoot, \"references\", binding);\n      }\n      updateReferenceGroup(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction updateReferenceGroup(path3, extraKey, newBinding) {\n  const sectionId = getOrCreateSectionId(path3);\n  const currentGroup = (path3.node.extra ??= {})[extraKey];\n  const newReferences = insertReserve(currentGroup?.references, newBinding, true);\n  if (currentGroup) {\n    currentGroup.count--;\n  }\n  getOrCreateReferenceGroup(sectionId, newBinding);\n  path3.node.extra[extraKey] = getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction mergeReferenceGroups(sectionId, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const group = extra[key];\n    const references = group.references;\n    delete extra[key];\n    group.count--;\n    sectionId = group.sectionId;\n    if (references) {\n      if (Array.isArray(references)) {\n        for (const binding of references) {\n          newReferences = insertReserve(newReferences, binding);\n        }\n      } else {\n        newReferences = insertReserve(newReferences, references);\n      }\n    }\n  }\n  return getOrCreateReferenceGroup(sectionId, newReferences);\n}\nfunction getOrCreateReferenceGroup(sectionId, references) {\n  const newGroup = {\n    sectionId,\n    index: 0,\n    count: 1,\n    references,\n    apply: t12.identifier(\"\"),\n    hydrate: t12.identifier(\"\")\n  };\n  const referenceGroups = getReferenceGroups(sectionId);\n  const existingGroup = findReferenceGroup(referenceGroups, newGroup);\n  if (existingGroup) {\n    existingGroup.count++;\n  } else {\n    insertReferenceGroup(referenceGroups, newGroup);\n  }\n  return existingGroup ?? newGroup;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nvar { insert: insertReferenceGroup, find: findReferenceGroup } = createSortedCollection(function compareReferenceGroups({ references: a }, { references: b }) {\n  if (a) {\n    if (b) {\n      if (Array.isArray(a)) {\n        if (Array.isArray(b)) {\n          const len = a.length;\n          const lenDelta = len - b.length;\n          if (lenDelta !== 0) {\n            return lenDelta;\n          }\n          for (let i = 0; i < len; i++) {\n            const compareResult = compareReserves(a[i], b[i]);\n            if (compareResult !== 0) {\n              return compareResult;\n            }\n          }\n          return 0;\n        } else {\n          return 1;\n        }\n      } else if (Array.isArray(b)) {\n        return -1;\n      } else {\n        return compareReserves(a, b);\n      }\n    } else {\n      return 1;\n    }\n  } else {\n    return b ? -1 : 0;\n  }\n});\nfunction finalizeReferences() {\n  const allReferenceGroups = [];\n  forEachSectionId((sectionId) => {\n    const referenceGroups = getReferenceGroups(sectionId).filter((g) => g.count > 0 || !Array.isArray(g.references));\n    referenceGroups.forEach((g, i) => {\n      g.index = i;\n      g.apply.name = generateReferenceGroupName(\"apply\", sectionId, g.references);\n      g.hydrate.name = generateReferenceGroupName(\"hydrate\", sectionId, g.references);\n    });\n    allReferenceGroups[sectionId] = referenceGroups;\n  });\n  (currentProgramPath.node.extra ??= {}).referenceGroups = allReferenceGroups;\n}\nfunction getReferenceGroup(sectionId, lookup, analyze2 = false) {\n  const referenceGroups = analyze2 ? getReferenceGroups(sectionId) : currentProgramPath.node.extra.referenceGroups[sectionId];\n  let found;\n  if (typeof lookup === \"number\") {\n    found = referenceGroups[lookup];\n  } else {\n    found = findReferenceGroup(referenceGroups, {\n      references: lookup\n    });\n  }\n  if (!found) {\n    throw new Error(`Reference group not found for section ${sectionId}: ${lookup}`);\n  }\n  return found;\n}\nfunction generateReferenceGroupName(type, sectionId, references) {\n  let name = type + (sectionId ? currentProgramPath.node.extra.sectionNames[sectionId].replace(\"_\", \"$\") : \"\");\n  if (references) {\n    if (Array.isArray(references)) {\n      name += \"With\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return currentProgramPath.scope.generateUid(name);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar dirtyIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeReferences();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      dirtyIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"dirty\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t13.importDeclaration([], t13.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t13.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t14.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t15.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t15.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t15.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t16 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t16.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t16.isMarkoTag(sibling) || t16.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t17 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t17);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t19 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t18 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t18.identifier(name) : t18.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t19.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t19.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t19.spreadElement(value));\n    } else {\n      result.properties.push(t19.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t19.objectMethod(\"method\", t19.identifier(\"renderBody\"), params, t19.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t19.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t19.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t19.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t20 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t20.variableDeclaration(kind, [\n    t20.variableDeclarator(t20.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let sectionId = tag.has(\"var\") ? getOrCreateSectionId(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            sectionId ??= getOrCreateSectionId(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            sectionId ??= getOrCreateSectionId(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (sectionId !== void 0) {\n        reserveScope(0 /* Visit */, sectionId, node, name, `#${tag.get(\"name\").evaluate().value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const sectionId = getSectionId(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t21.arrowFunctionExpression([], t21.blockStatement([\n            t21.throwStatement(t21.newExpression(t21.identifier(\"Error\"), [\n              t21.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSectionId = getSectionId(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t21.expressionStatement(callRead(extra.reserve, referenceSectionId)));\n            } else {\n              createElFunction ??= t21.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bindFunction\", getScopeExpression(extra.reserve, referenceSectionId), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t21.variableDeclaration(\"const\", [\n              t21.variableDeclarator(createElFunction, t21.arrowFunctionExpression([scopeIdentifier], t21.memberExpression(scopeIdentifier, getNodeLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getNodeLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t21.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t21.expressionStatement(callRuntime(helper, t21.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLHydrateCall(sectionId, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t21.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"hydrate\", sectionId, valueReferences, t21.expressionStatement(callRuntime(\"on\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"apply\", sectionId, valueReferences, t21.expressionStatement(callRuntime(\"attr\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t22 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const sectionId = getOrCreateSectionId(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLHydrateStatements(tagBody);\n  if (t22.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t22.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t22.objectProperty(t22.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t22.unaryExpression(\"void\", t22.numericLiteral(0)), \"let\");\n      renderTagExpr = t22.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t22.ifStatement(tagIdentifier, t22.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const sectionId = getSectionId(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t22.arrowFunctionExpression([], t22.blockStatement([])), t22.stringLiteral(getHydrateRegisterId(sectionId, node.var.extra?.reserve)), getScopeIdIdentifier(sectionId))));\n    setForceHydrateScope(sectionId);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSectionId = getSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySectionId = getSectionId(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSectionId).push(callRuntime(\"childClosures\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getNodeLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySectionId !== tagSectionId) {\n    attrsObject ??= t22.objectExpression([]);\n    attrsObject.properties.push(t22.objectProperty(t22.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySectionId))));\n  }\n  if (node.var) {\n    const source = initValue(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"apply\", tagSectionId, void 0, t22.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getNodeLiteral(binding), source.identifier)));\n  }\n  addStatement(\"apply\", tagSectionId, void 0, t22.expressionStatement(t22.callExpression(tagIdentifier, [callRead(binding, tagSectionId)])));\n  if (attrsObject && tagAttrsIdentifier) {\n    addValue(tagSectionId, tag.node.extra.attrsReferences, {\n      identifier: tagAttrsIdentifier,\n      hasDownstreamIntersections: () => true\n    }, attrsObject, callRead(binding, tagSectionId));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t22.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t22.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t22.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t23 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t23.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t23.isBlockStatement(body)) {\n    return body;\n  }\n  return t23.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferenceGroups(getOrCreateSectionId(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      updateReferenceGroup(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t24.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t24.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(dynamicScopeIdentifier, dynamicTagExpr)\n          ]))[0].skip();\n        }\n        const sectionId = getSectionId(tag);\n        writeTo(tag)`${callRuntime(\"markHydrateControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(node.extra.reserve))}`;\n        getSerializedScopeProperties(sectionId).set(t24.stringLiteral(getNodeLiteral(node.extra.reserve).value + \"!\"), dynamicScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t24.stringLiteral(getNodeLiteral(node.extra.reserve).value + \"(\"), node.name);\n      } else {\n        const sectionId = getSectionId(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const hasBody = sectionId !== bodySectionId;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySectionId);\n        const tagNameReserve = node.extra?.reserve;\n        const signal = getSignal(sectionId, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getNodeLiteral(tagNameReserve), getSignalFn(signal, [scopeIdentifier]));\n        };\n        addValue(sectionId, node.extra?.nameReferences, signal, renderBodyIdentifier ? t24.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const name = currentProgramPath.node.extra.sectionNames[sectionId];\n          const signal2 = getSignal(sectionId, node.extra?.attrsReferences?.references);\n          const attrsGetter = t24.arrowFunctionExpression([], attrsObject ?? t24.objectExpression([]));\n          addIntersectionWithGuardedValue(signal2, name + \"_attrs\", attrsGetter, (attrsIdentifier) => {\n            return t24.expressionStatement(callRuntime(\"dynamicTagAttrs\", scopeIdentifier, getNodeLiteral(tagNameReserve), attrsIdentifier, renderBodyIdentifier, dirtyIdentifier));\n          });\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t25.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t25.variableDeclaration(\"const\", [\n            t25.variableDeclarator(info.identifier, t25.arrayExpression([]))\n          ]) : t25.variableDeclaration(\"let\", [\n            t25.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t25.expressionStatement(info.repeated ? t25.callExpression(t25.memberExpression(info.identifier, t25.identifier(\"push\")), [attrsObject]) : t25.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, t25.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t26.variableDeclaration(\"const\", [\n          t26.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t27 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"apply\", getSectionId(placeholder), valueReferences, t27.expressionStatement(method === \"data\" ? callRuntime(\"data\", t27.memberExpression(scopeIdentifier, getNodeLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getNodeLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t27.isMarkoComment(path3) || t27.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"apply\", getSectionId(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      const sectionId = getOrCreateSectionId(tag);\n      trackReferencesForBindings(sectionId, varPath, 1 /* Store */);\n      for (const key in bindings) {\n        const binding = bindings[key].extra.reserve;\n        binding.exportIdentifier = getReferenceGroup(sectionId, binding, true).apply;\n      }\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initValue(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t28 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t28.isBlockStatement(body)) {\n    return body;\n  }\n  return t28.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t29.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySectionId) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    sectionId: bodySectionId\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const sectionId = getOrCreateSectionId(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySectionId = getOrCreateSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferenceGroups(sectionId, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences.references;\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const sectionId = getSectionId(tag);\n  const bodySectionId = getSectionId(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySectionId);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markHydrateScopeStart\", getScopeIdIdentifier(bodySectionId))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        return t29.assignmentExpression(\"=\", getScopeIdentifier(bodySectionId), scope);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(sectionId));\n    }\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t29.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(sectionId2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return t29.expressionStatement(callRuntime(\"inConditionalScope\", scopeIdentifier, dirtyIdentifier, subscriber, getNodeLiteral(extra.reserve)));\n        });\n        if (isStateful) {\n          setRegisterRenderer(sectionId2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t29.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const signal = getSignal(sectionId, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getNodeLiteral(extra.reserve), getSignalFn(signal, [scopeIdentifier]));\n      };\n      signal.hasDownstreamIntersections = () => branches.some((b) => getClosures(b.sectionId).length > 0);\n      addValue(sectionId, extra.conditionalReferences, signal, expr);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = getScopeIdentifier(branches[0].sectionId);\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, sectionId: sectionId2 } = branches[i];\n        const branchScopeIdentifier = getScopeIdentifier(sectionId2, true);\n        branchScopeIdentifier.name = ifScopeIdentifier.name;\n        if (isStateful) {\n          tag2.node.body.body.push(t29.expressionStatement(callRuntime(\"register\", t29.assignmentExpression(\"=\", ifRendererIdentifier, t29.arrowFunctionExpression([], t29.blockStatement([]))), t29.stringLiteral(getHydrateRegisterId(sectionId2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t29.expressionStatement(t29.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdIdentifier(sectionId2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t29.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          t29.variableDeclaration(\"let\", [\n            singleNodeOptimization && t29.variableDeclarator(ifScopeIdIdentifier),\n            t29.variableDeclarator(ifScopeIdentifier),\n            t29.variableDeclarator(ifRendererIdentifier)\n          ].filter(Boolean)),\n          statement\n        ]);\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markHydrateControlSingleNodeEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markHydrateControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(sectionId).set(t29.stringLiteral(getNodeLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(sectionId).set(t29.stringLiteral(getNodeLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const references = defaultAttr.extra?.valueReferences;\n      const derivation = getTagVarSignal(tag.get(\"var\"));\n      addValue(sectionId, references, derivation, defaultAttr.value);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const sectionId = getSectionId(tag);\n    reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t32.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t32.isFunctionExpression(value) || t32.isArrowFunctionExpression(value) && t32.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t32.traverse(value.body, (node2) => {\n            if (t32.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"hydrate\", sectionId, defaultAttr.extra?.valueReferences, inlineStatements || t32.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLHydrateCall(sectionId, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const sectionId = getSectionId(tag);\n      reserveScope(1 /* Store */, sectionId, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const sectionId = getSectionId(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"hydrate\", sectionId, node.extra.attrsReferences, t33.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getNodeLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLHydrateCall(sectionId, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t34.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t34.variableDeclaration(\"const\", [t34.variableDeclarator(node.var, id)]));\n    } else {\n      const source = initValue(tagVar.extra.reserve);\n      addValue(getSectionId(tag), void 0, source, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      const sectionId = getOrCreateSectionId(tag);\n      tag.node.extra.attrsReferences = mergeReferenceGroups(sectionId, tag.node.attributes.filter((attr2) => t35.isMarkoAttribute(attr2) && attr2.extra?.valueReferences !== void 0).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      tag.node.extra.isStateful = !!tag.node.extra.attrsReferences && !Object.keys(tag.node.extra.nestedAttributeTags).length;\n      tag.node.extra.singleNodeOptimization = tag.node.body.body.length === 1;\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySectionId = getSectionId(tag.get(\"body\"));\n    const sectionId = getSectionId(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild, attrsReferences }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    setSubscriberBuilder(tag, (signal2) => {\n      return t35.expressionStatement(callRuntime(\"inLoopScope\", scopeIdentifier, dirtyIdentifier, signal2, getNodeLiteral(reserve)));\n    });\n    tag.remove();\n    const rendererId = getRenderer(bodySectionId);\n    const ofAttr = findName(attributes, \"of\");\n    const toAttr = findName(attributes, \"to\");\n    const inAttr = findName(attributes, \"in\");\n    let loopFunctionBody = t35.nullLiteral();\n    let tagParams = params;\n    if (ofAttr) {\n      const byAttr = findName(attributes, \"by\");\n      loopFunctionBody = t35.arrayExpression([\n        ofAttr.value,\n        byAttr ? byAttr.value : t35.nullLiteral()\n      ]);\n    } else if (toAttr) {\n      const fromAttr = findName(attributes, \"from\");\n      const stepAttr = findName(attributes, \"step\");\n      loopFunctionBody = callRuntime(\"computeLoopToFrom\", toAttr.value, fromAttr ? fromAttr.value : t35.numericLiteral(0), stepAttr ? stepAttr.value : t35.numericLiteral(1));\n    } else if (inAttr) {\n      loopFunctionBody = callRuntime(\"computeLoopIn\", inAttr.value);\n      tagParams = [t35.arrayPattern(params)];\n    }\n    const signal = getSignal(sectionId, reserve);\n    const paramsSignal = getTagParamsSignal(paramsPath, t35.arrayPattern(tagParams));\n    signal.build = () => {\n      return callRuntime(\"loop\", getNodeLiteral(reserve), rendererId, paramsSignal?.build());\n    };\n    signal.hasDownstreamIntersections = () => paramsSignal?.hasDownstreamIntersections() || getClosures(bodySectionId).length > 0;\n    addValue(sectionId, attrsReferences, signal, loopFunctionBody);\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const sectionId = getSectionId(tag);\n    const tagBody = tag.get(\"body\");\n    const bodySectionId = getSectionId(tagBody);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params },\n      extra: { isStateful, singleNodeOptimization, isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const toAttr = findName(attributes, \"to\");\n    const byAttr = findName(attributes, \"by\");\n    const block = t35.blockStatement(body);\n    const write2 = writeTo(tag);\n    const replacement = [];\n    let byParams;\n    let keyExpression = t35.identifier(\"NOO\");\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markHydrateScopeStart\", getScopeIdIdentifier(bodySectionId))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        const tempScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"s\");\n        return t35.callExpression(t35.arrowFunctionExpression([tempScopeIdentifier], t35.sequenceExpression([\n          t35.callExpression(t35.memberExpression(getScopeIdentifier(bodySectionId), t35.identifier(\"set\")), [keyExpression, tempScopeIdentifier]),\n          tempScopeIdentifier\n        ])), [scope]);\n      });\n      getSerializedScopeProperties(bodySectionId).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(sectionId));\n    }\n    if (byAttr && isStateful) {\n      const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n      replacement.push(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(byIdentifier, byAttr.value)\n      ]));\n      byParams = [];\n      keyExpression = t35.callExpression(byIdentifier, byParams);\n    }\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      keyExpression = keyParam;\n      if (valParam) {\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, t35.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      replacement.push(t35.forInStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(keyParam)]), inAttr.value, block));\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      let [valParam, indexParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      if (!t35.isIdentifier(valParam) && byParams) {\n        const tempValParam = currentProgramPath.scope.generateUidIdentifier(\"v\");\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, tempValParam)\n        ]));\n        valParam = tempValParam;\n      }\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(indexParam, \"i\");\n        replacement.push(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexName, t35.numericLiteral(0))\n        ]));\n        block.body.unshift(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexParam, t35.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t35.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        replacement.push(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      if (byParams) {\n        byParams.push(valParam, indexParam);\n      } else {\n        keyExpression = indexParam;\n      }\n      replacement.push(t35.forOfStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (toAttr) {\n      const stepValue = findName(attributes, \"step\")?.value ?? t35.numericLiteral(1);\n      const fromValue = findName(attributes, \"from\")?.value ?? t35.numericLiteral(0);\n      let [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const indexName = tag.scope.generateUidIdentifier(\"i\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      const fromName = tag.scope.generateUidIdentifier(\"from\");\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        keyExpression = indexParam;\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(indexParam, t35.binaryExpression(\"+\", fromName, t35.binaryExpression(\"*\", indexName, stepName)))\n        ]));\n      }\n      replacement.push(t35.forStatement(t35.variableDeclaration(\"let\", [\n        t35.variableDeclarator(fromName, t35.logicalExpression(\"??\", fromValue, t35.numericLiteral(0))),\n        t35.variableDeclarator(stepName, t35.logicalExpression(\"??\", stepValue, t35.numericLiteral(1))),\n        t35.variableDeclarator(stepsName, t35.binaryExpression(\"/\", t35.binaryExpression(\"-\", toAttr.value, fromName), stepName)),\n        t35.variableDeclarator(indexName, t35.numericLiteral(0))\n      ]), t35.binaryExpression(\"<=\", indexName, stepsName), t35.updateExpression(\"++\", indexName), block));\n    }\n    if (isStateful) {\n      const forScopeIdsIdentifier = tag.scope.generateUidIdentifier(\"forScopeIds\");\n      const forScopesIdentifier = getScopeIdentifier(bodySectionId);\n      replacement.unshift(t35.variableDeclaration(\"const\", [\n        singleNodeOptimization && t35.variableDeclarator(forScopeIdsIdentifier, t35.arrayExpression([])),\n        t35.variableDeclarator(forScopesIdentifier, t35.newExpression(t35.identifier(\"Map\"), []))\n      ].filter(Boolean)));\n      if (singleNodeOptimization) {\n        block.body.push(t35.expressionStatement(t35.callExpression(t35.memberExpression(forScopeIdsIdentifier, t35.identifier(\"push\")), [getScopeIdIdentifier(bodySectionId)])));\n        write2`${callRuntime(\"markHydrateControlSingleNodeEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve), forScopeIdsIdentifier)}`;\n      } else {\n        write2`${callRuntime(\"markHydrateControlEnd\", getScopeIdIdentifier(sectionId), getNodeLiteral(reserve))}`;\n      }\n      getSerializedScopeProperties(sectionId).set(t35.stringLiteral(getNodeLiteral(reserve).value + \"(\"), t35.conditionalExpression(t35.memberExpression(forScopesIdentifier, t35.identifier(\"size\")), forScopesIdentifier, t35.identifier(\"undefined\")));\n    }\n    flushInto(tag);\n    writeHTMLHydrateStatements(tagBody);\n    block.body.push(t35.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple(replacement);\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t35.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t35.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t36 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId4,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const sectionId = getOrCreateSectionId(tag);\n      if (sectionId === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t36.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t36.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId4(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t36.variableDeclaration(\"const\", [\n        t36.variableDeclarator(node.var, callRuntime(\"getInContext\", t36.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const defaultAttr = node.attributes.find((attr2) => t37.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")) ?? t37.markoAttribute(\"value\", t37.identifier(\"undefined\"));\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t37.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (isOutputDOM()) {\n      const sectionId = getSectionId(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initValue(binding);\n      const references = defaultAttr.extra?.valueReferences;\n      const isSetup = !references;\n      if (!isSetup) {\n      } else {\n        addValue(sectionId, references, source, defaultAttr.value);\n      }\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSectionId(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t38 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSectionId(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t38.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t38.expressionStatement(callRuntime(\"pushContext\", t38.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySectionId = getSectionId(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySectionId);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLHydrateStatements(tag.get(\"body\"));\n        tag.insertAfter(t38.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t39 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([], t39.stringLiteral(importPath)));\n      } else if (t39.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([t39.importDefaultSpecifier(tag.node.var)], t39.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t39.variableDeclaration(\"const\", [\n          t39.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t40 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t40.variableDeclaration(\"const\", [\n        t40.variableDeclarator(tag.node.var, t40.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t41 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t41.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t41.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t42 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t42.markoTag(t42.stringLiteral(\"attrs\"), void 0, t42.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t42.isMemberExpression(identifier.parent) && t42.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t42.markoTag(t42.stringLiteral(\"get\"), void 0, t42.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["_selectedIndexChange","_filesChange","files","externalFiles","selectedIndex","externalSelected","input","_filesSet","_files","_component","setState","_state","_selectedIndexSet","_selectedIndex","selectedFile","out","be","_component4","nextId","_nextIdSet","_nextId","_index","file","index","_keyScope","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_componentDef","editing","_editingSet","_editing","selected","mutable","_marko_class_merge","d","_assign","_nestedComponentDef2","_component3","_state3","name","finishRename","_cache","_cached","modifiedFile","path","replace","slice","nameInput","_createRef","_valueChange","_name","e","length","pa","code","target","value","_lifecycle","focus","setSelectionRange","indexOf","t","window","confirm","stopPropagation","ee","newFile","content","newIndex","concat","_end","_marko_componentType","_marko_component","_marko_template","Component","_marko_defineComponent","_","actions","body","_marko_dynamic_tag","i","valueChange","class","className","el","_effect","_marko_node","_marko_createElement","_marko_registerComponent","_marko_renderer","state","_begin","attrs","_meta","_marko_attrs","_extractHandlers","compressToEncodedURIComponent","JSON","stringify","n","query","fallback","isMatch","matchMedia","matches","_isMatchSet","_isMatch","mq","listener","addEventListener","removeEventListener","_return","left","right","editorSize","_editorSizeSet","_editorSize","resizing","_resizingSet","_resizing","_matchMediaReturn","_matchMedia","isVertical","container","preventDefault","_meta2","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","_marko_node2","_marko_node3","onCreate","_component5","getCompilerOptions","previewType","_previewTypeSet","_previewType","debounce","_debounceSet","_debounce","_resizablePanes","_pane","_fileTabs","activeEditor","_activeEditorSet","_activeEditor","_assign2","loading","_controllableSelect","_playgroundLink","_nestedComponentDef3","_state4","preview","_previewSet","_preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","getInitialValue","_valueSet","_value","this","isUpdating","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","tagNameDynamic","startSection","sectionId","programExtra","sectionNameNode","sectionName","nextSectionId","sectionNames","generateUid","getOrCreateSectionId","cur","parentPath","getSectionId","currentPath","createSectionState","key","init","arrayOfSectionData","getScopeIdIdentifier","generateUidIdentifier","_getScopeIdentifier","t2","getScopeIdentifier","ignoreDefault","scopeId","forEachSectionId","fn","createSortedCollection","compare","insert","data","val","immutable","arguments","undefined","Array","isArray","arr","len","pos","mid","compareResult","next","insertInArray","find","findIndex","count","getReservesByType","reserveScope","debugKey","reserve","reserve2","reservesByType","id","getNodeLiteral","optimize","t3","compareReserves","a","b","insertReserve","countReserves","toString","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","pureFunctions","Symbol","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","importRuntime","importNamed","getRuntimePath","callRuntime","_len","args","_key","callExpression2","t4","filteredArgs","arg","filterArguments","includes","leadingComments","getHTMLRuntime","callRead","reference","targetSectionId","getScopeExpression","diff","scopeIdentifier","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t5","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","map","appendLiteral","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","depth","step","lastIndexOf","current","walk","nCodeString","writeTo","fromCharCode","number","toCharString","Error","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t6","join","getRenderer","t7","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","writePrependTo","unshift","consumeHTML","flushBefore","expr","skip","flushInto","isProgram","pushContainer","getSectionMeta","apply","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","defaultAttr","attributes","t8","default","loc","end","msg","buildError","returnId2","replaceWith","addValue","valueReferences","identifier","hasDownstreamIntersections","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","setSubscriberBuilder","builder","getClosures","forceHydrateScope","_setForceHydrateScope","getSerializedScopeProperties","getRegisterScopeBuilder","_setRegisterScopeBuilder","setRegisterScopeBuilder","getSignal","r","sort","signals","signal","set","t9","generateSignalName","values","intersectionDeclarations","intersection","render","hydrate","hydrateInlineReferences","subscribers","closures","size","subscribe","build","getSignalFn","provider","initValue","valueAccessor","addIntersectionWithGuardedValue","getStatement","valueIdentifier","params","references","isSetup","needsDirty","statements","callee","dirtyIdentifier","closureEntries","from","entries","_ref","_ref2","closureSectionId","closureSignal","hasDynamicSubscribers","dynamicSubscribersKey","getDestructureSignal","bindingsByName","destructurePattern","bindings","bindingSignals","declarations","canCallOnlyWhenDirty","subscriber","forEach","p","ref","addStatement","statement","originalNodes","isInlined","addHydrateReferences","expression","refs","getHydrateRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","_ref3","getMappedId","addHTMLHydrateCall","writeHTMLHydrateStatements","tagVarIdentifier","referenceGroups","allSignals","scopeIdIdentifier","scopeIdentifier2","unshiftContainer","serializedProperties","reduce","acc","additionalProperties","isRoot","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","_ref4","root","functionIdentifier","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t10","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","getTemplateId2","dom_default","templateIdentifier","t11","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionIdReverse","childSectionId","flatMap","hydrateDeclarator","hydrateIdentifier","finalizeSignalArgs","signalDeclarator","newPath","traverse","writeSignals","writes2","apply2","register2","closures2","renderer","exportSpecifiers","isIdentity","bindingIdentifier","signalIdentifier","exportIdentifier","getTemplateId3","getReferenceGroups","t12","trackReferencesForBindings","reserveType","getBindingIdentifiers","referencePaths","constantViolations","filter","path4","insertReferenceGroup","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","updateReferenceGroup","listKey","extraKey","newBinding","currentGroup","newReferences","getOrCreateReferenceGroup","mergeReferenceGroups","groupEntries","group","newGroup","existingGroup","findReferenceGroup","curPath","isMarkoPath","isFunctionExpression","_ref5","_ref6","lenDelta","getReferenceGroup","lookup","found","generateReferenceGroupName","previousProgramPath","WeakMap","program_default","migrate","crawl","analyze","curIndex","reserves","allReferenceGroups","g","finalizeReferences","t13","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment","assignment_expression_default","t14","update_expression_default","t15","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t16","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t17","exit2","Boolean","IDENTIFIER_REG","attrsToObject","withRenderBody","t19","resultExtra","properties","t18","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t20","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t21","varName","createElFunction","referenceSectionId","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childFile","loadFileForTag","childProgramExtra","ast","attrsReferences","tagBody","tagIdentifier","t22","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceHydrateScope","translateHTML","tagSectionId","tagBodySectionId","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","_len2","_key2","_len3","_key3","toFirstExpressionOrBlock","nodes","t23","dynamic_tag_default","t24","dynamicScopeIdentifier","dynamicTagExpr","bodySectionId","renderBodyIdentifier","tagNameReserve","nameReferences","attrsIdentifier","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t25","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t26","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","prev","getPrevSibling","noOutput","t27","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","_ref7","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t28","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t29","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","_ref8","tag2","_ref9","isStateful","singleNodeOptimization","every","_ref10","sectionId2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t30","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t31","identifiers","getTagVarSignal","effect_default","assertNoParams6","t32","inlineStatements","node2","lifecycle_default","assertNoParams7","t33","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t34","for_default","isOnlyChild","t35","getTagDef5","html","checkOnlyChild","parentTagName","keys","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","translateHTML2","translateDOM2","of","in","to","paramsPath","signal2","ofAttr","toAttr","inAttr","loopFunctionBody","tagParams","byAttr","fromAttr","stepAttr","paramsSignal","paramsPaths","pattern","bindingsLookup","assign","getTagParamsSignal","namePath","block","byParams","keyExpression","tempScopeIdentifier","byIdentifier","keyParam","valParam","ofAttrValue","indexParam","loopParam","tempValParam","indexName","generateUidIdentifierBasedOnNode","stepValue","fromValue","stepsName","stepName","fromName","forScopeIdsIdentifier","forScopesIdentifier","obj","get_default","assertNoParams9","refId","t36","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId4","templateId","initContextConsumer","put_default","t38","providers","compute","scopeAccessor","subscribersAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","t37","assertNoParams11","registerAssignmentReplacer","ownerSectionId","getScopeExpression2","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t40","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t39","importDefault2","enum","trim","parseScript3","t41","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","add","t42","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","visitor","_ref11","taglibs","_hashValueReturn","_hashValue","_repl","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","legacy","_resolveExportsOptions","browser","env","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}