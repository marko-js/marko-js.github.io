{"version":3,"file":"664.8b890029.js","mappings":"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","sources":["webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/file-tabs.marko","webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/pane.marko","webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/controllable-select.marko","webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/playground-link.marko","webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/match-media.marko","webpack:///../components/repl/components/Users/mirawlings/dev/marko-js/website/src/components/repl/components/resizable-panes.marko","webpack:///../components/repl/Users/mirawlings/dev/marko-js/website/src/components/repl/index.marko","webpack:///./playground/components/Users/mirawlings/dev/marko-js/website/src/pages/playground/components/hash-value.marko","webpack:///../../browser-shims/v6/translator.js","webpack:///./playground/v6/components/Users/mirawlings/dev/marko-js/website/src/pages/playground/v6/components/playground-6.marko","webpack:///./playground/v6/index.marko","webpack:///../../browser-shims/compiler/dist/babel-types/index.js","webpack:///../../browser-shims/compiler/index.js","webpack:///../../browser-shims/fs.js","webpack:///../../browser-shims/module.js","webpack:///../../browser-shims/process.js","webpack:///../components/app-layout/components/layout-header/component-browser.js","webpack:///../components/app-layout/components/layout-header/events.js","webpack:///../components/app-layout/components/layout-sidebar/component-browser.js","webpack:///../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js","webpack:///../components/app-footer/ebay.svg","webpack:///../components/app-footer/openjsf.svg","webpack:///../components/app-footer/osi.svg","webpack:///../components/app-layout/favicon.png","webpack:///../logos/discord.svg","webpack:///../logos/marko.svg"],"sourcesContent":["<attrs/{ files: externalFiles, selectedIndex: externalSelected }/>\n\n<let/files := externalFiles/>\n<let/selectedIndex := externalSelected/>\n\n<const/selectedFile = files[selectedIndex]/>\n\n<div.file-tabs>\n  <let/nextId = 1/>\n  <for|file, index| of=files>\n    <let/editing = false/>\n    <const/selected = selectedFile === file/>\n    <const/mutable = (index > 0)/>\n    <div.file-tab class={ selected } onClick() { \n      if (selected) {\n        editing = true;\n      } else {\n        editing = false;\n        selectedIndex = index;\n      }\n    }>\n      <if=(!editing || !selected || !mutable)>\n        ${file.name}\n      </if>\n      <else>\n        <let/name = file.name/>\n        <const/finishRename() {\n          const modifiedFile = { ...file, name, path: file.path.replace(file.name, name) };\n          files = [\n            ...files.slice(0, index), \n            modifiedFile,\n            ...files.slice(index+1)\n          ];\n          editing = false;\n        }/>\n        <input/nameInput \n          type=\"text\" \n          size=name.length \n          value:=name \n          onBlur=finishRename\n          onKeydown(e) {\n            if (e.code === \"Enter\") {\n              finishRename();\n            }\n          }/>\n        <lifecycle onMount() { \n          nameInput().focus();\n          nameInput().setSelectionRange(0, name.indexOf(\".\"));\n        }/>\n      </else>\n      <if=mutable>\n        <button.file-close onClick(e) { \n          if (window.confirm(`Delete ${file.path}?`)) {\n            if (selectedIndex >= index) {\n              selectedIndex--;\n            }\n            files = [...files.slice(0, index), ...files.slice(index+1)];\n          }\n          e.stopPropagation();\n        }>\n          &times;\n        </button>\n      </if>\n    </div>\n  </for>\n  <button.new-file onClick() { \n    const newFile = { name:`Component${nextId}.marko`, path:`/components/Component${nextId}.marko`, content:\"\" };\n    const newIndex = files.length;\n    files = files.concat(newFile);\n    selectedIndex = newIndex;\n    nextId++;\n  }>\n    +\n  </button>\n</div>\n<style>\n  .file-tabs {\n    display:flex;\n    overflow-x: auto;\n    width:100%;\n    height:100%;\n  }\n  .file-tab {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding:0 1em;\n    flex-shrink: 0;\n    border-bottom: 2px solid transparent;\n    cursor:pointer;\n  }\n  .file-tab:not(.selected):hover {\n    background: rgba(255,255,255,0.1);\n  }\n  .file-tab.selected {\n    border-bottom: 2px solid #09bcf8;\n  }\n  .file-close {\n    padding:0.5em;\n    background: transparent;\n    margin-right:-0.5em;\n    color:#fff;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .file-close:hover {\n    color:#f1195b;\n  }\n  .new-file {\n    padding:0 1em;\n    font-size: 1.5em;\n    background: transparent;\n    color:#999;\n    cursor: pointer;\n    line-height: normal;\n    border: 0;\n  }\n  .new-file:hover {\n    color: #09bcf8;\n  }\n</style>","<attrs/{ actions, body }/>\n\n<div.pane>\n  <div.pane-actions>\n    <${actions.renderBody}/>\n  </div>\n  <div.pane-divider/>\n  <div.pane-body>\n    <${body.renderBody}/>\n  </div>\n</div>\n\n<style>\n  .pane {\n    display:flex;\n    flex-direction: column;\n    flex:1;\n  }\n  .pane-actions {\n    height: 3em;\n  }\n  .pane-divider {\n    height:1px;\n    background: rgba(0,0,0,0.2);\n  }\n  .pane-body {\n    flex:1;\n    flex-basis: 0;\n    overflow: auto;\n  }\n</style>\n","<attrs/{ value, valueChange, renderBody, class:className }/>\n<select/el class=className onChange(e) { valueChange(e.target.value); }>\n  <${renderBody}/>\n</select>\n<effect() {\n  el().value = value;\n  // TODO: this should not be necessary\n  // but re-rendering the parent component causes new closures\n  // to be passed for renderBody and valueChange which causes\n  // this component to re-render.  Morphdom sets the <select>\n  // back to the original value.  So we track those values as well,\n  // so we can re-set the <select>'s value.\n  renderBody; valueChange;\n}/>","import { compressToEncodedURIComponent } from \"lz-string\";\n\n<attrs/{ files, ...attrs }/>\n<a.playground-link ...attrs\n  href=`/playground/#${compressToEncodedURIComponent(JSON.stringify(files))}`\n  target=\"_top\">\n  <span>Open in playground </span>↗\n</a>\n\n<style>\n  .playground-link {\n    float:right;\n    padding: 0.8em 1em;\n    display:block;\n    position: relative;\n  }\n  .playground-link span {\n    display:none;\n    position:absolute;\n    right: 1em;\n    width: 10em;\n  }\n  .playground-link:hover span {\n    display:inline;\n  }\n</style>\n\n","<attrs/{ value: query, fallback }/>\n<let/isMatch = typeof window !== \"undefined\" ? window.matchMedia(query).matches : fallback/>\n\n<effect() {\n  const mq = window.matchMedia(query);\n  const listener = () => isMatch = !!mq.matches;\n  mq.addEventListener(\"change\", listener);\n  isMatch = !!mq.matches;\n  return () => mq.removeEventListener(\"change\", listener);\n}/>\n\n<return=isMatch/>","<attrs/{ left, right }/>\n\n<let/editorSize=0.5/>\n<let/resizing = false/>\n<match-media/isVertical = \"(max-aspect-ratio: 1/1)\"/>\n\n<div/container class=[\"panes\", resizing && \"resizing\"]>\n  <div ...left style=`flex-grow:${editorSize}`>\n    <${left.renderBody}/>\n  </div>\n  <div.divider>\n    <div.inner\n      onMousedown(e) {\n        resizing = true;\n        e.preventDefault();\n        e.stopPropagation();\n      }/>\n  </div>\n  <div ...right style=`flex-grow:${1-editorSize}`>\n    <${right.renderBody}/>\n  </div>\n</div>\n<if=resizing>\n  <effect() {\n    const handler = (e) => {\n      if (e.buttons || e.which) {\n        const rect = container().getBoundingClientRect();\n        const fraction = isVertical \n          ? (e.clientY - rect.top) / rect.height \n          : (e.clientX - rect.left) / rect.width;\n        if (fraction > 0) {\n          // it seems a drag event with no position is fired when we stop\n          // so we'll ignore that value\n          editorSize = Math.min(0.8, Math.max(0.2, fraction));\n        }\n      } else {\n        resizing = false;\n      }\n    };\n    window.addEventListener(\"mousemove\", handler);\n    return () => window.removeEventListener(\"mousemove\", handler);\n  }/>\n</if>\n\n<style>\n  .panes {\n    display:flex;\n    flex:1;\n    width: 100%;\n  }\n  .panes > div {\n    overflow:hidden;\n    display: flex;\n    flex-basis:0;\n  }\n  .panes.resizing {\n    cursor: col-resize;\n  }\n  .panes.resizing > div:not(.divider) {\n    pointer-events: none;\n  }\n  .divider {\n    min-height: 2px;\n    min-width: 2px;\n    position:relative;\n    background:#eee;\n    cursor: col-resize;\n  }\n  .divider:hover {\n    background:#ccc;\n  }\n  .divider .inner {\n    position: absolute;\n    top:-10px; left: -10px; bottom:-10px; right:-10px;\n    opacity: 0;\n    z-index:1000;\n  }\n  @media (max-aspect-ratio: 1/1) {\n    .panes {\n      flex-direction: column;\n    }\n    .panes.resizing,\n    .divider:hover {\n      cursor: row-resize;\n    }\n  }\n</style>","<attrs/{ getCompilerOptions, files }/>\n<let/selectedIndex = 0/>\n<let/previewType = \"preview\"/>\n<let/debounce = false/>\n<const/selectedFile = files[selectedIndex]/>\n\n<style>\n  .editor-container {\n    background: #202134;\n    color: #fff;\n  }\n</style>\n\n<resizable-panes>\n  <@left class=\"editor-container\">\n    <pane>\n      <@actions>\n        <file-tabs files:=files selectedIndex:=selectedIndex/>\n      </@actions>\n      <@body>\n        <let/activeEditor = null/>\n        <if=activeEditor>\n          <activeEditor\n            value=selectedFile.content \n            filename=selectedFile.path \n            valueChange(content) {\n              const modifiedFile = { ...selectedFile, content };\n              files = [\n                ...files.slice(0, selectedIndex), \n                modifiedFile,\n                ...files.slice(selectedIndex+1)\n              ];\n              debounce = true;\n            }/>\n        </if>\n        <lifecycle onMount = (async () => { \n          const e = await import(\"./components/editor\");\n          await e.loading;\n          activeEditor = e;\n        })/>\n      </@body>\n    </pane>\n  </@left>\n  <@right>\n    <pane>\n      <@actions>\n        <controllable-select.preview-select \n          value=previewType \n          valueChange(value) {\n            previewType = value;\n            debounce = false;\n          }>\n          <option value=\"preview\">App Preview</option>\n          <option value=\"compiled-html\">Compiled (HTML)</option>\n          <option value=\"compiled-vdom\">Compiled (DOM)</option>\n        </controllable-select>\n        <playground-link files=files/>\n        <style>\n          .preview-select {\n            border:0;\n            height:100%;\n            font-size: 100%;\n            padding:0 1em;\n          }\n        </style>\n      </@actions>\n      <@body>\n        <let/preview = null/>\n        <${preview} \n          type=previewType\n          files=files\n          selectedFile=selectedFile\n          getCompilerOptions=getCompilerOptions\n          debounce=debounce/>\n        <lifecycle onMount = (async () => { \n          preview = await import(\"./components/preview\");\n        })/>\n      </@body>\n    </pane>\n  </@right>\n</resizable-panes>","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nstatic function getInitialValue() {\n  try {\n    if (typeof window !== \"undefined\") {\n      return JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n    }\n  } catch(e) {\n    console.error(e);\n  }\n}\n\n<attrs/{ value:defaultValue }/>\n<let/value = getInitialValue() || defaultValue/>\n<lifecycle \n  onMount() {\n    window.addEventListener(\"hashchange\", this.handler = () => {\n      try {\n        if (!this.isUpdating) {\n          value = JSON.parse(decompressFromEncodedURIComponent(window.location.hash.slice(1)));\n        } else {\n          this.isUpdating = false;\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    });\n  } \n  onUpdate() {\n    this.isUpdating = true;\n    window.location.hash = compressToEncodedURIComponent(JSON.stringify(value));\n  }\n  onDestroy() {\n    window.removeEventListener(\"hashchange\", this.handler);\n  }/>\n<return:=value/>\n","// src/visitors/program/index.ts\nimport { types as t13 } from \"@marko/compiler\";\n\n// src/util/marko-config.ts\nfunction isOutputHTML() {\n  return getMarkoOpts().output === \"html\";\n}\nfunction isOutputDOM() {\n  return !isOutputHTML();\n}\nfunction getMarkoOpts() {\n  return currentProgramPath.hub.file.markoOpts;\n}\nfunction isOptimize() {\n  return getMarkoOpts().optimize;\n}\n\n// src/visitors/program/html.ts\nimport { types as t11 } from \"@marko/compiler\";\n\n// src/util/signals.ts\nimport { types as t10 } from \"@marko/compiler\";\n\n// src/util/sections.ts\nimport { types as t2 } from \"@marko/compiler\";\n\n// src/util/tag-name-type.ts\nimport { types as t } from \"@marko/compiler\";\nimport { isNativeTag } from \"@marko/babel-utils\";\nvar MARKO_FILE_REG = /^<.*>$|\\.marko$/;\nfunction analyzeTagNameType(tag) {\n  const extra = tag.node.extra ??= {};\n  if (extra.tagNameType === void 0) {\n    const name = tag.get(\"name\");\n    if (name.isStringLiteral()) {\n      extra.tagNameType = name.node.value[0] === \"@\" ? 3 /* AttributeTag */ : isNativeTag(tag) ? 0 /* NativeTag */ : 1 /* CustomTag */;\n      extra.tagNameNullable = extra.tagNameNullable = false;\n    } else {\n      const pending = [name];\n      let path3;\n      let type = void 0;\n      let nullable = false;\n      while ((path3 = pending.pop()) && type !== 2 /* DynamicTag */) {\n        if (path3.isConditionalExpression()) {\n          pending.push(path3.get(\"test\"));\n          pending.push(path3.get(\"consequent\"));\n          if (path3.node.alternate) {\n            pending.push(path3.get(\"alternate\"));\n          }\n        } else if (path3.isLogicalExpression()) {\n          if (path3.node.operator === \"||\") {\n            pending.push(path3.get(\"left\"));\n          } else {\n            nullable = true;\n          }\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isAssignmentExpression()) {\n          pending.push(path3.get(\"right\"));\n        } else if (path3.isBinaryExpression()) {\n          type = path3.node.operator !== \"+\" || type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isStringLiteral() || path3.isTemplateLiteral()) {\n          type = type !== void 0 ? 2 /* DynamicTag */ : 0 /* NativeTag */;\n        } else if (path3.isNullLiteral()) {\n          nullable = true;\n        } else if (path3.isIdentifier()) {\n          if (path3.node.name === \"undefined\") {\n            nullable = true;\n            continue;\n          }\n          const binding = path3.scope.getBinding(path3.node.name);\n          if (!binding) {\n            type = 2 /* DynamicTag */;\n            continue;\n          }\n          if (binding.kind === \"module\") {\n            const decl = binding.path.parent;\n            if (MARKO_FILE_REG.test(decl.source.value) && decl.specifiers.some((it) => t.isImportDefaultSpecifier(it))) {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n            } else {\n              type = 2 /* DynamicTag */;\n            }\n            continue;\n          }\n          const bindingTag = binding.path;\n          if (bindingTag.isMarkoTag() && binding.kind === \"local\") {\n            const bindingTagName = bindingTag.get(\"name\").node.value;\n            if (bindingTagName === \"tag\") {\n              type = type !== void 0 && type !== 1 /* CustomTag */ ? 2 /* DynamicTag */ : 1 /* CustomTag */;\n              continue;\n            }\n            if (bindingTagName === \"const\") {\n              pending.push(bindingTag.get(\"attributes\")[0].get(\"value\"));\n              continue;\n            }\n            if (bindingTagName === \"let\") {\n              type = 2 /* DynamicTag */;\n              continue;\n            }\n            continue;\n          }\n          type = 2 /* DynamicTag */;\n        } else {\n          type = 2 /* DynamicTag */;\n        }\n      }\n      extra.tagNameType = type;\n      extra.tagNameNullable = nullable;\n      extra.tagNameDynamic = true;\n    }\n    if (extra.tagNameType === void 0) {\n      extra.tagNameType = 2 /* DynamicTag */;\n    }\n  }\n  return extra.tagNameType;\n}\n\n// src/util/sections.ts\nfunction startSection(path3) {\n  const extra = path3.node.extra ??= {};\n  let section = extra.section;\n  if (!section) {\n    const parentSection = path3.parentPath ? getOrCreateSection(path3.parentPath) : void 0;\n    const sectionNamePath = path3.parentPath?.get(\"name\");\n    const sectionName = path3.isProgram() ? \"\" : currentProgramPath.scope.generateUid(sectionNamePath.toString() + \"Body\");\n    const programExtra = path3.hub.file.path.node.extra ??= {};\n    const sections = programExtra.sections ??= [];\n    section = extra.section = {\n      id: sections.length,\n      name: sectionName,\n      depth: parentSection ? parentSection.depth + 1 : 0,\n      parent: parentSection\n    };\n    sections.push(section);\n  }\n  return section;\n}\nfunction getOrCreateSection(path3) {\n  let cur = path3;\n  while (true) {\n    if (cur.type === \"Program\" || cur.type === \"MarkoTagBody\" && analyzeTagNameType(cur.parentPath) !== 0 /* NativeTag */) {\n      return startSection(cur);\n    }\n    cur = cur.parentPath;\n  }\n}\nfunction getSection(path3) {\n  let section;\n  let currentPath = path3;\n  while ((section = currentPath.node.extra?.section) === void 0) {\n    currentPath = currentPath.parentPath;\n  }\n  return section;\n}\nfunction createSectionState(key, init) {\n  return [\n    (section) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      const sectionData = arrayOfSectionData[section.id] ??= init && init(section);\n      return sectionData;\n    },\n    (section, value) => {\n      const arrayOfSectionData = currentProgramPath.state[key] ??= [];\n      arrayOfSectionData[section.id] = value;\n    }\n  ];\n}\nvar [getScopeIdIdentifier] = createSectionState(\"scopeIdIdentifier\", (section) => currentProgramPath.scope.generateUidIdentifier(`scope${section.id}_id`));\nvar [_getScopeIdentifier] = createSectionState(\"scopeIdentifier\", () => t2.identifier(\"undefined\"));\nvar getScopeIdentifier = (section, ignoreDefault) => {\n  const scopeId = _getScopeIdentifier(section);\n  if (!ignoreDefault && scopeId.name === \"undefined\") {\n    scopeId.name = currentProgramPath.scope.generateUid(`scope${section.id}_`);\n  }\n  return scopeId;\n};\nfunction forEachSection(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  sections?.forEach(fn);\n}\nfunction forEachSectionReverse(fn) {\n  const { sections } = currentProgramPath.node.extra;\n  for (let i = sections.length; i--; ) {\n    fn(sections[i]);\n  }\n}\n\n// src/util/reserve.ts\nimport { types as t3 } from \"@marko/compiler\";\n\n// src/util/sorted-repeatable.ts\nvar SortedRepeatable = class {\n  constructor(compare) {\n    this.compare = compare;\n  }\n  add(data, item) {\n    return data ? Array.isArray(data) ? insertSorted(this.compare, data, item) : joinItems(this.compare, data, item) : item;\n  }\n  addAll(data, items) {\n    if (data) {\n      if (Array.isArray(data)) {\n        if (items) {\n          if (Array.isArray(items)) {\n            for (const item of items) {\n              insertSorted(this.compare, data, item);\n            }\n          } else {\n            insertSorted(this.compare, data, items);\n          }\n        }\n        return data;\n      }\n      if (items) {\n        if (Array.isArray(items)) {\n          return insertSorted(this.compare, [...items], data);\n        }\n        return joinItems(this.compare, items, data);\n      }\n      return data;\n    }\n    if (Array.isArray(items)) {\n      return [...items];\n    }\n    return items;\n  }\n  find(data, item) {\n    if (data) {\n      if (Array.isArray(data)) {\n        let max = data.length;\n        let pos = 0;\n        while (pos < max) {\n          const mid = pos + max >>> 1;\n          const cur = data[mid];\n          const compareResult = this.compare(cur, item);\n          if (compareResult === 0)\n            return cur;\n          if (compareResult > 0)\n            max = mid;\n          else\n            pos = mid + 1;\n        }\n      } else {\n        return this.compare(data, item) === 0 ? data : void 0;\n      }\n    }\n  }\n  clone(item) {\n    return Array.isArray(item) ? [...item] : item;\n  }\n  size(data) {\n    return data ? Array.isArray(data) ? data.length : 1 : 0;\n  }\n  toArray(data, map) {\n    if (data) {\n      if (Array.isArray(data)) {\n        return data.map(map);\n      }\n      return [map(data)];\n    }\n    return [];\n  }\n  *iterate(data) {\n    if (data) {\n      if (Array.isArray(data)) {\n        for (const item of data) {\n          yield item;\n        }\n      } else {\n        yield data;\n      }\n    }\n  }\n};\nfunction joinItems(compare, a, b) {\n  const compareResult = compare(a, b);\n  return compareResult === 0 ? a : compareResult < 0 ? [a, b] : [b, a];\n}\nfunction insertSorted(compare, data, item) {\n  const len = data.length;\n  let max = len;\n  let pos = 0;\n  while (pos < max) {\n    const mid = pos + max >>> 1;\n    const compareResult = compare(data[mid], item);\n    if (compareResult === 0)\n      return data;\n    if (compareResult > 0)\n      max = mid;\n    else\n      pos = mid + 1;\n  }\n  let cur = item;\n  while (pos < len) {\n    const next = cur;\n    cur = data[pos];\n    data[pos++] = next;\n  }\n  data[len] = cur;\n  return data;\n}\n\n// src/util/reserve.ts\nvar [getReservesByType] = createSectionState(\"reservesByType\", () => [void 0, void 0, void 0]);\nfunction reserveScope(type, section, node, name, debugKey = name) {\n  const extra = node.extra ??= {};\n  if (extra.reserve) {\n    const reserve2 = extra.reserve;\n    reserve2.name += \"_\" + name;\n    return reserve2;\n  }\n  const reservesByType = getReservesByType(section);\n  const reserve = extra.reserve = {\n    id: 0,\n    type,\n    name,\n    debugKey,\n    section\n  };\n  if (reservesByType[type]) {\n    reserve.id = reservesByType[type].push(reserve) - 1;\n  } else {\n    reservesByType[type] = [reserve];\n  }\n  return reserve;\n}\nfunction assignFinalIds() {\n  forEachSection((section) => {\n    let curIndex = 0;\n    for (const reserves of getReservesByType(section)) {\n      if (reserves) {\n        for (const reserve of reserves) {\n          reserve.id = curIndex;\n          curIndex += 1;\n        }\n      }\n    }\n  });\n}\nfunction getScopeAccessorLiteral(reserve) {\n  if (isOptimize()) {\n    return t3.numericLiteral(reserve.id);\n  }\n  return t3.stringLiteral(reserve.debugKey + (reserve.type === 0 /* Visit */ ? `/${reserve.id}` : \"\"));\n}\nvar repeatableReserves = new SortedRepeatable(function compareReserves(a, b) {\n  return a.section.id - b.section.id || a.type - b.type || a.id - b.id;\n});\n\n// src/util/runtime.ts\nimport { types as t5 } from \"@marko/compiler\";\nimport { importNamed } from \"@marko/babel-utils\";\n\n// ../runtime/src/html/content.ts\nfunction toString(val) {\n  return val || val === 0 ? val + \"\" : \"\";\n}\nvar escapeXML = escapeIfNeeded((val) => {\n  let result = \"\";\n  let lastPos = 0;\n  for (let i = 0, len = val.length; i < len; i++) {\n    let replacement;\n    switch (val[i]) {\n      case \"<\":\n        replacement = \"&lt;\";\n        break;\n      case \"&\":\n        replacement = \"&amp;\";\n        break;\n      default:\n        continue;\n    }\n    result += val.slice(lastPos, i) + replacement;\n    lastPos = i + 1;\n  }\n  if (lastPos) {\n    return result + val.slice(lastPos);\n  }\n  return val;\n});\nvar escapeScript = escapeIfNeeded(escapeTagEnding(\"script\"));\nvar escapeStyle = escapeIfNeeded(escapeTagEnding(\"style\"));\nfunction escapeTagEnding(tagName) {\n  const openTag = `</${tagName}`;\n  const escaped = `<\\\\/${tagName}`;\n  return (val) => {\n    let result = \"\";\n    let lastPos = 0;\n    let i = val.indexOf(openTag, lastPos);\n    while (i !== -1) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n      i = val.indexOf(openTag, lastPos);\n    }\n    if (lastPos) {\n      return result + val.slice(lastPos);\n    }\n    return val;\n  };\n}\nfunction escapeAttrValue(val) {\n  const len = val.length;\n  let i = 0;\n  do {\n    switch (val[i]) {\n      case '\"':\n        return quoteValue(val, i + 1, \"'\", \"&#39;\");\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return quoteValue(val, i + 1, '\"', \"&#34;\");\n      default:\n        i++;\n        break;\n    }\n  } while (i < len);\n  return val;\n}\nfunction escapeIfNeeded(escape) {\n  return (val) => {\n    if (!val && val !== 0) {\n      return \"&zwj;\";\n    }\n    switch (typeof val) {\n      case \"string\":\n        return escape(val);\n      case \"boolean\":\n        return \"true\";\n      case \"number\":\n        return val + \"\";\n      default:\n        return escape(val + \"\");\n    }\n  };\n}\nfunction quoteValue(val, startPos, quote, escaped) {\n  let result = quote;\n  let lastPos = 0;\n  for (let i = startPos, len = val.length; i < len; i++) {\n    if (val[i] === quote) {\n      result += val.slice(lastPos, i) + escaped;\n      lastPos = i + 1;\n    }\n  }\n  return result + (lastPos ? val.slice(lastPos) : val) + quote;\n}\n\n// ../runtime/src/common/helpers.ts\nfunction classValue(value) {\n  return toDelimitedString(value, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  return name;\n}\nfunction styleValue(value) {\n  return toDelimitedString(value, \";\", stringifyStyleObject);\n}\nvar NON_DIMENSIONAL = /^(--|ta|or|li|z)|n-c|i(do|nk|m|t)|w$|we/;\nfunction stringifyStyleObject(name, value) {\n  if (isVoid(value)) {\n    return \"\";\n  }\n  if (typeof value === \"number\" && value && !NON_DIMENSIONAL.test(name)) {\n    value += \"px\";\n  }\n  return `${name}:${value}`;\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  switch (typeof val) {\n    case \"string\":\n      return val;\n    case \"object\":\n      if (val !== null) {\n        let result = \"\";\n        let curDelimiter = \"\";\n        if (Array.isArray(val)) {\n          for (const v of val) {\n            const part = toDelimitedString(v, delimiter, stringify);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        } else {\n          for (const name in val) {\n            const v = val[name];\n            const part = stringify(name, v);\n            if (part !== \"\") {\n              result += curDelimiter + part;\n              curDelimiter = delimiter;\n            }\n          }\n        }\n        return result;\n      }\n  }\n  return \"\";\n}\nfunction isVoid(value) {\n  return value == null || value === false;\n}\n\n// ../runtime/src/html/attrs.ts\nfunction classAttr(val) {\n  return stringAttr(\"class\", classValue(val));\n}\nfunction styleAttr(val) {\n  return stringAttr(\"style\", styleValue(val));\n}\nfunction attr(name, val) {\n  return isVoid(val) ? \"\" : nonVoidUntypedAttr(name, val);\n}\nfunction stringAttr(name, val) {\n  return val && ` ${name}=${escapeAttrValue(val)}`;\n}\nfunction nonVoidUntypedAttr(name, val) {\n  switch (typeof val) {\n    case \"string\":\n      return ` ${name + attrAssignment(val)}`;\n    case \"boolean\":\n      return ` ${name}`;\n    case \"number\":\n      return ` ${name}=${val}`;\n    case \"object\":\n      if (val instanceof RegExp) {\n        return ` ${name}=${escapeAttrValue(val.source)}`;\n      }\n    default:\n      return ` ${name + attrAssignment(val + \"\")}`;\n  }\n}\nfunction attrAssignment(val) {\n  return val ? `=${escapeAttrValue(val)}` : \"\";\n}\n\n// ../runtime/src/html/reorder-runtime.ts\nfunction reorder_runtime_default(id, doc, walker, node, replacementNode, targetParent, targetNode, refNode, nextNode, runtimePrefix) {\n  runtimePrefix = \"RUNTIME_ID$\";\n  id = runtimePrefix + id;\n  doc = document;\n  walker = doc[runtimePrefix + \"w\"] || (doc[runtimePrefix + \"w\"] = doc.createTreeWalker(doc, 128));\n  while (node = walker.nextNode()) {\n    if (node.data.indexOf(runtimePrefix) === 0) {\n      walker[node.data] = node;\n    }\n  }\n  replacementNode = doc.getElementById(id);\n  targetNode = walker[id];\n  targetParent = targetNode.parentNode;\n  while (refNode = replacementNode.firstChild) {\n    targetParent.insertBefore(refNode, targetNode);\n  }\n  nextNode = replacementNode.parentNode;\n  nextNode.removeChild(replacementNode.nextSibling);\n  nextNode.removeChild(replacementNode);\n  refNode = walker[id + \"/\"];\n  while (nextNode = targetNode.nextSibling, targetParent.removeChild(targetNode) !== refNode) {\n    targetNode = nextNode;\n  }\n}\n\n// ../runtime/src/html/serializer.ts\nvar { hasOwnProperty } = Object.prototype;\nvar REF_START_CHARS = \"hjkmoquxzABCDEFGHIJKLNPQRTUVWXYZ$_\";\nvar REF_START_CHARS_LEN = REF_START_CHARS.length;\nvar REF_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_\";\nvar REF_CHARS_LEN = REF_CHARS.length;\nvar SYMBOL_REGISTRY_ID = Symbol(\"REGISTRY_ID\");\nvar SYMBOL_SCOPE = Symbol(\"SCOPE\");\nvar SYMBOL_OWNER = Symbol(\"OWNER\");\n\n// ../runtime/src/html/writer.ts\nvar runtimeId = \"M\";\nvar reorderRuntimeString = String(reorder_runtime_default).replace(\"RUNTIME_ID\", runtimeId);\n\n// src/util/scope-read.ts\nimport { types as t4 } from \"@marko/compiler\";\nfunction createScopeReadPattern(section, references) {\n  const rootDepth = section.depth;\n  const rootPattern = t4.objectPattern([]);\n  let nestedPatterns;\n  for (const ref of repeatableReserves.iterate(references)) {\n    const propertyKey = getScopeAccessorLiteral(ref);\n    const propertyValue = t4.identifier(ref.name);\n    const isShorthand = propertyKey.value === propertyValue.name;\n    let pattern = rootPattern;\n    if (ref.section !== section) {\n      if (!nestedPatterns)\n        nestedPatterns = [rootPattern];\n      const relativeDepth = rootDepth - ref.section.depth;\n      let i = nestedPatterns.length;\n      let prev = nestedPatterns[i - 1];\n      for (; i <= relativeDepth; i++) {\n        const nestedPattern = t4.objectPattern([]);\n        prev.properties.push(t4.objectProperty(t4.identifier(\"_\"), nestedPattern));\n        nestedPatterns.push(nestedPattern);\n        prev = nestedPattern;\n      }\n      pattern = nestedPatterns[relativeDepth];\n    }\n    pattern.properties.push(t4.objectProperty(isShorthand ? propertyValue : propertyKey, propertyValue, false, isShorthand));\n  }\n  return rootPattern;\n}\nfunction getScopeExpression(section, targetSection) {\n  let scope = scopeIdentifier;\n  const diff = section.depth - targetSection.depth;\n  for (let i = 0; i < diff; i++) {\n    scope = t4.memberExpression(scope, t4.identifier(\"_\"));\n  }\n  if (diff < 0) {\n    throw new Error(\"Unable to find scope for reference.\");\n  }\n  return scope;\n}\nfunction createScopeReadExpression(section, reference) {\n  return t4.memberExpression(getScopeExpression(section, reference.section), getScopeAccessorLiteral(reference), true);\n}\n\n// src/util/runtime.ts\nvar pureFunctions = [\n  \"createRenderFn\",\n  \"createRenderer\",\n  \"value\",\n  \"intersection\",\n  \"closure\",\n  \"dynamicClosure\",\n  \"contextClosure\",\n  \"loop\",\n  \"conditional\",\n  \"bindFunction\",\n  \"bindRenderer\"\n];\nfunction importRuntime(name) {\n  const { output } = getMarkoOpts();\n  return importNamed(currentProgramPath.hub.file, getRuntimePath(output), name);\n}\nfunction callRuntime(name, ...args) {\n  const callExpression2 = t5.callExpression(importRuntime(name), filterArguments(args));\n  if (pureFunctions.includes(name)) {\n    callExpression2.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: ` @__PURE__ `\n      }\n    ];\n  }\n  return callExpression2;\n}\nfunction getHTMLRuntime() {\n  return {\n    escapeXML,\n    toString,\n    attr,\n    classAttr,\n    styleAttr,\n    escapeScript,\n    escapeStyle\n  };\n}\nfunction getRuntimePath(output) {\n  const { optimize } = getMarkoOpts();\n  return `@marko/runtime-fluurt/${false ? \"src\" : optimize ? \"dist\" : \"dist/debug\"}/${output === \"html\" ? \"html\" : \"dom\"}`;\n}\nfunction filterArguments(args) {\n  const filteredArgs = [];\n  for (let i = args.length; i--; ) {\n    const arg = args[i];\n    if (arg || filteredArgs.length) {\n      filteredArgs[i] = arg || t5.nullLiteral();\n    }\n  }\n  return filteredArgs;\n}\n\n// src/util/signals.ts\nimport { getTemplateId } from \"@marko/babel-utils\";\n\n// src/core/return.ts\nimport { types as t9 } from \"@marko/compiler\";\nimport { assertNoVar, assertNoParams } from \"@marko/babel-utils\";\n\n// src/util/writer.ts\nimport { types as t8 } from \"@marko/compiler\";\n\n// src/util/to-template-string-or-literal.ts\nimport { types as t6 } from \"@marko/compiler\";\nfunction toTemplateOrStringLiteral(parts) {\n  const strs = [];\n  const exprs = [];\n  let curStr = parts[0];\n  for (let i = 1; i < parts.length; i++) {\n    let content = parts[i];\n    if (typeof content === \"object\") {\n      if (t6.isStringLiteral(content)) {\n        content = content.value;\n      } else if (t6.isTemplateLiteral(content)) {\n        let nextIndex = i + 1;\n        const exprLen = content.expressions.length;\n        shiftItems(parts, nextIndex, content.quasis.length + exprLen);\n        for (let j = 0; j < exprLen; j++) {\n          parts[nextIndex++] = content.quasis[j].value.raw;\n          parts[nextIndex++] = content.expressions[j];\n        }\n        parts[nextIndex] = content.quasis[exprLen].value.raw;\n        continue;\n      } else {\n        exprs.push(content);\n        strs.push(curStr);\n        curStr = \"\";\n        continue;\n      }\n    }\n    curStr += content;\n  }\n  if (exprs.length) {\n    strs.push(curStr);\n    return t6.templateLiteral(strs.map((raw) => t6.templateElement({ raw })), exprs);\n  } else if (curStr) {\n    return t6.stringLiteral(curStr);\n  }\n}\nfunction appendLiteral(arr, str) {\n  arr[arr.length - 1] += str;\n}\nfunction shiftItems(list, start, offset) {\n  for (let i = list.length - 1; i >= start; i--) {\n    list[i + offset] = list[i];\n  }\n}\n\n// src/util/walks.ts\nimport { types as t7 } from \"@marko/compiler\";\nvar [getWalks] = createSectionState(\"walks\", () => [\"\"]);\nvar [getWalkComment] = createSectionState(\"walkComment\", () => []);\nvar [getSteps] = createSectionState(\"steps\", () => []);\nvar walkCodeToName = {\n  [32 /* Get */]: \"get\",\n  [33 /* Before */]: \"before\",\n  [35 /* After */]: \"after\",\n  [36 /* Inside */]: \"inside\",\n  [37 /* Replace */]: \"replace\",\n  [38 /* EndChild */]: \"endChild\",\n  [47 /* BeginChild */]: \"beginChild\",\n  [67 /* Next */]: \"next\",\n  [97 /* Over */]: \"over\",\n  [107 /* Out */]: \"out\",\n  [117 /* Multiplier */]: \"multiplier\",\n  [91 /* NextEnd */]: \"nextEnd\",\n  [106 /* OverEnd */]: \"overEnd\",\n  [116 /* OutEnd */]: \"outEnd\",\n  [126 /* MultiplierEnd */]: \"multiplierEnd\"\n};\nfunction enter(path3) {\n  getSteps(getSection(path3)).push(0 /* enter */);\n}\nfunction exit(path3) {\n  getSteps(getSection(path3)).push(1 /* exit */);\n}\nfunction enterShallow(path3) {\n  getSteps(getSection(path3)).push(0 /* enter */, 1 /* exit */);\n}\nfunction injectWalks(path3, expr) {\n  const walks = getWalks(getSection(path3));\n  const walkComment = getWalkComment(getSection(path3));\n  walkComment.push(`${walkCodeToName[47 /* BeginChild */]}`, expr.name, walkCodeToName[38 /* EndChild */]);\n  appendLiteral(walks, String.fromCharCode(47 /* BeginChild */));\n  walks.push(expr, String.fromCharCode(38 /* EndChild */));\n}\nfunction visit(path3, code) {\n  const { reserve } = path3.node.extra;\n  if (code && (!reserve || reserve.type !== 0 /* Visit */)) {\n    throw path3.buildCodeFrameError(\"Tried to visit a node that was not marked as needing to visit during analyze.\");\n  }\n  if (isOutputHTML()) {\n    return;\n  }\n  const section = getSection(path3);\n  const steps = getSteps(section);\n  const walks = getWalks(section);\n  const walkComment = getWalkComment(section);\n  let walkString = \"\";\n  if (steps.length) {\n    const walks2 = [];\n    let depth = 0;\n    for (const step of steps) {\n      if (step === 0 /* enter */) {\n        depth++;\n        walks2.push(67 /* Next */);\n      } else {\n        depth--;\n        if (depth >= 0) {\n          walks2.length = walks2.lastIndexOf(67 /* Next */);\n          walks2.push(97 /* Over */);\n        } else {\n          walks2.length = walks2.lastIndexOf(107 /* Out */) + 1;\n          walks2.push(107 /* Out */);\n          depth = 0;\n        }\n      }\n    }\n    let current = walks2[0];\n    let count = 0;\n    for (const walk of walks2) {\n      if (walk !== current) {\n        walkComment.push(`${walkCodeToName[current]}(${count})`);\n        walkString += nCodeString(current, count);\n        current = walk;\n        count = 1;\n      } else {\n        count++;\n      }\n    }\n    walkComment.push(`${walkCodeToName[current]}(${count})`);\n    walkString += nCodeString(current, count);\n    steps.length = 0;\n  }\n  if (code !== void 0) {\n    if (code !== 32 /* Get */) {\n      writeTo(path3)`<!>`;\n    }\n    walkComment.push(`${walkCodeToName[code]}`);\n    walkString += String.fromCharCode(code);\n  }\n  appendLiteral(walks, walkString);\n}\nfunction nCodeString(code, number) {\n  switch (code) {\n    case 67 /* Next */:\n      return toCharString(number, code, 20 /* Next */);\n    case 97 /* Over */:\n      return toCharString(number, code, 10 /* Over */);\n    case 107 /* Out */:\n      return toCharString(number, code, 10 /* Out */);\n    default:\n      throw new Error(`Unexpected walk code: ${code}`);\n  }\n}\nfunction toCharString(number, startCode, rangeSize) {\n  let result = \"\";\n  if (number >= rangeSize) {\n    const multiplier = Math.floor(number / rangeSize);\n    result += toCharString(multiplier, 117 /* Multiplier */, 10 /* Multiplier */);\n    number -= multiplier * rangeSize;\n  }\n  result += String.fromCharCode(startCode + number);\n  return result;\n}\nfunction getWalkString(section) {\n  const walkLiteral = toTemplateOrStringLiteral(getWalks(section)) || t7.stringLiteral(\"\");\n  if (walkLiteral.value !== \"\") {\n    walkLiteral.leadingComments = [\n      {\n        type: \"CommentBlock\",\n        value: \" \" + getWalkComment(section).join(\", \") + \" \"\n      }\n    ];\n  }\n  return walkLiteral;\n}\n\n// src/util/writer.ts\nvar [getRenderer] = createSectionState(\"renderer\", (section) => t8.identifier(section.name));\nvar [getWrites] = createSectionState(\"writes\", () => [\"\"]);\nvar [getRegisterRenderer, setRegisterRenderer] = createSectionState(\"registerRenderer\", () => false);\nfunction writeTo(path3) {\n  const section = getSection(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(section);\n    appendLiteral(writes, strs[0]);\n    for (let i = 0; i < exprsLen; i++) {\n      writes.push(exprs[i], strs[i + 1]);\n    }\n  };\n}\nfunction writePrependTo(path3) {\n  const section = getSection(path3);\n  return (strs, ...exprs) => {\n    const exprsLen = exprs.length;\n    const writes = getWrites(section);\n    writes[0] += strs[exprsLen];\n    for (let i = 0; i < exprsLen; i++) {\n      writes.unshift(strs[i], exprs[i]);\n    }\n  };\n}\nfunction consumeHTML(path3) {\n  const writes = getWrites(getSection(path3));\n  const result = toTemplateOrStringLiteral(writes);\n  writes.length = 0;\n  writes[0] = \"\";\n  if (result) {\n    return t8.expressionStatement(callRuntime(\"write\", result));\n  }\n}\nfunction hasPendingHTML(path3) {\n  const writes = getWrites(getSection(path3));\n  return Boolean(writes.length > 1 || writes[0]);\n}\nfunction flushBefore(path3) {\n  const expr = consumeHTML(path3);\n  if (expr) {\n    path3.insertBefore(expr)[0].skip();\n  }\n}\nfunction flushInto(path3) {\n  const target = path3.isProgram() ? path3 : path3.get(\"body\");\n  const expr = consumeHTML(target);\n  if (expr) {\n    target.pushContainer(\"body\", expr)[0].skip();\n  }\n}\nfunction getSectionMeta(section) {\n  const writes = getWrites(section);\n  return {\n    setup: getSetup(section),\n    walks: getWalkString(section),\n    writes: toTemplateOrStringLiteral(writes) || t8.stringLiteral(\"\"),\n    register: getRegisterRenderer(section)\n  };\n}\nfunction markNode(path3) {\n  const section = getSection(path3);\n  const { reserve } = path3.node.extra;\n  if (reserve?.type !== 0 /* Visit */) {\n    throw path3.buildCodeFrameError(\"Tried to mark a node that was not determined to need a mark during analyze.\");\n  }\n  if (isOutputHTML()) {\n    writeTo(path3)`${callRuntime(\"markResumeNode\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve))}`;\n  }\n}\n\n// src/util/assert.ts\nfunction assertNoSpreadAttrs(tag) {\n  for (const attr2 of tag.get(\"attributes\")) {\n    if (attr2.isMarkoSpreadAttribute()) {\n      throw attr2.buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support ...spread attributes.`);\n    }\n  }\n}\nfunction assertNoBodyContent(tag) {\n  if (tag.node.body.body.length) {\n    throw tag.get(\"name\").buildCodeFrameError(`The <${tag.get(\"name\")}> tag does not support body content.`);\n  }\n}\n\n// src/core/return.ts\nvar [returnId, _setReturnId] = createSectionState(\"returnId\");\nvar return_default = {\n  translate(tag) {\n    assertNoVar(tag);\n    assertNoParams(tag);\n    assertNoBodyContent(tag);\n    assertNoSpreadAttrs(tag);\n    const section = getSection(tag);\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    if (!t9.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n      throw tag.get(\"name\").buildCodeFrameError(`The '<return>' tag requires default attribute like '<return=VALUE>'.`);\n    }\n    if (node.attributes.length > 1) {\n      const start = node.attributes[1].loc?.start;\n      const end = node.attributes[node.attributes.length - 1].loc?.end;\n      const msg = `The '<return>' tag only supports a default attribute.`;\n      if (start == null || end == null) {\n        throw tag.get(\"name\").buildCodeFrameError(msg);\n      } else {\n        throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n      }\n    }\n    if (isOutputHTML()) {\n      flushBefore(tag);\n      const returnId2 = file.path.scope.generateUidIdentifier(\"return\");\n      _setReturnId(section, returnId2);\n      tag.replaceWith(t9.variableDeclaration(\"const\", [\n        t9.variableDeclarator(returnId2, defaultAttr.value)\n      ]))[0].skip();\n    } else {\n      addValue(section, defaultAttr.extra?.valueReferences, {\n        identifier: importRuntime(\"tagVarSignal\"),\n        hasDownstreamIntersections: () => true\n      }, defaultAttr.value);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"return=<value>\",\n      description: \"Provides a value for use in a parent template.\",\n      snippet: \"return=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#return\"\n    }\n  ]\n};\n\n// src/util/signals.ts\nvar [getSignals] = createSectionState(\"signals\", () => /* @__PURE__ */ new Map());\nvar [getSubscribeBuilder, _setSubscribeBuilder] = createSectionState(\"queue\");\nfunction setSubscriberBuilder(tag, builder) {\n  _setSubscribeBuilder(getSection(tag.get(\"body\")), builder);\n}\nvar [getClosures] = createSectionState(\"closures\", () => []);\nvar addClosure = (fromSection, toSection, closure) => {\n  let currentSection = fromSection;\n  while (currentSection !== void 0 && currentSection !== toSection) {\n    getClosures(currentSection).push(closure);\n    currentSection = currentSection.parent;\n  }\n};\nvar [forceResumeScope, _setForceResumeScope] = createSectionState(\"forceResumeScope\");\nfunction setForceResumeScope(section) {\n  _setForceResumeScope(section, true);\n}\nvar [getSerializedScopeProperties] = createSectionState(\"serializedScopeProperties\", () => /* @__PURE__ */ new Map());\nvar [getRegisterScopeBuilder, _setRegisterScopeBuilder] = createSectionState(\"register\");\nfunction setRegisterScopeBuilder(tag, builder) {\n  _setRegisterScopeBuilder(getSection(tag.get(\"body\")), builder);\n}\nvar unimplementedBuild = () => {\n  return t10.stringLiteral(\"SIGNAL NOT INITIALIZED\");\n};\nfunction getSignal(section, reserve) {\n  const signals = getSignals(section);\n  let signal = signals.get(reserve);\n  if (!signal) {\n    signals.set(reserve, signal = {\n      identifier: t10.identifier(generateSignalName(section, reserve)),\n      reserve,\n      section,\n      values: [],\n      intersection: void 0,\n      render: [],\n      effect: [],\n      effectInlineReferences: void 0,\n      subscribers: [],\n      closures: /* @__PURE__ */ new Map(),\n      hasDownstreamIntersections: () => {\n        if (signal.intersection || signal.closures.size || signal.values.some((v) => v.signal.hasDownstreamIntersections())) {\n          signal.hasDownstreamIntersections = () => true;\n          return true;\n        } else {\n          signal.hasDownstreamIntersections = () => false;\n          return false;\n        }\n      },\n      build: unimplementedBuild\n    });\n    if (isOutputHTML()) {\n      return signal;\n    } else if (!reserve) {\n      signal.build = () => getSignalFn(signal, [scopeIdentifier]);\n    } else if (Array.isArray(reserve)) {\n      subscribe(reserve, signal);\n      signal.build = () => {\n        return callRuntime(\"intersection\", t10.numericLiteral(reserve.length), getSignalFn(signal, [scopeIdentifier], reserve));\n      };\n    } else if (reserve.section !== section) {\n      const provider = getSignal(reserve.section, reserve);\n      addClosure(section, reserve.section, signal.identifier);\n      provider.closures.set(section, signal);\n      signal.build = () => {\n        const builder = getSubscribeBuilder(section);\n        const ownerScope = getScopeExpression(section, reserve.section);\n        const isImmediateOwner = ownerScope.object === scopeIdentifier;\n        return callRuntime(builder && isImmediateOwner ? \"closure\" : \"dynamicClosure\", getScopeAccessorLiteral(reserve), getSignalFn(signal, [scopeIdentifier, t10.identifier(reserve.name)]), isImmediateOwner ? null : t10.arrowFunctionExpression([scopeIdentifier], ownerScope), buildSignalIntersections(signal), buildSignalValuesWithIntersections(signal));\n      };\n    }\n  }\n  return signal;\n}\nfunction initValue(reserve, valueAccessor = getScopeAccessorLiteral(reserve)) {\n  const section = reserve.section;\n  const signal = getSignal(section, reserve);\n  signal.build = () => {\n    const fn = getSignalFn(signal, [\n      scopeIdentifier,\n      t10.identifier(reserve.name)\n    ]);\n    const intersections = buildSignalIntersections(signal);\n    const valuesWithIntersections = buildSignalValuesWithIntersections(signal);\n    if (fn.body.body.length > 0 || intersections || valuesWithIntersections) {\n      return callRuntime(\"value\", valueAccessor, fn, intersections, valuesWithIntersections);\n    } else {\n      return fn;\n    }\n  };\n  signal.valueAccessor = valueAccessor;\n  return signal;\n}\nfunction initContextProvider(templateId, reserve, providers, compute, renderer) {\n  const section = reserve.section;\n  const scopeAccessor = getScopeAccessorLiteral(reserve);\n  const valueAccessor = t10.stringLiteral(`${reserve.id}${\":\" /* CONTEXT_VALUE */}`);\n  const signal = initValue(reserve, valueAccessor);\n  addValue(section, providers, signal, compute);\n  signal.hasDynamicSubscribers = true;\n  signal.hasDownstreamIntersections = () => true;\n  addStatement(\"render\", reserve.section, void 0, t10.expressionStatement(callRuntime(\"initContextProvider\", scopeIdentifier, scopeAccessor, valueAccessor, t10.stringLiteral(templateId), renderer)));\n  return signal;\n}\nfunction initContextConsumer(templateId, reserve) {\n  const section = reserve.section;\n  const signal = getSignal(section, reserve);\n  getClosures(section).push(signal.identifier);\n  signal.build = () => {\n    return callRuntime(\"contextClosure\", getScopeAccessorLiteral(reserve), t10.stringLiteral(templateId), getSignalFn(signal, [scopeIdentifier, t10.identifier(reserve.name)]));\n  };\n  return signal;\n}\nfunction getSignalFn(signal, params, references) {\n  const section = signal.section;\n  for (const value of signal.values) {\n    signal.render.push(t10.expressionStatement(t10.callExpression(value.signal.identifier, [value.scope, value.value])));\n  }\n  if (references) {\n    signal.render.unshift(t10.variableDeclaration(\"const\", [\n      t10.variableDeclarator(createScopeReadPattern(section, references), scopeIdentifier)\n    ]));\n  }\n  return t10.arrowFunctionExpression(params, t10.blockStatement(signal.render));\n}\nfunction buildSignalIntersections(signal) {\n  let intersections = signal.intersection;\n  const section = signal.section;\n  const closureEntries = Array.from(signal.closures.entries()).sort(([a], [b]) => a.id - b.id);\n  for (const [closureSection, closureSignal] of closureEntries) {\n    const builder = getSubscribeBuilder(closureSection);\n    const isImmediateOwner = closureSection.parent === section;\n    if (builder && isImmediateOwner) {\n      intersections = pushRepeatable(intersections, builder(closureSignal.identifier));\n    } else if (!signal.hasDynamicSubscribers) {\n      signal.hasDynamicSubscribers = true;\n    }\n  }\n  if (signal.hasDynamicSubscribers) {\n    signal.hasDynamicSubscribers = true;\n    intersections = pushRepeatable(intersections, callRuntime(\"dynamicSubscribers\", signal.valueAccessor));\n  }\n  return Array.isArray(intersections) ? callRuntime(\"intersections\", t10.arrayExpression(intersections)) : intersections;\n}\nfunction buildSignalValuesWithIntersections(signal) {\n  let valuesWithIntersections;\n  for (const value of signal.values) {\n    if (value.signal.hasDownstreamIntersections()) {\n      valuesWithIntersections = pushRepeatable(valuesWithIntersections, value.intersectionExpression ?? t10.identifier(value.signal.identifier.name));\n    }\n  }\n  return Array.isArray(valuesWithIntersections) ? callRuntime(\"values\", t10.arrayExpression(valuesWithIntersections)) : valuesWithIntersections;\n}\nfunction pushRepeatable(repeatable, value) {\n  if (!repeatable) {\n    return value;\n  } else if (Array.isArray(repeatable)) {\n    repeatable.push(value);\n    return repeatable;\n  } else {\n    return [repeatable, value];\n  }\n}\nfunction getTagVarSignal(varPath) {\n  if (varPath.isIdentifier()) {\n    return initValue(varPath.node.extra.reserve);\n  } else {\n    return getDestructureSignal(Object.values(varPath.getBindingIdentifiers()), varPath.node);\n  }\n}\nfunction getTagParamsSignal(paramsPaths, pattern = t10.arrayPattern(paramsPaths.map((path3) => path3.node))) {\n  const parameterBindings = paramsPaths.reduce((bindingsLookup, path3) => {\n    return Object.assign(bindingsLookup, path3.getBindingIdentifiers());\n  }, {});\n  return getDestructureSignal(parameterBindings, pattern);\n}\nfunction getDestructureSignal(bindingsByName, destructurePattern) {\n  const bindings = Array.isArray(bindingsByName) ? bindingsByName : Object.values(bindingsByName);\n  if (bindings.length) {\n    const valueIdentifier = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n    const bindingSignals = bindings.map((binding) => initValue(binding.extra?.reserve));\n    const declarations = t10.variableDeclaration(\"let\", bindings.map((binding) => t10.variableDeclarator(binding)));\n    return {\n      get identifier() {\n        const name = currentProgramPath.scope.generateUidIdentifier(\"destructure\");\n        currentProgramPath.pushContainer(\"body\", [\n          t10.variableDeclaration(\"const\", [\n            t10.variableDeclarator(name, this.build(true))\n          ])\n        ]);\n        return name;\n      },\n      build(canCallOnlyWhenDirty) {\n        if (canCallOnlyWhenDirty && !this.hasDownstreamIntersections()) {\n          return t10.arrowFunctionExpression([scopeIdentifier, destructurePattern], t10.blockStatement(bindingSignals.map((signal, i) => t10.expressionStatement(t10.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i]\n          ])))));\n        }\n        return t10.arrowFunctionExpression([scopeIdentifier, valueIdentifier, cleanIdentifier], t10.blockStatement([\n          declarations,\n          t10.ifStatement(t10.unaryExpression(\"!\", cleanIdentifier), t10.expressionStatement(t10.assignmentExpression(\"=\", destructurePattern, valueIdentifier))),\n          ...bindingSignals.map((signal, i) => t10.expressionStatement(t10.callExpression(signal.identifier, [\n            scopeIdentifier,\n            bindings[i],\n            cleanIdentifier\n          ])))\n        ]));\n      },\n      hasDownstreamIntersections() {\n        return bindings.some((binding) => {\n          const reserve = binding.extra?.reserve;\n          const signal = getSignal(reserve.section, reserve);\n          return signal.hasDownstreamIntersections();\n        });\n      }\n    };\n  }\n}\nfunction subscribe(provider, subscriber) {\n  if (Array.isArray(provider)) {\n    provider.forEach((p) => subscribe(p, subscriber));\n    return;\n  }\n  const providerSignal = getSignal(subscriber.section, provider);\n  providerSignal.intersection = pushRepeatable(providerSignal.intersection, subscriber.identifier);\n}\nfunction generateSignalName(section, references) {\n  let name;\n  if (references) {\n    if (Array.isArray(references)) {\n      name = \"expr\";\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name = references.name;\n    }\n  } else {\n    name = \"setup\";\n  }\n  name += section.name.replace(\"_\", \"$\");\n  return currentProgramPath.scope.generateUid(name);\n}\nfunction queueSource(source, value, targetSection) {\n  return callRuntime(\"queueSource\", getScopeExpression(targetSection, source.section), source.identifier, value);\n}\nfunction finalizeSignalArgs(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    const arg = args[i];\n    if (t10.isArrowFunctionExpression(arg)) {\n      const body = arg.body.body;\n      if (body) {\n        if (body.length === 0) {\n          args[i] = t10.nullLiteral();\n        } else if (body.length === 1 && t10.isExpressionStatement(body[0])) {\n          arg.body = body[0].expression;\n        }\n      }\n    }\n  }\n  for (let i = args.length - 1; t10.isNullLiteral(args[i]); ) {\n    args.length = i--;\n  }\n}\nfunction addStatement(type, targetSection, references, statement, originalNodes, isInlined) {\n  const signal = getSignal(targetSection, references);\n  const statements = signal[type] ??= [];\n  if (Array.isArray(statement)) {\n    statements.push(...statement);\n  } else {\n    statements.push(statement);\n  }\n  if (type === \"effect\") {\n    if (Array.isArray(originalNodes)) {\n      for (const node of originalNodes) {\n        if (isInlined || !t10.isFunction(node)) {\n          addEffectReferences(signal, node);\n        }\n      }\n    } else {\n      if (isInlined || !t10.isFunction(originalNodes)) {\n        addEffectReferences(signal, originalNodes);\n      }\n    }\n  }\n}\nfunction addValue(targetSection, references, signal, value, scope = scopeIdentifier, intersectionExpression) {\n  getSignal(targetSection, references).values.push({\n    signal,\n    value,\n    scope,\n    intersectionExpression\n  });\n}\nfunction addEffectReferences(signal, expression) {\n  signal.effectInlineReferences = repeatableReserves.addAll(signal.effectInlineReferences, expression.extra?.references);\n}\nfunction getResumeRegisterId(section, references) {\n  const {\n    markoOpts: { optimize },\n    opts: { filename }\n  } = currentProgramPath.hub.file;\n  let name = \"\";\n  if (references) {\n    if (typeof references === \"string\") {\n      name += `_${references}`;\n    } else if (Array.isArray(references)) {\n      for (const ref of references) {\n        name += `_${ref.name}`;\n      }\n    } else {\n      name += `_${references.name}`;\n    }\n  }\n  return getTemplateId(optimize, `${filename}_${section.id}${name}`);\n}\nfunction writeSignals(section) {\n  const signals = getSignals(section);\n  const declarations = Array.from(signals.values()).sort(sortSignals).flatMap((signal) => {\n    let effectDeclarator;\n    if (signal.effect.length) {\n      const effectIdentifier = t10.identifier(`${signal.identifier.name}_effect`);\n      if (signal.effectInlineReferences) {\n        signal.effect.unshift(t10.variableDeclaration(\"const\", [\n          t10.variableDeclarator(createScopeReadPattern(section, signal.effectInlineReferences), scopeIdentifier)\n        ]));\n      }\n      effectDeclarator = t10.variableDeclarator(effectIdentifier, callRuntime(\"register\", t10.stringLiteral(getResumeRegisterId(section, signal.reserve)), t10.arrowFunctionExpression([scopeIdentifier], signal.effect.length === 1 && t10.isExpressionStatement(signal.effect[0]) ? signal.effect[0].expression : t10.blockStatement(signal.effect))));\n      signal.render.push(t10.expressionStatement(callRuntime(\"queueEffect\", scopeIdentifier, effectIdentifier)));\n    }\n    let value = signal.build();\n    if (signal.register) {\n      value = callRuntime(\"register\", t10.stringLiteral(getResumeRegisterId(section, signal.reserve)), value);\n    }\n    if (t10.isCallExpression(value)) {\n      finalizeSignalArgs(value.arguments);\n    }\n    const signalDeclarator = t10.variableDeclarator(signal.identifier, value);\n    return effectDeclarator ? [\n      t10.variableDeclaration(\"const\", [effectDeclarator]),\n      t10.variableDeclaration(\"const\", [signalDeclarator])\n    ] : t10.variableDeclaration(\"const\", [signalDeclarator]);\n  });\n  const newPaths = currentProgramPath.pushContainer(\"body\", declarations);\n  newPaths.forEach((newPath) => newPath.traverse(bindFunctionsVisitor, { root: newPath, section }));\n}\nfunction sortSignals(a, b) {\n  const aReserves = getReserves(a);\n  const bReserves = getReserves(b);\n  for (let i = Math.max(aReserves.length, bReserves.length) - 1; i >= 0; i--) {\n    const diff = (bReserves[i] ?? -1) - (aReserves[i] ?? -1);\n    if (diff !== 0)\n      return diff;\n  }\n  return 0;\n}\nfunction getReserves({ reserve }) {\n  if (!reserve) {\n    return [];\n  } else if (Array.isArray(reserve)) {\n    return reserve.map(getMappedId).sort();\n  } else {\n    return [getMappedId(reserve)];\n  }\n}\nfunction getMappedId(reserve) {\n  return (reserve.type === 0 ? 1 : 0) * 1e4 + reserve.id;\n}\nfunction addHTMLEffectCall(section, references) {\n  addStatement(\"effect\", section, references, void 0, []);\n}\nfunction writeHTMLResumeStatements(path3, tagVarIdentifier) {\n  const section = getOrCreateSection(path3);\n  const intersections = currentProgramPath.node.extra.intersectionsBySection?.[section.id] ?? [];\n  const allSignals = Array.from(getSignals(section).values());\n  const scopeIdIdentifier = getScopeIdIdentifier(section);\n  const scopeIdentifier2 = getScopeIdentifier(section, true);\n  path3.unshiftContainer(\"body\", t10.variableDeclaration(\"const\", [\n    t10.variableDeclarator(scopeIdIdentifier, callRuntime(\"nextScopeId\"))\n  ]));\n  const serializedReferences = [];\n  for (const intersection of intersections) {\n    for (const reference of intersection) {\n      if (reference.type !== 0 /* Visit */) {\n        repeatableReserves.add(serializedReferences, reference);\n      }\n    }\n  }\n  for (let i = allSignals.length; i--; ) {\n    if (allSignals[i].effect.length) {\n      const signalRefs = allSignals[i].reserve;\n      repeatableReserves.addAll(serializedReferences, signalRefs);\n      path3.pushContainer(\"body\", t10.expressionStatement(callRuntime(\"writeEffect\", scopeIdIdentifier, t10.stringLiteral(getResumeRegisterId(section, signalRefs)))));\n    }\n  }\n  const serializedProperties = serializedReferences.reduce((acc, ref) => {\n    acc.push(t10.objectProperty(getScopeAccessorLiteral(ref), t10.identifier(ref.name)));\n    return acc;\n  }, []);\n  if (tagVarIdentifier && returnId(section) !== void 0) {\n    serializedProperties.push(t10.objectProperty(t10.stringLiteral(\"/\" /* TAG_VARIABLE */), tagVarIdentifier));\n  }\n  const additionalProperties = getSerializedScopeProperties(section);\n  for (const [key, value] of additionalProperties) {\n    serializedProperties.push(t10.objectProperty(key, value, !t10.isLiteral(key)));\n  }\n  if (serializedProperties.length || forceResumeScope(section)) {\n    const isRoot = path3.isProgram();\n    const builder = getRegisterScopeBuilder(section);\n    path3.pushContainer(\"body\", t10.expressionStatement(callRuntime(\"writeScope\", scopeIdIdentifier, builder ? builder(t10.objectExpression(serializedProperties)) : t10.objectExpression(serializedProperties), isRoot ? scopeIdentifier2 : null)));\n  }\n}\nvar bindFunctionsVisitor = {\n  FunctionExpression: { exit: bindFunction },\n  ArrowFunctionExpression: { exit: bindFunction }\n};\nfunction bindFunction(fn, { root, section }) {\n  const { node } = fn;\n  const { extra } = node;\n  const references = extra?.references;\n  const program = fn.hub.file.path;\n  const functionIdentifier = program.scope.generateUidIdentifier(extra?.name);\n  if (references) {\n    if (node.body.type !== \"BlockStatement\") {\n      node.body = t10.blockStatement([t10.returnStatement(node.body)]);\n    }\n    node.body.body.unshift(t10.variableDeclaration(\"const\", [\n      t10.variableDeclarator(createScopeReadPattern(section, references), scopeIdentifier)\n    ]));\n  }\n  let parent = fn.parentPath;\n  while (parent) {\n    if (parent.isFunction())\n      return;\n    if (parent === root)\n      return;\n    parent = parent.parentPath;\n  }\n  root.insertBefore(t10.variableDeclaration(\"const\", [\n    t10.variableDeclarator(functionIdentifier, node)\n  ]));\n  node.params.unshift(scopeIdentifier);\n  fn.replaceWith(callRuntime(\"bindFunction\", scopeIdentifier, functionIdentifier));\n}\nfunction getSetup(section) {\n  return getSignals(section).get(void 0)?.identifier;\n}\n\n// src/util/is-static.ts\nfunction isStatic(path3) {\n  return path3.isImportDeclaration() || path3.isExportDeclaration() || path3.isMarkoScriptlet({ static: true });\n}\n\n// src/visitors/program/html.ts\nimport { getTemplateId as getTemplateId2 } from \"@marko/babel-utils\";\nvar html_default = {\n  translate: {\n    exit(program) {\n      const section = getSection(program);\n      const tagVarIdentifier = program.scope.generateUidIdentifier(\"tagVar\");\n      flushInto(program);\n      writeHTMLResumeStatements(program, tagVarIdentifier);\n      const returnIdentifier = returnId(section);\n      if (returnIdentifier !== void 0) {\n        program.pushContainer(\"body\", t11.returnStatement(returnIdentifier));\n      }\n      const renderContent = [];\n      for (const child of program.get(\"body\")) {\n        if (!isStatic(child)) {\n          renderContent.push(child.node);\n          child.remove();\n        } else if (child.isMarkoScriptlet()) {\n          child.replaceWithMultiple(child.node.body);\n        }\n      }\n      const rendererId = program.scope.generateUidIdentifier(\"renderer\");\n      const { attrs: attrs2 } = program.node.extra;\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.pushContainer(\"body\", [\n        t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(rendererId, callRuntime(\"register\", t11.arrowFunctionExpression([\n            attrs2 ? attrs2.var : t11.identifier(\"input\"),\n            tagVarIdentifier,\n            getScopeIdentifier(getSection(program))\n          ], t11.blockStatement(renderContent)), t11.stringLiteral(getTemplateId2(optimize, `${filename}`))))\n        ]),\n        t11.exportDefaultDeclaration(rendererId),\n        t11.exportNamedDeclaration(t11.variableDeclaration(\"const\", [\n          t11.variableDeclarator(t11.identifier(\"render\"), callRuntime(\"createRenderer\", rendererId))\n        ]))\n      ]);\n    }\n  }\n};\n\n// src/visitors/program/dom.ts\nimport { types as t12 } from \"@marko/compiler\";\nimport { getTemplateId as getTemplateId3 } from \"@marko/babel-utils\";\nvar dom_default = {\n  translate: {\n    exit(program) {\n      visit(program);\n      const section = getSection(program);\n      const templateIdentifier = t12.identifier(\"template\");\n      const walksIdentifier = t12.identifier(\"walks\");\n      const setupIdentifier = t12.identifier(\"setup\");\n      const attrsSignalIdentifier = t12.identifier(\"attrs\");\n      const closuresIdentifier = t12.identifier(\"closures\");\n      const { attrs: attrs2 } = program.node.extra;\n      const { walks, writes, setup } = getSectionMeta(section);\n      forEachSectionReverse((childSection) => {\n        writeSignals(childSection);\n        if (childSection !== section) {\n          const { walks: walks2, writes: writes2, setup: setup2, register: register2 } = getSectionMeta(childSection);\n          const closures2 = getClosures(childSection);\n          const identifier = getRenderer(childSection);\n          const renderer = callRuntime(\"createRenderer\", writes2, walks2, setup2, closures2.length && t12.arrayExpression(closures2));\n          program.node.body.push(t12.variableDeclaration(\"const\", [\n            t12.variableDeclarator(identifier, register2 ? callRuntime(\"register\", t12.stringLiteral(getResumeRegisterId(childSection, \"renderer\")), renderer) : renderer)\n          ]));\n        }\n      });\n      if (attrs2) {\n        const exportSpecifiers = [];\n        const isIdentity = t12.isIdentifier(attrs2.var);\n        for (const name in attrs2.bindings) {\n          const bindingIdentifier = attrs2.bindings[name];\n          const signalIdentifier = getSignal(section, bindingIdentifier.extra.reserve).identifier;\n          exportSpecifiers.push(t12.exportSpecifier(signalIdentifier, signalIdentifier));\n        }\n        program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n          t12.variableDeclarator(attrsSignalIdentifier, isIdentity ? getSignal(section, attrs2.var.extra.reserve).identifier : getDestructureSignal(attrs2.bindings, attrs2.var)?.build())\n        ])), t12.exportNamedDeclaration(null, exportSpecifiers));\n      }\n      const closures = getClosures(section);\n      program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(templateIdentifier, writes || t12.stringLiteral(\"\"))\n      ])), t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(walksIdentifier, walks || t12.stringLiteral(\"\"))\n      ])), t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n        t12.variableDeclarator(setupIdentifier, t12.isNullLiteral(setup) || !setup ? t12.functionExpression(null, [], t12.blockStatement([])) : setup)\n      ])));\n      if (closures.length) {\n        program.node.body.push(t12.exportNamedDeclaration(t12.variableDeclaration(\"const\", [\n          t12.variableDeclarator(closuresIdentifier, t12.arrayExpression(closures))\n        ])));\n      }\n      const {\n        markoOpts: { optimize },\n        opts: { filename }\n      } = program.hub.file;\n      program.node.body.push(t12.exportDefaultDeclaration(callRuntime(\"createRenderFn\", templateIdentifier, walksIdentifier, setupIdentifier, attrs2 && attrsSignalIdentifier, closures.length && closuresIdentifier, t12.stringLiteral(getTemplateId3(optimize, `${filename}`)))));\n    }\n  }\n};\n\n// src/util/references.ts\nvar intersectionSubscribeCounts = /* @__PURE__ */ new WeakMap();\nvar repeatableIntersections = new SortedRepeatable(compareIntersections);\nvar [getIntersectionsBySection, setIntersectionsBySection] = createSectionState(\"intersectionsBySection\", () => []);\nfunction trackReferences(tag) {\n  if (tag.has(\"var\")) {\n    trackReferencesForBindings(getOrCreateSection(tag), tag.get(\"var\"));\n  }\n  const body = tag.get(\"body\");\n  if (body.get(\"body\").length && body.get(\"params\").length) {\n    trackReferencesForBindings(getOrCreateSection(body), body);\n  }\n}\nfunction trackReferencesForBindings(section, path3) {\n  const scope = path3.scope;\n  const bindings = path3.getBindingIdentifiers();\n  for (const name in bindings) {\n    const references = scope.getBinding(name).referencePaths.concat(scope.getBinding(name).constantViolations.filter((path4) => path4.isAssignmentExpression() && path4.node.operator !== \"=\"));\n    const identifier = bindings[name];\n    const binding = reserveScope(1 /* Store */, section, identifier, name);\n    for (const reference of references) {\n      const fnRoot = getFnRoot(reference.scope.path);\n      const exprRoot = getExprRoot(fnRoot || reference);\n      const markoRoot = exprRoot.parentPath;\n      const immediateRoot = fnRoot ?? exprRoot;\n      if (immediateRoot) {\n        const name2 = immediateRoot.node.id?.name;\n        if (!name2) {\n          if (markoRoot.isMarkoAttribute() && !markoRoot.node.default) {\n            (immediateRoot.node.extra ??= {}).name = markoRoot.node.name;\n          }\n        }\n        addBindingToReferences(immediateRoot, \"references\", binding);\n      }\n      addBindingToReferences(markoRoot, `${exprRoot.listKey || exprRoot.key}References`, binding);\n    }\n  }\n}\nfunction addBindingToReferences(path3, referencesKey, binding) {\n  const section = getOrCreateSection(path3);\n  const extra = path3.node.extra ??= {};\n  const prevReferences = extra[referencesKey];\n  if (prevReferences) {\n    if (prevReferences !== binding) {\n      extra[referencesKey] = addSubscriber(getIntersection(section, repeatableReserves.add(repeatableReserves.clone(prevReferences), binding)));\n      if (isIntersection(prevReferences)) {\n        removeSubscriber(getIntersection(section, prevReferences));\n      }\n    }\n  } else {\n    extra[referencesKey] = binding;\n  }\n}\nfunction mergeReferences(section, groupEntries) {\n  let newReferences;\n  for (const [extra, key] of groupEntries) {\n    const references = extra[key];\n    if (isIntersection(references)) {\n      removeSubscriber(getIntersection(section, references));\n    }\n    newReferences = repeatableReserves.addAll(newReferences, references);\n    delete extra[key];\n  }\n  if (isIntersection(newReferences)) {\n    newReferences = addSubscriber(getIntersection(section, newReferences));\n  }\n  return newReferences;\n}\nfunction getExprRoot(path3) {\n  let curPath = path3;\n  while (!isMarkoPath(curPath.parentPath)) {\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction getFnRoot(path3) {\n  let curPath = path3;\n  if (curPath.isProgram())\n    return;\n  while (!isFunctionExpression(curPath)) {\n    if (isMarkoPath(curPath))\n      return;\n    curPath = curPath.parentPath;\n  }\n  return curPath;\n}\nfunction isMarkoPath(path3) {\n  switch (path3.type) {\n    case \"MarkoTag\":\n    case \"MarkoTagBody\":\n    case \"MarkoAttribute\":\n    case \"MarkoSpreadAttribute\":\n    case \"MarkoPlaceholder\":\n    case \"MarkoScriptlet\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction isFunctionExpression(path3) {\n  switch (path3.type) {\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction compareIntersections(a, b) {\n  const len = a.length;\n  const lenDelta = len - b.length;\n  if (lenDelta !== 0) {\n    return lenDelta;\n  }\n  for (let i = 0; i < len; i++) {\n    const compareResult = repeatableReserves.compare(a[i], b[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n  return 0;\n}\nfunction finalizeIntersections() {\n  const intersectionsBySection = (currentProgramPath.node.extra ??= {}).intersectionsBySection = {};\n  forEachSection((section) => {\n    intersectionsBySection[section.id] = getIntersectionsBySection(section).filter((intersection) => intersectionSubscribeCounts.get(intersection) > 0);\n  });\n}\nfunction getIntersection(section, references) {\n  const intersections = getIntersectionsBySection(section);\n  let intersection = repeatableIntersections.find(intersections, references);\n  if (!intersection) {\n    intersection = references;\n    setIntersectionsBySection(section, repeatableIntersections.add(intersections, references));\n  }\n  return intersection;\n}\nfunction addSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, (intersectionSubscribeCounts.get(intersection) || 0) + 1);\n  return intersection;\n}\nfunction removeSubscriber(intersection) {\n  intersectionSubscribeCounts.set(intersection, intersectionSubscribeCounts.get(intersection) - 1);\n  return intersection;\n}\nfunction isIntersection(references) {\n  return Array.isArray(references);\n}\n\n// src/visitors/program/index.ts\nvar currentProgramPath;\nvar scopeIdentifier;\nvar cleanIdentifier;\nvar previousProgramPath = /* @__PURE__ */ new WeakMap();\nvar program_default = {\n  migrate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n    },\n    exit() {\n      currentProgramPath.scope.crawl();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  analyze: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      startSection(program);\n    },\n    exit() {\n      assignFinalIds();\n      finalizeIntersections();\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  },\n  translate: {\n    enter(program) {\n      previousProgramPath.set(program, currentProgramPath);\n      currentProgramPath = program;\n      scopeIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"scope\") : null;\n      cleanIdentifier = isOutputDOM() ? program.scope.generateUidIdentifier(\"clean\") : null;\n      if (getMarkoOpts().output === \"hydrate\") {\n        program.skip();\n        program.node.body = [\n          t13.importDeclaration([], t13.stringLiteral(program.hub.file.opts.filename))\n        ];\n        if (program.node.extra.hasInteractiveChild || program.node.extra.isInteractive) {\n          program.node.body.push(t13.expressionStatement(callRuntime(\"init\")));\n        }\n        return;\n      }\n    },\n    exit(program) {\n      if (isOutputHTML()) {\n        html_default.translate.exit(program);\n      } else {\n        dom_default.translate.exit(program);\n      }\n      currentProgramPath = previousProgramPath.get(currentProgramPath);\n    }\n  }\n};\n\n// src/visitors/import-declaration.ts\nimport { resolveTagImport } from \"@marko/babel-utils\";\nvar import_declaration_default = {\n  translate: {\n    exit(path3) {\n      const source = path3.get(\"source\");\n      const request = source.node.value;\n      source.node.value = resolveTagImport(source, request) || request;\n    }\n  }\n};\n\n// src/visitors/document-type.ts\nvar document_type_default = {\n  translate(documentType) {\n    if (isOutputHTML()) {\n      writeTo(documentType)`<!${documentType.node.value}>`;\n    }\n    documentType.remove();\n  }\n};\n\n// src/visitors/assignment-expression.ts\nimport { types as t14 } from \"@marko/compiler\";\n\n// src/util/replace-assignments.ts\nvar assignmentReplacer = /* @__PURE__ */ new WeakMap();\nfunction getReplacement(assignment, value) {\n  return assignmentReplacer.get(assignment.node)?.(assignment, value);\n}\nfunction registerAssignmentReplacer(binding, map) {\n  for (const assignment of binding.constantViolations) {\n    assignmentReplacer.set(assignment.node, map);\n  }\n}\n\n// src/visitors/assignment-expression.ts\nvar assignment_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = assignment.node.operator === \"=\" ? assignment.node.right : t14.binaryExpression(assignment.node.operator.slice(0, -1), assignment.node.left, assignment.node.right);\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(replacement);\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/update-expression.ts\nimport { types as t15 } from \"@marko/compiler\";\nvar update_expression_default = {\n  translate: {\n    exit(assignment) {\n      if (isOutputDOM()) {\n        const value = t15.binaryExpression(assignment.node.operator === \"++\" ? \"+\" : \"-\", assignment.node.argument, t15.numericLiteral(1));\n        const replacement = getReplacement(assignment, value);\n        if (replacement) {\n          assignment.replaceWith(assignment.node.prefix || assignment.parentPath.isExpressionStatement() ? replacement : t15.sequenceExpression([replacement, assignment.node.argument]));\n        }\n      }\n    }\n  }\n};\n\n// src/visitors/declaration.ts\nvar declaration_default = {\n  translate(declaration) {\n    if (isOutputHTML()) {\n      writeTo(declaration)`<?${declaration.node.value}?>`;\n    }\n    declaration.remove();\n  }\n};\n\n// src/visitors/cdata.ts\nvar cdata_default = {\n  translate(cdata) {\n    if (isOutputHTML()) {\n      writeTo(cdata)`<![CDATA[${cdata.node.value}]]>`;\n    }\n    cdata.remove();\n  }\n};\n\n// src/visitors/text.ts\nimport { types as t16 } from \"@marko/compiler\";\nvar text_default = {\n  translate(text) {\n    const followingSiblings = text.container.slice(text.key + 1);\n    let needsSeparator = false;\n    if (isOutputHTML()) {\n      for (const sibling of followingSiblings) {\n        if (t16.isMarkoPlaceholder(sibling)) {\n          needsSeparator = true;\n          break;\n        } else if (t16.isMarkoTag(sibling) || t16.isMarkoText(sibling)) {\n          break;\n        }\n      }\n    }\n    writeTo(text)`${text.node.value}${needsSeparator ? \"<!>\" : \"\"}`;\n    enterShallow(text);\n    text.remove();\n  }\n};\n\n// src/visitors/tag/index.ts\nimport { types as t26 } from \"@marko/compiler\";\nimport {\n  assertNoArgs,\n  getTagDef as getTagDef3,\n  isNativeTag as isNativeTag2\n} from \"@marko/babel-utils\";\n\n// src/util/plugin-hooks.ts\nimport { types as t17 } from \"@marko/compiler\";\nfunction enter2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (isFunctionPlugin(plugin)) {\n    plugin(path3, t17);\n  } else if (plugin.enter) {\n    plugin.enter(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction exit2(modulePlugin, path3) {\n  if (!modulePlugin) {\n    return false;\n  }\n  const { node } = path3;\n  const plugin = isModulePlugin(modulePlugin) ? modulePlugin.default : modulePlugin;\n  if (!isFunctionPlugin(plugin) && plugin.exit) {\n    plugin.exit(path3, t17);\n  }\n  return node !== path3.node;\n}\nfunction isModulePlugin(plugin) {\n  return Boolean(plugin.default);\n}\nfunction isFunctionPlugin(plugin) {\n  return typeof plugin === \"function\";\n}\n\n// src/visitors/tag/native-tag.ts\nimport { types as t21 } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\n// src/util/attrs-to-object.ts\nimport { types as t19 } from \"@marko/compiler\";\n\n// src/util/to-property-name.ts\nimport { types as t18 } from \"@marko/compiler\";\nvar IDENTIFIER_REG = /^[0-9A-Z_$]+$/i;\nfunction toPropertyName(name) {\n  return IDENTIFIER_REG.test(name) ? t18.identifier(name) : t18.stringLiteral(name);\n}\n\n// src/util/attrs-to-object.ts\nfunction attrsToObject(tag, withRenderBody = false) {\n  const { node } = tag;\n  let result = t19.objectExpression([]);\n  const resultExtra = result.extra = {};\n  for (const attr2 of node.attributes) {\n    const value = attr2.value;\n    if (t19.isMarkoSpreadAttribute(attr2)) {\n      result.properties.push(t19.spreadElement(value));\n    } else {\n      result.properties.push(t19.objectProperty(toPropertyName(attr2.name), value));\n    }\n  }\n  if (withRenderBody) {\n    const { body, params } = node.body;\n    let hoistedControlFlows = node.extra.hoistedControlFlows;\n    if (hoistedControlFlows) {\n      for (const child of tag.get(\"body\").get(\"body\")) {\n        tag.insertBefore(child.node);\n        child.remove();\n        if (child.isConditional() || child.isLoop()) {\n          if (!--hoistedControlFlows) {\n            break;\n          }\n        }\n      }\n    }\n    if (body.length) {\n      result.properties.push(t19.objectMethod(\"method\", t19.identifier(\"renderBody\"), params, t19.blockStatement(body)));\n    }\n  }\n  if (result.properties.length) {\n    if (result.properties.length === 1) {\n      const [prop] = result.properties;\n      if (t19.isSpreadElement(prop)) {\n        result = prop.argument;\n        result.extra = resultExtra;\n      }\n    }\n    return result;\n  }\n}\nfunction getRenderBodyProp(attrsObject) {\n  if (t19.isObjectExpression(attrsObject)) {\n    const lastProp = attrsObject.properties[attrsObject.properties.length - 1];\n    if (t19.isObjectMethod(lastProp) && lastProp.key.name === \"renderBody\") {\n      return lastProp;\n    }\n  }\n}\n\n// src/util/translate-var.ts\nimport { types as t20 } from \"@marko/compiler\";\nfunction translateVar(tag, initialValue, kind = \"const\") {\n  const {\n    node: { var: tagVar }\n  } = tag;\n  if (!tagVar) {\n    return;\n  }\n  tag.get(\"var\").remove();\n  tag.insertBefore(t20.variableDeclaration(kind, [\n    t20.variableDeclarator(t20.cloneDeep(tagVar), initialValue)\n  ]));\n  tag.hub.file.path.scope.crawl();\n}\n\n// src/util/evaluate.ts\nfunction evaluate(path3) {\n  let { extra } = path3.node;\n  if (!extra) {\n    extra = path3.node.extra = {};\n  }\n  if (extra.confident === void 0) {\n    const value = path3.get(\"value\");\n    const { confident, value: computed } = value.evaluate();\n    extra.computed = computed;\n    extra.confident = confident;\n  }\n  return extra;\n}\n\n// src/visitors/tag/native-tag.ts\nvar native_tag_default = {\n  analyze: {\n    enter(tag) {\n      const { node } = tag;\n      const attrs2 = tag.get(\"attributes\");\n      let section = tag.has(\"var\") ? getOrCreateSection(tag) : void 0;\n      if (attrs2.some(isSpreadAttr)) {\n      } else {\n        for (const attr2 of attrs2) {\n          const attrNode = attr2.node;\n          const { name: name2 } = attrNode;\n          if (isEventHandler(name2)) {\n            section ??= getOrCreateSection(tag);\n            (currentProgramPath.node.extra ?? {}).isInteractive = true;\n          } else if (!evaluate(attr2).confident) {\n            section ??= getOrCreateSection(tag);\n          }\n        }\n      }\n      const name = node.var ? node.var.name : node.name.value;\n      if (section !== void 0) {\n        reserveScope(0 /* Visit */, section, node, name, `#${tag.get(\"name\").evaluate().value}`);\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const name = tag.get(\"name\");\n      const attrs2 = tag.get(\"attributes\");\n      const tagDef = getTagDef(tag);\n      const hasSpread = attrs2.some((attr2) => attr2.isMarkoSpreadAttribute());\n      const write2 = writeTo(tag);\n      const section = getSection(tag);\n      if (isHTML && extra.tagNameNullable) {\n        flushBefore(tag);\n      }\n      if (tag.has(\"var\")) {\n        if (isHTML) {\n          translateVar(tag, t21.arrowFunctionExpression([], t21.blockStatement([\n            t21.throwStatement(t21.newExpression(t21.identifier(\"Error\"), [\n              t21.stringLiteral(\"Cannot reference DOM node from server\")\n            ]))\n          ])));\n        } else {\n          const varName = tag.node.var.name;\n          const references = tag.scope.getBinding(varName).referencePaths;\n          let createElFunction = void 0;\n          for (const reference of references) {\n            const referenceSection = getSection(reference);\n            if (reference.parentPath?.isCallExpression()) {\n              reference.parentPath.replaceWith(t21.expressionStatement(createScopeReadExpression(referenceSection, extra.reserve)));\n            } else {\n              createElFunction ??= t21.identifier(varName + \"_getter\");\n              reference.replaceWith(callRuntime(\"bindFunction\", getScopeExpression(referenceSection, extra.reserve.section), createElFunction));\n            }\n          }\n          if (createElFunction) {\n            currentProgramPath.pushContainer(\"body\", t21.variableDeclaration(\"const\", [\n              t21.variableDeclarator(createElFunction, t21.arrowFunctionExpression([scopeIdentifier], t21.memberExpression(scopeIdentifier, getScopeAccessorLiteral(extra.reserve), true)))\n            ]));\n          }\n        }\n      }\n      let visitAccessor;\n      if (extra.reserve) {\n        visitAccessor = getScopeAccessorLiteral(extra.reserve);\n        visit(tag, 32 /* Get */);\n      }\n      write2`<${name.node}`;\n      if (hasSpread) {\n        const attrsCallExpr = callRuntime(\"attrs\", scopeIdentifier, attrsToObject(tag));\n        if (isHTML) {\n          write2`${attrsCallExpr}`;\n        } else {\n          tag.insertBefore(t21.expressionStatement(attrsCallExpr));\n        }\n      } else {\n        for (const attr2 of attrs2) {\n          const name2 = attr2.node.name;\n          const extra2 = attr2.node.extra ?? {};\n          const value = attr2.get(\"value\");\n          const { confident, computed, valueReferences } = extra2;\n          switch (name2) {\n            case \"class\":\n            case \"style\": {\n              const helper = `${name2}Attr`;\n              if (confident) {\n                write2`${getHTMLRuntime()[helper](computed)}`;\n              } else if (isHTML) {\n                write2`${callRuntime(helper, value.node)}`;\n              } else {\n                addStatement(\"render\", section, valueReferences, t21.expressionStatement(callRuntime(helper, t21.memberExpression(scopeIdentifier, visitAccessor, true), value.node)));\n              }\n              break;\n            }\n            default:\n              if (confident) {\n                write2`${getHTMLRuntime().attr(name2, computed)}`;\n              } else if (isHTML) {\n                if (isEventHandler(name2)) {\n                  addHTMLEffectCall(section, valueReferences);\n                } else {\n                  write2`${callRuntime(\"attr\", t21.stringLiteral(name2), value.node)}`;\n                }\n              } else if (isEventHandler(name2)) {\n                addStatement(\"effect\", section, valueReferences, t21.expressionStatement(callRuntime(\"on\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(getEventHandlerName(name2)), value.node)), value.node);\n              } else {\n                addStatement(\"render\", section, valueReferences, t21.expressionStatement(callRuntime(\"attr\", t21.memberExpression(scopeIdentifier, visitAccessor, true), t21.stringLiteral(name2), value.node)));\n              }\n              break;\n          }\n        }\n      }\n      if (tagDef && tagDef.parseOptions?.openTagOnly) {\n        switch (tagDef.htmlType) {\n          case \"svg\":\n          case \"math\":\n            write2`/>`;\n            break;\n          default:\n            write2`>`;\n            break;\n        }\n      } else {\n        write2`>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(name.node, consumeHTML(tag)))[0].skip();\n      }\n      enter(tag);\n    },\n    exit(tag) {\n      const { extra } = tag.node;\n      const isHTML = isOutputHTML();\n      const openTagOnly = getTagDef(tag)?.parseOptions?.openTagOnly;\n      if (isHTML && extra.tagNameNullable) {\n        flushInto(tag);\n      }\n      tag.insertBefore(tag.node.body.body).forEach((child) => child.skip());\n      if (!openTagOnly) {\n        writeTo(tag)`</${tag.node.name}>`;\n      }\n      if (isHTML && extra.tagNameNullable) {\n        tag.insertBefore(t21.ifStatement(tag.node.name, consumeHTML(tag)))[0].skip();\n      }\n      if (extra.reserve) {\n        markNode(tag);\n      }\n      exit(tag);\n      tag.remove();\n    }\n  }\n};\nfunction isSpreadAttr(attr2) {\n  return attr2.type === \"MarkoSpreadAttribute\";\n}\nfunction isEventHandler(propName) {\n  return /^on[A-Z-]/.test(propName);\n}\nfunction getEventHandlerName(propName) {\n  return propName.charAt(2) === \"-\" ? propName.slice(3) : propName.charAt(2).toLowerCase() + propName.slice(3);\n}\n\n// src/visitors/tag/custom-tag.ts\nimport { types as t22 } from \"@marko/compiler\";\nimport {\n  getTagDef as getTagDef2,\n  importNamed as importNamed2,\n  importDefault,\n  resolveRelativePath,\n  loadFileForTag\n} from \"@marko/babel-utils\";\nvar custom_tag_default = {\n  analyze: {\n    enter(tag) {\n      trackReferences(tag);\n      const body = tag.get(\"body\");\n      if (body.get(\"body\").length) {\n        startSection(body);\n      }\n      if (getTagDef2(tag)?.template) {\n        reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"#childScope\");\n      }\n      const childFile = loadFileForTag(tag);\n      const childProgramExtra = childFile?.ast.program.extra;\n      const hasInteractiveChild = childProgramExtra?.isInteractive || childProgramExtra?.hasInteractiveChild;\n      if (hasInteractiveChild) {\n        (currentProgramPath.node.extra ?? {}).hasInteractiveChild = true;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef2(tag);\n      const template = tagDef?.template;\n      const section = getOrCreateSection(tag);\n      if (template) {\n        tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML(tag);\n      } else {\n        translateDOM(tag);\n      }\n    }\n  }\n};\nfunction translateHTML(tag) {\n  const tagBody = tag.get(\"body\");\n  const { node } = tag;\n  let tagIdentifier;\n  flushInto(tag);\n  writeHTMLResumeStatements(tagBody);\n  if (t22.isStringLiteral(node.name)) {\n    const { file } = tag.hub;\n    const tagName = node.name.value;\n    const relativePath = getTagRelativePath(tag);\n    tagIdentifier = importDefault(file, relativePath, tagName);\n  } else {\n    tagIdentifier = node.name;\n  }\n  const tagVar = node.var;\n  const attrsObject = attrsToObject(tag, true);\n  const renderBodyProp = getRenderBodyProp(attrsObject);\n  if (node.extra.tagNameNullable) {\n    let renderBodyId = void 0;\n    let renderTagExpr = callExpression(tagIdentifier, attrsToObject(tag));\n    if (renderBodyProp) {\n      renderBodyId = tag.scope.generateUidIdentifier(\"renderBody\");\n      const [renderBodyPath] = tag.insertBefore(t22.functionDeclaration(renderBodyId, renderBodyProp.params, renderBodyProp.body));\n      renderBodyPath.skip();\n      attrsObject.properties[attrsObject.properties.length - 1] = t22.objectProperty(t22.identifier(\"renderBody\"), renderBodyId);\n    }\n    if (tagVar) {\n      translateVar(tag, t22.unaryExpression(\"void\", t22.numericLiteral(0)), \"let\");\n      renderTagExpr = t22.assignmentExpression(\"=\", tagVar, renderTagExpr);\n    }\n    tag.replaceWith(t22.ifStatement(tagIdentifier, t22.expressionStatement(renderTagExpr), renderBodyId && callStatement(renderBodyId)))[0].skip();\n  } else if (tagVar) {\n    const section = getSection(tag);\n    translateVar(tag, callExpression(tagIdentifier, attrsObject, callRuntime(\"register\", t22.arrowFunctionExpression([], t22.blockStatement([])), t22.stringLiteral(getResumeRegisterId(section, node.var.extra?.reserve)), getScopeIdIdentifier(section))));\n    setForceResumeScope(section);\n    tag.remove();\n  } else {\n    tag.replaceWith(callStatement(tagIdentifier, attrsObject))[0].skip();\n  }\n}\nfunction translateDOM(tag) {\n  const tagSection = getSection(tag);\n  const tagBody = tag.get(\"body\");\n  const tagBodySection = getSection(tagBody);\n  const { node } = tag;\n  const write2 = writeTo(tag);\n  const binding = node.extra.reserve;\n  const { file } = tag.hub;\n  const tagName = node.name.value;\n  const relativePath = getTagRelativePath(tag);\n  const childFile = loadFileForTag(tag);\n  const childProgram = childFile.ast.program;\n  const tagIdentifier = importNamed2(file, relativePath, \"setup\", tagName);\n  let tagAttrsIdentifier;\n  if (childProgram.extra.attrs) {\n    tagAttrsIdentifier = importNamed2(file, relativePath, \"attrs\", `${tagName}_attrs`);\n  }\n  write2`${importNamed2(file, relativePath, \"template\", `${tagName}_template`)}`;\n  injectWalks(tag, importNamed2(file, relativePath, \"walks\", `${tagName}_walks`));\n  if (childProgram.extra.closures) {\n    getClosures(tagSection).push(callRuntime(\"childClosures\", importNamed2(file, relativePath, \"closures\", `${tagName}_closures`), getScopeAccessorLiteral(binding)));\n  }\n  let attrsObject = attrsToObject(tag);\n  if (tagBodySection !== tagSection) {\n    attrsObject ??= t22.objectExpression([]);\n    attrsObject.properties.push(t22.objectProperty(t22.identifier(\"renderBody\"), callRuntime(\"bindRenderer\", scopeIdentifier, getRenderer(tagBodySection))));\n  }\n  if (node.var) {\n    const source = initValue(node.var.extra.reserve);\n    source.register = true;\n    addStatement(\"render\", tagSection, void 0, t22.expressionStatement(callRuntime(\"setTagVar\", scopeIdentifier, getScopeAccessorLiteral(binding), source.identifier)));\n  }\n  addStatement(\"render\", tagSection, void 0, t22.expressionStatement(t22.callExpression(tagIdentifier, [\n    createScopeReadExpression(tagSection, binding)\n  ])));\n  if (attrsObject && tagAttrsIdentifier) {\n    addValue(tagSection, tag.node.extra.attrsReferences, {\n      identifier: tagAttrsIdentifier,\n      hasDownstreamIntersections: () => true\n    }, attrsObject, createScopeReadExpression(tagSection, binding), callRuntime(\"inChild\", getScopeAccessorLiteral(binding), t22.identifier(tagAttrsIdentifier.name)));\n  }\n  tag.remove();\n}\nfunction getTagRelativePath(tag) {\n  const {\n    node,\n    hub: { file }\n  } = tag;\n  const nameIsString = t22.isStringLiteral(node.name);\n  let relativePath;\n  if (nameIsString) {\n    const tagDef = getTagDef2(tag);\n    const template = tagDef?.template;\n    relativePath = template && resolveRelativePath(file, template);\n  }\n  if (!relativePath) {\n    throw tag.get(\"name\").buildCodeFrameError(`Unable to find entry point for custom tag <${nameIsString ? node.name.value : node.name}>.`);\n  }\n  const tags = file.metadata.marko.tags;\n  if (!tags.includes(relativePath)) {\n    tags.push(relativePath);\n  }\n  return relativePath;\n}\nfunction callStatement(id, ...args) {\n  return t22.expressionStatement(callExpression(id, ...args));\n}\nfunction callExpression(id, ...args) {\n  return t22.callExpression(id, args.filter(Boolean));\n}\n\n// src/visitors/tag/dynamic-tag.ts\nimport { types as t24 } from \"@marko/compiler\";\n\n// src/util/to-first-expression-or-block.ts\nimport { types as t23 } from \"@marko/compiler\";\nfunction toFirstExpressionOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1 && t23.isExpressionStatement(nodes[0])) {\n    return nodes[0].expression;\n  }\n  if (t23.isBlockStatement(body)) {\n    return body;\n  }\n  return t23.blockStatement(nodes);\n}\n\n// src/visitors/tag/dynamic-tag.ts\nvar dynamic_tag_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"dynamicTagName\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      tag.node.extra.attrsReferences = mergeReferences(getOrCreateSection(tag), tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      addBindingToReferences(tag, \"attrsReferences\", tag.node.extra.reserve);\n    }\n  },\n  translate: {\n    enter(tag) {\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      const { node } = tag;\n      if (isOutputHTML()) {\n        flushInto(tag);\n        const attrsObject = attrsToObject(tag, true);\n        const renderBodyProp = getRenderBodyProp(attrsObject);\n        const args = [\n          node.name,\n          attrsObject || t24.nullLiteral()\n        ];\n        if (renderBodyProp) {\n          attrsObject.properties.pop();\n          args.push(t24.arrowFunctionExpression(renderBodyProp.params, toFirstExpressionOrBlock(renderBodyProp.body)));\n        }\n        const dynamicScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"dynamicScope\");\n        const dynamicTagExpr = callRuntime(\"dynamicTag\", ...args);\n        if (node.var) {\n          translateVar(tag, dynamicTagExpr);\n          tag.remove();\n        } else {\n          tag.replaceWith(t24.variableDeclaration(\"const\", [\n            t24.variableDeclarator(dynamicScopeIdentifier, dynamicTagExpr)\n          ]))[0].skip();\n        }\n        const section = getSection(tag);\n        writeTo(tag)`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(node.extra.reserve))}`;\n        getSerializedScopeProperties(section).set(t24.stringLiteral(getScopeAccessorLiteral(node.extra.reserve).value + \"!\"), dynamicScopeIdentifier);\n        getSerializedScopeProperties(section).set(t24.stringLiteral(getScopeAccessorLiteral(node.extra.reserve).value + \"(\"), node.name);\n      } else {\n        const section = getSection(tag);\n        const bodySection = getSection(tag.get(\"body\"));\n        const hasBody = section !== bodySection;\n        const renderBodyIdentifier = hasBody && getRenderer(bodySection);\n        const tagNameReserve = node.extra?.reserve;\n        const signal = getSignal(section, tagNameReserve);\n        signal.build = () => {\n          return callRuntime(\"conditional\", getScopeAccessorLiteral(tagNameReserve), getSignalFn(signal, [scopeIdentifier]), buildSignalIntersections(signal), buildSignalValuesWithIntersections(signal));\n        };\n        signal.hasDownstreamIntersections = () => true;\n        addValue(section, node.extra?.nameReferences, signal, renderBodyIdentifier ? t24.logicalExpression(\"||\", node.name, renderBodyIdentifier) : node.name);\n        const attrsObject = attrsToObject(tag, true);\n        if (attrsObject || renderBodyIdentifier) {\n          const attrsGetter = t24.arrowFunctionExpression([], attrsObject ?? t24.objectExpression([]));\n          const id = currentProgramPath.scope.generateUidIdentifier(tag.get(\"name\").toString() + \"_input\");\n          let added = false;\n          addValue(section, node.extra?.attrsReferences, {\n            get identifier() {\n              if (!added) {\n                currentProgramPath.pushContainer(\"body\", t24.variableDeclaration(\"const\", [\n                  t24.variableDeclarator(id, callRuntime(\"dynamicTagAttrs\", getScopeAccessorLiteral(tagNameReserve), renderBodyIdentifier))\n                ]));\n                added = true;\n              }\n              return id;\n            },\n            hasDownstreamIntersections: () => true\n          }, attrsGetter);\n        }\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/tag/attribute-tag.ts\nimport { types as t25 } from \"@marko/compiler\";\nimport { findParentTag, assertNoVar as assertNoVar2 } from \"@marko/babel-utils\";\nvar attribute_tag_default = {\n  translate: {\n    enter(tag) {\n      if (hasPendingHTML(tag)) {\n        throw tag.get(\"name\").buildCodeFrameError(\"Dynamic @tags cannot be mixed with body content.\");\n      }\n    },\n    exit(tag) {\n      assertNoVar2(tag);\n      flushInto(tag);\n      const parentTag = findParentTag(tag);\n      if (!parentTag) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags must be nested within another tag.\");\n      }\n      const parentExtra = parentTag.node.extra;\n      if (parentExtra.tagNameType === 0 /* NativeTag */) {\n        throw tag.get(\"name\").buildCodeFrameError(\"@tags cannot be nested under native tags.\");\n      }\n      const attrName = tag.node.name.value.slice(1);\n      const info = parentExtra.nestedAttributeTags[attrName];\n      const attrsObject = attrsToObject(tag, true) || t25.objectExpression([]);\n      if (info.dynamic) {\n        if (!info.identifier) {\n          info.identifier = parentTag.scope.generateUidIdentifier(attrName);\n          parentTag.insertBefore(info.repeated ? t25.variableDeclaration(\"const\", [\n            t25.variableDeclarator(info.identifier, t25.arrayExpression([]))\n          ]) : t25.variableDeclaration(\"let\", [\n            t25.variableDeclarator(info.identifier)\n          ]));\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, info.identifier));\n        }\n        tag.replaceWith(t25.expressionStatement(info.repeated ? t25.callExpression(t25.memberExpression(info.identifier, t25.identifier(\"push\")), [attrsObject]) : t25.assignmentExpression(\"=\", info.identifier, attrsObject)));\n      } else if (info.repeated) {\n        const existingAttr = parentTag.get(\"attributes\").find((attr2) => attr2.node.name === attrName);\n        if (existingAttr) {\n          existingAttr.get(\"value\").pushContainer(\"elements\", attrsObject);\n        } else {\n          parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, t25.arrayExpression([attrsObject])));\n        }\n        tag.remove();\n      } else {\n        parentTag.pushContainer(\"attributes\", t25.markoAttribute(attrName, attrsObject));\n        tag.remove();\n      }\n    }\n  }\n};\n\n// src/util/nested-attribute-tags.ts\nimport {\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nfunction analyzeAttributeTags(tag) {\n  const { extra } = tag.node;\n  extra.nestedAttributeTags = {};\n  extra.hoistedControlFlows = 0;\n  analyzeChildren(extra, false, false, tag);\n}\nfunction analyzeChildren(rootExtra, repeated, dynamic, tag) {\n  let hasAttributeTags = false;\n  for (const child of tag.get(\"body\").get(\"body\")) {\n    if (child.isMarkoTag()) {\n      if (analyzeChild(rootExtra, repeated, dynamic, child)) {\n        hasAttributeTags = true;\n      }\n    }\n  }\n  return hasAttributeTags;\n}\nfunction analyzeChild(rootExtra, repeated, dynamic, tag) {\n  if (isTransparentTag(tag)) {\n    if (analyzeChildren(rootExtra, repeated || isLoopTag(tag), true, tag)) {\n      if (!isTransparentTag(tag.parentPath.parentPath)) {\n        rootExtra.hoistedControlFlows++;\n      }\n      return true;\n    }\n  } else if (isAttributeTag(tag)) {\n    const attrName = tag.node.name.value.slice(1);\n    const lookup = rootExtra.nestedAttributeTags;\n    const existing = lookup[attrName];\n    const info = existing || (lookup[attrName] = {\n      dynamic: false,\n      repeated: false\n    });\n    info.dynamic ||= dynamic;\n    info.repeated ||= repeated || existing !== void 0;\n    return true;\n  }\n  return false;\n}\n\n// src/visitors/tag/index.ts\nvar tag_default = {\n  analyze: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        enter2(hook, tag);\n        return;\n      }\n      switch (type) {\n        case 0 /* NativeTag */:\n          native_tag_default.analyze.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const tagDef = getTagDef3(tag);\n      const type = analyzeTagNameType(tag);\n      const hook = tagDef?.analyzer?.hook;\n      if (hook) {\n        exit2(hook, tag);\n        return;\n      }\n      if (type === 0 /* NativeTag */) {\n        return;\n      }\n      analyzeAttributeTags(tag);\n      switch (type) {\n        case 1 /* CustomTag */:\n          custom_tag_default.analyze.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.analyze.exit(tag);\n          break;\n      }\n    }\n  },\n  translate: {\n    enter(tag) {\n      const tagDef = getTagDef3(tag);\n      const extra = tag.node.extra;\n      assertNoArgs(tag);\n      if (tagDef?.translator) {\n        if (tagDef.translator.path) {\n          tag.hub.file.metadata.marko.watchFiles.push(tagDef.translator.path);\n        }\n        enter2(tagDef.translator.hook, tag);\n        return;\n      }\n      for (const attr2 of tag.get(\"attributes\")) {\n        if (attr2.isMarkoAttribute()) {\n          if (attr2.node.arguments) {\n            throw attr2.buildCodeFrameError(`Unsupported arguments on the \"${attr2.node.name}\" attribute.`);\n          }\n          if (attr2.node.modifier) {\n            if (isNativeTag2(attr2.parentPath)) {\n              attr2.node.name += `:${attr2.node.modifier}`;\n            } else {\n              throw attr2.buildCodeFrameError(`Unsupported modifier \"${attr2.node.modifier}\".`);\n            }\n          }\n        }\n      }\n      if (extra.tagNameDynamic && extra.tagNameNullable && !tag.get(\"name\").isIdentifier() && isOutputHTML()) {\n        const tagNameId = tag.scope.generateUidIdentifier(\"tagName\");\n        const [tagNameVarPath] = tag.insertBefore(t26.variableDeclaration(\"const\", [\n          t26.variableDeclarator(tagNameId, tag.node.name)\n        ]));\n        tagNameVarPath.skip();\n        tag.set(\"name\", tagNameId);\n      }\n      switch (extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.enter(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.enter(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.enter(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.enter(tag);\n          break;\n      }\n    },\n    exit(tag) {\n      const translator = getTagDef3(tag)?.translator;\n      if (translator) {\n        exit2(translator.hook, tag);\n        return;\n      }\n      switch (tag.node.extra.tagNameType) {\n        case 0 /* NativeTag */:\n          native_tag_default.translate.exit(tag);\n          break;\n        case 1 /* CustomTag */:\n          custom_tag_default.translate.exit(tag);\n          break;\n        case 2 /* DynamicTag */:\n          dynamic_tag_default.translate.exit(tag);\n          break;\n        case 3 /* AttributeTag */:\n          attribute_tag_default.translate.exit(tag);\n          break;\n      }\n    }\n  }\n};\n\n// src/visitors/placeholder.ts\nimport { types as t27 } from \"@marko/compiler\";\nimport { isNativeTag as isNativeTag3 } from \"@marko/babel-utils\";\n\n// src/util/is-core-tag.ts\nimport { getTagDef as getTagDef4 } from \"@marko/babel-utils\";\nvar taglibId = \"marko-core\";\nfunction isCoreTag(tag) {\n  return tag.isMarkoTag() && getTagDef4(tag)?.taglibId === taglibId;\n}\nfunction isCoreTagName(tag, name) {\n  return isCoreTag(tag) && tag.node.name.value === name;\n}\n\n// src/visitors/placeholder.ts\nvar ESCAPE_TYPES = {\n  script: \"escapeScript\",\n  style: \"escapeStyle\"\n};\nvar placeholder_default = {\n  analyze(placeholder) {\n    const { node } = placeholder;\n    const { confident, computed } = evaluate(placeholder);\n    if (!(confident && (node.escape || !computed))) {\n      reserveScope(0 /* Visit */, getOrCreateSection(placeholder), node, \"placeholder\", \"#text\");\n      needsMarker(placeholder);\n    }\n  },\n  translate(placeholder) {\n    const isHTML = isOutputHTML();\n    const write2 = writeTo(placeholder);\n    const extra = placeholder.node.extra;\n    const { confident, computed, valueReferences, reserve } = extra;\n    const canWriteHTML = isHTML || confident && (placeholder.node.escape || !computed);\n    const method = canWriteHTML ? placeholder.node.escape ? ESCAPE_TYPES[getParentTagName(placeholder)] || \"escapeXML\" : \"toString\" : placeholder.node.escape ? \"data\" : \"html\";\n    if (confident && canWriteHTML) {\n      write2`${getHTMLRuntime()[method](computed)}`;\n    } else {\n      if (extra.needsMarker) {\n        visit(placeholder, 37 /* Replace */);\n      } else {\n        if (!isHTML)\n          write2` `;\n        visit(placeholder, 32 /* Get */);\n      }\n      if (isHTML) {\n        write2`${callRuntime(method, placeholder.node.value)}`;\n        markNode(placeholder);\n      } else {\n        addStatement(\"render\", getSection(placeholder), valueReferences, t27.expressionStatement(method === \"data\" ? callRuntime(\"data\", t27.memberExpression(scopeIdentifier, getScopeAccessorLiteral(reserve), true), placeholder.node.value) : callRuntime(\"html\", scopeIdentifier, placeholder.node.value, getScopeAccessorLiteral(reserve))));\n      }\n    }\n    enterShallow(placeholder);\n    placeholder.remove();\n  }\n};\nfunction getParentTagName({ parentPath }) {\n  return parentPath.isMarkoTag() && isNativeTag3(parentPath) && parentPath.node.name.value || \"\";\n}\nfunction noOutput(path3) {\n  return t27.isMarkoComment(path3) || t27.isMarkoTag(path3) && isCoreTag(path3) && [\"let\", \"const\", \"effect\", \"lifecycle\", \"attrs\", \"get\", \"id\"].includes(path3.node.name.value);\n}\nfunction needsMarker(placeholder) {\n  let prev = placeholder.getPrevSibling();\n  while (prev.node && noOutput(prev)) {\n    prev = prev.getPrevSibling();\n  }\n  if ((prev.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(prev) && isNativeTag3(prev))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  let next = placeholder.getNextSibling();\n  while (next.node && noOutput(next)) {\n    next = next.getNextSibling();\n  }\n  if ((next.node || t27.isProgram(placeholder.parentPath)) && !(t27.isMarkoTag(next) && isNativeTag3(next))) {\n    return placeholder.node.extra.needsMarker = true;\n  }\n  return placeholder.node.extra.needsMarker = false;\n}\n\n// src/visitors/scriptlet.ts\nvar scriptlet_default = {\n  translate(scriptlet) {\n    if (isOutputHTML()) {\n      if (scriptlet.node.static)\n        return;\n      scriptlet.replaceWithMultiple(scriptlet.node.body);\n    } else {\n      if (scriptlet.node.static) {\n        scriptlet.replaceWithMultiple(scriptlet.node.body);\n      } else {\n        addStatement(\"render\", getSection(scriptlet), scriptlet.node.extra?.bodyReferences, scriptlet.node.body);\n        scriptlet.remove();\n      }\n    }\n  }\n};\n\n// src/visitors/comment.ts\nvar ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\nvar comment_default = {\n  translate(comment) {\n    if (isOutputHTML()) {\n      const { value } = comment.node;\n      if (ieConditionalCommentRegExp.test(value)) {\n        writeTo(comment)`<!--${value}-->`;\n      }\n    }\n    comment.remove();\n  }\n};\n\n// src/core/import.ts\nimport { parseScript } from \"@marko/babel-utils\";\nvar import_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: 'import <scope> from \"<path>\"',\n      description: \"Use to import external modules, follows the same syntax as JavaScript imports.\",\n      snippet: 'import ${2} from \"${1:path}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#importing-external-files\"\n    }\n  ]\n};\n\n// src/core/export.ts\nimport { parseScript as parseScript2 } from \"@marko/babel-utils\";\nvar export_default = {\n  parse(tag) {\n    const { node } = tag;\n    tag.replaceWith(parseScript2(tag.hub.file, node.rawValue, node.start).body[0]);\n  },\n  parseOptions: {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true,\n    relaxRequireCommas: true\n  },\n  autocomplete: [\n    {\n      displayText: \"export <value>\"\n    }\n  ]\n};\n\n// src/core/attrs.ts\nvar attrs_default = {\n  analyze(tag) {\n    if (tag.has(\"var\")) {\n      const varPath = tag.get(\"var\");\n      const bindings = varPath.getBindingIdentifiers();\n      trackReferencesForBindings(getOrCreateSection(tag), varPath);\n      (currentProgramPath.node.extra ??= {}).attrs = {\n        bindings,\n        var: varPath.node\n      };\n    }\n  },\n  translate(tag) {\n    const bindings = currentProgramPath.node.extra?.attrs?.bindings;\n    if (bindings) {\n      for (const key in bindings) {\n        initValue(bindings[key].extra.reserve);\n      }\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"attrs/{ ... }\",\n      description: \"Use to receive the attributes passed into this template.\",\n      snippet: \"attrs/{ $1 }$2\"\n    }\n  ]\n};\n\n// src/core/condition/if.ts\nimport { types as t29 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams2, assertNoVar as assertNoVar3 } from \"@marko/babel-utils\";\n\n// src/util/to-first-statement-or-block.ts\nimport { types as t28 } from \"@marko/compiler\";\nfunction toFirstStatementOrBlock(body) {\n  const nodes = body.body;\n  if (nodes.length === 1) {\n    return nodes[0];\n  }\n  if (t28.isBlockStatement(body)) {\n    return body;\n  }\n  return t28.blockStatement(nodes);\n}\n\n// src/core/condition/if.ts\nvar if_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"if\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar3(tag);\n      assertNoParams2(tag);\n      if (!t29.isMarkoAttribute(testAttr) || !testAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<if>' tag requires a default attribute like '<if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      visit(tag, 37 /* Replace */);\n      enterShallow(tag);\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"if=${1:condition}\",\n      description: \"Use to display content only if the condition is met.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\nvar BRANCHES_LOOKUP = /* @__PURE__ */ new WeakMap();\nfunction getBranches(tag, bodySection) {\n  const branches = BRANCHES_LOOKUP.get(tag) ?? [];\n  const nextTag = tag.getNextSibling();\n  const isLast = !(isCoreTagName(nextTag, \"else\") || isCoreTagName(nextTag, \"else-if\"));\n  branches.push({\n    tag,\n    section: bodySection\n  });\n  if (!isLast) {\n    BRANCHES_LOOKUP.set(nextTag, branches);\n  }\n  return [isLast, branches];\n}\nfunction exitBranchAnalyze(tag) {\n  const section = getOrCreateSection(tag);\n  const tagBody = tag.get(\"body\");\n  const bodySection = getOrCreateSection(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySection);\n  if (isLast) {\n    const rootExtra = branches[0].tag.node.extra;\n    const conditionalReferences = mergeReferences(section, branches.filter(({ tag: tag2 }) => tag2.node.attributes[0]?.extra?.valueReferences).map(({ tag: tag2 }) => [tag2.node.attributes[0].extra, \"valueReferences\"]));\n    rootExtra.conditionalReferences = conditionalReferences;\n    rootExtra.isStateful = !!conditionalReferences;\n    rootExtra.singleNodeOptimization = branches.every(({ tag: tag2 }) => {\n      return tag2.node.body.body.length === 1;\n    });\n  }\n}\nfunction exitBranchTranslate(tag) {\n  const tagBody = tag.get(\"body\");\n  const section = getSection(tag);\n  const bodySection = getSection(tagBody);\n  const [isLast, branches] = getBranches(tag, bodySection);\n  const rootExtra = branches[0].tag.node.extra;\n  const isStateful = rootExtra.isStateful;\n  const singleNodeOptimization = rootExtra.singleNodeOptimization;\n  if (isOutputHTML()) {\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySection))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        return t29.assignmentExpression(\"=\", getScopeIdentifier(bodySection), scope);\n      });\n      getSerializedScopeProperties(bodySection).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(section));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n  }\n  if (isLast) {\n    const { extra } = branches[0].tag.node;\n    if (isOutputDOM()) {\n      let expr = t29.nullLiteral();\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, section: section2 } = branches[i];\n        const [testAttr] = tag2.node.attributes;\n        const id = getRenderer(section2);\n        setSubscriberBuilder(tag2, (subscriber) => {\n          return callRuntime(\"inConditionalScope\", subscriber, getScopeAccessorLiteral(extra.reserve));\n        });\n        if (isStateful) {\n          setRegisterRenderer(section2, true);\n        }\n        tag2.remove();\n        if (testAttr) {\n          expr = t29.conditionalExpression(testAttr.value, id, expr);\n        } else {\n          expr = id;\n        }\n      }\n      const signal = getSignal(section, extra.reserve);\n      signal.build = () => {\n        return callRuntime(\"conditional\", getScopeAccessorLiteral(extra.reserve), getSignalFn(signal, [scopeIdentifier]));\n      };\n      signal.hasDownstreamIntersections = () => branches.some((b) => getClosures(b.section).length > 0);\n      addValue(section, extra.conditionalReferences, signal, expr);\n    } else {\n      const write2 = writeTo(tag);\n      const nextTag = tag.getNextSibling();\n      const ifScopeIdIdentifier = tag.scope.generateUidIdentifier(\"ifScopeId\");\n      const ifScopeIdentifier = getScopeIdentifier(branches[0].section);\n      const ifRendererIdentifier = tag.scope.generateUidIdentifier(\"ifRenderer\");\n      let statement;\n      for (let i = branches.length; i--; ) {\n        const { tag: tag2, section: section2 } = branches[i];\n        const branchScopeIdentifier = getScopeIdentifier(section2, true);\n        branchScopeIdentifier.name = ifScopeIdentifier.name;\n        if (isStateful) {\n          tag2.node.body.body.push(t29.expressionStatement(callRuntime(\"register\", t29.assignmentExpression(\"=\", ifRendererIdentifier, t29.arrowFunctionExpression([], t29.blockStatement([]))), t29.stringLiteral(getResumeRegisterId(section2, \"renderer\")))));\n          if (singleNodeOptimization) {\n            tag2.node.body.body.push(t29.expressionStatement(t29.assignmentExpression(\"=\", ifScopeIdIdentifier, getScopeIdIdentifier(section2))));\n          }\n        }\n        const [testAttr] = tag2.node.attributes;\n        const curStatement = toFirstStatementOrBlock(tag2.node.body);\n        if (testAttr) {\n          statement = t29.ifStatement(testAttr.value, curStatement, statement);\n        } else {\n          statement = curStatement;\n        }\n        tag2.remove();\n      }\n      if (!isStateful) {\n        nextTag.insertBefore(statement);\n      } else {\n        nextTag.insertBefore([\n          t29.variableDeclaration(\"let\", [\n            singleNodeOptimization && t29.variableDeclarator(ifScopeIdIdentifier),\n            t29.variableDeclarator(ifScopeIdentifier),\n            t29.variableDeclarator(ifRendererIdentifier)\n          ].filter(Boolean)),\n          statement\n        ]);\n        if (singleNodeOptimization) {\n          write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(extra.reserve), ifScopeIdIdentifier)}`;\n        } else {\n          write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(extra.reserve))}`;\n        }\n        getSerializedScopeProperties(section).set(t29.stringLiteral(getScopeAccessorLiteral(extra.reserve).value + \"!\"), ifScopeIdentifier);\n        getSerializedScopeProperties(section).set(t29.stringLiteral(getScopeAccessorLiteral(extra.reserve).value + \"(\"), ifRendererIdentifier);\n      }\n    }\n  }\n}\n\n// src/core/condition/else-if.ts\nimport { types as t30 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams3, assertNoVar as assertNoVar4 } from \"@marko/babel-utils\";\nvar else_if_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoVar4(tag);\n      assertNoParams3(tag);\n      if (!t30.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<else-if>' tag requires a default attribute like '<else-if=condition>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else-if>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      snippet: \"else-if=${1:condition}\",\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match and this one does.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/condition/else.ts\nimport { assertNoParams as assertNoParams4, assertNoVar as assertNoVar5 } from \"@marko/babel-utils\";\nvar else_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      exitBranchAnalyze(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [testAttr] = node.attributes;\n      assertNoVar5(tag);\n      assertNoParams4(tag);\n      if (node.attributes.length > 1 || testAttr && testAttr.name !== \"if\") {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<else>' tag only supports an if attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n    },\n    exit(tag) {\n      exitBranchTranslate(tag);\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use after an <if> or <else-if> tag to display content if those conditions do not match.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#if-else-if-else\"\n    }\n  ]\n};\n\n// src/core/const.ts\nimport { types as t31 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams5 } from \"@marko/babel-utils\";\nvar const_default = {\n  translate(tag) {\n    const { node } = tag;\n    const [defaultAttr] = node.attributes;\n    assertNoParams5(tag);\n    assertNoBodyContent(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a tag variable.\");\n    }\n    if (!defaultAttr) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag requires a default attribute.\");\n    }\n    if (node.attributes.length > 1 || !t31.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'const' tag only supports the 'default' attribute.\");\n    }\n    if (isOutputDOM()) {\n      const section = getSection(tag);\n      const references = defaultAttr.extra?.valueReferences;\n      const derivation = getTagVarSignal(tag.get(\"var\"));\n      addValue(section, references, derivation, defaultAttr.value);\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an constant binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#const\"\n    }\n  ]\n};\n\n// src/core/effect.ts\nimport { types as t32 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams6 } from \"@marko/babel-utils\";\nvar effect_default = {\n  analyze(tag) {\n    const section = getSection(tag);\n    reserveScope(1 /* Store */, section, tag.node, \"cleanup\");\n    (currentProgramPath.node.extra ?? {}).isInteractive = true;\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      assertNoParams6(tag);\n      assertNoBodyContent(tag);\n      if (!defaultAttr) {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag requires a default attribute.\");\n      }\n      if (node.attributes.length > 1 || !t32.isMarkoAttribute(defaultAttr) || !defaultAttr.default && defaultAttr.name !== \"value\") {\n        throw tag.get(\"name\").buildCodeFrameError(\"The 'effect' tag only supports the 'default' attribute.\");\n      }\n      const section = getSection(tag);\n      if (isOutputDOM()) {\n        const { value } = defaultAttr;\n        let inlineStatements = null;\n        if (t32.isFunctionExpression(value) || t32.isArrowFunctionExpression(value) && t32.isBlockStatement(value.body)) {\n          inlineStatements = value.body.body;\n          t32.traverse(value.body, (node2) => {\n            if (t32.isReturnStatement(node2)) {\n              inlineStatements = null;\n            }\n          });\n        }\n        addStatement(\"effect\", section, defaultAttr.extra?.valueReferences, inlineStatements || t32.expressionStatement(callRuntime(\"userEffect\", scopeIdentifier, getScopeAccessorLiteral(tag.node.extra.reserve), defaultAttr.value)), value, !!inlineStatements);\n      } else {\n        addHTMLEffectCall(section, defaultAttr.extra?.valueReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/lifecycle.ts\nimport { types as t33 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams7 } from \"@marko/babel-utils\";\nvar lifecycle_default = {\n  analyze: {\n    enter(tag) {\n      custom_tag_default.analyze.enter(tag);\n      const section = getSection(tag);\n      reserveScope(1 /* Store */, section, tag.node, \"cleanup\");\n      (currentProgramPath.node.extra ?? {}).isInteractive = true;\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n      const section = getOrCreateSection(tag);\n      tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => attr2.extra?.valueReferences).map((attr2) => [attr2.extra, \"valueReferences\"]));\n    }\n  },\n  translate: {\n    exit(tag) {\n      const { node } = tag;\n      assertNoParams7(tag);\n      assertNoBodyContent(tag);\n      const section = getSection(tag);\n      if (isOutputDOM()) {\n        const attrsObject = attrsToObject(tag);\n        addStatement(\"effect\", section, node.extra.attrsReferences, t33.expressionStatement(callRuntime(\"lifecycle\", scopeIdentifier, getScopeAccessorLiteral(tag.node.extra.reserve), attrsObject)), node.attributes.map((a) => a.value));\n      } else {\n        addHTMLEffectCall(section, node.extra.attrsReferences);\n      }\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a side effects.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#effect\"\n    }\n  ]\n};\n\n// src/core/id.ts\nimport { types as t34 } from \"@marko/compiler\";\nimport {\n  assertNoArgs as assertNoArgs2,\n  assertNoAttributes,\n  assertNoParams as assertNoParams8\n} from \"@marko/babel-utils\";\nvar id_default = {\n  translate(tag) {\n    const { node } = tag;\n    const { var: tagVar } = node;\n    const id = callRuntime(\"nextTagId\");\n    assertNoArgs2(tag);\n    assertNoAttributes(tag);\n    assertNoBodyContent(tag);\n    assertNoParams8(tag);\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'id' tag requires a tag variable.\");\n    }\n    if (!t34.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'id' tag cannot be destructured\");\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t34.variableDeclaration(\"const\", [t34.variableDeclarator(node.var, id)]));\n    } else {\n      const source = initValue(tagVar.extra.reserve);\n      addValue(getSection(tag), void 0, source, id);\n      tag.remove();\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"id/<name>\",\n      description: \"Use to create a unique identifier.\",\n      snippet: \"id/${1:name}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#id\"\n    }\n  ]\n};\n\n// src/core/for.ts\nimport { types as t35 } from \"@marko/compiler\";\nimport {\n  assertAllowedAttributes,\n  assertNoVar as assertNoVar6,\n  getTagDef as getTagDef5\n} from \"@marko/babel-utils\";\nvar for_default = {\n  analyze: {\n    enter(tag) {\n      const isOnlyChild = checkOnlyChild(tag);\n      const parentTag = isOnlyChild ? tag.parentPath.parent : void 0;\n      const parentTagName = parentTag?.name?.value;\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), isOnlyChild ? parentTag : tag.node, \"for\", isOnlyChild ? `#${parentTagName}` : \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      analyzeAttributeTags(tag);\n      const section = getOrCreateSection(tag);\n      tag.node.extra.attrsReferences = mergeReferences(section, tag.node.attributes.filter((attr2) => t35.isMarkoAttribute(attr2) && attr2.extra?.valueReferences !== void 0).map((attr2) => [attr2.extra, \"valueReferences\"]));\n      tag.node.extra.isStateful = !!tag.node.extra.attrsReferences && !Object.keys(tag.node.extra.nestedAttributeTags).length;\n      tag.node.extra.singleNodeOptimization = tag.node.body.body.length === 1;\n    }\n  },\n  translate: {\n    enter(tag) {\n      validateFor(tag);\n      if (!isOutputHTML() && Object.keys(tag.node.extra.nestedAttributeTags).length) {\n        tag.remove();\n        return;\n      }\n      const {\n        extra: { isOnlyChild }\n      } = tag.node;\n      if (!isOnlyChild) {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        translateHTML2.exit(tag);\n      } else {\n        translateDOM2.exit(tag);\n      }\n    }\n  },\n  attributes: {\n    of: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over a list of items.\"\n        }\n      ]\n    },\n    in: {\n      type: \"expression\",\n      autocomplete: [\n        {\n          description: \"Iterates over the keys and values of an object.\"\n        }\n      ]\n    },\n    to: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates up to the provided number (inclusive)\"\n        }\n      ]\n    },\n    from: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"Iterates starting from the provided number (inclusive)\"\n        }\n      ]\n    },\n    step: {\n      type: \"number\",\n      autocomplete: [\n        {\n          description: \"The amount to increment during each interation (with from/to)\"\n        }\n      ]\n    }\n  },\n  autocomplete: [\n    {\n      snippet: \"for|${1:value, index}| of=${3:array}\",\n      description: \"Use to iterate over lists, object properties, or between ranges.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-a-list\"\n    },\n    {\n      snippet: \"for|${1:name, value}| in=${3:object}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-over-an-objects-properties\"\n    },\n    {\n      snippet: \"for|${1:index}| from=${2:number} to=${3:number} step=${4:number}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#iterating-between-a-range-of-numbers\"\n    }\n  ]\n};\nvar translateDOM2 = {\n  exit(tag) {\n    const bodySection = getSection(tag.get(\"body\"));\n    const section = getSection(tag);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { params },\n      extra: { isOnlyChild, attrsReferences }\n    } = node;\n    const paramsPath = tag.get(\"body\").get(\"params\");\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : tag.node;\n    setSubscriberBuilder(tag, (signal2) => {\n      return callRuntime(\"inLoopScope\", signal2, getScopeAccessorLiteral(reserve));\n    });\n    tag.remove();\n    const rendererId = getRenderer(bodySection);\n    const ofAttr = findName(attributes, \"of\");\n    const toAttr = findName(attributes, \"to\");\n    const inAttr = findName(attributes, \"in\");\n    let loopFunctionBody = t35.nullLiteral();\n    let tagParams = params;\n    if (ofAttr) {\n      const byAttr = findName(attributes, \"by\");\n      loopFunctionBody = t35.arrayExpression([\n        ofAttr.value,\n        byAttr ? byAttr.value : t35.nullLiteral()\n      ]);\n    } else if (toAttr) {\n      const fromAttr = findName(attributes, \"from\");\n      const stepAttr = findName(attributes, \"step\");\n      loopFunctionBody = callRuntime(\"computeLoopToFrom\", toAttr.value, fromAttr ? fromAttr.value : t35.numericLiteral(0), stepAttr ? stepAttr.value : t35.numericLiteral(1));\n    } else if (inAttr) {\n      loopFunctionBody = callRuntime(\"computeLoopIn\", inAttr.value);\n      tagParams = [t35.arrayPattern(params)];\n    }\n    const signal = getSignal(section, reserve);\n    const paramsSignal = getTagParamsSignal(paramsPath, t35.arrayPattern(tagParams));\n    signal.build = () => {\n      return callRuntime(\"loop\", getScopeAccessorLiteral(reserve), rendererId, paramsSignal?.build());\n    };\n    signal.hasDownstreamIntersections = () => paramsSignal?.hasDownstreamIntersections() || getClosures(bodySection).length > 0;\n    addValue(section, attrsReferences, signal, loopFunctionBody);\n  }\n};\nvar translateHTML2 = {\n  exit(tag) {\n    const section = getSection(tag);\n    const tagBody = tag.get(\"body\");\n    const bodySection = getSection(tagBody);\n    const { node } = tag;\n    const {\n      attributes,\n      body: { body, params },\n      extra: { isStateful, singleNodeOptimization, isOnlyChild }\n    } = node;\n    const {\n      extra: { reserve }\n    } = isOnlyChild ? tag.parentPath.parent : node;\n    const namePath = tag.get(\"name\");\n    const ofAttr = findName(attributes, \"of\");\n    const inAttr = findName(attributes, \"in\");\n    const toAttr = findName(attributes, \"to\");\n    const byAttr = findName(attributes, \"by\");\n    const block = t35.blockStatement(body);\n    const write2 = writeTo(tag);\n    const replacement = [];\n    let byParams;\n    let keyExpression = t35.identifier(\"NOO\");\n    if (isStateful) {\n      if (!singleNodeOptimization) {\n        writePrependTo(tagBody)`${callRuntime(\"markResumeScopeStart\", getScopeIdIdentifier(bodySection))}`;\n      }\n      setRegisterScopeBuilder(tag, (scope) => {\n        const tempScopeIdentifier = currentProgramPath.scope.generateUidIdentifier(\"s\");\n        return t35.callExpression(t35.arrowFunctionExpression([tempScopeIdentifier], t35.sequenceExpression([\n          t35.callExpression(t35.memberExpression(getScopeIdentifier(bodySection), t35.identifier(\"set\")), [keyExpression, tempScopeIdentifier]),\n          tempScopeIdentifier\n        ])), [scope]);\n      });\n      getSerializedScopeProperties(bodySection).set(importRuntime(\"SYMBOL_OWNER\"), getScopeIdIdentifier(section));\n    }\n    if (byAttr && isStateful) {\n      const byIdentifier = currentProgramPath.scope.generateUidIdentifier(\"by\");\n      replacement.push(t35.variableDeclaration(\"const\", [\n        t35.variableDeclarator(byIdentifier, byAttr.value)\n      ]));\n      byParams = [];\n      keyExpression = t35.callExpression(byIdentifier, byParams);\n    }\n    if (inAttr) {\n      const [keyParam, valParam] = params;\n      keyExpression = keyParam;\n      if (valParam) {\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, t35.memberExpression(inAttr.value, keyParam, true))\n        ]));\n      }\n      replacement.push(t35.forInStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(keyParam)]), inAttr.value, block));\n    } else if (ofAttr) {\n      let ofAttrValue = ofAttr.value;\n      let [valParam, indexParam, loopParam] = params;\n      if (!valParam) {\n        throw namePath.buildCodeFrameError(\"Invalid 'for of' tag, missing |value, index| params.\");\n      }\n      if (!t35.isIdentifier(valParam) && byParams) {\n        const tempValParam = currentProgramPath.scope.generateUidIdentifier(\"v\");\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(valParam, tempValParam)\n        ]));\n        valParam = tempValParam;\n      }\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        const indexName = tag.scope.generateUidIdentifierBasedOnNode(indexParam, \"i\");\n        replacement.push(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexName, t35.numericLiteral(0))\n        ]));\n        block.body.unshift(t35.variableDeclaration(\"let\", [\n          t35.variableDeclarator(indexParam, t35.updateExpression(\"++\", indexName))\n        ]));\n      }\n      if (loopParam) {\n        if (t35.isIdentifier(loopParam)) {\n          ofAttrValue = loopParam;\n        }\n        replacement.push(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(loopParam, ofAttr.value)\n        ]));\n      }\n      if (byParams) {\n        byParams.push(valParam, indexParam);\n      } else {\n        keyExpression = indexParam;\n      }\n      replacement.push(t35.forOfStatement(t35.variableDeclaration(\"const\", [t35.variableDeclarator(valParam)]), ofAttrValue, block));\n    } else if (toAttr) {\n      const stepValue = findName(attributes, \"step\")?.value ?? t35.numericLiteral(1);\n      const fromValue = findName(attributes, \"from\")?.value ?? t35.numericLiteral(0);\n      let [indexParam] = params;\n      const stepsName = tag.scope.generateUidIdentifier(\"steps\");\n      const indexName = tag.scope.generateUidIdentifier(\"i\");\n      const stepName = tag.scope.generateUidIdentifier(\"step\");\n      const fromName = tag.scope.generateUidIdentifier(\"from\");\n      if (indexParam || isStateful) {\n        indexParam ??= currentProgramPath.scope.generateUidIdentifier(\"i\");\n        keyExpression = indexParam;\n        block.body.unshift(t35.variableDeclaration(\"const\", [\n          t35.variableDeclarator(indexParam, t35.binaryExpression(\"+\", fromName, t35.binaryExpression(\"*\", indexName, stepName)))\n        ]));\n      }\n      replacement.push(t35.forStatement(t35.variableDeclaration(\"let\", [\n        t35.variableDeclarator(fromName, t35.logicalExpression(\"??\", fromValue, t35.numericLiteral(0))),\n        t35.variableDeclarator(stepName, t35.logicalExpression(\"??\", stepValue, t35.numericLiteral(1))),\n        t35.variableDeclarator(stepsName, t35.binaryExpression(\"/\", t35.binaryExpression(\"-\", toAttr.value, fromName), stepName)),\n        t35.variableDeclarator(indexName, t35.numericLiteral(0))\n      ]), t35.binaryExpression(\"<=\", indexName, stepsName), t35.updateExpression(\"++\", indexName), block));\n    }\n    if (isStateful) {\n      const forScopeIdsIdentifier = tag.scope.generateUidIdentifier(\"forScopeIds\");\n      const forScopesIdentifier = getScopeIdentifier(bodySection);\n      replacement.unshift(t35.variableDeclaration(\"const\", [\n        singleNodeOptimization && t35.variableDeclarator(forScopeIdsIdentifier, t35.arrayExpression([])),\n        t35.variableDeclarator(forScopesIdentifier, t35.newExpression(t35.identifier(\"Map\"), []))\n      ].filter(Boolean)));\n      if (singleNodeOptimization) {\n        block.body.push(t35.expressionStatement(t35.callExpression(t35.memberExpression(forScopeIdsIdentifier, t35.identifier(\"push\")), [getScopeIdIdentifier(bodySection)])));\n        write2`${callRuntime(\"markResumeControlSingleNodeEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve), forScopeIdsIdentifier)}`;\n      } else {\n        write2`${callRuntime(\"markResumeControlEnd\", getScopeIdIdentifier(section), getScopeAccessorLiteral(reserve))}`;\n      }\n      getSerializedScopeProperties(section).set(t35.stringLiteral(getScopeAccessorLiteral(reserve).value + \"(\"), t35.conditionalExpression(t35.memberExpression(forScopesIdentifier, t35.identifier(\"size\")), forScopesIdentifier, t35.identifier(\"undefined\")));\n    }\n    flushInto(tag);\n    writeHTMLResumeStatements(tagBody);\n    block.body.push(t35.expressionStatement(callRuntime(\"maybeFlush\")));\n    tag.replaceWithMultiple(replacement);\n  }\n};\nfunction findName(arr, value) {\n  return arr.find((obj) => t35.isMarkoAttribute(obj) && obj.name === value);\n}\nfunction validateFor(tag) {\n  const attrs2 = tag.node.attributes;\n  const hasParams = tag.node.body.params.length > 0;\n  assertNoVar6(tag);\n  if (findName(attrs2, \"of\")) {\n    assertAllowedAttributes(tag, [\"of\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for of' tag, missing |value, index| params.`);\n    }\n  } else if (findName(attrs2, \"in\")) {\n    assertAllowedAttributes(tag, [\"in\", \"by\"]);\n    if (!hasParams) {\n      throw tag.buildCodeFrameError(`Invalid 'for in' tag, missing |key, value| params.`);\n    }\n  } else if (findName(attrs2, \"to\")) {\n    assertAllowedAttributes(tag, [\"from\", \"to\", \"step\", \"by\"]);\n  } else {\n    throw tag.buildCodeFrameError(\"Invalid 'for' tag, missing an 'of', 'in' or 'to' attribute.\");\n  }\n}\nfunction checkOnlyChild(tag) {\n  tag.node.extra ??= {};\n  if (t35.isMarkoTag(tag.parentPath?.parent) && getTagDef5(tag.parentPath.parentPath)?.html) {\n    return tag.node.extra.isOnlyChild = tag.parent.body.length === 1;\n  }\n  return tag.node.extra.isOnlyChild = false;\n}\n\n// src/core/get.ts\nimport path from \"path\";\nimport { types as t36 } from \"@marko/compiler\";\nimport {\n  resolveTagImport as resolveTagImport2,\n  getTemplateId as getTemplateId4,\n  assertNoParams as assertNoParams9\n} from \"@marko/babel-utils\";\nvar get_default = {\n  analyze: {\n    enter(tag) {\n      const section = getOrCreateSection(tag);\n      if (section.id === 0) {\n        (currentProgramPath.node.extra ??= {}).closures = true;\n      }\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit: custom_tag_default.analyze.exit\n  },\n  translate(tag) {\n    assertNoParams9(tag);\n    assertNoBodyContent(tag);\n    if (isOutputHTML()) {\n      flushBefore(tag);\n    }\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const [defaultAttr] = node.attributes;\n    let refId;\n    if (!node.var) {\n      throw tag.get(\"name\").buildCodeFrameError(\"<get> requires a variable to be defined, eg <get/NAME>.\");\n    }\n    if (defaultAttr === void 0) {\n      refId = \"$\";\n    } else {\n      if (!t36.isMarkoAttribute(defaultAttr) || !defaultAttr.default || !t36.isStringLiteral(defaultAttr.value)) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<get>' tag requires default attribute that is a string that resolves to a Marko file like '<get/val=\"../file.marko\">' or '<get/val=\"<tag-name>\">'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<get>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      const defaultAttrValue = tag.get(\"attributes\")[0].get(\"value\");\n      if (defaultAttr.value.value === \".\") {\n        refId = file.metadata.marko.id;\n      } else {\n        const relativeReferencePath = resolveTagImport2(defaultAttrValue, defaultAttrValue.node.value);\n        if (!relativeReferencePath) {\n          throw defaultAttrValue.buildCodeFrameError(\"Unable to resolve template provided to '<get>' tag.\");\n        }\n        refId = getTemplateId4(file.markoOpts.optimize, path.resolve(file.opts.filename, \"..\", relativeReferencePath));\n      }\n    }\n    if (isOutputHTML()) {\n      tag.replaceWith(t36.variableDeclaration(\"const\", [\n        t36.variableDeclarator(node.var, callRuntime(\"getInContext\", t36.stringLiteral(refId)))\n      ]));\n    } else {\n      const identifiers = Object.values(tag.get(\"var\").getBindingIdentifiers());\n      initContextConsumer(refId, identifiers[0].extra.reserve);\n      tag.remove();\n    }\n  },\n  autocomplete: [\n    {\n      displayText: 'get/<name>=\"<from>\"',\n      description: \"Gets a value provided from another template.\",\n      snippet: 'get/${1:name}=\"${2:from}\"',\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#get\"\n    }\n  ]\n};\n\n// src/core/html-comment.ts\nimport {\n  assertNoAttributeTags,\n  assertNoAttributes as assertNoAttributes2,\n  assertNoParams as assertNoParams10,\n  assertNoVar as assertNoVar7\n} from \"@marko/babel-utils\";\nvar html_comment_default = {\n  analyze() {\n  },\n  translate: {\n    enter(tag) {\n      enter(tag);\n      writeTo(tag)`<!--`;\n    },\n    exit(tag) {\n      assertNoVar7(tag);\n      assertNoParams10(tag);\n      assertNoAttributes2(tag);\n      assertNoAttributeTags(tag);\n      exit(tag);\n      writeTo(tag)`-->`;\n      tag.remove();\n    }\n  },\n  parseOptions: {\n    text: true\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create an html comment that is not stripped from the output.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#html-comment\"\n    }\n  ]\n};\n\n// src/core/let.ts\nimport { types as t37 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams11 } from \"@marko/babel-utils\";\nvar let_default = {\n  translate(tag) {\n    const { node } = tag;\n    const tagVar = node.var;\n    const defaultAttr = node.attributes.find((attr2) => t37.isMarkoAttribute(attr2) && (attr2.default || attr2.name === \"value\")) ?? t37.markoAttribute(\"value\", t37.identifier(\"undefined\"));\n    assertNoParams11(tag);\n    assertNoBodyContent(tag);\n    if (!tagVar) {\n      throw tag.get(\"name\").buildCodeFrameError(\"The 'let' tag requires a tag variable.\");\n    }\n    if (!t37.isIdentifier(tagVar)) {\n      throw tag.get(\"var\").buildCodeFrameError(\"The 'let' cannot be destructured.\");\n    }\n    if (isOutputDOM()) {\n      const section = getSection(tag);\n      const binding = tagVar.extra.reserve;\n      const source = initValue(binding);\n      const references = defaultAttr.extra?.valueReferences;\n      const isSetup = !references;\n      if (!isSetup) {\n      } else {\n        addValue(section, references, source, defaultAttr.value);\n      }\n      registerAssignmentReplacer(tag.scope.getBinding(binding.name), (assignment, value) => queueSource(source, value, getSection(assignment)));\n    } else {\n      translateVar(tag, defaultAttr.value);\n    }\n    tag.remove();\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      description: \"Use to create a mutable binding.\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#let\"\n    }\n  ]\n};\n\n// src/core/put.ts\nimport { types as t38 } from \"@marko/compiler\";\nimport { assertNoParams as assertNoParams12, assertNoVar as assertNoVar8 } from \"@marko/babel-utils\";\nvar put_default = {\n  analyze: {\n    enter(tag) {\n      reserveScope(0 /* Visit */, getOrCreateSection(tag), tag.node, \"put\", \"#text\");\n      custom_tag_default.analyze.enter(tag);\n    },\n    exit(tag) {\n      custom_tag_default.analyze.exit(tag);\n    }\n  },\n  translate: {\n    enter(tag) {\n      const { node } = tag;\n      const [defaultAttr] = node.attributes;\n      if (!node.body.body.length) {\n        throw tag.buildCodeFrameError(`The '<put>' tag requires body content that the context is forwarded through.`);\n      }\n      if (!t38.isMarkoAttribute(defaultAttr) || !defaultAttr.default) {\n        throw tag.get(\"name\").buildCodeFrameError(`The '<put>' tag requires default attribute like '<put=val>'.`);\n      }\n      if (node.attributes.length > 1) {\n        const start = node.attributes[1].loc?.start;\n        const end = node.attributes[node.attributes.length - 1].loc?.end;\n        const msg = `The '<put>' tag only supports a default attribute.`;\n        if (start == null || end == null) {\n          throw tag.get(\"name\").buildCodeFrameError(msg);\n        } else {\n          throw tag.hub.buildError({ loc: { start, end } }, msg, Error);\n        }\n      }\n      if (isOutputHTML()) {\n        flushBefore(tag);\n        tag.insertBefore(t38.expressionStatement(callRuntime(\"pushContext\", t38.stringLiteral(tag.hub.file.metadata.marko.id), defaultAttr.value)));\n      } else {\n        visit(tag, 37 /* Replace */);\n        enterShallow(tag);\n        const bodySection = getSection(tag.get(\"body\"));\n        const rendererId = getRenderer(bodySection);\n        initContextProvider(tag.hub.file.metadata.marko.id, node.extra.reserve, defaultAttr.extra?.valueReferences, defaultAttr.value, rendererId);\n      }\n    },\n    exit(tag) {\n      assertNoParams12(tag);\n      assertNoVar8(tag);\n      if (isOutputHTML()) {\n        flushInto(tag);\n        writeHTMLResumeStatements(tag.get(\"body\"));\n        tag.insertAfter(t38.expressionStatement(callRuntime(\"popContext\")));\n      }\n      tag.replaceWithMultiple(tag.node.body.body);\n    }\n  },\n  autocomplete: [\n    {\n      displayText: \"put=<value>\",\n      description: \"Sets a value which can be read from a child template.\",\n      snippet: \"put=${1:value}\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#put\"\n    }\n  ]\n};\n\n// src/core/style.ts\nimport path2 from \"path\";\nimport { assertNoParams as assertNoParams13, importDefault as importDefault2 } from \"@marko/babel-utils\";\nimport { types as t39 } from \"@marko/compiler\";\nvar style_default = {\n  translate(tag) {\n    const {\n      hub: { file }\n    } = tag;\n    assertNoParams13(tag);\n    assertNoSpreadAttrs(tag);\n    let type = \"text/css\";\n    const attrs2 = tag.get(\"attributes\");\n    const base = path2.basename(file.opts.sourceFileName);\n    const typeAttr = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"type\");\n    const classAttr2 = attrs2.find((attr2) => attr2.isMarkoAttribute() && attr2.node.name === \"class\");\n    if (typeAttr && classAttr2) {\n      throw classAttr2.buildCodeFrameError(`<style> must only use \"type\" or \"class\" and not both.`);\n    } else if (typeAttr) {\n      const typeValue = typeAttr.get(\"value\");\n      if (typeValue.isStringLiteral()) {\n        type = typeValue.node.value;\n      } else {\n        throw typeValue.buildCodeFrameError(`<style> \"type\" attribute can only be a string literal.`);\n      }\n    } else if (classAttr2) {\n      const classValue2 = classAttr2.get(\"value\");\n      if (classValue2.isStringLiteral()) {\n        type = classValue2.node.value;\n      } else {\n        throw classValue2.buildCodeFrameError(`<style> \"class\" attribute can only be a string literal.`);\n      }\n    }\n    if (type === \"text/css\") {\n      type = \"css\";\n    }\n    if (tag.node.var && !type.startsWith(\"module\")) {\n      type = \"module.\" + type;\n    }\n    const body = tag.get(\"body\").get(\"body\");\n    const markoText = body[0];\n    if (body.length !== 1 || !markoText.isMarkoText()) {\n      throw (markoText.isMarkoText() ? body[1] : body[0]).buildCodeFrameError(\"The '<style>' tag currently only supports static content.\");\n    }\n    const { resolveVirtualDependency } = getMarkoOpts();\n    if (resolveVirtualDependency) {\n      const importPath = resolveVirtualDependency(file.opts.filename, {\n        type,\n        code: markoText.node.value,\n        startPos: markoText.node.start,\n        endPos: markoText.node.end,\n        path: `./${base}`,\n        virtualPath: `./${base}.${type}`\n      });\n      if (!tag.node.var) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([], t39.stringLiteral(importPath)));\n      } else if (t39.isIdentifier(tag.node.var)) {\n        currentProgramPath.pushContainer(\"body\", t39.importDeclaration([t39.importDefaultSpecifier(tag.node.var)], t39.stringLiteral(importPath)));\n      } else {\n        currentProgramPath.pushContainer(\"body\", t39.variableDeclaration(\"const\", [\n          t39.variableDeclarator(tag.node.var, importDefault2(file, importPath, \"style\"))\n        ]));\n      }\n    }\n    tag.remove();\n  },\n  attributes: {\n    type: { enum: [\"css\", \"less\", \"scss\", \"text/css\"] }\n  }\n};\n\n// src/core/tag.ts\nimport { types as t40 } from \"@marko/compiler\";\nvar tag_default2 = {\n  translate: {\n    enter(tag) {\n      if (isOutputHTML()) {\n        flushBefore(tag);\n      }\n      if (!tag.node.var) {\n        throw tag.get(\"name\").buildCodeFrameError(\"<tag> requires a variable to be defined, eg <tag/NAME>.\");\n      }\n    },\n    exit(tag) {\n      if (isOutputHTML()) {\n        flushInto(tag);\n      }\n      tag.replaceWith(t40.variableDeclaration(\"const\", [\n        t40.variableDeclarator(tag.node.var, t40.arrowFunctionExpression(tag.node.body.params, toFirstExpressionOrBlock(tag.node.body)))\n      ]));\n    }\n  },\n  attributes: {},\n  autocomplete: [\n    {\n      displayText: \"tag/<name>|<params>|\",\n      description: \"Creates a reusable fragment within the template.\",\n      snippet: \"tag/${1:name}|${2:param1, param2}|\",\n      descriptionMoreURL: \"https://markojs.com/docs/core-tags/#tag\"\n    }\n  ]\n};\n\n// src/core/static.ts\nimport { types as t41 } from \"@marko/compiler\";\nimport { parseScript as parseScript3 } from \"@marko/babel-utils\";\nvar static_default = {\n  parse(tag) {\n    const {\n      node,\n      hub: { file }\n    } = tag;\n    const rawValue = node.rawValue;\n    const code = rawValue.replace(/^static\\s*/, \"\").trim();\n    const start = node.name.start + (rawValue.length - code.length);\n    let { body } = parseScript3(file, code, start);\n    if (body.length === 1 && t41.isBlockStatement(body[0])) {\n      body = body[0].body;\n    }\n    tag.replaceWith(t41.markoScriptlet(body, true));\n  },\n  \"parse-options\": {\n    rootOnly: true,\n    rawOpenTag: true,\n    openTagOnly: true,\n    ignoreAttributes: true\n  },\n  autocomplete: [\n    {\n      displayText: \"static <statement>\",\n      description: \"A JavaScript statement which is only evaluated once your template is loaded.\",\n      descriptionMoreURL: \"https://markojs.com/docs/syntax/#static-javascript\"\n    }\n  ]\n};\n\n// src/core/noop.ts\nvar noop_default = {\n  migrate: [(tag) => tag.remove()]\n};\n\n// src/core/__flush_here_and_after__.ts\nvar flush_here_and_after_default = {\n  migrate: [\n    (tag) => {\n      tag.replaceWithMultiple(tag.node.body.body);\n      currentProgramPath.scope.crawl();\n    }\n  ]\n};\n\n// src/core/index.ts\nvar core_default = {\n  taglibId,\n  \"<import>\": import_default,\n  \"<export>\": export_default,\n  \"<attrs>\": attrs_default,\n  \"<if>\": if_default,\n  \"<else-if>\": else_if_default,\n  \"<else>\": else_default,\n  \"<for>\": for_default,\n  \"<let>\": let_default,\n  \"<const>\": const_default,\n  \"<effect>\": effect_default,\n  \"<lifecycle>\": lifecycle_default,\n  \"<id>\": id_default,\n  \"<html-comment>\": html_comment_default,\n  \"<tag>\": tag_default2,\n  \"<put>\": put_default,\n  \"<get>\": get_default,\n  \"<return>\": return_default,\n  \"<style>\": style_default,\n  \"<await-reorderer>\": noop_default,\n  \"<init-widgets>\": noop_default,\n  \"<init-components>\": noop_default,\n  \"<static>\": static_default,\n  \"<__flush_here_and_after__>\": flush_here_and_after_default\n};\n\n// src/visitors/referenced-identifier.ts\nimport { types as t42 } from \"@marko/compiler\";\nvar outGlobalIdentifiers = /* @__PURE__ */ new WeakMap();\nvar hasAttrsTag = /* @__PURE__ */ new WeakSet();\nvar referenced_identifier_default = {\n  migrate(identifier) {\n    const { name } = identifier.node;\n    if (identifier.scope.hasBinding(name))\n      return;\n    switch (identifier.node.name) {\n      case \"input\": {\n        if (!hasAttrsTag.has(currentProgramPath)) {\n          hasAttrsTag.add(currentProgramPath);\n          insertAfterStatic(t42.markoTag(t42.stringLiteral(\"attrs\"), void 0, t42.markoTagBody(), void 0, identifier.node));\n        }\n        break;\n      }\n      case \"out\":\n        if (t42.isMemberExpression(identifier.parent) && t42.isIdentifier(identifier.parent.property) && identifier.parent.property.name === \"global\") {\n          let globalIdentifier = outGlobalIdentifiers.get(currentProgramPath);\n          if (!globalIdentifier) {\n            globalIdentifier = currentProgramPath.scope.generateUidIdentifier(\"$global\");\n            outGlobalIdentifiers.set(currentProgramPath, globalIdentifier);\n            insertAfterStatic(t42.markoTag(t42.stringLiteral(\"get\"), void 0, t42.markoTagBody(), void 0, globalIdentifier));\n          }\n          identifier.parentPath.replaceWith(globalIdentifier);\n        } else {\n          throw identifier.buildCodeFrameError(\"Only out.global is supported for compatibility.\");\n        }\n        break;\n    }\n  }\n};\nfunction insertAfterStatic(node) {\n  for (const child of currentProgramPath.get(\"body\")) {\n    if (!isStatic(child)) {\n      child.insertBefore(node);\n      return;\n    }\n  }\n  currentProgramPath.unshiftContainer(\"body\", node);\n}\n\n// src/index.ts\nvar visitors = {\n  Program: program_default,\n  AssignmentExpression: assignment_expression_default,\n  UpdateExpression: update_expression_default,\n  ReferencedIdentifier: referenced_identifier_default,\n  ImportDeclaration: import_declaration_default,\n  MarkoDocumentType: document_type_default,\n  MarkoDeclaration: declaration_default,\n  MarkoCDATA: cdata_default,\n  MarkoText: text_default,\n  MarkoTag: tag_default,\n  MarkoPlaceholder: placeholder_default,\n  MarkoScriptlet: scriptlet_default,\n  MarkoComment: comment_default\n};\nvar getVisitorOfType = (typename) => Object.entries(visitors).reduce((visitor, [name, value]) => {\n  if (typename in value) {\n    visitor[name] = value[typename];\n  }\n  return visitor;\n}, {});\nvar analyze = getVisitorOfType(\"analyze\");\nvar translate = getVisitorOfType(\"translate\");\nvar taglibs = [\n  [\n    __dirname,\n    {\n      ...core_default,\n      migrate: getVisitorOfType(\"migrate\")\n    }\n  ]\n];\nexport {\n  analyze,\n  taglibs,\n  translate\n};\n//# sourceMappingURL=index.esm.js.map\n","import * as fluurtTranslator from \"../../../../../browser-shims/v6/translator\";\n\n<hash-value/files=[\n  {\n    name: \"index.marko\",\n    path: \"/components/index.marko\",\n    content:\n      \"<let/count=0/>\\n<button onClick() { count++ }>\\n  ${count}\\n</button>\",\n  },\n]/>\n<repl\n  getCompilerOptions() {\n    return {\n      translator: fluurtTranslator,\n      optimize: false,\n    };\n  }\n  files:=files\n/>\n","import { register, init } from \"marko/dist/runtime/components/index.js\";\nimport \"../../../components/app-layout/style.css\";\nimport \"../../../components/app-layout/favicon.png\";\nimport \"../../../components/app-layout/components/skip-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/app-layout/components/skip-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../components/app-layout/components/layout-header/style.css\";\nimport \"../../../logos/marko.svg\";\nimport \"../../../components/app-layout/components/layout-search/style.css\";\nimport component_0 from \"../../../components/app-layout/components/layout-header/component-browser.js\";\nregister(\"OIKmBXjW\", component_0);\nimport \"../../../components/app-layout/components/layout-sidebar/style.css\";\nimport component_1 from \"../../../components/app-layout/components/layout-sidebar/components/version-switcher/component-browser.js\";\nregister(\"07hv1F0+\", component_1);\nimport component_2 from \"../../../components/app-layout/components/layout-sidebar/component-browser.js\";\nregister(\"mFesaajv\", component_2);\nimport \"../../../components/app-footer/style.css\";\nimport \"../../../components/app-footer/openjsf.svg\";\nimport \"../../../components/app-footer/osi.svg\";\nimport \"../../../components/app-footer/ebay.svg\";\nimport \"../../../components/discord-link/index.marko.css!=!/Users/mirawlings/dev/marko-js/website/node_modules/@marko/webpack/dist/loader/index.js!/Users/mirawlings/dev/marko-js/website/src/components/discord-link/index.marko?virtual=./index.marko.css\";\nimport \"../../../logos/discord.svg\";\nimport \"./components/playground-6.marko\";\ninit();","module.exports = require(\"../../../../node_modules/@marko/compiler/dist/babel-types\");\n","// We don't bring in the full Marko compiler, but the ast types are needed.\nexports.types = require(\"./dist/babel-types\");\n","module.exports = require(\"memfs\");\n","const path = require(\"path\");\nconst resolve = require(\"resolve\");\nconst resolveExports = require(\"resolve.exports\");\n\nconst Module = {\n  _nodeModulePaths: nodeModulePaths,\n  _resolveFilename: function (target, fromModule) {\n    return resolve.sync(target, {\n      basedir: path.dirname(fromModule.filename),\n      paths: fromModule.paths,\n      extensions: [\".js\", \".json\", \".marko\", \".mjs\"],\n      pathFilter(pkg, _, relativePath) {\n        if (/^index(\\.[^/\\\\]+)?$/.test(relativePath)) {\n          try {\n            return resolveExports.legacy(pkg, Module._resolveExportsOptions);\n          } catch {}\n        } else {\n          try {\n            return resolveExports.resolve(\n              pkg,\n              relativePath,\n              Module._resolveExportsOptions\n            );\n          } catch {}\n        }\n\n        return relativePath;\n      },\n    });\n  },\n  _resolveExportsOptions: {\n    browser: true,\n  },\n};\n\nmodule.exports = Module;\n\nfunction nodeModulePaths(dir) {\n  const paths = [];\n\n  while (true) {\n    const parentDir = path.dirname(dir);\n    paths.push(path.join(dir, \"node_modules\"));\n\n    if (!parentDir || parentDir === dir) {\n      break;\n    }\n\n    dir = parentDir;\n  }\n\n  return paths;\n}\n","module.exports = {\n  env: {},\n  browser: true,\n  versions: {\n    node: \"1000.0.0\",\n  },\n  cwd() {\n    return \"/\"\n  }\n}","var siteHeaderEvents = require(\"./events\");\n\nvar classNames = {\n  base: \"headspace\",\n  fixed: \"headspace--fixed\",\n  hidden: \"headspace--hidden\"\n};\nvar debounce = cb => () => window.requestAnimationFrame(cb);\nvar tolerance = 3;\n\nmodule.exports = {\n  onMount() {\n    siteHeaderEvents.emit(\"create\", this);\n    var scrollLast = 0;\n    var startOffset = this.getEl('header').offsetHeight;\n    var bannerHeight = (this.getEl('banner') || { offsetHeight:0 }).offsetHeight;\n\n    var handleScroll = debounce(() => {\n      var scrollCurrent = window.pageYOffset;\n\n      if (scrollCurrent <= bannerHeight) {\n        this.reset();\n      } else if (!this.paused && scrollCurrent > startOffset) {\n        var toleanceReached = Math.abs(scrollCurrent - scrollLast) >= tolerance;\n        var scrollingDown = scrollCurrent > scrollLast;\n        var wasAtTop = scrollLast <= startOffset;\n        if (toleanceReached || (scrollingDown && wasAtTop)) {\n          scrollCurrent > scrollLast ? this.hide() : this.fix();\n        }\n      }\n\n      scrollLast = scrollCurrent;\n    });\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n  },\n  reset() {\n    this.removeClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"reset\");\n  },\n  fix() {\n    this.addClass(classNames.fixed);\n    this.removeClass(classNames.hidden);\n    siteHeaderEvents.emit(\"fix\");\n  },\n  hide() {\n    this.addClass(classNames.hidden);\n    siteHeaderEvents.emit(\"hide\");\n  },\n  addClass(cls) {\n    this.getEl('header').classList.add(cls);\n  },\n  removeClass(cls) {\n    this.getEl('header').classList.remove(cls);\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    setTimeout(() =>\n      window.requestAnimationFrame(() => {\n        this.paused = false;\n      })\n    );\n  },\n  toggleMenu () {\n    siteHeaderEvents.emit('toggle-menu');\n  }\n};\n","// TODO: remove this.\nvar EventEmitter = require(\"events\");\n\nmodule.exports = new EventEmitter();\n","var siteHeaderEvents = require(\"../layout-header/events\");\nvar forEach = [].forEach;\nvar filter = [].filter;\nvar slice = [].slice;\nvar siteHeaderComponent;\n\nmodule.exports = {\n  onMount() {\n    this.preventOverscroll();\n    this.listenForHeaderChanges();\n    this.initScrollSpy();\n  },\n\n  initScrollSpy() {\n    var headersSelector = [1, 2, 3, 4, 5, 6]\n      .map(n => \".doc-content h\" + n)\n      .join(\",\");\n    var headers = slice.call(document.querySelectorAll(headersSelector));\n    var waiting = false;\n\n    headers.length &&\n      this.subscribeTo(window).on(\"scroll\", () => {\n        if (!waiting) {\n          waiting = true;\n          setTimeout(() => {\n            var threshold = window.innerHeight / 3;\n            var closestHeader;\n            var closestTop;\n\n            headers.map(header => {\n              var top = header.getBoundingClientRect().top;\n              if (\n                closestTop == null ||\n                (top < threshold && Math.abs(top) < Math.abs(closestTop))\n              ) {\n                closestTop = top;\n                closestHeader = header;\n              }\n            });\n\n            var anchor = closestHeader.id;\n            var anchorEl =\n              this.el.querySelector('a[href=\"#' + anchor + '\"]') ||\n              this.el.querySelector(\"a.selected\");\n            var targetAnchor = anchorEl;\n            var childList = targetAnchor.nextSibling;\n\n            if (childList) {\n              forEach.call(childList.querySelectorAll(\"a[href^=\\\\#]\"), a =>\n                a.classList.remove(\"selected\")\n              );\n            }\n\n            while (targetAnchor) {\n              var parentList = targetAnchor.closest(\"ul\");\n              var siblings =\n                parentList &&\n                filter.call(\n                  parentList.querySelectorAll(\":scope > li > a[href^=\\\\#]\"),\n                  a => a !== targetAnchor\n                );\n              siblings && siblings.forEach(a => a.classList.remove(\"selected\"));\n              targetAnchor.classList.add(\"selected\");\n              targetAnchor = parentList && parentList.previousElementSibling;\n            }\n\n            this.scrollAnchorIntoView(anchorEl);\n\n            waiting = false;\n          }, 50);\n        }\n      });\n  },\n\n  listenForHeaderChanges() {\n    forEach.call(this.el.querySelectorAll(\"a[href^=\\\\#]\"), a => {\n      this.subscribeTo(a).on(\"click\", () => {\n        siteHeaderComponent.hide();\n        siteHeaderComponent.pause();\n        siteHeaderComponent.resume();\n        this.hide();\n      });\n    });\n\n    // handles nested selected links\n    var selectedLink = slice.call(this.el.querySelectorAll(\"a.selected\")).pop();\n\n    selectedLink &&\n      this.subscribeTo(selectedLink).on(\"click\", e => {\n        window.scrollTo(0, 0);\n        siteHeaderComponent.reset();\n        e.preventDefault();\n      });\n\n    this.subscribeTo(siteHeaderEvents)\n      .on(\"reset\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.remove(\"fixed\");\n        setTimeout(() => this.el.classList.remove(\"transition\"), 0);\n      })\n      .on(\"fix\", () => {\n        this.el.classList.remove(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"hide\", () => {\n        this.el.classList.add(\"no-header\");\n        this.el.classList.add(\"fixed\");\n        setTimeout(() => this.el.classList.add(\"transition\"), 0);\n      })\n      .on(\"toggle-menu\", () => {\n        if (this.el.classList.contains(\"show\")) {\n          this.el.classList.remove(\"show\");\n          document.body.style.overflow = \"\";\n        } else {\n          this.el.classList.add(\"show\");\n        }\n      })\n      .on(\"create\", _siteHeaderComponent => {\n        siteHeaderComponent = _siteHeaderComponent;\n\n        if (window.pageYOffset > siteHeaderComponent.el.offsetHeight) {\n          this.el.classList.add(\"no-header\");\n          this.el.classList.add(\"fixed\");\n        }\n      });\n  },\n\n  preventOverscroll() {\n    var sidebar = this.getEl(\"sidebar\");\n    this.subscribeTo(document.body).on(\"wheel\", e => {\n      var delta = e.deltaY;\n      var scrollTarget = sidebar.scrollTop + delta;\n      var topY = 0;\n      var bottomY = sidebar.scrollHeight - sidebar.offsetHeight;\n      var atTop = scrollTarget <= topY;\n      var atBottom = scrollTarget >= bottomY;\n\n      if ((delta < 0 && atTop) || (delta > 0 && atBottom)) {\n        if (e.target === sidebar || sidebar.contains(e.target)) {\n          if (atTop && sidebar.scrollTop != topY) {\n            sidebar.scrollTop = topY;\n          } else if (atBottom && sidebar.scrollTop != bottomY) {\n            sidebar.scrollTop = bottomY;\n          }\n          e.preventDefault();\n        }\n      }\n    });\n  },\n\n  scrollAnchorIntoView(anchorEl) {\n    var sidebar = this.getEl(\"sidebar\");\n    var anchorTop = anchorEl.offsetTop;\n    var sidebarScrollTop = sidebar.scrollTop;\n    var sidebarHeight = sidebar.offsetHeight;\n    var sidebarScrollBottom = sidebarScrollTop + sidebarHeight;\n\n    var targetList = anchorEl.closest(\"li\");\n    var parentList;\n\n    while (true) {\n      parentList = targetList.parentNode.closest(\"ul\");\n      if (parentList && parentList.offsetHeight < sidebarHeight) {\n        targetList = parentList;\n      } else {\n        break;\n      }\n    }\n\n    var targetTop = targetList.offsetTop;\n    var targetHeight = targetList.offsetHeight;\n    var targetBottom = targetTop + targetHeight;\n    var targetIsFullyVisible =\n      targetTop > sidebarScrollTop && targetBottom < sidebarScrollBottom;\n\n    if (!targetIsFullyVisible) {\n      sidebar.scrollTop = targetTop + targetHeight / 2 - sidebarHeight / 2;\n    }\n  },\n\n  hide() {\n    this.el.classList.remove(\"show\");\n    document.body.style.overflow = \"\";\n  }\n};\n","module.exports = {\n  switchVersion(e) {\n    var location = e.target.value;\n    if (location !== \"current\") {\n      e.target.value = \"current\";\n      window.location.href = location;\n    }\n  }\n};\n","export default __webpack_public_path__ + \"339b8a9e.svg\";","export default __webpack_public_path__ + \"6876aea9.svg\";","export default __webpack_public_path__ + \"1b70b500.svg\";","export default __webpack_public_path__ + \"d78b83f1.png\";","export default __webpack_public_path__ + \"78800ea4.svg\";","export default __webpack_public_path__ + \"91bc26e5.svg\";"],"names":["_selectedIndexChange","_filesChange","files","externalFiles","selectedIndex","externalSelected","input","_filesSet","_files","_component","setState","_state","_selectedIndexSet","_selectedIndex","selectedFile","out","be","_component4","nextId","_nextIdSet","_nextId","_index","file","index","_keyScope","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_componentDef","editing","_editingSet","_editing","selected","mutable","_marko_class_merge","d","_assign","_nestedComponentDef2","_component3","_state3","name","finishRename","_cache","_cached","modifiedFile","path","replace","slice","nameInput","_createRef","_valueChange","_name","e","length","pa","code","target","value","_lifecycle","focus","setSelectionRange","indexOf","t","window","confirm","stopPropagation","ee","newFile","content","newIndex","concat","_end","_marko_componentType","_marko_component","_marko_template","Component","_marko_defineComponent","_","_marko_registerComponent","_marko_renderer","state","$global","_begin","actions","body","_marko_dynamic_tag","n","_marko_node","i","valueChange","class","className","el","_effect","_marko_createElement","attrs","_meta","_marko_attrs","_extractHandlers","compressToEncodedURIComponent","JSON","stringify","query","fallback","isMatch","matchMedia","matches","_isMatchSet","_isMatch","mq","listener","addEventListener","removeEventListener","_return","left","right","editorSize","_editorSizeSet","_editorSize","resizing","_resizingSet","_resizing","_matchMediaReturn","_matchMedia","isVertical","container","preventDefault","_meta2","handler","buttons","which","rect","getBoundingClientRect","fraction","clientY","top","height","clientX","width","Math","min","max","_marko_node2","_marko_node3","onCreate","_component7","getCompilerOptions","previewType","_previewTypeSet","_previewType","debounce","_debounceSet","_debounce","_resizablePanes","_pane","_fileTabs","_assign2","Symbol","iterator","_marko_self_iterator","activeEditor","_activeEditorSet","_activeEditor","_nestedComponentDef3","_state4","loading","_nestedComponentDef4","_component5","_state5","_controllableSelect","_playgroundLink","_nestedComponentDef5","_component6","_state6","preview","_previewSet","_preview","defaultValue","parse","decompressFromEncodedURIComponent","location","hash","console","error","getInitialValue","_valueSet","_value","this","isUpdating","isOutputHTML","getMarkoOpts","output","isOutputDOM","currentProgramPath","hub","markoOpts","MARKO_FILE_REG","analyzeTagNameType","tag","extra","node","tagNameType","get","isStringLiteral","isNativeTag","tagNameNullable","pending","path3","type","nullable","pop","isConditionalExpression","push","alternate","isLogicalExpression","operator","isAssignmentExpression","isBinaryExpression","isTemplateLiteral","isNullLiteral","isIdentifier","binding","scope","getBinding","kind","decl","parent","test","source","specifiers","some","it","bindingTag","isMarkoTag","bindingTagName","tagNameDynamic","startSection","section","parentSection","parentPath","getOrCreateSection","sectionNamePath","sectionName","isProgram","generateUid","toString","programExtra","sections","id","depth","cur","getSection","currentPath","createSectionState","key","init","arrayOfSectionData","getScopeIdIdentifier","generateUidIdentifier","_getScopeIdentifier","t2","getScopeIdentifier","ignoreDefault","scopeId","forEachSection","fn","forEach","SortedRepeatable","constructor","compare","add","data","item","Array","isArray","insertSorted","joinItems","addAll","items","find","pos","mid","compareResult","clone","size","toArray","map","iterate","a","b","len","next","getReservesByType","reserveScope","debugKey","reserve","reserve2","reservesByType","getScopeAccessorLiteral","optimize","t3","repeatableReserves","val","escapeXML","escapeIfNeeded","result","lastPos","replacement","escapeScript","escapeTagEnding","escapeStyle","tagName","openTag","escaped","escapeAttrValue","quoteValue","escape","startPos","quote","stringifyClassObject","isVoid","NON_DIMENSIONAL","stringifyStyleObject","toDelimitedString","delimiter","curDelimiter","v","part","classAttr","stringAttr","styleAttr","attr","attrAssignment","RegExp","nonVoidUntypedAttr","hasOwnProperty","Object","prototype","createScopeReadPattern","references","rootDepth","rootPattern","t4","nestedPatterns","ref","propertyKey","propertyValue","isShorthand","pattern","relativeDepth","prev","nestedPattern","properties","getScopeExpression","targetSection","scopeIdentifier","diff","Error","createScopeReadExpression","reference","String","doc","walker","replacementNode","targetParent","targetNode","refNode","nextNode","runtimePrefix","document","createTreeWalker","getElementById","parentNode","firstChild","insertBefore","removeChild","nextSibling","pureFunctions","importRuntime","importNamed","getRuntimePath","callRuntime","args","callExpression2","t5","filteredArgs","arg","filterArguments","includes","leadingComments","getHTMLRuntime","toTemplateOrStringLiteral","parts","strs","exprs","curStr","t6","nextIndex","exprLen","expressions","shiftItems","quasis","j","raw","appendLiteral","arr","str","list","start","offset","getWalks","getWalkComment","getSteps","walkCodeToName","enter","exit","enterShallow","visit","buildCodeFrameError","steps","walks","walkComment","walkString","walks2","step","lastIndexOf","current","count","walk","nCodeString","writeTo","fromCharCode","number","toCharString","startCode","rangeSize","multiplier","floor","getWalkString","walkLiteral","t7","join","getRenderer","t8","getWrites","getRegisterRenderer","setRegisterRenderer","exprsLen","writes","writePrependTo","unshift","consumeHTML","flushBefore","expr","skip","flushInto","pushContainer","getSectionMeta","setup","getSetup","register","markNode","assertNoSpreadAttrs","attr2","isMarkoSpreadAttribute","assertNoBodyContent","returnId","_setReturnId","return_default","translate","assertNoVar","assertNoParams","defaultAttr","attributes","t9","default","loc","end","msg","buildError","returnId2","replaceWith","addValue","valueReferences","identifier","hasDownstreamIntersections","remove","autocomplete","displayText","description","snippet","descriptionMoreURL","getSignals","Map","getSubscribeBuilder","_setSubscribeBuilder","setSubscriberBuilder","builder","getClosures","addClosure","fromSection","toSection","closure","currentSection","forceResumeScope","_setForceResumeScope","getSerializedScopeProperties","getRegisterScopeBuilder","_setRegisterScopeBuilder","setRegisterScopeBuilder","unimplementedBuild","t10","getSignal","signals","signal","set","generateSignalName","values","intersection","render","effect","effectInlineReferences","subscribers","closures","build","subscribe","getSignalFn","provider","ownerScope","isImmediateOwner","object","buildSignalIntersections","buildSignalValuesWithIntersections","initValue","valueAccessor","intersections","valuesWithIntersections","params","closureEntries","from","entries","sort","closureSection","closureSignal","pushRepeatable","hasDynamicSubscribers","intersectionExpression","repeatable","getDestructureSignal","bindingsByName","destructurePattern","bindings","valueIdentifier","bindingSignals","declarations","canCallOnlyWhenDirty","cleanIdentifier","subscriber","p","providerSignal","addStatement","statement","originalNodes","isInlined","statements","addEffectReferences","expression","getResumeRegisterId","opts","filename","getTemplateId","sortSignals","aReserves","getReserves","bReserves","getMappedId","addHTMLEffectCall","writeHTMLResumeStatements","tagVarIdentifier","intersectionsBySection","allSignals","scopeIdIdentifier","scopeIdentifier2","unshiftContainer","serializedReferences","signalRefs","serializedProperties","reduce","acc","additionalProperties","isRoot","bindFunctionsVisitor","FunctionExpression","bindFunction","ArrowFunctionExpression","root","functionIdentifier","isFunction","isStatic","isImportDeclaration","isExportDeclaration","isMarkoScriptlet","static","html_default","program","returnIdentifier","t11","renderContent","child","replaceWithMultiple","rendererId","attrs2","var","getTemplateId2","dom_default","templateIdentifier","t12","walksIdentifier","setupIdentifier","attrsSignalIdentifier","closuresIdentifier","forEachSectionReverse","childSection","flatMap","effectDeclarator","effectIdentifier","finalizeSignalArgs","arguments","signalDeclarator","newPath","traverse","writeSignals","writes2","setup2","register2","closures2","renderer","exportSpecifiers","isIdentity","bindingIdentifier","signalIdentifier","getTemplateId3","intersectionSubscribeCounts","WeakMap","repeatableIntersections","lenDelta","getIntersectionsBySection","setIntersectionsBySection","trackReferencesForBindings","getBindingIdentifiers","referencePaths","constantViolations","filter","path4","fnRoot","getFnRoot","exprRoot","getExprRoot","markoRoot","immediateRoot","name2","isMarkoAttribute","addBindingToReferences","listKey","referencesKey","prevReferences","addSubscriber","getIntersection","isIntersection","removeSubscriber","mergeReferences","groupEntries","newReferences","curPath","isMarkoPath","isFunctionExpression","previousProgramPath","program_default","migrate","crawl","analyze","curIndex","reserves","finalizeIntersections","t13","hasInteractiveChild","isInteractive","import_declaration_default","request","resolveTagImport","document_type_default","documentType","assignmentReplacer","getReplacement","assignment","assignment_expression_default","t14","update_expression_default","t15","argument","prefix","isExpressionStatement","declaration_default","declaration","cdata_default","cdata","text_default","text","followingSiblings","needsSeparator","sibling","t16","enter2","modulePlugin","plugin","isModulePlugin","isFunctionPlugin","t17","exit2","Boolean","IDENTIFIER_REG","attrsToObject","withRenderBody","t19","resultExtra","t18","hoistedControlFlows","isConditional","isLoop","prop","getRenderBodyProp","attrsObject","lastProp","translateVar","initialValue","tagVar","t20","evaluate","confident","computed","native_tag_default","has","isSpreadAttr","attrNode","isEventHandler","isHTML","tagDef","getTagDef","hasSpread","write2","t21","varName","createElFunction","referenceSection","isCallExpression","visitAccessor","attrsCallExpr","extra2","helper","propName","charAt","toLowerCase","parseOptions","openTagOnly","htmlType","custom_tag_default","trackReferences","getTagDef2","template","childFile","loadFileForTag","childProgramExtra","ast","attrsReferences","tagBody","tagIdentifier","t22","relativePath","getTagRelativePath","importDefault","renderBodyProp","renderBodyId","renderTagExpr","callExpression","renderBodyPath","callStatement","setForceResumeScope","translateHTML","tagSection","tagBodySection","childProgram","importNamed2","tagAttrsIdentifier","injectWalks","translateDOM","nameIsString","resolveRelativePath","tags","metadata","marko","toFirstExpressionOrBlock","nodes","t23","dynamic_tag_default","t24","dynamicScopeIdentifier","dynamicTagExpr","bodySection","renderBodyIdentifier","tagNameReserve","nameReferences","attrsGetter","added","attribute_tag_default","hasPendingHTML","assertNoVar2","parentTag","findParentTag","parentExtra","attrName","info","nestedAttributeTags","t25","dynamic","repeated","existingAttr","analyzeAttributeTags","analyzeChildren","rootExtra","hasAttributeTags","analyzeChild","isTransparentTag","isLoopTag","isAttributeTag","lookup","existing","tag_default","getTagDef3","hook","analyzer","assertNoArgs","translator","watchFiles","modifier","isNativeTag2","tagNameId","tagNameVarPath","t26","taglibId","isCoreTag","getTagDef4","isCoreTagName","ESCAPE_TYPES","script","style","placeholder_default","placeholder","getPrevSibling","noOutput","t27","isNativeTag3","needsMarker","getNextSibling","canWriteHTML","method","getParentTagName","scriptlet_default","scriptlet","bodyReferences","ieConditionalCommentRegExp","comment_default","comment","import_default","parseScript","rawValue","rootOnly","rawOpenTag","ignoreAttributes","relaxRequireCommas","export_default","parseScript2","attrs_default","varPath","toFirstStatementOrBlock","t28","if_default","exitBranchAnalyze","testAttr","assertNoVar3","assertNoParams2","t29","exitBranchTranslate","BRANCHES_LOOKUP","getBranches","branches","nextTag","isLast","conditionalReferences","tag2","isStateful","singleNodeOptimization","every","section2","ifScopeIdIdentifier","ifScopeIdentifier","ifRendererIdentifier","curStatement","else_if_default","assertNoVar4","assertNoParams3","t30","else_default","assertNoVar5","assertNoParams4","const_default","assertNoParams5","t31","effect_default","assertNoParams6","t32","inlineStatements","node2","lifecycle_default","assertNoParams7","t33","id_default","assertNoArgs2","assertNoAttributes","assertNoParams8","t34","for_default","isOnlyChild","t35","getTagDef5","html","checkOnlyChild","parentTagName","keys","hasParams","assertNoVar6","findName","assertAllowedAttributes","validateFor","translateHTML2","translateDOM2","of","in","to","paramsPath","signal2","ofAttr","toAttr","inAttr","loopFunctionBody","tagParams","byAttr","fromAttr","stepAttr","paramsSignal","paramsPaths","bindingsLookup","assign","getTagParamsSignal","namePath","block","byParams","keyExpression","tempScopeIdentifier","byIdentifier","keyParam","valParam","ofAttrValue","indexParam","loopParam","tempValParam","indexName","generateUidIdentifierBasedOnNode","stepValue","fromValue","stepsName","stepName","fromName","forScopeIdsIdentifier","forScopesIdentifier","obj","get_default","assertNoParams9","refId","t36","defaultAttrValue","relativeReferencePath","resolveTagImport2","getTemplateId4","templateId","initContextConsumer","put_default","t38","providers","compute","scopeAccessor","initContextProvider","assertNoParams12","assertNoVar8","insertAfter","noop_default","core_default","t37","assertNoParams11","registerAssignmentReplacer","queueSource","assertNoVar7","assertNoParams10","assertNoAttributes2","assertNoAttributeTags","t40","assertNoParams13","base","path2","sourceFileName","typeAttr","classAttr2","typeValue","classValue2","startsWith","markoText","isMarkoText","resolveVirtualDependency","importPath","endPos","virtualPath","t39","importDefault2","enum","trim","parseScript3","t41","outGlobalIdentifiers","hasAttrsTag","WeakSet","insertAfterStatic","visitors","Program","AssignmentExpression","UpdateExpression","ReferencedIdentifier","hasBinding","t42","property","globalIdentifier","ImportDeclaration","MarkoDocumentType","MarkoDeclaration","MarkoCDATA","MarkoText","MarkoTag","MarkoPlaceholder","MarkoScriptlet","MarkoComment","getVisitorOfType","typename","visitor","taglibs","_hashValueReturn","_hashValue","_repl","fluurtTranslator","module","exports","types","require","resolve","resolveExports","Module","_nodeModulePaths","dir","paths","parentDir","dirname","_resolveFilename","fromModule","sync","basedir","extensions","pathFilter","pkg","legacy","_resolveExportsOptions","browser","env","versions","cwd","siteHeaderEvents","classNames","onMount","emit","cb","scrollLast","startOffset","getEl","offsetHeight","bannerHeight","handleScroll","scrollCurrent","pageYOffset","reset","paused","abs","hide","fix","requestAnimationFrame","removeClass","addClass","cls","classList","pause","resume","setTimeout","toggleMenu","EventEmitter","siteHeaderComponent","preventOverscroll","listenForHeaderChanges","initScrollSpy","headersSelector","headers","call","querySelectorAll","waiting","subscribeTo","on","closestHeader","closestTop","threshold","innerHeight","header","anchor","anchorEl","querySelector","targetAnchor","childList","parentList","closest","siblings","previousElementSibling","scrollAnchorIntoView","selectedLink","scrollTo","contains","overflow","_siteHeaderComponent","sidebar","delta","deltaY","scrollTarget","scrollTop","bottomY","scrollHeight","atTop","atBottom","sidebarScrollTop","offsetTop","sidebarHeight","sidebarScrollBottom","targetList","targetTop","targetHeight","switchVersion","href"],"sourceRoot":""}