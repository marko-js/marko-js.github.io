{"version":3,"file":"81.d98ad4c1.js","mappings":"0jDAQaA,EAAmB,qDAAqDC,EAAAC,IAwG5E,QAAK,QAAAC,EAAA,+CAAAC,EAAAA,EAAAA,GAAAC,GAAA,IAAAC,IAAA,MAAAC,EAAA,CAAAC,QAAAA,GAAA,KAAAC,MAAA,KAAAH,EAAAI,EAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAN,EAAAO,IAAAC,EAAAA,EAAAA,SAAA,QAMPC,EANOC,EAAAJ,EAAAK,EAAAX,EAMCY,EAAAX,GAARQ,EAAQR,EAAA,MA5GR,KAAEY,EAAI,MAAEC,EAAK,aAAEC,EAAY,mBAAEC,EAAkB,SAAEC,EAAQ,cAAEC,EAAa,cAAEC,GAAehB,EAC5FiB,EAAWV,EAAAW,KAAA,MACRC,GAAYC,EAAAA,EAAAA,QAAAC,EAAAA,EAAAA,QAAAd,EAAA,CAAAU,EAAAL,EAAA,QAAGU,IAAAA,KAAU,IAAKL,EAAaL,EAAaU,OACxDC,GAAWH,EAAAA,EAAAA,QAAAC,EAAAA,EAAAA,QAAAd,EAAA,CAAAU,EAAAN,EAAA,WAAGW,IAAAA,KAAU,IAAKL,EAAaN,EAAM,GAAGW,OAErDE,EAAQ,MAAHhB,EAAAA,EAAA,GAAAA,EAAA,GAAG,KAAIiB,EAAAC,GAAAnB,EAAAoB,SAAA,IAAAD,GACZE,EAAS,MAAHpB,EAAAA,EAAA,GAAAA,EAAA,GAAG,KAAIqB,EAAAC,GAAAvB,EAAAoB,SAAA,IAAAG,GA+EjB7B,EAAA8B,GAAA,MAAG,OAAAC,IAAA,CAAC,gBAAoBR,GAAS,0BAAsB,IAAArB,EAAA,QAClDqB,IACDvB,EAAA8B,GAAA,KAAE,yBAAA5B,EAAA,QACDF,EAAAV,EAAEiC,EAAMS,KAAI9B,GACRqB,EAAMU,OACRjC,EAAAV,EAAA,OAAAY,GACCF,EAAA8B,GAAA,IAAC,SAAA5B,EAAA,gBAAAD,EAAAiC,EAAA,SAAQ,WAAKpB,EAAcS,EAAM,IAAE,KACnCvB,EAAAV,EAAEiC,EAAMU,KAAKE,MAAM,GAAEjC,GAACF,EAAAV,EAAC,IAADY,GAACF,EAAAV,EAAEiC,EAAMa,KAAIlC,GAACF,EAAAV,EAAA,IAAAY,GAACF,EAAAV,EAAEiC,EAAMc,OAAMnC,GAACF,EAAAV,EAAA,IAAAY,GACtDF,EAAAsC,MACGtC,EAAAsC,KAENtC,EAAA8B,GAAA,MAAG,SAAA5B,EAAA,QAAEF,EAAA8B,GAAA,OAAI,SAAA5B,EAAA,QAACF,EAAAV,EAAEiC,EAAMgB,QAAQC,WAAWxB,EAAa,IAAGd,GAACF,EAAAsC,KAAAtC,EAAAsC,KAClDpB,IAAiBK,EAAMU,OACtBV,EAAMkB,WACPzC,EAAA8B,GAAA,MAAG,SAAA5B,EAAA,QAAEF,EAAA8B,GAAA,OAAI,SAAA5B,EAAA,QAACF,EAAAV,EAAEiC,EAAMkB,UAASvC,GAACF,EAAAsC,KAAAtC,EAAAsC,MAAAtC,EAAA0C,EAAAtD,EAAAc,KAM9BF,EAAAsC,KAEO,YAAT7B,EAAkBkC,IAAAC,EAAAA,QAAA,YAAAC,CAAA7C,EAAA8C,EAAAC,EAAAC,KAAA,IAAA9C,EAAA6C,EAAA,MAChB1C,GAAQ4C,EAAAA,EAAAA,SAAAF,EAAA,KAAZ/C,EAAAkD,EAAA,MAAG,8BAAAhD,EAAA,KAAAM,EAACH,EAAQ,GAAAL,EAAAC,EAAA,MAGZD,EAAA8B,GAAA,MAAG,+BAAA5B,EAAA,QAAkBF,EAAAmD,EAAGxB,EAAMzB,GAACF,EAAAsC,OAF7Bc,EAAAA,EAAAA,SAAAlD,GAAAiB,EAAAA,EAAAA,QAAAC,EAAAA,EAAAA,QAAAd,EAAA,CAAAO,EAAAH,EAAAM,EAAAP,EAAAa,EAAAV,EAAAM,EAAAH,KAKE,WACL,IAAIsC,EAAaC,EAQjBC,eAAeC,IACb,IAAK,MAAMvB,KAAQvB,EAAO,CACxB,MAAM+C,EAAWpC,IAAAA,KAAU,IAAKL,EAAaiB,EAAKZ,MAClDqC,EAAAA,IAAIC,UAAUtC,IAAAA,QAAaoC,GAAW,CAAEG,WAAW,IACnDF,EAAAA,IAAIG,cAAcJ,EAAUxB,EAAK6B,QACnC,CAEA,IACE,GAAa,YAATrD,GAA+B,SAATA,EAAiB,CACzC,MAAMsD,QAAqBC,EAAAA,EAAAA,GAAO,CAChCC,MAAO3C,EACP4C,aAAc,CACZC,OAAQ,UACJvD,EAAqBA,IAAuB,CAAC,KAI/CwD,GAAW,EAAIC,OAAOC,MAAMP,EAAaQ,IACzCC,EAAOnE,IAAWoE,aAAa,CAAEC,KAAM,SACvCC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,UAAYf,EAAagB,IAC/BP,EAAKQ,YAAYL,GAEb/D,MAAuBqE,WAEzBb,EAASc,QAAQC,MAAM,CAAC,EAAGX,UAEAJ,EAASgB,OAAO,CAAC,IAC/BC,SAASb,EAa1B,KAAO,CACL,MAAML,EAAS1D,EAAK6E,WAAW,iBAAmB,OAAS,OACrDC,QAAaC,EAAAA,EAAAA,GAAQ,CACzBvB,MAAO/C,EACPgD,aAAc,CACZC,YACIvD,EAAqBA,IAAuB,CAAC,MAGrD6E,EAAAA,EAAAA,SAAA7D,EAAS8D,IACP,mBACMC,EAAAA,EAAAA,IACJJ,EAAK/C,WAAW,GAAGxB,KAAgB,IACnC,CACE4E,OAAQ,QACRC,QAAS,CAACC,EAAAA,EAAeC,EAAAA,OAIjC,EAEAN,EAAAA,EAAAA,SAAAjE,EAAQ,KACV,CAAE,MAAOwE,GAOP,SAASC,IACP,MAAMC,EACS,gBAAbF,EAAIhE,MAA0B7C,EAAiBgH,KAAKH,EAAIzD,SAC1D,GAAI2D,EAAwB,CAC1B,IAAKE,EAAOnE,EAAMG,EAAMC,EAAQgE,EAAU9D,GAAW2D,EACjDG,IACFjE,EAAOiE,EACPhE,EAAS,GAGXJ,EAAOZ,IAAAA,QAAaY,GACpBG,EAAOkE,SAASlE,EAAM,IACtBC,EAASiE,SAASjE,EAAQ,IAAM,EAChC,MAAMI,EAAYuD,EAAIzD,QAAQJ,MAAMiE,EAAMG,QACpCC,GAASf,EAAAA,EAAAA,SAAAjE,EAAW,CACxBQ,KAAMgE,EAAIhE,KACVC,OACAM,UACAH,OACAC,SACAI,cAGER,IAASf,GAAgBH,GAC3BA,EAAcyF,EAElB,MACEf,EAAAA,EAAAA,SAAAjE,EAAQwE,GACRS,QAAQlF,MAAMyE,EAElB,CApCInF,EACFyC,EAAeoD,WAAWT,EAAW,KAErCA,GAkCJ,CACF,CAEA,OA9GIpF,EACFwC,EAAcqD,WAAWlD,EAAa,KAEtCA,IA2GK,KACLmD,aAAatD,GACbsD,aAAarD,GACb,IACEI,EAAAA,IAAIkD,UAAU5F,EAAa,CAAE4C,WAAW,GAC1C,CAAE,MAAOV,GAAI,EACd,GACF,UAAA2D,EAAAA,EAAAA,MAAA,KAAAvH,EAAAE,GAAAE,GAAAD,EAAAqH,UAAAC,IAAArH,EAAAD,EAAAI,E","sources":["webpack:///../components/repl/components/Users/dpiercey/dev/marko-js/website/src/components/repl/components/preview.marko"],"sourcesContent":["import path from \"path\"\nimport { format } from \"prettier/standalone\"\nimport prettierBabel from \"prettier/plugins/babel\"\nimport prettierEstree from \"prettier/plugins/estree\"\nimport highlight from \"../../../utils/highlight\"\nimport { bundle, compile } from \"../../../utils/compiler\"\nimport { vol } from \"memfs\"\n\nstatic const SYNTAX_ERROR_REG = /(.+?)(?:\\((\\d+),(\\d+)\\)|:(\\d+)): (.*(?=\\s+\\d+ | ))/;\n\n<attrs/{ type, files, selectedFile, getCompilerOptions, debounce, onSelectError, onSyntaxError }/>\n<id/examplePath/>\n<const/selectedPath = path.join(\"/\", examplePath, selectedFile.path)/>\n<const/defaultPath = path.join(\"/\", examplePath, files[0].path)/>\n\n<let/error = null/>\n<let/result = null/>\n\n<style>\n  .preview-error,\n  .preview-output,\n  .preview-compiled {\n    position: relative;\n    display: block;\n    min-height: 100%;\n    width: 100%;\n    padding-top: 8px;\n    padding-left: 16px;\n  }\n\n  .preview-error {\n    display:none;\n  }\n  .preview-error.preview-error-active {\n    display:block;\n  }\n  \n  .preview-error-active ~ .preview-output,\n  .preview-error-active ~ .preview-compiled {\n    display: none;\n  }\n\n  .preview-compiled {\n    background: #202134;\n  }\n\n  .preview-output {\n    padding: 0;\n    border: 0;\n  }\n\n  .preview-output,\n  .preview-error {\n    background: #fff;\n  }\n  .preview-compiled pre.highlighted {\n    padding: 0;\n    font-family: Menlo, Monaco, \"Courier New\", monospace;\n    font-weight: normal;\n    font-size: 12px;\n    font-feature-settings: \"liga\" 0, \"calt\" 0;\n    line-height: 18px;\n    letter-spacing: 0px;\n  }\n\n  .preview-error .error-name {\n    background: #f92672;\n    color: #f8f8f0;\n    margin-left: -16px;\n    margin-top: -8px;\n    padding-top: 8px;\n    padding-bottom: 12px;\n    padding-left: 16px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n\n  .preview-error a {\n    color: #66d9ef;\n    font-weight: normal;\n  }\n\n  .preview-error pre {\n    width: 100%;\n    overflow: auto;\n  }\n\n  .preview-error small {\n    font-style: italic;\n    font-size: 0.75 rem;\n  }\n</style>\n\n\n<div.preview-error class=error && \"preview-error-active\">\n  <if=error>\n    <h1.error-name>\n      ${error.name}\n      <if=error.file>\n        &nbsp;:&nbsp;\n        <a onClick() { onSelectError(error) }>\n          ${error.file.slice(1)}(${error.line},${error.column})\n        </a>\n      </if>\n    </h1>\n    <pre><code>${error.message.replaceAll(examplePath, \"\")}</code></pre>\n    <if=(selectedPath !== error.file)>\n      <if=error.codeFrame>\n        <pre><code>${error.codeFrame}</code></pre>\n      </if>\n      <else>\n        <small>Open the dev tools to view the full error.</small>\n      </else>\n    </if>\n  </if>\n</div>\n<if=(type === \"preview\")>\n  <div/outputEl class=\"preview-output\"/>\n</if>\n<else>\n  <div.preview-compiled>$!{result}</div>\n</else>\n\n<effect() {\n  let syncTimeout, errorTimeout;\n\n  if (debounce) {\n    syncTimeout = setTimeout(showPreview, 100);\n  } else {\n    showPreview();\n  }\n\n  async function showPreview() {\n    for (const file of files) {\n      const filePath = path.join(\"/\", examplePath, file.path);\n      vol.mkdirSync(path.dirname(filePath), { recursive: true });\n      vol.writeFileSync(filePath, file.content);\n    }\n    \n    try {\n      if (type === \"preview\" || type === \"html\") {\n        const bundleResult = await bundle({\n          entry: defaultPath,\n          markoOptions: { \n            output: \"vdom\",\n            ...(getCompilerOptions ? getCompilerOptions() : {})\n          }\n        });\n\n        const template = (0, window.eval)(bundleResult.js);\n        const root = outputEl().attachShadow({ mode: \"open\" });\n        const style = document.createElement(\"style\");\n        style.innerHTML = bundleResult.css;\n        root.appendChild(style);\n\n        if (getCompilerOptions?.().translator) {\n          // new api\n          template.default.mount({}, root);\n        } else {\n          const renderResult = await template.render({});\n          renderResult.appendTo(root);\n        }\n        // else {\n        //   const template = (0, eval)(bundleResult.js);\n        //   const renderResult = await template.render({});\n        //   result = highlight(\n        //     \"html\",\n        //     format(String(renderResult), {\n        //       parser: \"html\",\n        //       plugins: [prettierHTML]\n        //     })\n        //   );\n        // }\n      } else {\n        const output = type.startsWith(\"compiled-html\") ? \"html\" : \"vdom\";\n        const code = await compile({\n          entry: selectedPath,\n          markoOptions: { \n            output,\n            ...(getCompilerOptions ? getCompilerOptions() : {})\n          }\n        });\n        result = highlight(\n          \"javascript\",\n          await format(\n            code.replaceAll(`${examplePath}/`, \"\"),\n            {\n              parser: \"babel\",\n              plugins: [prettierBabel, prettierEstree]\n            }\n          )\n        );\n      }\n\n      error = null;\n    } catch (err) {\n      if (debounce) {\n        errorTimeout = setTimeout(showError, 1000);\n      } else {\n        showError();\n      }\n\n      function showError() {\n        const errorWithLocationMatch =\n          err.name === \"SyntaxError\" && SYNTAX_ERROR_REG.exec(err.message);\n        if (errorWithLocationMatch) {\n          let [match, file, line, column, lineOnly, message] = errorWithLocationMatch;\n          if (lineOnly) {\n            line = lineOnly;\n            column = 0;\n          }\n\n          file = path.resolve(file);\n          line = parseInt(line, 10);\n          column = parseInt(column, 10) + 1;\n          const codeFrame = err.message.slice(match.length);\n          const errorData = error = {\n            name: err.name,\n            file,\n            message,\n            line,\n            column,\n            codeFrame\n          };\n\n          if (file === selectedPath && onSyntaxError) {\n            onSyntaxError(errorData);\n          }\n        } else {\n          error = err;\n          console.error(err);\n        }\n      }\n    }\n  }\n  \n  return () => {\n    clearTimeout(syncTimeout);\n    clearTimeout(errorTimeout);\n    try {\n      vol.rmdirSync(examplePath, { recursive: true });\n    } catch (e) {}\n  }\n}/>"],"names":["SYNTAX_ERROR_REG","_marko_node","_marko_constElement","t","_marko_registerComponent","_marko_componentType","_marko_template","_marko_component","onCreate","state","_","_marko_renderer","input","out","_componentDef","_component3","$global","_begin","outputEl","_component","_state","_outputEl_hoisted","type","files","selectedFile","getCompilerOptions","debounce","onSelectError","onSyntaxError","examplePath","elId","selectedPath","_cache","_cached","path","defaultPath","error","_errorSet","_error","setState","result","_resultSet","_result","be","_marko_class_merge","name","file","d","slice","line","column","ee","message","replaceAll","codeFrame","n","_marko_tag","_instance","renderBody","_nestedComponentDef","_component2","_state2","_createRef","e","h","_effect","syncTimeout","errorTimeout","async","showPreview","filePath","vol","mkdirSync","recursive","writeFileSync","content","bundleResult","bundle","entry","markoOptions","output","template","window","eval","js","root","attachShadow","mode","style","document","createElement","innerHTML","css","appendChild","translator","default","mount","render","appendTo","startsWith","code","compile","_assign","highlight","format","parser","plugins","prettierBabel","prettierEstree","err","showError","errorWithLocationMatch","exec","match","lineOnly","parseInt","length","errorData","console","setTimeout","clearTimeout","rmdirSync","_end","Component","_marko_defineComponent"],"sourceRoot":""}